function Run(data){

Module = {};
Module['preRun'] = [];

//OUTPUT
Module['return'] = {};
Module['return']['output'] = {};
Module['return']['output']['files'] = {};
Module['return']['output']['stdout'] = '';
Module['return']['output']['stderr'] = '';

//PATH CODE
Module['dirname'] = function dirname(path){

  return path.substring(0,path.lastIndexOf('/')+1);
}

Module['basename'] = function basename(path){

  return path.substring(path.lastIndexOf('/')+1);
}

//COMPRESS CODE
// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
// this work is free. You can redistribute it and/or modify it
// under the terms of the WTFPL, Version 2
// For more information see LICENSE.txt or http://www.wtfpl.net/
//
// For more information, the home page:
// http://pieroxy.net/blog/pages/lz-string/testing.html
//
// LZ-based compression algorithm, version 1.3.0

var LZString = {

  // private property
  _keyStr : "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  
  compressToBase64 : function (input) {
    var output = "";
    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
    var i = 0;
    
    input = this.compress(input);
    
    while (i < input.length*2) {
      
      if (i%2==0) {
        chr1 = input.charCodeAt(i/2) >> 8;
        chr2 = input.charCodeAt(i/2) & 255;
        if (i/2+1 < input.length) 
          chr3 = input.charCodeAt(i/2+1) >> 8;
        else 
          chr3 = NaN;
      } else {
        chr1 = input.charCodeAt((i-1)/2) & 255;
        if ((i+1)/2 < input.length) {
          chr2 = input.charCodeAt((i+1)/2) >> 8;
          chr3 = input.charCodeAt((i+1)/2) & 255;
        } else 
          chr2=chr3=NaN;
      }
      i+=3;
      
      enc1 = chr1 >> 2;
      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
      enc4 = chr3 & 63;
      
      if (isNaN(chr2)) {
        enc3 = enc4 = 64;
      } else if (isNaN(chr3)) {
        enc4 = 64;
      }
      
      output = output +
        this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +
          this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);
      
    }
    
    return output;
  },
  
  decompressFromBase64 : function (input) {
    var output = "",
        ol = 0, 
        output_,
        chr1, chr2, chr3,
        enc1, enc2, enc3, enc4,
        i = 0;
    
    input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
    
    while (i < input.length) {
      
      enc1 = this._keyStr.indexOf(input.charAt(i++));
      enc2 = this._keyStr.indexOf(input.charAt(i++));
      enc3 = this._keyStr.indexOf(input.charAt(i++));
      enc4 = this._keyStr.indexOf(input.charAt(i++));
      
      chr1 = (enc1 << 2) | (enc2 >> 4);
      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
      chr3 = ((enc3 & 3) << 6) | enc4;
      
      if (ol%2==0) {
        output_ = chr1 << 8;
        flush = true;
        
        if (enc3 != 64) {
          output += String.fromCharCode(output_ | chr2);
          flush = false;
        }
        if (enc4 != 64) {
          output_ = chr3 << 8;
          flush = true;
        }
      } else {
        output = output + String.fromCharCode(output_ | chr1);
        flush = false;
        
        if (enc3 != 64) {
          output_ = chr2 << 8;
          flush = true;
        }
        if (enc4 != 64) {
          output += String.fromCharCode(output_ | chr3);
          flush = false;
        }
      }
      ol+=3;
    }
    
    return this.decompress(output);
    
  },

  compressToUTF16 : function (input) {
    var output = "",
        i,c,
        current,
        status = 0;
    
    input = this.compress(input);
    
    for (i=0 ; i<input.length ; i++) {
      c = input.charCodeAt(i);
      switch (status++) {
        case 0:
          output += String.fromCharCode((c >> 1)+32);
          current = (c & 1) << 14;
          break;
        case 1:
          output += String.fromCharCode((current + (c >> 2))+32);
          current = (c & 3) << 13;
          break;
        case 2:
          output += String.fromCharCode((current + (c >> 3))+32);
          current = (c & 7) << 12;
          break;
        case 3:
          output += String.fromCharCode((current + (c >> 4))+32);
          current = (c & 15) << 11;
          break;
        case 4:
          output += String.fromCharCode((current + (c >> 5))+32);
          current = (c & 31) << 10;
          break;
        case 5:
          output += String.fromCharCode((current + (c >> 6))+32);
          current = (c & 63) << 9;
          break;
        case 6:
          output += String.fromCharCode((current + (c >> 7))+32);
          current = (c & 127) << 8;
          break;
        case 7:
          output += String.fromCharCode((current + (c >> 8))+32);
          current = (c & 255) << 7;
          break;
        case 8:
          output += String.fromCharCode((current + (c >> 9))+32);
          current = (c & 511) << 6;
          break;
        case 9:
          output += String.fromCharCode((current + (c >> 10))+32);
          current = (c & 1023) << 5;
          break;
        case 10:
          output += String.fromCharCode((current + (c >> 11))+32);
          current = (c & 2047) << 4;
          break;
        case 11:
          output += String.fromCharCode((current + (c >> 12))+32);
          current = (c & 4095) << 3;
          break;
        case 12:
          output += String.fromCharCode((current + (c >> 13))+32);
          current = (c & 8191) << 2;
          break;
        case 13:
          output += String.fromCharCode((current + (c >> 14))+32);
          current = (c & 16383) << 1;
          break;
        case 14:
          output += String.fromCharCode((current + (c >> 15))+32, (c & 32767)+32);
          status = 0;
          break;
      }
    }
    
    return output + String.fromCharCode(current + 32);
  },
  

  decompressFromUTF16 : function (input) {
    var output = "",
        current,c,
        status=0,
        i = 0;
    
    while (i < input.length) {
      c = input.charCodeAt(i) - 32;
      
      switch (status++) {
        case 0:
          current = c << 1;
          break;
        case 1:
          output += String.fromCharCode(current | (c >> 14));
          current = (c&16383) << 2;
          break;
        case 2:
          output += String.fromCharCode(current | (c >> 13));
          current = (c&8191) << 3;
          break;
        case 3:
          output += String.fromCharCode(current | (c >> 12));
          current = (c&4095) << 4;
          break;
        case 4:
          output += String.fromCharCode(current | (c >> 11));
          current = (c&2047) << 5;
          break;
        case 5:
          output += String.fromCharCode(current | (c >> 10));
          current = (c&1023) << 6;
          break;
        case 6:
          output += String.fromCharCode(current | (c >> 9));
          current = (c&511) << 7;
          break;
        case 7:
          output += String.fromCharCode(current | (c >> 8));
          current = (c&255) << 8;
          break;
        case 8:
          output += String.fromCharCode(current | (c >> 7));
          current = (c&127) << 9;
          break;
        case 9:
          output += String.fromCharCode(current | (c >> 6));
          current = (c&63) << 10;
          break;
        case 10:
          output += String.fromCharCode(current | (c >> 5));
          current = (c&31) << 11;
          break;
        case 11:
          output += String.fromCharCode(current | (c >> 4));
          current = (c&15) << 12;
          break;
        case 12:
          output += String.fromCharCode(current | (c >> 3));
          current = (c&7) << 13;
          break;
        case 13:
          output += String.fromCharCode(current | (c >> 2));
          current = (c&3) << 14;
          break;
        case 14:
          output += String.fromCharCode(current | (c >> 1));
          current = (c&1) << 15;
          break;
        case 15:
          output += String.fromCharCode(current | c);
          status=0;
          break;
      }
      
      
      i++;
    }
    
    return this.decompress(output);
    //return output;
    
  },


  
  compress: function (uncompressed) {
    var i, value,
        context_dictionary= {},
        context_dictionaryToCreate= {},
        context_c="",
        context_wc="",
        context_w="",
        context_enlargeIn= 2, // Compensate for the first entry which should not count
        context_dictSize= 3,
        context_numBits= 2,
        context_result= "",
        context_data_string="", 
        context_data_val=0, 
        context_data_position=0,
        ii;
    
    for (ii = 0; ii < uncompressed.length; ii += 1) {
      context_c = uncompressed.charAt(ii);
      if (!context_dictionary.hasOwnProperty(context_c)) {
        context_dictionary[context_c] = context_dictSize++;
        context_dictionaryToCreate[context_c] = true;
      }
      
      context_wc = context_w + context_c;
      if (context_dictionary.hasOwnProperty(context_wc)) {
        context_w = context_wc;
      } else {
        if (context_dictionaryToCreate.hasOwnProperty(context_w)) {
          if (context_w.charCodeAt(0)<256) {
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1);
              if (context_data_position == 15) {
                context_data_position = 0;
                context_data_string += String.fromCharCode(context_data_val);
                context_data_val = 0;
              } else {
                context_data_position++;
              }
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<8 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == 15) {
                context_data_position = 0;
                context_data_string += String.fromCharCode(context_data_val);
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          } else {
            value = 1;
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1) | value;
              if (context_data_position == 15) {
                context_data_position = 0;
                context_data_string += String.fromCharCode(context_data_val);
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = 0;
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<16 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == 15) {
                context_data_position = 0;
                context_data_string += String.fromCharCode(context_data_val);
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          }
          context_enlargeIn--;
          if (context_enlargeIn == 0) {
            context_enlargeIn = Math.pow(2, context_numBits);
            context_numBits++;
          }
          delete context_dictionaryToCreate[context_w];
        } else {
          value = context_dictionary[context_w];
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == 15) {
              context_data_position = 0;
              context_data_string += String.fromCharCode(context_data_val);
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
          
          
        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        // Add wc to the dictionary.
        context_dictionary[context_wc] = context_dictSize++;
        context_w = String(context_c);
      }
    }
    
    // Output the code for w.
    if (context_w !== "") {
      if (context_dictionaryToCreate.hasOwnProperty(context_w)) {
        if (context_w.charCodeAt(0)<256) {
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1);
            if (context_data_position == 15) {
              context_data_position = 0;
              context_data_string += String.fromCharCode(context_data_val);
              context_data_val = 0;
            } else {
              context_data_position++;
            }
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<8 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == 15) {
              context_data_position = 0;
              context_data_string += String.fromCharCode(context_data_val);
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        } else {
          value = 1;
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | value;
            if (context_data_position == 15) {
              context_data_position = 0;
              context_data_string += String.fromCharCode(context_data_val);
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = 0;
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<16 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == 15) {
              context_data_position = 0;
              context_data_string += String.fromCharCode(context_data_val);
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        delete context_dictionaryToCreate[context_w];
      } else {
        value = context_dictionary[context_w];
        for (i=0 ; i<context_numBits ; i++) {
          context_data_val = (context_data_val << 1) | (value&1);
          if (context_data_position == 15) {
            context_data_position = 0;
            context_data_string += String.fromCharCode(context_data_val);
            context_data_val = 0;
          } else {
            context_data_position++;
          }
          value = value >> 1;
        }
        
        
      }
      context_enlargeIn--;
      if (context_enlargeIn == 0) {
        context_enlargeIn = Math.pow(2, context_numBits);
        context_numBits++;
      }
    }
    
    // Mark the end of the stream
    value = 2;
    for (i=0 ; i<context_numBits ; i++) {
      context_data_val = (context_data_val << 1) | (value&1);
      if (context_data_position == 15) {
        context_data_position = 0;
        context_data_string += String.fromCharCode(context_data_val);
        context_data_val = 0;
      } else {
        context_data_position++;
      }
      value = value >> 1;
    }
    
    // Flush the last char
    while (true) {
      context_data_val = (context_data_val << 1);
      if (context_data_position == 15) {
        context_data_string += String.fromCharCode(context_data_val);
        break;
      }
      else context_data_position++;
    }
    return context_data_string;
  },
  
  decompress: function (compressed) {
    var dictionary = [],
        next,
        enlargeIn = 4,
        dictSize = 4,
        numBits = 3,
        entry = "",
        result = "",
        i,
        w,
        bits, resb, maxpower, power,
        c,
        errorCount=0,
        literal,
        data = {string:compressed, val:compressed.charCodeAt(0), position:32768, index:1};
    
    for (i = 0; i < 3; i += 1) {
      dictionary[i] = i;
    }
    
    bits = 0;
    maxpower = Math.pow(2,2);
    power=1;
    while (power!=maxpower) {
      resb = data.val & data.position;
      data.position >>= 1;
      if (data.position == 0) {
        data.position = 32768;
        data.val = data.string.charCodeAt(data.index++);
      }
      bits |= (resb>0 ? 1 : 0) * power;
      power <<= 1;
    }
    
    switch (next = bits) {
      case 0: 
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = 32768;
              data.val = data.string.charCodeAt(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = String.fromCharCode(bits);
        break;
      case 1: 
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = 32768;
              data.val = data.string.charCodeAt(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = String.fromCharCode(bits);
        break;
      case 2: 
        return "";
    }
    dictionary[3] = c;
    w = result = c;
    while (true) {
      bits = 0;
      maxpower = Math.pow(2,numBits);
      power=1;
      while (power!=maxpower) {
        resb = data.val & data.position;
        data.position >>= 1;
        if (data.position == 0) {
          data.position = 32768;
          data.val = data.string.charCodeAt(data.index++);
        }
        bits |= (resb>0 ? 1 : 0) * power;
        power <<= 1;
      }

      switch (c = bits) {
        case 0: 
          if (errorCount++ > 10000) return "Error";
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = 32768;
              data.val = data.string.charCodeAt(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }

          dictionary[dictSize++] = String.fromCharCode(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 1: 
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = 32768;
              data.val = data.string.charCodeAt(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
          dictionary[dictSize++] = String.fromCharCode(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 2: 
          return result;
      }
      
      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }
      
      if (dictionary[c]) {
        entry = dictionary[c];
      } else {
        if (c === dictSize) {
          entry = w + w.charAt(0);
        } else {
          return null;
        }
      }
      result += entry;
      
      // Add w+entry[0] to the dictionary.
      dictionary[dictSize++] = w + entry.charAt(0);
      enlargeIn--;
      
      w = entry;
      
      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }
      
    }
  }
};


module.exports.compress = LZString.compressToBase64.bind(LZString);
module.exports.decompress = LZString.decompressFromBase64.bind(LZString);



Module['compress'] = module.exports.compress;
Module['decompress'] = module.exports.decompress;





Module['preRun'].push(function () {

if((data.input) && (data.input.files)){ 
        var files = data.input.files;
	files.forEach(function(file) {
 
		var dirname = Module['dirname'](file.name);
		var basename = Module['basename'](file.name);
		
	
		var content = ((file.decompress) || (file.compress)) ? Module['decompress'](file.content) : file.content;
		

		Module['FS_createDataFile'](dirname,basename,content,true,true); 
	}); 

}
		
		var dirname = Module['dirname'](Module['dirname']('mouse.jpg'));
		var basename = Module['basename'](Module['basename']('mouse.jpg'));
		
		var content = Module['decompress']('P8DeAOAAAQCkDECS9IEABAk3csAfzADICGAbgMYCslAdAIwCc9ADM7gNuQDCkAEAEz8A3MIAi4iQEUA0pIAqCyUvkKAWuoBWW9arWqAJvq0BnUsYC25jedKkAvg4BpjgPEuA9e4CtAdZ/BgABHUACKsVABQVGiYrDi4jABgABAIgDAAcF4ASAAoAGhUSESY0uj48PQU9Ky8/OhIdFRExPRkxIiI5OTwuyTIZIBECIAkAEI6AEE0gGRJYgyAIgBHABR+AECARIBC3gBiACEARoBBgFQAJQBFgAeAEgBmACMAJwAgvIA0AHQADAAmAAsACkADIAOQACgAlAAqAAslAAbAB2AAcDAAXFxRABReAAcQAEohYABlOQAVQAagB1AAaAE1VOR9ABTABmAHMABYASw0xgALgBXUgAdwAHgBPABeAGCACEAUIAYQBwgARAEiAFEAJIAyQAUgCpjgA6QAMgCZACyQgBigAlAFKAGUAcoAFQBKgBVACaAM0AFq8ADaAO0ADoAnQAugBDAGHAgBRgBjAHGABMASYAUwAlgDLABWAKsANZ8IAAmwAtgCHACOAMcAE4ApwAzgDnAAuAJcAK4AjwAngDPABeAK8AN4A7wAPgCfAC/Bo0MN0Uhkuj0MBK0FVBqkJmkRpNJBliMsZotNrxVoddmdsvtHpdbuc3muXIvnuBEWxBCd/mBSFYThFEMWxXECRJMlKVpRkWTZLk+UFEVxWleV3mVdVtX1Y1zStO1HVdT1fUDUMIxjBMU3TbN82LctqzrRsm07XtB1HMdZ0XVdNy3YAAAHIEGXhUF5VBwBKRZGl3RJd2AJtIAAGBKFS1MgAB+SAADv+RNLdzEgQlEGkaQAAF8kuckYTnSBLhLS4AAXEj9fkwzDSB/KbUVIFWSQ8UgEEsQAbIigBaMK7IiRKImRABcgBZAACjJwtWSA8sgItYFFfgAADcihEIyq+PUYShSAQj1Bqmpa5rGva1rUCqvVIHMVYwxNNzLkkOzsgyr1LgABXQJy/ShVAYRhCshpNcLQuC5EKqqsqaBLck/V5dAsThDRYEgAA4tKADk3Sy3ghxCA0yoAXGuj0vJ8syt0gHrIHqu70GarKgahEHgeSd0XRywqm3MLFnpGPU7BBSKQTiuLIGRPVRS2kZHANNK7IAWBCRxetgKE7uSVrGoJsqRmi67oeSD0y0O1ATXM87+osrHgfQA1yb6qLoqSxKfiW/kFrncl+QrYbrhJsnnsq6rclUSnUArQaArW+K4pBfLLncqbUDxBKCrxY3TfN1YZpkbLQayyG3Wh52PYFgWhYpmFeSytJ9r9ALCth2BVAWsMbjGxBruq/YQjSxA7K+R7euWry7bN62psSP67BSwvRuS4vEvyPEjcCsMm1UX6XXV2BKcgeveqq1WSq2tXtvVnau67/H2vdaqATxLEKcp8GwbSSQAHlqoAbEQGfoen63UA0A0AHyIvR9HQsG7PDcisuc6zs/T4v+3z7izuSvy4qI+bt2XdppqQuxsHPc/r3v8/oXVb9gHDyStsiX1zvyGE0t0A9gGqtfy2d7boEKvrUK60woRVWNHEuY0wFnwyp6Ty5sQSowAHyxS2i9RAVC7IADgQg+keBEAA10yAAexoAAeXOVAAB+66AYyp9gADW5yHB6JW5cr4V3ymGdaRtS4KPFiaPWyiHYW2PmGNRqxUCcj1FrCB0sOoLV5E1f6y1VoyBwVIy2hUTYlgQatEays9GQE1r/F2HoDomlQAOI0AA8ZYAAdOwEpjC5HABlSA/IAA0KoADWAAexAGwmEAD11oAG8AANAADDQABbqUdlngAGogxMhcHKSAc5VAlIBPoYmqgFZblFISCKiA8TY0gKKVYJoEH9NQNIGyY0Jrkl5EYiZrV0AZlWGOBakD/aQy9KNLSicd5RQpjtL4Bp2pulMTCMMY5LLoMgIbI+RsmznU1k3KGWUIgehLBWYUblJDJwADhCKrH2NUABegAsTmAA06kmkEVyDkg0D2OkAcKzxn9FCRIyx57E1SVlAAdQAWtYQk2AXo0hlQALxtk3qkgA9m860TCAC6fZjB2UlhoOEdhIAkMcLaeyAB4EItoIpYkcNFey5dK6FSjiAi2+Umw7RoK8jButIAmkuGWeSvJ64VTcXTX20tUDS2qkjCOi1zHytNskYUirxlPV6hHFmbMRwBQfgisEkwtipIADbwBKT4EpEQAAJQJIBTntBdRMPgXDnAADPPDKiUiFsB2T801pARwXgqxFhrBjSAcpkyIETImIEE5oDLFSbaeexkso0MJlNOQAUgq1x2f1K2+Utya1rpTHubaypxRLB5TySDraBTluawez8IhdSpu7H+L8dmuPZAjMq89R69XZJgs2Nlk7ZFjh6HtchRQgnKgCCaSr0C5AklKFcdI8TZQ5UCfY5xro/IymWSgfZAiRphJIJy8koTujuQAaqym2P0VbUAjhHAAAhvdcHwfyFQKlSRwjUiwyrIhhBoLEzK+UCoctI1AFyFoVjQQRiKqhX6dWFhHBeC7fqmMbt/HpRVDUoOITYvtRZzBkOVvTXI7ISGLuRJvbKaQ5YrVQC9ZELpN2JBKWlYUABZsUL1IAylQJcOEKo5TsBoHElU+gMyQBFGaBg5wIinKxLaa6WV8iiiHMcLSuQuzXGMKk5q6AAC7iBJDkh9OgVQByxyuNxkTSRQ0m2N1cVsnZUJ0BVkwYQ6QccGZ6gTZrZa8rVGzVeVh4VfaTZK1JsLRuuNu4VW42LYmNq9brWRNFGeEm/J8xBHx5O0AywaFUJZPETJCBeBDIQMtAIDRBiXHSEIbYQxLk8hkTeLqfSkB8DscwAZ57jMmFSglxgFR6iHCqSAM93pliHKgOcY5w6uOba48O51IF+21nKlBqSur+WLobLEFULu/WfoHW20jAqEbRucouSiZrOTnLnKWbUFpwgRmLLSLpJozScraoq5hqGDEuFWqayQEQAB2qR6kssYAAN3CKklB2Q/soLyRIIQvQljkENQqczqq1TBjTRLp3H5uy9FNCIRYqYv2anJVVXxqsei0ZARnZUR4kOeovIZ4tFERF3mjGK8vnENTZj6AO1xpARWRP/OdS9h6IBNhj01uWyYU3ZIgKkMnIDckoFSWeTDVCge5wGAufn4aE1V9grlnUBf4YioEpqLbe585pvlnz8klqLNphrrXfbJXq1UDuyKjW7KrPy9x1WbGZexxXjIZO+R88u1uazfbAcEcBSbHmMEXhib6BoUdKaJT4B6ntAlujNdrtQmWSTN0eyKqQLw5V4G+RA+oIwb9w2UjZ/9MSBA/2gdrjxSVyc+RHHEY41RsQ6XBv3qEJzgvw1c0VHV0gFmYwGZCAbbzAZR4dJyRJTinyzv98o+oH8popBcvshDPM4LMLP1JohEEnttNTHsunMtPDtcGurgqfFQsnMlN/sgutDFAfufIgsgtzJAHqI4JvMnKsmlLroTGuhNPYhEASgklWAGOoJAOHN/D3sOmXiRg1G7NTLDtNKAYAp7IVv3ATI4HOvAdYqjOvgNKblgifJbJcnwYAq7CzF1EtBWOAsPgajrJAE2C5LnL3vYnnIPvOpbDllYiHMMtkMzHdGkNrhFFSrcugAITVF7Pqsol5D/jvIXJonobqo4edFVIIQCHHIuoXC4TIOstIeHirAzATK3CEGLHQgLgYg1LcmkHNIkfoeKoFCaEcpPtkQAPosFs7kYJb6p/R/TAEzQr4SrQG9qYxMaVH+yAEAKLLx6WHZbRzrrxYGH5QmjBT3w8GJYLRjoeLswLR1ZxqrAHSRzHa1y8wLQmgTFGLoD5IA7YLYKgJHwnIbG/Yb7IEqFziOKjRCr5RTGRy/YnLYx0ZFiigJQibiGoATTTQ/5IHoxdFoKbSRHe5CqiFyLLqgERx3IWquL1T87g7ayj7uIjoC5g6TKQnQGJC8iD56oDFkxFFImWpAkew+wiyGGWJlbDGLTSyTyEnoACq679HaqHKWTcgyjXAAD+dgNJWIAAPEODwgAH08JpQAA+7gEUdgkgA4eIAAvwuAAD9DgzghB4Bbh4CihTg/LaILiEhpQ/Arg+AzhOgABzAA0QAN9MIbg+BFgg4ZAVh4DCg5EAD7ORGplo2pepBpRYOsqAC4BkypqpM4boEpUpMpU4XgmMfJApwpYpXp0pspfpkAdgTIgZop4pkpoZU4MyzpEIbpapmpup+phpxpVYfi5pVpGpLgWIAA9AAPfuADg5ElJKwAD45IG4tJ9JTJLJ7JXJPJEZGU0ZwZcZPp8pzpM8KZ6pdpGZRpU0GQVYqSuZ1pBZJZZZFZ1ZtZ9ZDJzJbJHJ3JvJ/JQpMZIZ3ZCpqI/ZaZ9pmZI5VYJCE5+ZRZpZ5ZlZdkVZcg1JdJDJM855M50So0NZdZ95WIj5055ZL515t5C5n5T5P5r5lw75DZORQFOR0Sc5YFD5kF0F15oFAFX5F5ORcU1ZkgsFWIEF35aFJYE2FYAAfqeUaIOQaYCoNM6T8HuWRT4BRSORWOOZaZOZBTQBhXeQ2Uuc2ZyQAN28l4gdmxnemylLFUU0XpnkWaIZDAANhAAAAA==');
		
		
		Module['FS_createDataFile'](dirname,basename,content,true,true);
	
		

	Module['print'] = function(text){
		Module['return']['output']['stdout'] += text + '\n';
	};

	Module['printErr'] = function(text){
		Module['return']['output']['stderr'] += text + '\n';
	};
});

//

//EMSCRIPTEN CODE
// Note: Some Emscripten settings will significantly limit the speed of the generated code.
// Note: Some Emscripten settings may limit the speed of the generated code.
// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = eval('(function() { try { return Module || {} } catch(e) { return {} } })()');
// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  Module['arguments'] = process['argv'].slice(2);
  module.exports = Module;
}
else if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  Module['read'] = read;
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  this['Module'] = Module;
}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }
  if (ENVIRONMENT_IS_WEB) {
    Module['print'] = function(x) {
      console.log(x);
    };
    Module['printErr'] = function(x) {
      console.log(x);
    };
    this['Module'] = Module;
  } else if (ENVIRONMENT_IS_WORKER) {
    // We can do very little here...
    var TRY_USE_DUMP = false;
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
    Module['load'] = importScripts;
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];
// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type.charAt(type.length-1) == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    var index = 0;
    type.flatIndexes = type.fields.map(function(field) {
      index++;
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        if (field[1] === '0') {
          // this is [0 x something]. When inside another structure like here, it must be at the end,
          // and it adds no size
          // XXX this happens in java-nbody for example... assert(index === type.fields.length, 'zero-length in the middle!');
          size = 0;
          alignSize = type.alignSize || QUANTUM_SIZE;
        } else {
          size = Types.types[field].flatSize;
          alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
        }
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2 + 2*i;
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = ((((STACKTOP)+7)>>3)<<3); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = ((((STATICTOP)+7)>>3)<<3); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = ((((DYNAMICTOP)+7)>>3)<<3); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+(((low)>>>(0))))+((+(((high)>>>(0))))*(+(4294967296)))) : ((+(((low)>>>(0))))+((+(((high)|(0))))*(+(4294967296))))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = Module['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,((Math.min((+(Math.floor((value)/(+(4294967296))))), (+(4294967295))))|0)>>>0],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited
var runtimeInitialized = false;
function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}
function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module['addOnPreRun'] = Module.addOnPreRun = addOnPreRun;
function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module['addOnInit'] = Module.addOnInit = addOnInit;
function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module['addOnPreMain'] = Module.addOnPreMain = addOnPreMain;
function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module['addOnExit'] = Module.addOnExit = addOnExit;
function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module['addOnPostRun'] = Module.addOnPostRun = addOnPostRun;
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledInit = false, calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
    if (!calledRun && shouldRunNow) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
function loadMemoryInitializer(filename) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  // always do this asynchronously, to keep shell and web as similar as possible
  addOnPreRun(function() {
    if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
      applyData(Module['readBinary'](filename));
    } else {
      Browser.asyncLoad(filename, function(data) {
        applyData(data);
      }, function(data) {
        throw 'could not load memory initializer ' + filename;
      });
    }
  });
}
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 30440;
var _stderr;
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } },{ func: function() { __GLOBAL__I_a() } },{ func: function() { __GLOBAL__I_a367() } },{ func: function() { __GLOBAL__I_a559() } });
var ___dso_handle;
var __ZTVN10__cxxabiv120__si_class_type_infoE;
var __ZTVN10__cxxabiv117__class_type_infoE;
var __ZN14CvImageFiltersC1Ev;
var __ZN14CvImageFiltersD1Ev;
var __ZN11GrFmtReaderD1Ev;
var __ZN18GrFmtFactoriesListC1Ev;
var __ZN18GrFmtFactoriesListD1Ev;
var __ZN8GrFmtBmpC1Ev;
var __ZN8GrFmtBmpD1Ev;
var __ZN14GrFmtBmpReaderC1EPKc;
var __ZN14GrFmtBmpReaderD1Ev;
var __ZN14GrFmtBmpWriterC1EPKc;
var __ZN14GrFmtBmpWriterD1Ev;
var __ZN9GrFmtJpegC1Ev;
var __ZN9GrFmtJpegD1Ev;
var __ZN14RJpegBitStreamC1Ev;
var __ZN14RJpegBitStreamD1Ev;
var __ZN15GrFmtJpegReaderC1EPKc;
var __ZN15GrFmtJpegReaderD1Ev;
var __ZN14WJpegBitStreamC1Ev;
var __ZN14WJpegBitStreamD1Ev;
var __ZN15GrFmtJpegWriterC1EPKc;
var __ZN15GrFmtJpegWriterD1Ev;
var __ZN8GrFmtPxMC1Ev;
var __ZN8GrFmtPxMD1Ev;
var __ZN14GrFmtPxMReaderC1EPKc;
var __ZN14GrFmtPxMReaderD1Ev;
var __ZN14GrFmtPxMWriterC1EPKc;
var __ZN14GrFmtPxMWriterD1Ev;
var __ZN14GrFmtSunRasterC1Ev;
var __ZN14GrFmtSunRasterD1Ev;
var __ZN20GrFmtSunRasterReaderC1EPKc;
var __ZN20GrFmtSunRasterReaderD1Ev;
var __ZN20GrFmtSunRasterWriterC1EPKc;
var __ZN20GrFmtSunRasterWriterD1Ev;
var __ZN9GrFmtTiffC1Ev;
var __ZN9GrFmtTiffD1Ev;
var __ZN15GrFmtTiffReaderC1EPKc;
var __ZN15GrFmtTiffReaderD1Ev;
var __ZN15GrFmtTiffWriterC1EPKc;
var __ZN15GrFmtTiffWriterD1Ev;
var __ZN11RBaseStreamD1Ev;
var __ZN12RLByteStreamD1Ev;
var __ZN12RLByteStreamD2Ev;
var __ZN12RMByteStreamD1Ev;
var __ZN12RMByteStreamD2Ev;
var __ZN11RLBitStreamD1Ev;
var __ZN11RLBitStreamD2Ev;
var __ZN11RMBitStreamD1Ev;
var __ZN11RMBitStreamD2Ev;
var __ZN11WBaseStreamD1Ev;
var __ZN12WLByteStreamD1Ev;
var __ZN12WLByteStreamD2Ev;
var __ZN12WMByteStreamD1Ev;
var __ZN12WMByteStreamD2Ev;
var __ZN11WMBitStreamD1Ev;
var __ZN11WMBitStreamD2Ev;
var __ZN6CvTypeC1EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E;
var __ZN6CvTypeD1Ev;
var _stderr = _stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv120__si_class_type_infoE=allocate([0,0,0,0,208,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
__ZTVN10__cxxabiv117__class_type_infoE=allocate([0,0,0,0,224,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* memory initializer */ allocateconcat([99,101,0,0,0,0,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,117,110,114,101,99,111,103,110,105,122,101,100,32,111,114,32,117,110,115,117,112,112,111,114,116,101,100,32,97,114,114,97,121,32,116,121,112,101,0,0,84,104,101,32,102,105,108,101,32,110,111,100,101,32,115,104,111,117,108,100,32,98,101,32,97,32,110,117,109,101,114,105,99,97,108,32,115,99,97,108,97,114,32,111,114,32,97,32,115,101,113,117,101,110,99,101,0,0,0,0,0,0,0,0,60,117,110,107,110,111,119,110,62,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,115,101,113,117,101,110,99,101,32,104,101,97,100,101,114,0,68,101,115,116,105,110,97,116,105,111,110,32,105,109,97,103,101,32,109,117,115,116,32,104,97,118,101,32,49,32,111,114,32,51,32,99,104,97,110,110,101,108,115,0,0,0,0,0,68,97,116,97,32,105,115,32,97,108,114,101,97,100,121,32,97,108,108,111,99,97,116,101,100,0,0,0,0,0,0,0,79,112,101,110,67,86,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,0,0,69,105,116,104,101,114,32,97,108,108,32,111,117,116,112,117,116,32,112,108,97,110,101,115,32,111,114,32,111,110,108,121,32,111,110,101,32,111,117,116,112,117,116,32,112,108,97,110,101,32,115,104,111,117,108,100,32,98,101,32,110,111,110,32,122,101,114,111,0,0,0,0,78,117,108,108,32,112,111,105,110,116,101,114,32,116,111,32,115,111,117,114,99,101,32,102,105,108,101,32,110,111,100,101,32,111,114,32,114,101,97,100,101,114,0,0,0,0,0,0,78,85,76,76,32,105,116,101,114,97,116,111,114,32,112,111,105,110,116,101,114,0,0,0,78,101,103,97,116,105,118,101,32,110,117,109,98,101,114,32,111,102,32,101,108,101,109,101,110,116,115,0,0,0,0,0,73,110,118,97,108,105,100,32,115,112,97,114,115,101,32,109,97,116,114,105,120,32,104,101,97,100,101,114,0,0,0,0,77,101,97,110,58,32,37,102,10,0,0,0,0,0,0,0,78,117,108,108,32,100,97,116,97,32,112,111,105,110,116,101,114,0,0,0,0,0,0,0,110,117,109,98,101,114,32,111,102,32,114,101,109,111,118,101,100,32,101,108,101,109,101,110,116,115,32,105,115,32,110,101,103,97,116,105,118,101,0,0,73,110,118,97,108,105,100,32,115,112,97,114,115,101,32,97,114,114,97,121,32,104,101,97,100,101,114,0,0,0,0,0,78,85,76,76,32,115,101,113,117,101,110,99,101,32,112,111,105,110,116,101,114,0,0,0,73,110,99,111,114,114,101,99,116,32,110,117,109,98,101,114,32,111,102,32,99,104,97,110,110,101,108,115,32,102,111,114,32,116,104,105,115,32,99,111,110,118,101,114,115,105,111,110,32,99,111,100,101,0,0,0,80,37,99,10,37,100,32,37,100,10,50,53,53,10,0,0,101,114,114,111,114,0,0,0,98,97,100,32,110,117,109,98,101,114,32,111,102,32,100,105,109,101,110,115,105,111,110,115,0,0,0,0,0,0,0,0,115,116,100,58,58,98,97,100,95,97,108,108,111,99,0,0,78,101,103,97,116,105,118,101,32,111,114,32,116,111,111,32,108,97,114,103,101,32,97,114,103,117,109,101,110,116,32,111,102,32,99,118,65,108,108,111,99,32,102,117,110,99,116,105,111,110,0,0,0,0,0,0,115,116,97,116,117,115,0,0,85,110,107,110,111,119,110,32,37,115,32,99,111,100,101,32,37,100,0,0,0,0,0,0,68,105,109,101,110,115,105,111,110,32,115,105,122,101,115,32,97,114,101,32,116,104,101,32,115,97,109,101,32,102,111,114,32,97,108,108,32,97,114,114,97,121,115,0,0,0,0,0,77,101,109,111,114,121,32,98,108,111,99,107,32,104,97,115,32,98,101,101,110,32,99,111,114,114,117,112,116,101,100,0,37,115,44,32,37,115,40,37,100,41,10,0,0,0,0,0,68,101,115,116,105,110,97,116,105,111,110,32,105,109,97,103,101,32,109,117,115,116,32,98,101,32,56,117,0,0,0,0,77,97,115,107,32,115,104,111,117,108,100,32,104,97,118,101,32,56,117,67,49,32,111,114,32,56,115,67,49,32,100,97,116,97,32,116,121,112,101,0,9,99,97,108,108,101,100,32,102,114,111,109,32,0,0,0,67,79,73,32,43,32,109,97,115,107,32,97,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,84,104,101,32,102,117,110,99,116,105,111,110,47,102,101,97,116,117,114,101,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,79,112,101,110,67,86,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,68,101,112,116,104,32,105,115,32,110,111,116,32,116,104,101,32,115,97,109,101,32,102,111,114,32,97,108,108,32,97,114,114,97,121,115,0,0,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,84,104,101,32,102,105,108,101,32,115,116,111,114,97,103,101,32,105,115,32,111,112,101,110,101,100,32,102,111,114,32,114,101,97,100,105,110,103,0,0,80,97,114,115,105,110,103,32,101,114,114,111,114,0,0,0,78,117,109,98,101,114,32,111,102,32,99,104,97,110,110,101,108,115,32,105,115,32,110,111,116,32,116,104,101,32,115,97,109,101,32,102,111,114,32,97,108,108,32,97,114,114,97,121,115,0,0,0,0,0,0,0,66,97,100,32,116,121,112,101,32,111,102,32,109,97,115,107,32,97,114,103,117,109,101,110,116,0,0,0,0,0,0,0,68,97,116,97,32,116,121,112,101,32,105,115,32,110,111,116,32,116,104,101,32,115,97,109,101,32,102,111,114,32,97,108,108,32,97,114,114,97,121,115,0,0,0,0,0,0,0,0,70,97,108,115,101,0,0,0,66,97,100,32,112,97,114,97,109,101,116,101,114,32,111,102,32,116,121,112,101,32,67,118,80,111,105,110,116,0,0,0,78,117,109,98,101,114,32,111,102,32,100,105,109,101,110,115,105,111,110,115,32,105,115,32,116,104,101,32,115,97,109,101,32,102,111,114,32,97,108,108,32,97,114,114,97,121,115,0,66,97,100,32,102,108,97,103,32,40,112,97,114,97,109,101,116,101,114,32,111,114,32,115,116,114,117,99,116,117,114,101,32,102,105,101,108,100,41,0,119,98,0,0,0,0,0,0,67,79,73,32,115,101,116,32,105,115,32,110,111,116,32,97,108,108,111,119,101,100,32,104,101,114,101,0,0,0,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,114,43,98,0,0,0,0,0,66,97,100,32,110,117,109,98,101,114,32,111,102,32,99,104,97,110,110,101,108,115,0,0,73,116,101,114,97,116,111,114,32,112,111,105,110,116,101,114,32,105,115,32,78,85,76,76,0,0,0,0,0,0,0,0,37,52,100,0,0,0,0,0,73,110,112,117,116,32,67,79,73,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,74,70,73,70,0,0,0,0,83,111,109,101,32,111,102,32,114,101,113,117,105,114,101,100,32,97,114,114,97,121,32,112,111,105,110,116,101,114,115,32,105,115,32,78,85,76,76,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,85,110,115,117,112,112,111,114,116,101,100,32,102,111,114,109,97,116,32,111,114,32,99,111,109,98,105,110,97,116,105,111,110,32,111,102,32,102,111,114,109,97,116,115,0,0,0,0,73,110,99,111,114,114,101,99,116,32,110,117,109,98,101,114,32,111,102,32,97,114,114,97,121,115,0,0,0,0,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,79,110,101,32,111,102,32,97,114,103,117,109,101,110,116,115,39,32,118,97,108,117,101,115,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,0,0,0,0,0,0,119,105,110,100,111,119,46,99,112,112,0,0,0,0,0,0,83,105,122,101,115,32,111,102,32,105,110,112,117,116,32,97,114,103,117,109,101,110,116,115,32,100,111,32,110,111,116,32,109,97,116,99,104,0,0,0,110,111,32,100,101,115,99,114,105,112,116,105,111,110,0,0,83,111,117,114,99,101,32,105,109,97,103,101,32,109,117,115,116,32,104,97,118,101,32,49,44,32,51,32,111,114,32,52,32,99,104,97,110,110,101,108,115,0,0,0,0,0,0,0,66,97,100,32,67,118,77,97,116,78,68,32,104,101,97,100,101,114,0,0,0,0,0,0,70,111,114,109,97,116,115,32,111,102,32,105,110,112,117,116,32,97,114,103,117,109,101,110,116,115,32,100,111,32,110,111,116,32,109,97,116,99,104,0,108,111,97,100,115,97,118,101,46,99,112,112,0,0,0,0,73,110,110,101,114,32,102,117,110,99,116,105,111,110,32,102,97,105,108,101,100,46,0,0,73,110,112,117,116,32,105,109,97,103,101,32,100,101,112,116,104,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,102,117,110,99,116,105,111,110,0,0,82,101,113,117,101,115,116,101,100,32,111,98,106,101,99,116,32,119,97,115,32,110,111,116,32,102,111,117,110,100,0,0,84,114,117,101,0,0,0,0,73,110,112,108,97,99,101,32,111,112,101,114,97,116,105,111,110,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,84,104,101,32,97,114,114,97,121,32,105,115,32,116,111,111,32,98,105,103,0,0,0,0,73,109,97,103,101,32,115,116,101,112,32,105,115,32,119,114,111,110,103,0,0,0,0,0,84,111,111,32,108,111,110,103,32,100,97,116,97,32,116,121,112,101,32,115,112,101,99,105,102,105,99,97,116,105,111,110,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,100,97,116,97,32,116,121,112,101,32,115,112,101,99,105,102,105,99,97,116,105,111,110,0,114,98,0,0,0,0,0,0,111,110,101,32,111,102,32,100,105,109,101,115,105,111,110,32,115,105,122,101,115,32,105,115,32,110,111,110,45,112,111,115,105,116,105,118,101,0,0,0,37,46,56,102,0,0,0,0,37,46,56,101,0,0,0,0,110,117,108,108,32,102,105,108,101,110,97,109,101,0,0,0,46,73,110,102,0,0,0,0,45,46,73,110,102,0,0,0,46,78,97,110,0,0,0,0,37,46,49,54,102,0,0,0,37,46,49,54,101,0,0,0,84,73,70,70,32,70,105,108,101,115,32,40,42,46,116,105,102,102,59,42,46,116,105,102,41,0,0,0,0,0,0,0,37,100,46,0,0,0,0,0,68,105,118,105,122,105,111,110,32,98,121,32,122,101,114,111,32,111,99,99,117,114,101,100,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,105,110,32,116,104,101,32,107,101,121,0,0,0,0,75,101,121,32,115,104,111,117,108,100,32,115,116,97,114,116,32,119,105,116,104,32,97,32,108,101,116,116,101,114,32,111,114,32,95,0,0,0,0,0,67,108,111,115,105,110,103,32,116,97,103,32,115,104,111,117,108,100,32,110,111,116,32,105,110,99,108,117,100,101,32,97,110,121,32,97,116,116,114,105,98,117,116,101,115,0,0,0,89,166,106,149,0,0,0,0,65,32,115,105,110,103,108,101,32,95,32,105,115,32,97,32,114,101,115,101,114,118,101,100,32,116,97,103,32,110,97,109,101,0,0,0,0,0,0,0,110,111,110,45,112,111,115,105,116,105,118,101,32,111,114,32,116,111,111,32,108,97,114,103,101,32,110,117,109,98,101,114,32,111,102,32,100,105,109,101,110,115,105,111,110,115,0,0,101,108,101,109,101,110,116,115,32,119,105,116,104,32,107,101,121,115,32,99,97,110,32,110,111,116,32,98,101,32,119,114,105,116,116,101,110,32,116,111,32,115,101,113,117,101,110,99,101,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,111,99,99,117,114,115,32,105,110,32,116,104,101,32,107,101,121,0,0,0,0,0,75,101,121,32,109,117,115,116,32,115,116,97,114,116,32,119,105,116,104,32,97,32,108,101,116,116,101,114,32,111,114,32,95,0,0,0,0,0,0,0,84,104,101,32,107,101,121,32,105,115,32,116,111,111,32,108,111,110,103,0,0,0,0,0,84,104,101,32,107,101,121,32,105,115,32,97,110,32,101,109,112,116,121,0,0,0,0,0,80,111,114,116,97,98,108,101,32,105,109,97,103,101,32,102,111,114,109,97,116,32,40,42,46,112,98,109,59,42,46,112,103,109,59,42,46,112,112,109,41,0,0,0,0,0,0,0,65,110,32,97,116,116,101,109,112,116,32,116,111,32,97,100,100,32,101,108,101,109,101,110,116,32,119,105,116,104,111,117,116,32,97,32,107,101,121,32,116,111,32,97,32,109,97,112,44,32,111,114,32,97,100,100,32,101,108,101,109,101,110,116,32,119,105,116,104,32,107,101,121,32,116,111,32,115,101,113,117,101,110,99,101,0,0,0,78,117,108,108,32,112,111,105,110,116,101,114,0,0,0,0,83,116,111,114,97,103,101,32,98,108,111,99,107,32,115,105,122,101,32,105,115,32,116,111,111,32,115,109,97,108,108,32,116,111,32,102,105,116,32,116,104,101,32,115,101,113,117,101,110,99,101,32,101,108,101,109,101,110,116,115,0,0,0,0,84,104,101,32,110,117,109,98,101,114,32,111,102,32,115,116,111,114,101,100,32,101,108,101,109,101,110,116,115,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,111,32,34,99,111,117,110,116,34,0,78,85,76,76,32,60,115,105,122,101,115,62,32,112,111,105,110,116,101,114,0,0,0,0,79,110,108,121,32,111,110,101,32,111,102,32,34,104,101,97,100,101,114,95,117,115,101,114,95,100,97,116,97,34,44,32,34,114,101,99,116,34,32,97,110,100,32,34,111,114,105,103,105,110,34,32,116,97,103,115,32,109,97,121,32,111,99,99,117,114,0,0,0,0,0,0,84,104,101,32,115,101,113,117,101,110,99,101,32,102,108,97,103,115,32,97,114,101,32,105,110,118,97,108,105,100,0,0,74,80,69,71,32,102,105,108,101,115,32,40,42,46,106,112,101,103,59,42,46,106,112,103,59,42,46,106,112,101,41,0,99,118,99,111,108,111,114,46,99,112,112,0,0,0,0,0,99,111,117,110,116,0,0,0,70,65,76,83,69,0,0,0,70,97,108,115,101,0,0,0,99,120,97,108,108,111,99,46,99,112,112,0,0,0,0,0,102,97,108,115,101,0,0,0,66,77,0,0,0,0,0,0,48,0,0,0,0,0,0,0,114,101,99,117,114,115,105,118,101,0,0,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,115,105,122,101,32,111,102,32,105,110,112,117,116,32,97,114,114,97,121,0,0,0,65,108,108,32,116,104,101,32,115,101,113,117,101,110,99,101,32,116,114,101,101,32,110,111,100,101,115,32,115,104,111,117,108,100,32,99,111,110,116,97,105,110,32,34,108,101,118,101,108,34,32,102,105,101,108,100,0,0,0,0,0,0,0,0,108,101,118,101,108,0,0,0,105,110,118,97,108,105,100,32,97,114,114,97,121,32,100,97,116,97,32,116,121,112,101,0,111,112,101,110,99,118,45,115,101,113,117,101,110,99,101,45,116,114,101,101,32,105,110,115,116,97,110,99,101,32,115,104,111,117,108,100,32,99,111,110,116,97,105,110,32,97,32,102,105,101,108,100,32,34,115,101,113,117,101,110,99,101,115,34,32,116,104,97,116,32,115,104,111,117,108,100,32,98,101,32,97,32,115,101,113,117,101,110,99,101,0,0,0,0,0,0,115,101,113,117,101,110,99,101,115,0,0,0,0,0,0,0,68,117,112,108,105,99,97,116,101,100,32,101,100,103,101,32,104,97,115,32,111,99,99,117,114,101,100,0,0,0,0,0,83,111,109,101,32,111,102,32,115,116,111,114,101,100,32,118,101,114,116,101,120,32,105,110,100,105,99,101,115,32,97,114,101,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,78,111,32,118,101,114,116,105,99,101,115,32,100,97,116,97,0,0,0,0,0,0,0,0,78,111,32,101,100,103,101,115,32,100,97,116,97,0,0,0,37,100,102,37,115,0,0,0,71,114,97,112,104,32,101,100,103,101,115,32,115,104,111,117,108,100,32,115,116,97,114,116,32,119,105,116,104,32,50,32,105,110,116,101,103,101,114,115,32,97,110,100,32,97,32,102,108,111,97,116,0,0,0,0,79,110,101,32,111,102,32,34,104,101,97,100,101,114,95,100,116,34,32,97,110,100,32,34,104,101,97,100,101,114,95,117,115,101,114,95,100,97,116,97,34,32,105,115,32,116,104,101,114,101,44,32,119,104,105,108,101,32,116,104,101,32,111,116,104,101,114,32,105,115,32,110,111,116,0,0,0,0,0,0,65,117,116,111,116,114,97,99,101,32,99,97,108,108,0,0,79,110,101,32,111,102,32,105,110,100,105,99,101,115,32,105,115,32,111,117,116,32,111,102,32,114,97,110,103,101,0,0,83,112,101,99,105,102,105,101,100,32,101,108,101,109,101,110,116,32,115,105,122,101,32,100,111,101,115,110,39,116,32,109,97,116,99,104,32,116,111,32,116,104,101,32,115,105,122,101,32,111,102,32,116,104,101,32,115,112,101,99,105,102,105,101,100,32,101,108,101,109,101,110,116,32,116,121,112,101,32,40,116,114,121,32,116,111,32,117,115,101,32,48,32,102,111,114,32,101,108,101,109,101,110,116,32,116,121,112,101,41,0,0,73,110,118,97,108,105,100,32,103,114,97,112,104,32,115,105,103,110,97,116,117,114,101,0,99,120,112,101,114,115,105,115,116,101,110,99,101,46,99,112,112,0,0,0,0,0,0,0,66,71,82,65,0,0,0,0,78,85,76,76,32,109,97,116,114,105,120,32,104,101,97,100,101,114,32,112,111,105,110,116,101,114,0,0,0,0,0,0,83,111,109,101,32,111,102,32,101,115,115,101,110,116,105,97,108,32,115,101,113,117,101,110,99,101,32,97,116,116,114,105,98,117,116,101,115,32,97,114,101,32,97,98,115,101,110,116,0,0,0,0,0,0,0,0,66,71,82,0,0,0,0,0,83,105,122,101,32,111,102,32,115,101,113,117,101,110,99,101,32,101,108,101,109,101,110,116,32,40,101,108,101,109,95,115,105,122,101,41,32,105,115,32,105,110,99,111,110,115,105,115,116,101,110,116,32,119,105,116,104,32,115,101,113,45,62,102,108,97,103,115,0,0,0,0,82,71,66,0,0,0,0,0,84,104,101,32,115,105,122,101,32,111,102,32,101,108,101,109,101,110,116,32,99,97,108,99,117,108,97,116,101,100,32,102,114,111,109,32,34,100,116,34,32,97,110,100,32,116,104,101,32,101,108,101,109,95,115,105,122,101,32,100,111,32,110,111,116,32,109,97,116,99,104,0,71,82,65,89,0,0,0,0,104,101,97,100,101,114,95,117,115,101,114,95,100,97,116,97,0,0,0,0,0,0,0,0,37,117,117,0,0,0,0,0,84,104,101,32,102,117,110,99,116,105,111,110,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,46,32,82,101,98,117,105,108,100,32,116,104,101,32,108,105,98,114,97,114,121,32,119,105,116,104,32,87,105,110,100,111,119,115,44,32,71,84,75,43,32,50,46,120,32,111,114,32,67,97,114,98,111,110,32,115,117,112,112,111,114,116,0,0,0,37,117,105,0,0,0,0,0,99,111,108,111,114,0,0,0,114,101,99,116,0,0,0,0,84,104,101,32,115,105,122,101,32,111,102,32,104,101,97,100,101,114,32,99,97,108,99,117,108,97,116,101,100,32,102,114,111,109,32,34,104,101,97,100,101,114,95,100,116,34,32,105,115,32,103,114,101,97,116,101,114,32,116,104,97,110,32,104,101,97,100,101,114,95,115,105,122,101,0,0,0,0,0,0,73,116,101,114,97,116,105,111,110,115,32,100,111,32,110,111,116,32,99,111,110,118,101,114,103,101,0,0,0,0,0,0,66,97,100,32,105,109,97,103,101,32,104,101,97,100,101,114,0,0,0,0,0,0,0,0,79,112,101,110,67,86,32,69,82,82,79,82,58,32,37,115,32,40,37,115,41,10,9,105,110,32,102,117,110,99,116,105,111,110,32,0,0,0,0,0,104,101,97,100,101,114,95,100,116,0,0,0,0,0,0,0,101,100,103,101,115,0,0,0,118,101,114,116,105,99,101,115,0,0,0,0,0,0,0,0,117,116,105,108,115,46,99,112,112,0,0,0,0,0,0,0,50,105,102,37,115,0,0,0,101,100,103,101,95,100,116,0,101,100,103,101,95,99,111,117,110,116,0,0,0,0,0,0,99,120,100,97,116,97,115,116,114,117,99,116,115,46,99,112,112,0,0,0,0,0,0,0,118,101,114,116,101,120,95,100,116,0,0,0,0,0,0,0,99,120,99,111,112,121,46,99,112,112,0,0,0,0,0,0,118,101,114,116,101,120,95,99,111,117,110,116,0,0,0,0,102,108,97,103,115,0,0,0,66,97,100,32,97,114,103,117,109,101,110,116,0,0,0,0,66,97,100,32,105,110,112,117,116,32,97,108,105,103,110,0,37,48,56,120,0,0,0,0,66,97,100,32,105,110,112,117,116,32,111,114,105,103,105,110,0,0,0,0,0,0,0,0,66,97,100,32,67,118,77,97,116,32,104,101,97,100,101,114,0,0,0,0,0,0,0,0,99,120,99,111,110,118,101,114,116,46,99,112,112,0,0,0,83,112,97,114,115,101,32,109,97,116,114,105,120,32,100,97,116,97,32,105,115,32,99,111,114,114,117,112,116,101,100,0,85,110,115,117,112,112,111,114,116,101,100,32,102,111,114,109,97,116,0,0,0,0,0,0,67,111,117,108,100,32,110,111,116,32,100,101,116,101,114,109,105,110,101,32,115,112,97,114,115,101,32,109,97,116,114,105,120,32,100,105,109,101,110,115,105,111,110,97,108,105,116,121,0,0,0,0,0,0,0,0,66,97,100,32,105,110,112,117,116,32,114,111,105,0,0,0,84,104,101,32,105,109,97,103,101,32,100,97,116,97,32,105,115,32,110,111,116,32,102,111,117,110,100,32,105,110,32,102,105,108,101,32,115,116,111,114,97,103,101,0,0,0,0,0,110,117,108,108,32,112,111,105,110,116,101,114,32,116,111,32,104,101,97,100,101,114,0,0,99,120,97,114,114,97,121,46,99,112,112,0,0,0,0,0,79,110,108,121,32,105,110,116,101,114,108,101,97,118,101,100,32,105,109,97,103,101,115,32,99,97,110,32,98,101,32,114,101,97,100,0,0,0,0,0,83,111,109,101,32,111,102,32,101,115,115,101,110,116,105,97,108,32,105,109,97,103,101,32,97,116,116,114,105,98,117,116,101,115,32,97,114,101,32,97,98,115,101,110,116,0,0,0,99,111,105,0,0,0,0,0,121,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,78,117,108,108,32,101,108,101,109,101,110,116,32,110,97,109,101,0,0,0,0,0,0,0,114,111,105,0,0,0,0,0,73,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,114,101,113,117,101,115,116,101,100,32,115,105,122,101,32,105,115,32,110,101,103,97,116,105,118,101,32,111,114,32,116,111,111,32,98,105,103,0,0,0,105,110,116,101,114,108,101,97,118,101,100,0,0,0,0,0,112,108,97,110,97,114,0,0,108,97,121,111,117,116,0,0,98,111,116,116,111,109,45,108,101,102,116,0,0,0,0,0,116,111,112,45,108,101,102,116,0,0,0,0,0,0,0,0,111,114,105,103,105,110,0,0,104,101,105,103,104,116,0,0,119,105,100,116,104,0,0,0,73,109,97,103,101,115,32,119,105,116,104,32,112,108,97,110,97,114,32,100,97,116,97,32,108,97,121,111,117,116,32,97,114,101,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,0,99,111,108,115,0,0,0,0,73,110,116,101,114,110,97,108,32,101,114,114,111,114,0,0,84,111,111,32,108,97,114,103,101,32,109,101,109,111,114,121,32,98,108,111,99,107,32,105,115,32,114,101,113,117,101,115,116,101,100,0,0,0,0,0,114,111,119,115,0,0,0,0,84,111,111,32,99,111,109,112,108,101,120,32,102,111,114,109,97,116,32,102,111,114,32,116,104,101,32,109,97,116,114,105,120,0,0,0,0,0,0,0,84,104,101,32,109,97,116,114,105,120,32,115,105,122,101,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,116,111,32,116,104,101,32,110,117,109,98,101,114,32,111,102,32,115,116,111,114,101,100,32,101,108,101,109,101,110,116,115,0,84,104,101,32,105,109,97,103,101,32,102,111,114,109,97,116,32,105,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,0,71,114,101,97,116,101,114,58,32,37,115,10,0,0,0,0,109,111,117,115,101,46,106,112,103,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,40,239,99,61,166,240,80,190,248,85,135,63,41,33,120,191,121,32,240,63,160,54,42,61,2,100,79,64,85,193,196,191,251,63,255,190,0,0,0,0,57,0,0,0,47,255,255,255,59,4,0,0,31,252,255,255,129,7,0,0,43,0,0,0,246,12,0,0,218,249,255,255,2,254,255,255,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,2,0,0,0,1,0,0,0,0,0,0,0,105,99,118,68,101,99,111,100,101,83,105,109,112,108,101,70,111,114,109,97,116,0,0,0,207,192,56,62,186,20,183,62,10,45,211,62,87,205,147,61,186,20,55,63,109,198,89,62,20,66,115,63,118,27,244,61,86,98,158,60,0,0,0,0,185,0,0,0,110,1,0,0,166,1,0,0,74,0,0,0,220,2,0,0,218,0,0,0,205,3,0,0,122,0,0,0,20,0,0,0,0,0,0,0,57,0,0,0,47,255,255,255,59,4,0,0,31,252,255,255,129,7,0,0,43,0,0,0,246,12,0,0,218,249,255,255,2,254,255,255,0,0,0,0,201,200,200,62,0,0,0,0,178,177,177,63,0,0,6,195,129,128,128,63,0,0,12,195,201,200,200,62,0,0,0,0,0,0,128,63,0,0,0,195,0,0,128,63,0,0,0,195,0,0,0,64,0,0,0,0,129,128,128,59,0,0,0,0,0,0,128,63,0,0,0,0,0,0,0,64,0,0,0,0,129,128,128,59,0,0,0,0,129,128,128,59,0,0,0,0,105,99,118,68,101,115,116,114,111,121,77,101,109,83,116,111,114,97,103,101,0,0,0,0,185,0,0,0,110,1,0,0,166,1,0,0,74,0,0,0,220,2,0,0,218,0,0,0,205,3,0,0,122,0,0,0,20,0,0,0,0,0,0,0,51,51,35,64,0,0,0,0,35,104,56,63,4,13,193,66,0,0,127,63,0,116,11,67,0,0,0,0,0,240,15,0,0,248,7,0,0,80,5,0,0,252,3,0,0,48,3,0,0,168,2,0,219,70,2,0,0,254,1,0,85,197,1,0,0,152,1,0,233,114,1,0,0,84,1,0,217,57,1,0,110,35,1,0,0,16,1,0,0,255,0,0,0,240,0,0,171,226,0,0,189,214,0,0,0,204,0,0,73,194,0,0,116,185,0,0,100,177,0,0,0,170,0,0,51,163,0,0,236,156,0,0,28,151,0,0,183,145,0,0,177,140,0,0,0,136,0,0,157,131,0,0,128,127,0,0,163,123,0,0,0,120,0,0,146,116,0,0,85,113,0,0,69,110,0,0,94,107,0,0,158,104,0,0,0,102,0,0,131,99,0,0,37,97,0,0,226,94,0,0,186,92,0,0,171,90,0,0,178,88,0,0,207,86,0,0,0,85,0,0,68,83,0,0,154,81,0,0,0,80,0,0,118,78,0,0,251,76,0,0,142,75,0,0,47,74,0,0,219,72,0,0,148,71,0,0,88,70,0,0,39,69,0,0,0,68,0,0,227,66,0,0,206,65,0,0,195,64,0,0,192,63,0,0,197,62,0,0,209,61,0,0,229,60,0,0,0,60,0,0,33,59,0,0,73,58,0,0,119,57,0,0,171,56,0,0,228,55,0,0,35,55,0,0,102,54,0,0,175,53,0,0,253,52,0,0,79,52,0,0,165,51,0,0,0,51,0,0,95,50,0,0,194,49,0,0,40,49,0,0,146,48,0,0,0,48,0,0,113,47,0,0,230,46,0,0,93,46,0,0,216,45,0,0,85,45,0,0,214,44,0,0,89,44,0,0,223,43,0,0,103,43,0,0,243,42,0,0,128,42,0,0,16,42,0,0,162,41,0,0,54,41,0,0,205,40,0,0,101,40,0,0,0,40,0,0,157,39,0,0,59,39,0,0,219,38,0,0,126,38,0,0,33,38,0,0,199,37,0,0,110,37,0,0,23,37,0,0,194,36,0,0,110,36,0,0,27,36,0,0,202,35,0,0,122,35,0,0,44,35,0,0,223,34,0,0,148,34,0,0,73,34,0,0,0,34,0,0,184,33,0,0,113,33,0,0,44,33,0,0,231,32,0,0,164,32,0,0,98,32,0,0,32,32,0,0,224,31,0,0,161,31,0,0,98,31,0,0,37,31,0,0,233,30,0,0,173,30,0,0,115,30,0,0,57,30,0,0,0,30,0,0,200,29,0,0,145,29,0,0,90,29,0,0,37,29,0,0,240,28,0,0,187,28,0,0,136,28,0,0,85,28,0,0,35,28,0,0,242,27,0,0,193,27,0,0,145,27,0,0,98,27,0,0,51,27,0,0,5,27,0,0,216,26,0,0,171,26,0,0,126,26,0,0,83,26,0,0,39,26,0,0,253,25,0,0,211,25,0,0,169,25,0,0,128,25,0,0,87,25,0,0,47,25,0,0,8,25,0,0,225,24,0,0,186,24,0,0,148,24,0,0,110,24,0,0,73,24,0,0,36,24,0,0,0,24,0,0,220,23,0,0,185,23,0,0,149,23,0,0,115,23,0,0,80,23,0,0,47,23,0,0,13,23,0,0,236,22,0,0,203,22,0,0,171,22,0,0,139,22,0,0,107,22,0,0,76,22,0,0,45,22,0,0,14,22,0,0,239,21,0,0,209,21,0,0,180,21,0,0,150,21,0,0,121,21,0,0,92,21,0,0,64,21,0,0,36,21,0,0,8,21,0,0,236,20,0,0,209,20,0,0,182,20,0,0,155,20,0,0,129,20,0,0,102,20,0,0,76,20,0,0,51,20,0,0,25,20,0,0,0,20,0,0,231,19,0,0,206,19,0,0,182,19,0,0,158,19,0,0,134,19,0,0,110,19,0,0,86,19,0,0,63,19,0,0,40,19,0,0,17,19,0,0,250,18,0,0,228,18,0,0,205,18,0,0,183,18,0,0,161,18,0,0,140,18,0,0,118,18,0,0,97,18,0,0,76,18,0,0,55,18,0,0,34,18,0,0,14,18,0,0,249,17,0,0,229,17,0,0,209,17,0,0,189,17,0,0,170,17,0,0,150,17,0,0,131,17,0,0,112,17,0,0,93,17,0,0,74,17,0,0,55,17,0,0,37,17,0,0,18,17,0,0,0,17,0,0,238,16,0,0,220,16,0,0,202,16,0,0,185,16,0,0,167,16,0,0,150,16,0,0,133,16,0,0,116,16,0,0,99,16,0,0,82,16,0,0,65,16,0,0,49,16,0,0,32,16,0,0,16,16,0,0,0,16,0,0,0,0,0,63,0,0,0,0,0,0,127,67,0,0,0,0,0,0,127,67,0,0,0,0,105,99,118,87,114,105,116,101,72,101,97,100,101,114,68,97,116,97,0,0,0,0,0,0,105,99,118,88,77,76,87,114,105,116,101,83,99,97,108,97,114,0,0,0,0,0,0,0,105,99,118,87,114,105,116,101,83,112,97,114,115,101,77,97,116,0,0,0,0,0,0,0,105,99,118,73,110,105,116,77,101,109,83,116,111,114,97,103,101,32,0,0,0,0,0,0,105,99,118,71,111,78,101,120,116,77,101,109,66,108,111,99,107,0,0,0,0,0,0,0,208,49,0,0,200,49,0,0,105,99,118,82,101,97,100,83,112,97,114,115,101,77,97,116,0,0,0,0,0,0,0,0,136,57,0,0,136,57,0,0,192,110,0,0,192,110,0,0,56,57,0,0,232,56,0,0,56,57,0,0,136,56,0,0,152,49,0,0,144,49,0,0,105,99,118,87,114,105,116,101,83,101,113,84,114,101,101,0,105,99,118,82,101,108,101,97,115,101,71,114,97,112,104,0,105,99,118,68,101,99,111,100,101,70,111,114,109,97,116,0,105,99,118,67,97,108,99,69,108,101,109,83,105,122,101,0,105,99,118,88,77,76,87,114,105,116,101,84,97,103,0,0,105,99,118,82,101,97,100,83,101,113,84,114,101,101,0,0,105,99,118,87,114,105,116,101,77,97,116,78,68,0,0,0,105,99,118,87,114,105,116,101,73,109,97,103,101,0,0,0,105,99,118,87,114,105,116,101,71,114,97,112,104,0,0,0,105,99,118,82,101,108,101,97,115,101,83,101,113,0,0,0,105,99,118,71,101,116,78,111,100,101,80,116,114,0,0,0,105,99,118,70,83,68,111,82,101,115,105,122,101,0,0,0,105,99,118,82,101,97,100,77,97,116,78,68,0,0,0,0,105,99,118,82,101,97,100,73,109,97,103,101,0,0,0,0,105,99,118,82,101,97,100,71,114,97,112,104,0,0,0,0,99,118,76,111,97,100,73,109,97,103,101,0,0,0,0,0,105,99,118,87,114,105,116,101,70,111,114,109,97,116,0,0,105,99,118,67,114,101,97,116,101,82,79,73,0,0,0,0,105,99,118,87,114,105,116,101,83,101,113,0,0,0,0,0,105,99,118,87,114,105,116,101,77,97,116,0,0,0,0,0,105,99,118,82,101,97,100,83,101,113,0,0,0,0,0,0,105,99,118,82,101,97,100,77,97,116,0,0,0,0,0,0,105,99,118,71,114,111,119,83,101,113,0,0,0,0,0,0,99,118,71,101,116,77,97,116,78,68,0,0,0,0,0,0,99,118,73,110,105,116,83,112,97,114,115,101,77,97,116,73,116,101,114,97,116,111,114,0,0,0,0,0,192,79,0,0,64,0,0,0,162,1,0,0,174,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,0,0,74,0,0,0,130,0,0,0,90,3,0,0,114,0,0,0,80,2,0,0,84,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,80,0,0,38,0,0,0,10,3,0,0,14,2,0,0,114,0,0,0,88,1,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,80,0,0,120,2,0,0,152,0,0,0,146,0,0,0,114,0,0,0,84,1,0,0,28,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,80,0,0,50,1,0,0,210,2,0,0,14,2,0,0,114,0,0,0,80,3,0,0,238,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,80,0,0,66,1,0,0,134,1,0,0,24,1,0,0,158,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,80,0,0,142,1,0,0,6,0,0,0,180,1,0,0,224,0,0,0,208,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,80,0,0,162,2,0,0,122,2,0,0,14,2,0,0,114,0,0,0,102,2,0,0,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,80,0,0,106,0,0,0,160,0,0,0,144,0,0,0,72,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,80,0,0,136,0,0,0,238,2,0,0,24,1,0,0,62,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,80,0,0,60,2,0,0,36,1,0,0,48,3,0,0,0,2,0,0,92,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,144,80,0,0,90,2,0,0,78,1,0,0,24,1,0,0,38,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,80,0,0,100,2,0,0,202,1,0,0,106,2,0,0,38,3,0,0,150,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,80,0,0,86,3,0,0,60,1,0,0,186,0,0,0,154,0,0,0,2,3,0,0,72,3,0,0,160,1,0,0,72,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,80,0,0,76,1,0,0,128,1,0,0,46,0,0,0,134,0,0,0,2,2,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,80,0,0,152,1,0,0,184,1,0,0,14,2,0,0,114,0,0,0,110,0,0,0,180,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,80,0,0,54,3,0,0,92,1,0,0,24,1,0,0,96,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,80,0,0,70,1,0,0,78,2,0,0,52,3,0,0,248,2,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,81,0,0,226,1,0,0,212,2,0,0,24,1,0,0,60,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,81,0,0,182,1,0,0,136,1,0,0,178,2,0,0,70,3,0,0,14,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,81,0,0,96,0,0,0,52,0,0,0,158,0,0,0,234,1,0,0,150,1,0,0,72,3,0,0,160,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,81,0,0,26,0,0,0,146,2,0,0,158,0,0,0,234,1,0,0,150,1,0,0,72,3,0,0,160,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,81,0,0,206,2,0,0,108,0,0,0,8,1,0,0,236,2,0,0,180,2,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,81,0,0,68,3,0,0,148,0,0,0,8,1,0,0,236,2,0,0,180,2,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,81,0,0,190,0,0,0,156,0,0,0,218,0,0,0,228,1,0,0,116,2,0,0,72,3,0,0,160,1,0,0,48,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,81,0,0,144,2,0,0,182,2,0,0,158,0,0,0,234,1,0,0,150,1,0,0,72,3,0,0,160,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,81,0,0,36,2,0,0,254,0,0,0,8,1,0,0,236,2,0,0,166,2,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,136,81,0,0,44,2,0,0,120,0,0,0,8,1,0,0,236,2,0,0,20,1,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,152,81,0,0,40,1,0,0,254,1,0,0,8,1,0,0,236,2,0,0,180,2,0,0,200,2,0,0,230,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,81,0,0,150,0,0,0,190,1,0,0,24,1,0,0,102,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,81,0,0,88,0,0,0,40,0,0,0,102,2,0,0,102,2,0,0,24,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,83,116,57,116,121,112,101,95,105,110,102,111,0,0,0,0,83,116,57,101,120,99,101,112,116,105,111,110,0,0,0,0,83,116,57,98,97,100,95,97,108,108,111,99,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,50,48,95,95,115,105,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,55,95,95,99,108,97,115,115,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,78,49,48,95,95,99,120,120,97,98,105,118,49,49,54,95,95,115,104,105,109,95,116,121,112,101,95,105,110,102,111,69,0,0,0,0,0,0,0,0,57,71,114,70,109,116,84,105,102,102,0,0,0,0,0,0,57,71,114,70,109,116,74,112,101,103,0,0,0,0,0,0,56,71,114,70,109,116,80,120,77,0,0,0,0,0,0,0,56,71,114,70,109,116,66,109,112,0,0,0,0,0,0,0,50,48,71,114,70,109,116,83,117,110,82,97,115,116,101,114,87,114,105,116,101,114,0,0,50,48,71,114,70,109,116,83,117,110,82,97,115,116,101,114,82,101,97,100,101,114,0,0,49,56,71,114,70,109,116,70,105,108,116,101,114,70,97,99,116,111,114,121,0,0,0,0,49,56,71,114,70,109,116,70,97,99,116,111,114,105,101,115,76,105,115,116,0,0,0,0,49,53,71,114,70,109,116,84,105,102,102,87,114,105,116,101,114,0,0,0,0,0,0,0,49,53,71,114,70,109,116,84,105,102,102,82,101,97,100,101,114,0,0,0,0,0,0,0,49,53,71,114,70,109,116,74,112,101,103,87,114,105,116,101,114,0,0,0,0,0,0,0,49,53,71,114,70,109,116,74,112,101,103,82,101,97,100,101,114,0,0,0,0,0,0,0,49,52,87,74,112,101,103,66,105,116,83,116,114,101,97,109,0,0,0,0,0,0,0,0,49,52,82,74,112,101,103,66,105,116,83,116,114,101,97,109,0,0,0,0,0,0,0,0,49,52,71,114,70,109,116,83,117,110,82,97,115,116,101,114,0,0,0,0,0,0,0,0,49,52,71,114,70,109,116,80,120,77,87,114,105,116,101,114,0,0,0,0,0,0,0,0,49,52,71,114,70,109,116,80,120,77,82,101,97,100,101,114,0,0,0,0,0,0,0,0,49,52,71,114,70,109,116,66,109,112,87,114,105,116,101,114,0,0,0,0,0,0,0,0,49,52,71,114,70,109,116,66,109,112,82,101,97,100,101,114,0,0,0,0,0,0,0,0,49,50,87,77,66,121,116,101,83,116,114,101,97,109,0,0,49,50,87,76,66,121,116,101,83,116,114,101,97,109,0,0,49,50,82,77,66,121,116,101,83,116,114,101,97,109,0,0,49,50,82,76,66,121,116,101,83,116,114,101,97,109,0,0,49,49,87,77,66,105,116,83,116,114,101,97,109,0,0,0,49,49,87,66,97,115,101,83,116,114,101,97,109,0,0,0,49,49,82,77,66,105,116,83,116,114,101,97,109,0,0,0,49,49,82,76,66,105,116,83,116,114,101,97,109,0,0,0,49,49,82,66,97,115,101,83,116,114,101,97,109,0,0,0,49,49,71,114,70,109,116,87,114,105,116,101,114,0,0,0,49,49,71,114,70,109,116,82,101,97,100,101,114,0,0,0,0,0,0,0,176,76,0,0,0,0,0,0,192,76,0,0,0,0,0,0,208,76,0,0,184,79,0,0,0,0,0,0,0,0,0,0,224,76,0,0,224,79,0,0,0,0,0,0,0,0,0,0,8,77,0,0,240,79,0,0,0,0,0,0,0,0,0,0,48,77,0,0,176,79,0,0,0,0,0,0,0,0,0,0,88,77,0,0])
.concat([96,80,0,0,0,0,0,0,0,0,0,0,104,77,0,0,96,80,0,0,0,0,0,0,0,0,0,0,120,77,0,0,96,80,0,0,0,0,0,0,0,0,0,0,136,77,0,0,96,80,0,0,0,0,0,0,0,0,0,0,152,77,0,0,160,81,0,0,0,0,0,0,0,0,0,0,176,77,0,0,168,81,0,0,0,0,0,0,0,0,0,0,200,77,0,0,0,0,0,0,224,77,0,0,0,0,0,0,248,77,0,0,160,81,0,0,0,0,0,0,0,0,0,0,16,78,0,0,168,81,0,0,0,0,0,0,0,0,0,0,40,78,0,0,160,81,0,0,0,0,0,0,0,0,0,0,64,78,0,0,168,81,0,0,0,0,0,0,0,0,0,0,88,78,0,0,96,81,0,0,0,0,0,0,0,0,0,0,112,78,0,0,120,81,0,0,0,0,0,0,0,0,0,0,136,78,0,0,96,80,0,0,0,0,0,0,0,0,0,0,160,78,0,0,160,81,0,0,0,0,0,0,0,0,0,0,184,78,0,0,168,81,0,0,0,0,0,0,0,0,0,0,208,78,0,0,160,81,0,0,0,0,0,0,0,0,0,0,232,78,0,0,168,81,0,0,0,0,0,0,0,0,0,0,0,79,0,0,48,81,0,0,0,0,0,0,0,0,0,0,16,79,0,0,112,81,0,0,0,0,0,0,0,0,0,0,32,79,0,0,80,81,0,0,0,0,0,0,0,0,0,0,48,79,0,0,152,81,0,0,0,0,0,0,0,0,0,0,64,79,0,0,112,81,0,0,0,0,0,0,0,0,0,0,80,79,0,0,0,0,0,0,96,79,0,0,136,81,0,0,0,0,0,0,0,0,0,0,112,79,0,0,152,81,0,0,0,0,0,0,0,0,0,0,128,79,0,0,0,0,0,0,144,79,0,0,0,0,0,0,160,79,0,0,84,2,0,0,0,0,0,0,255,0,0,0,255,0,0,0,255,255,255,255,255,255,0,0,255,255,255,255,0,0,0,0,12,2,0,0,0,0,0,0,0,8,1,2,9,16,24,17,10,3,4,11,18,25,32,40,33,26,19,12,5,6,13,20,27,34,41,48,56,49,42,35,28,21,14,7,15,22,29,36,43,50,57,58,51,44,37,30,23,31,38,45,52,59,60,53,46,39,47,54,61,62,55,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,1,255,2,255,255,255,3,255,255,255,255,255,255,255,4,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,5,0,0,161,0,203,0,232,0,0,1,20,1,37,1,52,1,66,1,79,1,91,1,103,1,113,1,123,1,133,1,142,1,150,1,159,1,167,1,174,1,182,1,189,1,196,1,203,1,209,1,216,1,222,1,228,1,234,1,240,1,245,1,251,1,0,2,5,2,11,2,16,2,21,2,26,2,30,2,35,2,40,2,44,2,49,2,53,2,58,2,62,2,66,2,70,2,74,2,78,2,82,2,86,2,90,2,94,2,98,2,102,2,105,2,109,2,113,2,116,2,120,2,123,2,127,2,130,2,133,2,137,2,140,2,143,2,147,2,150,2,153,2,156,2,159,2,162,2,165,2,168,2,172,2,174,2,177,2,180,2,183,2,186,2,189,2,192,2,195,2,198,2,200,2,203,2,206,2,208,2,211,2,214,2,216,2,219,2,222,2,224,2,227,2,229,2,232,2,235,2,237,2,240,2,242,2,244,2,247,2,249,2,252,2,254,2,1,3,3,3,5,3,8,3,10,3,12,3,14,3,17,3,19,3,21,3,24,3,26,3,28,3,30,3,32,3,35,3,37,3,39,3,41,3,43,3,45,3,47,3,50,3,52,3,54,3,56,3,58,3,60,3,62,3,64,3,66,3,68,3,70,3,72,3,74,3,76,3,78,3,80,3,82,3,84,3,86,3,88,3,89,3,91,3,93,3,95,3,97,3,99,3,101,3,103,3,104,3,106,3,108,3,110,3,112,3,114,3,115,3,117,3,119,3,121,3,123,3,124,3,126,3,128,3,130,3,131,3,133,3,135,3,136,3,138,3,140,3,142,3,143,3,145,3,147,3,148,3,150,3,152,3,153,3,155,3,157,3,158,3,160,3,161,3,163,3,165,3,166,3,168,3,170,3,171,3,173,3,174,3,176,3,177,3,179,3,181,3,182,3,184,3,185,3,187,3,188,3,190,3,191,3,193,3,194,3,196,3,197,3,199,3,200,3,202,3,203,3,205,3,206,3,208,3,209,3,211,3,212,3,214,3,215,3,217,3,218,3,219,3,221,3,222,3,224,3,225,3,227,3,228,3,229,3,231,3,232,3,234,3,235,3,236,3,238,3,239,3,241,3,242,3,243,3,245,3,246,3,247,3,249,3,250,3,251,3,253,3,254,3,0,4,1,4,2,4,4,4,5,4,6,4,7,4,9,4,10,4,11,4,13,4,14,4,15,4,17,4,18,4,19,4,20,4,22,4,23,4,24,4,26,4,27,4,28,4,29,4,31,4,32,4,33,4,34,4,36,4,37,4,38,4,39,4,41,4,42,4,43,4,44,4,46,4,47,4,48,4,49,4,50,4,52,4,53,4,54,4,55,4,57,4,58,4,59,4,60,4,61,4,62,4,64,4,65,4,66,4,67,4,68,4,70,4,71,4,72,4,73,4,74,4,75,4,77,4,78,4,79,4,80,4,81,4,82,4,83,4,85,4,86,4,87,4,88,4,89,4,90,4,91,4,93,4,94,4,95,4,96,4,97,4,98,4,99,4,100,4,101,4,103,4,104,4,105,4,106,4,107,4,108,4,109,4,110,4,111,4,112,4,114,4,115,4,116,4,117,4,118,4,119,4,120,4,121,4,122,4,123,4,124,4,125,4,126,4,127,4,128,4,130,4,131,4,132,4,133,4,134,4,135,4,136,4,137,4,138,4,139,4,140,4,141,4,142,4,143,4,144,4,145,4,146,4,147,4,148,4,149,4,150,4,151,4,152,4,153,4,154,4,155,4,156,4,157,4,158,4,159,4,160,4,161,4,162,4,163,4,164,4,165,4,166,4,167,4,168,4,169,4,170,4,171,4,172,4,173,4,174,4,175,4,176,4,177,4,178,4,179,4,180,4,181,4,182,4,183,4,184,4,185,4,186,4,187,4,188,4,189,4,190,4,191,4,191,4,192,4,193,4,194,4,195,4,196,4,197,4,198,4,199,4,200,4,201,4,202,4,203,4,204,4,205,4,206,4,206,4,207,4,208,4,209,4,210,4,211,4,212,4,213,4,214,4,215,4,216,4,217,4,218,4,218,4,219,4,220,4,221,4,222,4,223,4,224,4,225,4,226,4,227,4,227,4,228,4,229,4,230,4,231,4,232,4,233,4,234,4,235,4,235,4,236,4,237,4,238,4,239,4,240,4,241,4,242,4,242,4,243,4,244,4,245,4,246,4,247,4,248,4,249,4,249,4,250,4,251,4,252,4,253,4,254,4,255,4,255,4,0,5,1,5,2,5,3,5,4,5,5,5,5,5,6,5,7,5,8,5,9,5,10,5,11,5,0,1,1,2,3,4,4,5,6,6,7,8,8,9,10,11,11,12,13,13,14,15,16,16,17,18,18,19,20,20,21,22,23,23,24,25,25,26,27,28,28,29,30,30,31,32,32,33,34,35,35,36,37,37,38,39,40,40,41,42,42,43,44,44,45,46,47,47,48,49,49,50,51,52,52,53,54,54,55,56,56,57,58,59,59,60,61,61,62,63,64,64,65,66,66,67,68,68,69,70,71,71,72,73,73,74,75,76,76,77,78,78,79,80,80,81,82,83,83,84,85,85,86,87,88,88,89,90,90,91,92,92,93,94,95,95,96,97,97,98,99,100,100,101,102,102,103,104,104,105,106,107,107,108,109,109,110,111,112,112,113,114,114,115,116,116,117,118,119,119,120,121,121,122,123,124,124,125,126,126,127,128,128,129,130,131,131,132,133,133,134,135,136,136,137,138,138,139,140,140,141,142,143,143,144,145,145,146,147,148,148,149,150,150,151,152,152,153,154,155,155,156,157,157,158,159,160,160,161,162,162,163,164,164,165,166,167,167,168,169,169,170,171,172,172,173,174,174,175,176,176,177,178,179,179,180,0,1,3,4,6,7,9,10,11,13,14,16,17,18,20,21,23,24,26,27,28,30,31,33,34,35,37,38,40,41,43,44,45,47,48,50,51,52,54,55,57,58,60,61,62,64,65,67,68,69,71,72,74,75,77,78,79,81,82,84,85,86,88,89,91,92,94,95,96,98,99,101,102,103,105,106,108,109,111,112,113,115,116,118,119,120,122,123,125,126,128,129,130,132,133,135,136,137,139,140,142,143,145,146,147,149,150,152,153,154,156,157,159,160,162,163,164,166,167,169,170,171,173,174,176,177,179,180,181,183,184,186,187,188,190,191,193,194,196,197,198,200,201,203,204,205,207,208,210,211,213,214,215,217,218,220,221,222,224,225,227,228,230,231,232,234,235,237,238,239,241,242,244,245,247,248,249,251,252,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,17,18,24,47,99,99,99,99,18,21,26,66,99,99,99,99,24,26,56,99,99,99,99,99,47,66,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,16,12,14,14,18,24,49,72,11,12,13,17,22,35,64,92,10,14,16,22,37,55,78,95,16,19,24,29,56,64,87,98,24,26,40,51,68,81,103,112,40,58,57,87,109,104,121,100,51,60,69,80,103,113,120,103,61,55,56,62,77,92,101,99,0,64,0,0,197,88,0,0,159,83,0,0,66,75,0,0,0,64,0,0,73,50,0,0,163,34,0,0,168,17,0,0,197,88,0,0,33,123,0,0,252,115,0,0,98,104,0,0,197,88,0,0,191,69,0,0,11,48,0,0,126,24,0,0,159,83,0,0,252,115,0,0,65,109,0,0,84,98,0,0,159,83,0,0,179,65,0,0,65,45,0,0,18,23,0,0,66,75,0,0,98,104,0,0,84,98,0,0,126,88,0,0,66,75,0,0,33,59,0,0,186,40,0,0,195,20,0,0,0,64,0,0,197,88,0,0,159,83,0,0,66,75,0,0,0,64,0,0,73,50,0,0,163,34,0,0,168,17,0,0,73,50,0,0,191,69,0,0,179,65,0,0,33,59,0,0,73,50,0,0,130,39,0,0,55,27,0,0,224,13,0,0,163,34,0,0,11,48,0,0,65,45,0,0,186,40,0,0,163,34,0,0,55,27,0,0,191,18,0,0,142,9,0,0,168,17,0,0,126,24,0,0,18,23,0,0,195,20,0,0,168,17,0,0,224,13,0,0,142,9,0,0,223,4,0,0,117,99,119,115,105,102,100,114,0,0,0,0,0,0,0,0,77,77,0,42,0,0,0,0,73,73,42,0,0,0,0,0,152,50,0,0,0,0,0,0,0,2,1,2,4,4,3,4,7,5,4,4,0,1,2,119,0,1,2,3,17,4,5,33,49,6,18,65,81,7,97,113,19,34,50,129,8,20,66,145,161,177,193,9,35,51,82,240,21,98,114,209,10,22,36,52,225,37,241,23,24,25,26,38,39,40,41,42,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,130,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,226,227,228,229,230,231,232,233,234,242,243,244,245,246,247,248,249,250,0,0,0,0,0,0,0,2,1,3,3,2,4,3,5,5,4,4,0,0,1,125,1,2,3,0,4,17,5,18,33,49,65,6,19,81,97,7,34,113,20,50,129,145,161,8,35,66,177,193,21,82,209,240,36,51,98,114,130,9,10,22,23,24,25,26,37,38,39,40,41,42,52,53,54,55,56,57,58,67,68,69,70,71,72,73,74,83,84,85,86,87,88,89,90,99,100,101,102,103,104,105,106,115,116,117,118,119,120,121,122,131,132,133,134,135,136,137,138,146,147,148,149,150,151,152,153,154,162,163,164,165,166,167,168,169,170,178,179,180,181,182,183,184,185,186,194,195,196,197,198,199,200,201,202,210,211,212,213,214,215,216,217,218,225,226,227,228,229,230,231,232,233,234,241,242,243,244,245,246,247,248,249,250,0,0,0,0,0,0,0,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,0,1,5,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,0,0,0,0,255,216,255,224,0,16,74,70,73,70,0,1,2,0,0,1,0,1,0,0,0,0,0,0,160,53,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function _isspace(chr) {
      return (chr == 32) || (chr >= 9 && chr <= 13);
    }
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:35,EIDRM:36,ECHRNG:37,EL2NSYNC:38,EL3HLT:39,EL3RST:40,ELNRNG:41,EUNATCH:42,ENOCSI:43,EL2HLT:44,EDEADLK:45,ENOLCK:46,EBADE:50,EBADR:51,EXFULL:52,ENOANO:53,EBADRQC:54,EBADSLT:55,EDEADLOCK:56,EBFONT:57,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:74,ELBIN:75,EDOTDOT:76,EBADMSG:77,EFTYPE:79,ENOTUNIQ:80,EBADFD:81,EREMCHG:82,ELIBACC:83,ELIBBAD:84,ELIBSCN:85,ELIBMAX:86,ELIBEXEC:87,ENOSYS:88,ENMFILE:89,ENOTEMPTY:90,ENAMETOOLONG:91,ELOOP:92,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:106,EPROTOTYPE:107,ENOTSOCK:108,ENOPROTOOPT:109,ESHUTDOWN:110,ECONNREFUSED:111,EADDRINUSE:112,ECONNABORTED:113,ENETUNREACH:114,ENETDOWN:115,ETIMEDOUT:116,EHOSTDOWN:117,EHOSTUNREACH:118,EINPROGRESS:119,EALREADY:120,EDESTADDRREQ:121,EMSGSIZE:122,EPROTONOSUPPORT:123,ESOCKTNOSUPPORT:124,EADDRNOTAVAIL:125,ENETRESET:126,EISCONN:127,ENOTCONN:128,ETOOMANYREFS:129,EPROCLIM:130,EUSERS:131,EDQUOT:132,ESTALE:133,ENOTSUP:134,ENOMEDIUM:135,ENOSHARE:136,ECASECLASH:137,EILSEQ:138,EOVERFLOW:139,ECANCELED:140,ENOTRECOVERABLE:141,EOWNERDEAD:142,ESTRPIPE:143};function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"](((Math.min((+(Math.floor((ret)/(+(4294967296))))), (+(4294967295))))|0)>>>0),ret>>>0)|0);
      }
      return ret;
    }function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }function _atoi(ptr) {
      return _strtol(ptr, null, 10);
    }
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"No message of desired type",36:"Identifier removed",37:"Channel number out of range",38:"Level 2 not synchronized",39:"Level 3 halted",40:"Level 3 reset",41:"Link number out of range",42:"Protocol driver not attached",43:"No CSI structure available",44:"Level 2 halted",45:"Deadlock condition",46:"No record locks available",50:"Invalid exchange",51:"Invalid request descriptor",52:"Exchange full",53:"No anode",54:"Invalid request code",55:"Invalid slot",56:"File locking deadlock error",57:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",74:"Multihop attempted",75:"Inode is remote (not really error)",76:"Cross mount point (not really error)",77:"Trying to read unreadable message",79:"Inappropriate file type or format",80:"Given log. name not unique",81:"f.d. invalid for this operation",82:"Remote address changed",83:"Can\t access a needed shared lib",84:"Accessing a corrupted shared lib",85:".lib section in a.out corrupted",86:"Attempting to link in too many libs",87:"Attempting to exec a shared library",88:"Function not implemented",89:"No more files",90:"Directory not empty",91:"File or path name too long",92:"Too many symbolic links",95:"Operation not supported on transport endpoint",96:"Protocol family not supported",104:"Connection reset by peer",105:"No buffer space available",106:"Address family not supported by protocol family",107:"Protocol wrong type for socket",108:"Socket operation on non-socket",109:"Protocol not available",110:"Can't send after socket shutdown",111:"Connection refused",112:"Address already in use",113:"Connection aborted",114:"Network is unreachable",115:"Network interface is not configured",116:"Connection timed out",117:"Host is down",118:"Host is unreachable",119:"Connection already in progress",120:"Socket already connected",121:"Destination address required",122:"Message too long",123:"Unknown protocol",124:"Socket type not supported",125:"Address not available",126:"ENETRESET",127:"Socket is already connected",128:"Socket is not connected",129:"TOOMANYREFS",130:"EPROCLIM",131:"EUSERS",132:"EDQUOT",133:"ESTALE",134:"Not supported",135:"No medium (in tape drive)",136:"No such host or network path",137:"Filename exists with different case",138:"EILSEQ",139:"Value too large for defined data type",140:"Operation canceled",141:"State not recoverable",142:"Previous owner died",143:"Streams pipe error"};
  var VFS={mount:function (type, opts, mountpoint) {
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          root: null
        };
        var lookup;
        if (mountpoint) {
          lookup = FS.lookupPath(mountpoint, { follow: false });
        }
        // create a root node for the fs
        var root = type.mount(mount);
        root.mount = mount;
        mount.root = root;
        // assign the mount info to the mountpoint's node
        if (lookup) {
          lookup.node.mount = mount;
          lookup.node.mounted = true;
          // compatibility update FS.root if we mount to /
          if (mountpoint === '/') {
            FS.root = mount.root;
          }
        }
        return root;
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode &= 4095;
        mode |= 0100000;
        return VFS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode &= 511 | 0001000;
        mode |= 0040000;
        return VFS.mknod(path, mode, 0);
      },mkdev:function (path, mode, dev) {
        mode |= 0020000;
        return VFS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(ERRNO_CODES.EXDEV);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
        }
        // see if the new path alreay exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to changews
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_node.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // POSIX says unlink should set EPERM, not EISDIR
          if (err === ERRNO_CODES.EISDIR) err = ERRNO_CODES.EPERM;
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(ERRNO_CODES.EBUSY);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },readlink:function (path) {
        var lookup = FS.lookupPath(path, { follow: false });
        var link = lookup.node;
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        return link.node_ops.readlink(link);
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return VFS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        VFS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        VFS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        VFS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        VFS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if ((stream.flags & 3) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        VFS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        path = PATH.normalize(path);
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        if ((flags & 512)) {
          mode = (mode & 4095) | 0100000;
        } else {
          mode = 0;
        }
        var node;
        try {
          var lookup = FS.lookupPath(path, {
            follow: !(flags & 0200000)
          });
          node = lookup.node;
          path = lookup.path;
        } catch (e) {
          // ignore
        }
        // perhaps we need to create the node
        if ((flags & 512)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 2048)) {
              throw new FS.ErrnoError(ERRNO_CODES.EEXIST);
            }
          } else {
            // node doesn't exist, try to create it
            node = VFS.mknod(path, mode, 0);
          }
        }
        if (!node) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~1024;
        }
        // check permissions
        var err = FS.mayOpen(node, flags);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // do truncation if necessary
        if ((flags & 1024)) {
          VFS.truncate(node, 0);
        }
        // register the stream with the filesystem
        var stream = FS.createStream({
          path: path,
          node: node,
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        return stream;
      },close:function (stream) {
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
      },llseek:function (stream, offset, whence) {
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        return stream.stream_ops.llseek(stream, offset, whence);
      },readdir:function (stream) {
        if (!stream.stream_ops.readdir) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);
        }
        return stream.stream_ops.readdir(stream);
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 3) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 3) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.EISDIR);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        var seeking = true;
        if (typeof position === 'undefined') {
          position = stream.position;
          seeking = false;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }
        if (stream.flags & 8) {
          // seek to the end before writing in append mode
          VFS.llseek(stream, 0, 2);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
        }
        if ((stream.flags & 3) === 0) {
          throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write acccess
        if ((stream.flags & 3) === 1) {
          throw new FS.ErrnoError(ERRNO_CODES.EACCES);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.errnoError(ERRNO_CODES.ENODEV);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      }};
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up--; up) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path, ext) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var f = PATH.splitPath(path)[2];
        if (ext && f.substr(-1 * ext.length) === ext) {
          f = f.substr(0, f.length - ext.length);
        }
        return f;
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.filter(function(p, index) {
          if (typeof p !== 'string') {
            throw new TypeError('Arguments to path.join must be strings');
          }
          return p;
        }).join('/'));
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            continue;
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  var TTY={ttys:[],register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          // this wouldn't be required if the library wasn't eval'd at first...
          if (!TTY.utf8) {
            TTY.utf8 = new Runtime.UTF8Processor();
          }
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          if (stream.tty.output.length) {
            stream.tty.ops.put_char(stream.tty, 10);
          }
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(ERRNO_CODES.ENXIO);
          }
          for (var i = 0; i < length; i++) {
            try {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            } catch (e) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              if (process.stdin.destroyed) {
                return undefined;
              }
              result = process.stdin.read();
            } else if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['print'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            Module['printErr'](tty.output.join(''));
            tty.output = [];
          } else {
            tty.output.push(TTY.utf8.processCChar(val));
          }
        }}};
  var MEMFS={mount:function (mount) {
        return MEMFS.create_node(null, '/', 0040000 | 0777, 0);
      },create_node:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(ERRNO_CODES.EPERM);
        }
        var node = FS.createNode(parent, name, mode, dev);
        node.node_ops = MEMFS.node_ops;
        if (FS.isDir(node.mode)) {
          node.stream_ops = MEMFS.stream_ops;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.stream_ops = MEMFS.stream_ops;
          node.contents = [];
        } else if (FS.isLink(node.mode)) {
          node.stream_ops = MEMFS.stream_ops;
        } else if (FS.isChrdev(node.mode)) {
          node.stream_ops = FS.chrdev_stream_ops;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.contents.length;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            var contents = node.contents;
            if (attr.size < contents.length) contents.length = attr.size;
            else while (attr.size > contents.length) contents.push(0);
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(ERRNO_CODES.ENOENT);
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.create_node(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);
          }
          delete parent.contents[name];
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.create_node(parent, newname, 0777 | 0120000, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          return node.link;
        }},stream_ops:{open:function (stream) {
          if (FS.isDir(stream.node.mode)) {
            // cache off the directory entries when open'd
            var entries = ['.', '..']
            for (var key in stream.node.contents) {
              if (!stream.node.contents.hasOwnProperty(key)) {
                continue;
              }
              entries.push(key);
            }
            stream.entries = entries;
          }
        },read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          var size = Math.min(contents.length - position, length);
          if (contents.subarray) { // typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else
          {
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          }
          return size;
        },write:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          while (contents.length < position) contents.push(0);
          for (var i = 0; i < length; i++) {
            contents[position + i] = buffer[offset + i];
          }
          stream.node.timestamp = Date.now();
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.contents.length;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(ERRNO_CODES.EINVAL);
          }
          stream.ungotten = [];
          stream.position = position;
          return position;
        },readdir:function (stream) {
          return stream.entries;
        },allocate:function (stream, offset, length) {
          var contents = stream.node.contents;
          var limit = offset + length;
          while (limit > contents.length) contents.push(0);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(ERRNO_CODES.ENODEV);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if (!(flags & 0x02)) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            assert(contents.buffer === buffer || contents.buffer === buffer.buffer);
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < contents.length) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        }}};
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      // we don't currently perform any user-space buffering of data
    }var FS={root:null,nodes:[null],devices:[null],streams:[null],nextInode:1,name_tablecurrentPath:"/",initialized:false,ignorePermissions:true,ErrnoError:function (errno) {
        this.errno = errno;
        for (var key in ERRNO_CODES) {
          if (ERRNO_CODES[key] === errno) {
            this.code = key;
            break;
          }
        }
        this.message = ERRNO_MESSAGES[errno];
      },handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + new Error().stack;
        return ___setErrNo(e.errno);
      },hashName:function (parentid, name) {
        var hash = 0;
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return (parentid + hash) % FS.name_table.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.name_table[hash];
        FS.name_table[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.name_table[hash] === node) {
          FS.name_table[hash] = node.name_next;
        } else {
          var current = FS.name_table[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.name_table[hash]; node; node = node.name_next) {
          if (node.parent.id === parent.id && node.name === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return VFS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        var node = {
          id: FS.nextInode++,
          name: name,
          mode: mode,
          node_ops: {},
          stream_ops: {},
          rdev: rdev,
          parent: null,
          mount: null
        };
        if (!parent) {
          parent = node;  // root node sets parent to itself
        }
        node.parent = parent;
        node.mount = parent.mount;
        // compatibility
        var readMode = 292 | 73;
        var writeMode = 146;
        Object.defineProperty(node, 'read', {
          get: function() { return (node.mode & readMode) === readMode; },
          set: function(val) { val ? node.mode |= readMode : node.mode &= ~readMode; }
        });
        Object.defineProperty(node, 'write', {
          get: function() { return (node.mode & writeMode) === writeMode; },
          set: function(val) { val ? node.mode |= writeMode : node.mode &= ~writeMode; }
        });
        // TODO add:
        // isFolder
        // isDevice
        FS.hashAddNode(node);
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return node.mounted;
      },isFile:function (mode) {
        return (mode & 0170000) === 0100000;
      },isDir:function (mode) {
        return (mode & 0170000) === 0040000;
      },isLink:function (mode) {
        return (mode & 0170000) === 0120000;
      },isChrdev:function (mode) {
        return (mode & 0170000) === 0020000;
      },isBlkdev:function (mode) {
        return (mode & 0170000) === 0060000;
      },isFIFO:function (mode) {
        return (mode & 0170000) === 0010000;
      },cwd:function () {
        return FS.currentPath;
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.currentPath, path);
        opts = opts || { recurse_count: 0 };
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
        }
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
        // start at the root
        var current = FS.root;
        var current_path = '/';
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join(current_path, parts[i]);
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            current = current.mount.root;
          }
          // follow symlinks
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = VFS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(ERRNO_CODES.ELOOP);
              }
            }
          }
        }
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            return path ? PATH.join(node.mount.mountpoint, path) : node.mount.mountpoint;
          }
          path = path ? PATH.join(node.name, path) : node.name;
          node = node.parent;
        }
      },flagModes:{"r":0,"rs":8192,"r+":2,"w":1537,"wx":3585,"xw":3585,"w+":1538,"wx+":3586,"xw+":3586,"a":521,"ax":2569,"xa":2569,"a+":522,"ax+":2570,"xa+":2570},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var accmode = flag & 3;
        var perms = ['r', 'w', 'rw'][accmode];
        if ((flag & 1024)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return ERRNO_CODES.EACCES;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return ERRNO_CODES.EACCES;
        }
        return 0;
      },mayLookup:function (dir) {
        return FS.nodePermissions(dir, 'x');
      },mayMknod:function (mode) {
        switch (mode & 0170000) {
          case 0100000:
          case 0020000:
          case 0060000:
          case 0010000:
          case 0140000:
            return 0;
          default:
            return ERRNO_CODES.EINVAL;
        }
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return ERRNO_CODES.EEXIST;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return ERRNO_CODES.ENOTDIR;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.currentPath) {
            return ERRNO_CODES.EBUSY;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return ERRNO_CODES.ENOENT;
        }
        if (FS.isLink(node.mode)) {
          return ERRNO_CODES.ELOOP;
        } else if (FS.isDir(node.mode)) {
          if ((flags & 3) !== 0 ||  // opening for write
              (flags & 1024)) {
            return ERRNO_CODES.EISDIR;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 1;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(ERRNO_CODES.EMFILE);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        // compatibility
        Object.defineProperty(stream, 'object', {
          get: function() { return stream.node; },
          set: function(val) { stream.node = val; }
        });
        Object.defineProperty(stream, 'isRead', {
          get: function() { return (stream.flags & 3) !== 1; }
        });
        Object.defineProperty(stream, 'isWrite', {
          get: function() { return (stream.flags & 3) !== 0; }
        });
        Object.defineProperty(stream, 'isAppend', {
          get: function() { return (stream.flags & 8); }
        });
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },createDefaultDirectories:function () {
        VFS.mkdir('/tmp', 0777);
      },createDefaultDevices:function () {
        // create /dev
        VFS.mkdir('/dev', 0777);
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function() { return 0; }
        });
        VFS.mkdev('/dev/null', 0666, FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        VFS.mkdev('/dev/tty', 0666, FS.makedev(5, 0));
        VFS.mkdev('/dev/tty1', 0666, FS.makedev(6, 0));
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        VFS.mkdir('/dev/shm', 0777);
        VFS.mkdir('/dev/shm/tmp', 0777);
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          VFS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          VFS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          VFS.symlink('/dev/tty1', '/dev/stderr');
        }
        // open default streams for the stdin, stdout and stderr devices
        var stdin = VFS.open('/dev/stdin', 'r');
        HEAP32[((_stdin)>>2)]=stdin.fd;
        assert(stdin.fd === 1, 'invalid handle for stdin (' + stdin.fd + ')');
        var stdout = VFS.open('/dev/stdout', 'w');
        HEAP32[((_stdout)>>2)]=stdout.fd;
        assert(stdout.fd === 2, 'invalid handle for stdout (' + stdout.fd + ')');
        var stderr = VFS.open('/dev/stderr', 'w');
        HEAP32[((_stderr)>>2)]=stderr.fd;
        assert(stderr.fd === 3, 'invalid handle for stderr (' + stderr.fd + ')');
      },staticInit:function () {
        FS.root = FS.createNode(null, '/', 0040000 | 0777, 0);
        VFS.mount(MEMFS, {}, '/');
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          VFS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return VFS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join(parent, part);
          try {
            VFS.mkdir(current, 0777);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return VFS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        var node = VFS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          VFS.chmod(path, mode | 146);
          var stream = VFS.open(path, 'w');
          VFS.write(stream, data, 0, data.length, 0);
          VFS.close(stream);
          VFS.chmod(path, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = input && output ? 0777 : (input ? 0333 : 0555);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(ERRNO_CODES.EIO);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return VFS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return VFS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(ERRNO_CODES.EIO);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function(stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          var size = Math.min(contents.length - position, length);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.init();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      }};
  function _send(fd, buf, len, flags) {
      var info = FS.getStream(fd);
      if (!info) return -1;
      info.sender(HEAPU8.subarray(buf, buf+len));
      return len;
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return VFS.write(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (stream && ('socket' in stream)) {
        return _send(fildes, buf, nbyte, 0);
      }
      try {
        var slab = HEAP8;
        return VFS.write(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (flagAlwaysSigned) {
                if (currArg < 0) {
                  prefix = '-' + prefix;
                } else {
                  prefix = '+' + prefix;
                }
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (flagAlwaysSigned && currArg >= 0) {
                  argText = '+' + argText;
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i32=_memset;
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  var _fabs=Math.abs;
  function ___gxx_personality_v0() {
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }var ___cxa_atexit=_atexit;
  Module["_strncpy"] = _strncpy;
  Module["_memcmp"] = _memcmp;
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  Module["_tolower"] = _tolower;
  function _llvm_umul_with_overflow_i32(x, y) {
      x = x>>>0;
      y = y>>>0;
      return ((asm["setTempRet0"](x*y > 4294967295),(x*y)>>>0)|0);
    }
  var ___dirent_struct_layout={__size__:1040,d_ino:0,d_name:4,d_off:1028,d_reclen:1032,d_type:1036};function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      // NOTE: This implementation tries to mimic glibc rather than strictly
      // following the POSIX standard.
      var mode = HEAP32[((varargs)>>2)];
      path = Pointer_stringify(path);
      try {
        var stream = VFS.open(path, oflag, mode);
        return stream.fd;
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 1024;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 8;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _recv(fd, buf, len, flags) {
      var info = FS.getStream(fd);
      if (!info) return -1;
      if (!info.hasData()) {
        ___setErrNo(ERRNO_CODES.EAGAIN); // no data, and all sockets are nonblocking, so this is the right behavior
        return -1;
      }
      var buffer = info.inQueue.shift();
      if (len < buffer.length) {
        if (info.stream) {
          // This is tcp (reliable), so if not all was read, keep it
          info.inQueue.unshift(buffer.subarray(len));
        }
        buffer = buffer.subarray(0, len);
      }
      HEAPU8.set(buffer, buf);
      return buffer.length;
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        var slab = HEAP8;
        return VFS.read(stream, slab, buf, nbyte, offset);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      if (stream && ('socket' in stream)) {
        return _recv(fildes, buf, nbyte, 0);
      }
      try {
        var slab = HEAP8;
        return VFS.read(stream, slab, buf, nbyte);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) {
        return 0;
      }
      var bytesRead = 0;
      var streamObj = FS.getStream(stream);
      while (streamObj.ungotten.length && bytesToRead > 0) {
        HEAP8[((ptr++)|0)]=streamObj.ungotten.pop()
        bytesToRead--;
        bytesRead++;
      }
      var err = _read(stream, ptr, bytesToRead);
      if (err == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      }
      bytesRead += err;
      if (bytesRead < bytesToRead) streamObj.eof = true;
      return Math.floor(bytesRead / size);
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        VFS.close(stream);
        return 0;
      } catch (e) {
        FS.handleFSError(e);;
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      var stream = FS.getStream(fildes);
      if (stream) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }
  function _isalnum(chr) {
      return (chr >= 48 && chr <= 57) ||
             (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }function __ZSt9terminatev() {
      _exit(-1234);
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        var streamObj = FS.getStream(stream);
        if (streamObj) streamObj.error = true;
        return -1;
      } else {
        return chr;
      }
    }function _putchar(c) {
      // int putchar(int c);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/putchar.html
      return _fputc(c, HEAP32[((_stdout)>>2)]);
    } 
  Module["_saveSetjmp"] = _saveSetjmp;
  Module["_testSetjmp"] = _testSetjmp;var _setjmp=undefined;
  Module["_memmove"] = _memmove;var _llvm_memmove_p0i8_p0i8_i32=_memmove;
  function _longjmp(env, value) {
      asm['setThrew'](env, value || 1);
      throw 'longjmp';
    }
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  Module["_strcpy"] = _strcpy;
  function _isdigit(chr) {
      return chr >= 48 && chr <= 57;
    }
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      var stream = FS.getStream(fildes);
      if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      try {
        return VFS.llseek(stream, offset, whence);
      } catch (e) {
        FS.handleFSError(e);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      }
      stream = FS.getStream(stream);
      stream.eof = false;
      return 0;
    }
  var _abs=Math.abs;
  function _pthread_key_create(key, destructor) {
      if (!_pthread_key_create.keys) _pthread_key_create.keys = {};
      // values start at 0
      _pthread_key_create.keys[key] = 0;
    }
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _isalpha(chr) {
      return (chr >= 97 && chr <= 122) ||
             (chr >= 65 && chr <= 90);
    }
  var _llvm_memset_p0i8_i64=_memset;
  function _abort() {
      Module['abort']();
    }
  function ___errno_location() {
      return ___errno_state;
    }var ___errno=___errno_location;
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
        case 10: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }
  function _llvm_eh_exception() {
      return HEAP32[((_llvm_eh_exception.buf)>>2)];
    }
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  function ___cxa_is_number_type(type) {
      var isNumber = false;
      try { if (type == __ZTIi) isNumber = true } catch(e){}
      try { if (type == __ZTIj) isNumber = true } catch(e){}
      try { if (type == __ZTIl) isNumber = true } catch(e){}
      try { if (type == __ZTIm) isNumber = true } catch(e){}
      try { if (type == __ZTIx) isNumber = true } catch(e){}
      try { if (type == __ZTIy) isNumber = true } catch(e){}
      try { if (type == __ZTIf) isNumber = true } catch(e){}
      try { if (type == __ZTId) isNumber = true } catch(e){}
      try { if (type == __ZTIe) isNumber = true } catch(e){}
      try { if (type == __ZTIc) isNumber = true } catch(e){}
      try { if (type == __ZTIa) isNumber = true } catch(e){}
      try { if (type == __ZTIh) isNumber = true } catch(e){}
      try { if (type == __ZTIs) isNumber = true } catch(e){}
      try { if (type == __ZTIt) isNumber = true } catch(e){}
      return isNumber;
    }function ___cxa_does_inherit(definiteType, possibilityType, possibility) {
      if (possibility == 0) return false;
      if (possibilityType == 0 || possibilityType == definiteType)
        return true;
      var possibility_type_info;
      if (___cxa_is_number_type(possibilityType)) {
        possibility_type_info = possibilityType;
      } else {
        var possibility_type_infoAddr = HEAP32[((possibilityType)>>2)] - 8;
        possibility_type_info = HEAP32[((possibility_type_infoAddr)>>2)];
      }
      switch (possibility_type_info) {
      case 0: // possibility is a pointer
        // See if definite type is a pointer
        var definite_type_infoAddr = HEAP32[((definiteType)>>2)] - 8;
        var definite_type_info = HEAP32[((definite_type_infoAddr)>>2)];
        if (definite_type_info == 0) {
          // Also a pointer; compare base types of pointers
          var defPointerBaseAddr = definiteType+8;
          var defPointerBaseType = HEAP32[((defPointerBaseAddr)>>2)];
          var possPointerBaseAddr = possibilityType+8;
          var possPointerBaseType = HEAP32[((possPointerBaseAddr)>>2)];
          return ___cxa_does_inherit(defPointerBaseType, possPointerBaseType, possibility);
        } else
          return false; // one pointer and one non-pointer
      case 1: // class with no base class
        return false;
      case 2: // class with base class
        var parentTypeAddr = possibilityType + 8;
        var parentType = HEAP32[((parentTypeAddr)>>2)];
        return ___cxa_does_inherit(definiteType, parentType, possibility);
      default:
        return false; // some unencountered type
      }
    }
  function ___resumeException(ptr) {
      if (HEAP32[((_llvm_eh_exception.buf)>>2)] == 0) HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr;
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }function ___cxa_find_matching_catch(thrown, throwntype) {
      if (thrown == -1) thrown = HEAP32[((_llvm_eh_exception.buf)>>2)];
      if (throwntype == -1) throwntype = HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)];
      var typeArray = Array.prototype.slice.call(arguments, 2);
      // If throwntype is a pointer, this means a pointer has been
      // thrown. When a pointer is thrown, actually what's thrown
      // is a pointer to the pointer. We'll dereference it.
      if (throwntype != 0 && !___cxa_is_number_type(throwntype)) {
        var throwntypeInfoAddr= HEAP32[((throwntype)>>2)] - 8;
        var throwntypeInfo= HEAP32[((throwntypeInfoAddr)>>2)];
        if (throwntypeInfo == 0)
          thrown = HEAP32[((thrown)>>2)];
      }
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (___cxa_does_inherit(typeArray[i], throwntype, thrown))
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      if (!___cxa_throw.initialized) {
        try {
          HEAP32[((__ZTVN10__cxxabiv119__pointer_type_infoE)>>2)]=0; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv117__class_type_infoE)>>2)]=1; // Workaround for libcxxabi integration bug
        } catch(e){}
        try {
          HEAP32[((__ZTVN10__cxxabiv120__si_class_type_infoE)>>2)]=2; // Workaround for libcxxabi integration bug
        } catch(e){}
        ___cxa_throw.initialized = true;
      }
      HEAP32[((_llvm_eh_exception.buf)>>2)]=ptr
      HEAP32[(((_llvm_eh_exception.buf)+(4))>>2)]=type
      HEAP32[(((_llvm_eh_exception.buf)+(8))>>2)]=destructor
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";;
    }
  function ___cxa_call_unexpected(exception) {
      Module.printErr('Unexpected exception thrown, this is not properly supported - aborting');
      ABORT = true;
      throw exception;
    }
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: Browser.getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: Browser.getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: Browser.getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getMimetype:function (name) {
        return {
          'jpg': 'image/jpeg',
          'jpeg': 'image/jpeg',
          'png': 'image/png',
          'bmp': 'image/bmp',
          'ogg': 'audio/ogg',
          'wav': 'audio/wav',
          'mp3': 'audio/mpeg'
        }[name.substr(name.lastIndexOf('.')+1)];
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          var rect = Module["canvas"].getBoundingClientRect();
          var x = event.pageX - (window.scrollX + rect.left);
          var y = event.pageY - (window.scrollY + rect.top);
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
FS.staticInit();__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_llvm_eh_exception.buf = allocate(12, "void*", ALLOC_STATIC);
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7) {
  try {
    Module["dynCall_viiiiiii"](index,a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_i(index) {
  try {
    return Module["dynCall_i"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14) {
  try {
    return Module["dynCall_iiiiiiiiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiiiffi(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  try {
    return Module["dynCall_iiiiiiffi"](index,a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var __ZTVN10__cxxabiv117__class_type_infoE=env.__ZTVN10__cxxabiv117__class_type_infoE|0;
  var __ZTVN10__cxxabiv120__si_class_type_infoE=env.__ZTVN10__cxxabiv120__si_class_type_infoE|0;
  var _stderr=env._stderr|0;
  var ___dso_handle=env.___dso_handle|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;
  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_iiiiiiii=env.invoke_iiiiiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_i=env.invoke_i;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_ii=env.invoke_ii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiiiiiii=env.invoke_iiiiiiiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iiiiiiiiiiiiiii=env.invoke_iiiiiiiiiiiiiii;
  var invoke_iiiiiiffi=env.invoke_iiiiiiffi;
  var invoke_viiii=env.invoke_viiii;
  var _strncmp=env._strncmp;
  var _open=env._open;
  var _abs=env._abs;
  var _snprintf=env._snprintf;
  var _lseek=env._lseek;
  var ___cxa_throw=env.___cxa_throw;
  var _fclose=env._fclose;
  var _atexit=env._atexit;
  var _isdigit=env._isdigit;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var _fprintf=env._fprintf;
  var _llvm_eh_exception=env._llvm_eh_exception;
  var _printf=env._printf;
  var _close=env._close;
  var _pread=env._pread;
  var _fflush=env._fflush;
  var _fopen=env._fopen;
  var __reallyNegative=env.__reallyNegative;
  var _strtol=env._strtol;
  var _sysconf=env._sysconf;
  var _fabs=env._fabs;
  var _abort=env._abort;
  var ___setErrNo=env.___setErrNo;
  var _fwrite=env._fwrite;
  var _fseek=env._fseek;
  var _send=env._send;
  var _write=env._write;
  var _fputs=env._fputs;
  var _llvm_umul_with_overflow_i32=env._llvm_umul_with_overflow_i32;
  var _exit=env._exit;
  var _sprintf=env._sprintf;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var _isspace=env._isspace;
  var _strchr=env._strchr;
  var _fread=env._fread;
  var _longjmp=env._longjmp;
  var _isalpha=env._isalpha;
  var _fputc=env._fputc;
  var _read=env._read;
  var ___cxa_is_number_type=env.___cxa_is_number_type;
  var _time=env._time;
  var __formatString=env.__formatString;
  var ___cxa_does_inherit=env.___cxa_does_inherit;
  var __ZSt9terminatev=env.__ZSt9terminatev;
  var _atoi=env._atoi;
  var _recv=env._recv;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _pwrite=env._pwrite;
  var _putchar=env._putchar;
  var _isalnum=env._isalnum;
  var _fsync=env._fsync;
  var ___errno_location=env.___errno_location;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___cxa_call_unexpected=env.___cxa_call_unexpected;
  var _sbrk=env._sbrk;
  var __parseInt=env.__parseInt;
  var _pthread_key_create=env._pthread_key_create;
  var __exit=env.__exit;
  var ___resumeException=env.___resumeException;
  var _strcmp=env._strcmp;
// EMSCRIPTEN_START_FUNCS
function stackAlloc(size){size=size|0;var ret=0;ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+7>>3<<3;return ret|0}function stackSave(){return STACKTOP|0}function stackRestore(top){top=top|0;STACKTOP=top}function setThrew(threw,value){threw=threw|0;value=value|0;if((__THREW__|0)==0){__THREW__=threw;threwValue=value}}function copyTempFloat(ptr){ptr=ptr|0;HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1|0]=HEAP8[ptr+1|0];HEAP8[tempDoublePtr+2|0]=HEAP8[ptr+2|0];HEAP8[tempDoublePtr+3|0]=HEAP8[ptr+3|0]}function copyTempDouble(ptr){ptr=ptr|0;HEAP8[tempDoublePtr]=HEAP8[ptr];HEAP8[tempDoublePtr+1|0]=HEAP8[ptr+1|0];HEAP8[tempDoublePtr+2|0]=HEAP8[ptr+2|0];HEAP8[tempDoublePtr+3|0]=HEAP8[ptr+3|0];HEAP8[tempDoublePtr+4|0]=HEAP8[ptr+4|0];HEAP8[tempDoublePtr+5|0]=HEAP8[ptr+5|0];HEAP8[tempDoublePtr+6|0]=HEAP8[ptr+6|0];HEAP8[tempDoublePtr+7|0]=HEAP8[ptr+7|0]}function setTempRet0(value){value=value|0;tempRet0=value}function setTempRet1(value){value=value|0;tempRet1=value}function setTempRet2(value){value=value|0;tempRet2=value}function setTempRet3(value){value=value|0;tempRet3=value}function setTempRet4(value){value=value|0;tempRet4=value}function setTempRet5(value){value=value|0;tempRet5=value}function setTempRet6(value){value=value|0;tempRet6=value}function setTempRet7(value){value=value|0;tempRet7=value}function setTempRet8(value){value=value|0;tempRet8=value}function setTempRet9(value){value=value|0;tempRet9=value}function runPostSets(){HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+8>>2]=832;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+12>>2]=448;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+16>>2]=194;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+20>>2]=518;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+24>>2]=260;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+28>>2]=98;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+32>>2]=320;HEAP32[__ZTVN10__cxxabiv120__si_class_type_infoE+36>>2]=358;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+8>>2]=832;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+12>>2]=826;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+16>>2]=194;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+20>>2]=518;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+24>>2]=260;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+28>>2]=676;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+32>>2]=354;HEAP32[__ZTVN10__cxxabiv117__class_type_infoE+36>>2]=534;HEAP32[5100]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5102]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5104]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5108]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5112]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5116]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5120]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5124]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5128]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5132]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5136]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5140]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5144]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5146]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5148]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5152]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5156]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5160]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5164]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5168]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5172]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5176]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5180]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5184]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5188]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5192]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5196]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5200]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5204]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5208]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5212]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5214]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5218]=__ZTVN10__cxxabiv120__si_class_type_infoE+8;HEAP32[5222]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5224]=__ZTVN10__cxxabiv117__class_type_infoE+8;HEAP32[5226]=__ZTVN10__cxxabiv117__class_type_infoE+8}function _cvSize($agg_result,$width,$height){$agg_result=$agg_result|0;$width=$width|0;$height=$height|0;HEAP32[$agg_result>>2]=$width;HEAP32[$agg_result+4>>2]=$height;return}function _main($argc,$argv){$argc=$argc|0;$argv=$argv|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$8=0,$10=0,$12=0,$13=0,$14=0,$15=0,$16=0,$18=0,$21=0,$24=0,$27=0,$30=0,$33=0,$36=0,$37=0,$38=0,$39=0,$i_043=0,$j_042=0,$sum_041=0.0,$j_140=0,$sum_139=0.0,$47=0.0,$48=0,$sum_1_lcssa=0.0,$50=0,$sum_0_lcssa=0.0,$52=0.0,$54=0.0,$_sink=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+64|0;label=1;while(1)switch(label|0){case 1:$1=sp|0;$2=sp+8|0;$3=sp+16|0;$4=sp+24|0;$5=sp+32|0;$6=_cvLoadImage(16136,1)|0;$8=HEAP32[$6+40>>2]|0;$10=HEAP32[$6+44>>2]|0;$12=HEAP32[$6+16>>2]|0;_cvSize($1,$8,$10);$13=_cvCreateImage($1,$12,3)|0;_cvSize($2,$8,$10);$14=_cvCreateImage($2,$12,1)|0;_cvSize($3,$8,$10);$15=_cvCreateImage($3,$12,1)|0;_cvSize($4,$8,$10);$16=_cvCreateImage($4,$12,1)|0;$18=$13;_cvCvtColor($6,$18,41);$21=$16;_cvSplit($18,$14,$15,$21,0);$24=_atoi(HEAP32[$argv+4>>2]|0)|0;$27=_atoi(HEAP32[$argv+8>>2]|0)|0;$30=_atoi(HEAP32[$argv+12>>2]|0)|0;$33=_atoi(HEAP32[$argv+16>>2]|0)|0;$36=_atoi(HEAP32[$argv+20>>2]|0)|0;$37=$27-$30|0;$38=$30+$27|0;$39=$30+$24|0;if(($37|0)<($38|0)){label=2;break}else{$sum_0_lcssa=0.0;label=6;break};case 2:$sum_041=0.0;$j_042=$24-$30|0;$i_043=$37;label=3;break;case 3:if(($j_042|0)<($39|0)){$sum_139=$sum_041;$j_140=$j_042;label=4;break}else{$sum_1_lcssa=$sum_041;label=5;break};case 4:_cvGet2D($5,$21,$i_043,$j_140);$47=$sum_139+ +HEAPF64[$5>>3];$48=$j_140+1|0;if(($48|0)<($39|0)){$sum_139=$47;$j_140=$48;label=4;break}else{$sum_1_lcssa=$47;label=5;break};case 5:$50=$i_043+1|0;if(($50|0)<($38|0)){$sum_041=$sum_1_lcssa;$j_042=15;$i_043=$50;label=3;break}else{$sum_0_lcssa=$sum_1_lcssa;label=6;break};case 6:$52=$sum_0_lcssa/100.0;$54=+($33|0);if(($36|0)==0){label=8;break}else{label=7;break};case 7:$_sink=$52>$54;label=9;break;case 8:$_sink=+($52<$54|0)!=0.0;label=9;break;case 9:_printf(16120,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$_sink?12472:11648,tempInt)|0)|0;_printf(10736,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAPF64[tempInt>>3]=$52,tempInt)|0)|0;STACKTOP=sp;return 0}return 0}function _cvCvtColor($srcarr,$dstarr,$code){$srcarr=$srcarr|0;$dstarr=$dstarr|0;$code=$code|0;var $1=0,$2=0,$3=0,$src=0,$dst=0,$size=0,$src_step=0,$dst_step=0,$src_cn=0,$dst_cn=0,$depth=0,$func0=0,$func1=0,$func2=0,$func3=0,$param=0,$4=0,$ippi_call_result=0,$5=0,$ippi_call_result1=0,$6=0,$ippi_call_result2=0,$7=0,$ippi_call_result3=0,$8=0,$85=0,$86=0,$117=0,$122=0,$143=0,$145=0,$173=0,$175=0,$202=0,$204=0,$234=0,$249=0,$281=0,$296=0,$322=0,$324=0,$333=0,$375=0,$377=0,$451=0,$454=0,$456=0,$458=0,$460=0,$462=0,$480=0,$483=0,$529=0,$532=0,$534=0,$536=0,$538=0,$540=0,$564=0,$622=0,$625=0,$627=0,$629=0,$631=0,$633=0,$651=0,$654=0,$700=0,$703=0,$705=0,$707=0,$709=0,$711=0,$735=0,$761=0,$766=0,$768=0,$769=0,$785=0,$790=0,$792=0,$793=0,$811=0,$816=0,$818=0,$819=0,$839=0,$844=0,$846=0,$847=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+128|0;label=1;while(1)switch(label|0){case 1:$size=sp+64|0;$param=sp+72|0;$4=sp+88|0;$5=sp+96|0;$6=sp+104|0;$7=sp+112|0;$8=sp+120|0;$1=$srcarr;$2=$dstarr;$3=$code;$src=$1;$dst=$2;$func0=0;$func1=0;$func2=0;$func3=0;_memset($param|0,0,16);$src=_cvGetMat($1,sp|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,7168,9800,13664,2251);label=284;break;case 3:$dst=_cvGetMat($2,sp+32|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,7168,9800,13664,2252);label=284;break;case 5:if((HEAP32[$src+20>>2]|0)==(HEAP32[$dst+20>>2]|0)){label=6;break}else{label=7;break};case 6:if((HEAP32[$src+24>>2]|0)==(HEAP32[$dst+24>>2]|0)){label=8;break}else{label=7;break};case 7:_cvError(-209,7168,28400,13664,2255);label=284;break;case 8:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&7|0)==0){label=10;break}else{label=9;break};case 9:_cvError(-205,7168,28400,13664,2258);label=284;break;case 10:$depth=HEAP32[$src>>2]&7;if(($depth|0)!=0){label=11;break}else{label=14;break};case 11:if(($depth|0)!=2){label=12;break}else{label=14;break};case 12:if(($depth|0)!=5){label=13;break}else{label=14;break};case 13:_cvError(-210,7168,28400,13664,2262);label=284;break;case 14:$src_cn=((HEAP32[$src>>2]&504)>>3)+1|0;$dst_cn=((HEAP32[$dst>>2]&504)>>3)+1|0;__Z12cvGetMatSizePK5CvMat($4,$src);$85=$size;$86=$4;HEAP32[$85>>2]=HEAP32[$86>>2];HEAP32[$85+4>>2]=HEAP32[$86+4>>2];$src_step=HEAP32[$src+4>>2]|0;$dst_step=HEAP32[$dst+4>>2]|0;if((HEAP32[$src>>2]&HEAP32[$dst>>2]&16384|0)!=0){label=15;break}else{label=20;break};case 15:if(($3|0)!=46){label=16;break}else{label=20;break};case 16:if(($3|0)!=47){label=17;break}else{label=20;break};case 17:if(($3|0)!=48){label=18;break}else{label=20;break};case 18:if(($3|0)!=49){label=19;break}else{label=20;break};case 19:$117=$size|0;HEAP32[$117>>2]=Math_imul(HEAP32[$117>>2]|0,HEAP32[$size+4>>2]|0)|0;HEAP32[$size+4>>2]=1;$dst_step=1073741824;$src_step=1073741824;label=20;break;case 20:$122=$3;if(($122|0)==0|($122|0)==2){label=21;break}else if(($122|0)==1|($122|0)==3|($122|0)==4){label=31;break}else if(($122|0)==5){label=42;break}else if(($122|0)==12|($122|0)==22|($122|0)==13|($122|0)==23|($122|0)==16|($122|0)==26|($122|0)==17|($122|0)==27){label=52;break}else if(($122|0)==14|($122|0)==24|($122|0)==15|($122|0)==25|($122|0)==18|($122|0)==28|($122|0)==19|($122|0)==29){label=67;break}else if(($122|0)==6|($122|0)==10|($122|0)==7|($122|0)==11){label=82;break}else if(($122|0)==21|($122|0)==31){label=95;break}else if(($122|0)==8|($122|0)==9){label=101;break}else if(($122|0)==20|($122|0)==30){label=112;break}else if(($122|0)==36|($122|0)==37|($122|0)==32|($122|0)==33|($122|0)==40|($122|0)==41|($122|0)==44|($122|0)==45|($122|0)==50|($122|0)==51|($122|0)==52|($122|0)==53){label=118;break}else if(($122|0)==38|($122|0)==39|($122|0)==34|($122|0)==35|($122|0)==54|($122|0)==55|($122|0)==56|($122|0)==57|($122|0)==58|($122|0)==59|($122|0)==60|($122|0)==61){label=187;break}else if(($122|0)==46|($122|0)==47|($122|0)==48|($122|0)==49){label=256;break}else{label=262;break};case 21:if(($src_cn|0)!=3){label=23;break}else{label=22;break};case 22:if(($dst_cn|0)!=4){label=23;break}else{label=24;break};case 23:_cvError(-15,7168,10872,13664,2285);label=284;break;case 24:if(($depth|0)==0){label=25;break}else{label=26;break};case 25:$145=594;label=30;break;case 26:if(($depth|0)==2){label=27;break}else{label=28;break};case 27:$143=70;label=29;break;case 28:$143=($depth|0)==5?282:0;label=29;break;case 29:$145=$143;label=30;break;case 30:$func1=$145;HEAP32[$param>>2]=($3|0)==0?0:2;label=263;break;case 31:if(($src_cn|0)!=3){label=32;break}else{label=33;break};case 32:if(($src_cn|0)!=4){label=34;break}else{label=33;break};case 33:if(($dst_cn|0)!=3){label=34;break}else{label=35;break};case 34:_cvError(-15,7168,10872,13664,2298);label=284;break;case 35:if(($depth|0)==0){label=36;break}else{label=37;break};case 36:$175=44;label=41;break;case 37:if(($depth|0)==2){label=38;break}else{label=39;break};case 38:$173=708;label=40;break;case 39:$173=($depth|0)==5?488:0;label=40;break;case 40:$175=$173;label=41;break;case 41:$func2=$175;HEAP32[$param>>2]=$src_cn;HEAP32[$param+4>>2]=($3|0)==1?0:2;label=263;break;case 42:if(($src_cn|0)!=4){label=44;break}else{label=43;break};case 43:if(($dst_cn|0)!=4){label=44;break}else{label=45;break};case 44:_cvError(-15,7168,10872,13664,2310);label=284;break;case 45:if(($depth|0)==0){label=46;break}else{label=47;break};case 46:$204=552;label=51;break;case 47:if(($depth|0)==2){label=48;break}else{label=49;break};case 48:$202=184;label=50;break;case 49:$202=($depth|0)==5?480:0;label=50;break;case 50:$204=$202;label=51;break;case 51:$func0=$204;label=263;break;case 52:if(($src_cn|0)!=3){label=53;break}else{label=54;break};case 53:if(($src_cn|0)!=4){label=55;break}else{label=54;break};case 54:if(($dst_cn|0)!=2){label=55;break}else{label=56;break};case 55:_cvError(-15,7168,10872,13664,2327);label=284;break;case 56:if(($depth|0)!=0){label=57;break}else{label=58;break};case 57:_cvError(-17,7168,9872,13664,2332);label=284;break;case 58:$func3=284;HEAP32[$param>>2]=$src_cn;if(($3|0)==12){$234=1;label=62;break}else{label=59;break};case 59:if(($3|0)==22){$234=1;label=62;break}else{label=60;break};case 60:if(($3|0)==16){$234=1;label=62;break}else{label=61;break};case 61:$234=($3|0)==26;label=62;break;case 62:HEAP32[$param+4>>2]=$234?0:2;if(($3|0)==12){$249=1;label=66;break}else{label=63;break};case 63:if(($3|0)==13){$249=1;label=66;break}else{label=64;break};case 64:if(($3|0)==16){$249=1;label=66;break}else{label=65;break};case 65:$249=($3|0)==17;label=66;break;case 66:HEAP32[$param+8>>2]=$249?6:5;label=263;break;case 67:if(($src_cn|0)!=2){label=70;break}else{label=68;break};case 68:if(($dst_cn|0)!=3){label=69;break}else{label=71;break};case 69:if(($dst_cn|0)!=4){label=70;break}else{label=71;break};case 70:_cvError(-15,7168,10872,13664,2352);label=284;break;case 71:if(($depth|0)!=0){label=72;break}else{label=73;break};case 72:_cvError(-17,7168,9608,13664,2357);label=284;break;case 73:$func3=374;HEAP32[$param>>2]=$dst_cn;if(($3|0)==14){$281=1;label=77;break}else{label=74;break};case 74:if(($3|0)==24){$281=1;label=77;break}else{label=75;break};case 75:if(($3|0)==18){$281=1;label=77;break}else{label=76;break};case 76:$281=($3|0)==28;label=77;break;case 77:HEAP32[$param+4>>2]=$281?0:2;if(($3|0)==14){$296=1;label=81;break}else{label=78;break};case 78:if(($3|0)==15){$296=1;label=81;break}else{label=79;break};case 79:if(($3|0)==18){$296=1;label=81;break}else{label=80;break};case 80:$296=($3|0)==19;label=81;break;case 81:HEAP32[$param+8>>2]=$296?6:5;label=263;break;case 82:if(($src_cn|0)!=3){label=83;break}else{label=84;break};case 83:if(($src_cn|0)!=4){label=85;break}else{label=84;break};case 84:if(($dst_cn|0)!=1){label=85;break}else{label=86;break};case 85:_cvError(-15,7168,10872,13664,2373);label=284;break;case 86:if(($depth|0)==0){label=87;break}else{label=88;break};case 87:$324=558;label=92;break;case 88:if(($depth|0)==2){label=89;break}else{label=90;break};case 89:$322=506;label=91;break;case 90:$322=($depth|0)==5?492:0;label=91;break;case 91:$324=$322;label=92;break;case 92:$func2=$324;HEAP32[$param>>2]=$src_cn;if(($3|0)==6){$333=1;label=94;break}else{label=93;break};case 93:$333=($3|0)==10;label=94;break;case 94:HEAP32[$param+4>>2]=$333?0:2;label=263;break;case 95:if(($src_cn|0)!=2){label=97;break}else{label=96;break};case 96:if(($dst_cn|0)!=1){label=97;break}else{label=98;break};case 97:_cvError(-15,7168,10872,13664,2387);label=284;break;case 98:if(($depth|0)!=0){label=99;break}else{label=100;break};case 99:_cvError(-17,7168,9136,13664,2392);label=284;break;case 100:$func2=696;HEAP32[$param>>2]=($3|0)==21?6:5;label=263;break;case 101:if(($src_cn|0)!=1){label=104;break}else{label=102;break};case 102:if(($dst_cn|0)!=3){label=103;break}else{label=105;break};case 103:if(($dst_cn|0)!=4){label=104;break}else{label=105;break};case 104:_cvError(-15,7168,10872,13664,2403);label=284;break;case 105:if(($depth|0)==0){label=106;break}else{label=107;break};case 106:$377=540;label=111;break;case 107:if(($depth|0)==2){label=108;break}else{label=109;break};case 108:$375=48;label=110;break;case 109:$375=($depth|0)==5?362:0;label=110;break;case 110:$377=$375;label=111;break;case 111:$func1=$377;HEAP32[$param>>2]=$dst_cn;label=263;break;case 112:if(($src_cn|0)!=1){label=114;break}else{label=113;break};case 113:if(($dst_cn|0)!=2){label=114;break}else{label=115;break};case 114:_cvError(-15,7168,10872,13664,2416);label=284;break;case 115:if(($depth|0)!=0){label=116;break}else{label=117;break};case 116:_cvError(-17,7168,9136,13664,2421);label=284;break;case 117:$func2=166;HEAP32[$param>>2]=($3|0)==20?6:5;label=263;break;case 118:if(($src_cn|0)!=3){label=119;break}else{label=120;break};case 119:if(($src_cn|0)!=4){label=121;break}else{label=120;break};case 120:if(($dst_cn|0)!=3){label=121;break}else{label=122;break};case 121:_cvError(-15,7168,10872,13664,2441);label=284;break;case 122:if(($depth|0)==0){label=123;break}else{label=146;break};case 123:if(($3|0)==36){label=125;break}else{label=124;break};case 124:if(($3|0)==37){label=125;break}else{label=126;break};case 125:$462=624;label=145;break;case 126:if(($3|0)==32){label=128;break}else{label=127;break};case 127:if(($3|0)==33){label=128;break}else{label=129;break};case 128:$460=36;label=144;break;case 129:if(($3|0)==40){label=131;break}else{label=130;break};case 130:if(($3|0)==41){label=131;break}else{label=132;break};case 131:$458=122;label=143;break;case 132:if(($3|0)==44){label=134;break}else{label=133;break};case 133:if(($3|0)==45){label=134;break}else{label=135;break};case 134:$456=472;label=142;break;case 135:if(($3|0)==50){label=137;break}else{label=136;break};case 136:if(($3|0)==51){label=137;break}else{label=138;break};case 137:$454=630;label=141;break;case 138:if(($3|0)==52){$451=1;label=140;break}else{label=139;break};case 139:$451=($3|0)==53;label=140;break;case 140:$454=$451?758:0;label=141;break;case 141:$456=$454;label=142;break;case 142:$458=$456;label=143;break;case 143:$460=$458;label=144;break;case 144:$462=$460;label=145;break;case 145:$func2=$462;label=180;break;case 146:if(($depth|0)==2){label=147;break}else{label=154;break};case 147:if(($3|0)==36){label=149;break}else{label=148;break};case 148:if(($3|0)==37){label=149;break}else{label=150;break};case 149:$483=236;label=153;break;case 150:if(($3|0)==32){$480=1;label=152;break}else{label=151;break};case 151:$480=($3|0)==33;label=152;break;case 152:$483=$480?258:0;label=153;break;case 153:$func2=$483;label=179;break;case 154:if(($depth|0)==5){label=155;break}else{label=178;break};case 155:if(($3|0)==36){label=157;break}else{label=156;break};case 156:if(($3|0)==37){label=157;break}else{label=158;break};case 157:$540=262;label=177;break;case 158:if(($3|0)==32){label=160;break}else{label=159;break};case 159:if(($3|0)==33){label=160;break}else{label=161;break};case 160:$538=468;label=176;break;case 161:if(($3|0)==40){label=163;break}else{label=162;break};case 162:if(($3|0)==41){label=163;break}else{label=164;break};case 163:$536=380;label=175;break;case 164:if(($3|0)==44){label=166;break}else{label=165;break};case 165:if(($3|0)==45){label=166;break}else{label=167;break};case 166:$534=82;label=174;break;case 167:if(($3|0)==50){label=169;break}else{label=168;break};case 168:if(($3|0)==51){label=169;break}else{label=170;break};case 169:$532=762;label=173;break;case 170:if(($3|0)==52){$529=1;label=172;break}else{label=171;break};case 171:$529=($3|0)==53;label=172;break;case 172:$532=$529?66:0;label=173;break;case 173:$534=$532;label=174;break;case 174:$536=$534;label=175;break;case 175:$538=$536;label=176;break;case 176:$540=$538;label=177;break;case 177:$func2=$540;label=178;break;case 178:label=179;break;case 179:label=180;break;case 180:HEAP32[$param>>2]=$src_cn;if(($3|0)==32){$564=1;label=186;break}else{label=181;break};case 181:if(($3|0)==36){$564=1;label=186;break}else{label=182;break};case 182:if(($3|0)==40){$564=1;label=186;break}else{label=183;break};case 183:if(($3|0)==44){$564=1;label=186;break}else{label=184;break};case 184:if(($3|0)==50){$564=1;label=186;break}else{label=185;break};case 185:$564=($3|0)==52;label=186;break;case 186:HEAP32[$param+4>>2]=$564?0:2;label=263;break;case 187:if(($src_cn|0)!=3){label=190;break}else{label=188;break};case 188:if(($dst_cn|0)!=3){label=189;break}else{label=191;break};case 189:if(($dst_cn|0)!=4){label=190;break}else{label=191;break};case 190:_cvError(-15,7168,10872,13664,2480);label=284;break;case 191:if(($depth|0)==0){label=192;break}else{label=215;break};case 192:if(($3|0)==38){label=194;break}else{label=193;break};case 193:if(($3|0)==39){label=194;break}else{label=195;break};case 194:$633=834;label=214;break;case 195:if(($3|0)==34){label=197;break}else{label=196;break};case 196:if(($3|0)==35){label=197;break}else{label=198;break};case 197:$631=798;label=213;break;case 198:if(($3|0)==54){label=200;break}else{label=199;break};case 199:if(($3|0)==55){label=200;break}else{label=201;break};case 200:$629=338;label=212;break;case 201:if(($3|0)==60){label=203;break}else{label=202;break};case 202:if(($3|0)==61){label=203;break}else{label=204;break};case 203:$627=302;label=211;break;case 204:if(($3|0)==56){label=206;break}else{label=205;break};case 205:if(($3|0)==57){label=206;break}else{label=207;break};case 206:$625=538;label=210;break;case 207:if(($3|0)==58){$622=1;label=209;break}else{label=208;break};case 208:$622=($3|0)==59;label=209;break;case 209:$625=$622?352:0;label=210;break;case 210:$627=$625;label=211;break;case 211:$629=$627;label=212;break;case 212:$631=$629;label=213;break;case 213:$633=$631;label=214;break;case 214:$func2=$633;label=249;break;case 215:if(($depth|0)==2){label=216;break}else{label=223;break};case 216:if(($3|0)==38){label=218;break}else{label=217;break};case 217:if(($3|0)==39){label=218;break}else{label=219;break};case 218:$654=600;label=222;break;case 219:if(($3|0)==34){$651=1;label=221;break}else{label=220;break};case 220:$651=($3|0)==35;label=221;break;case 221:$654=$651?78:0;label=222;break;case 222:$func2=$654;label=248;break;case 223:if(($depth|0)==5){label=224;break}else{label=247;break};case 224:if(($3|0)==38){label=226;break}else{label=225;break};case 225:if(($3|0)==39){label=226;break}else{label=227;break};case 226:$711=608;label=246;break;case 227:if(($3|0)==34){label=229;break}else{label=228;break};case 228:if(($3|0)==35){label=229;break}else{label=230;break};case 229:$709=256;label=245;break;case 230:if(($3|0)==54){label=232;break}else{label=231;break};case 231:if(($3|0)==55){label=232;break}else{label=233;break};case 232:$707=394;label=244;break;case 233:if(($3|0)==60){label=235;break}else{label=234;break};case 234:if(($3|0)==61){label=235;break}else{label=236;break};case 235:$705=508;label=243;break;case 236:if(($3|0)==56){label=238;break}else{label=237;break};case 237:if(($3|0)==57){label=238;break}else{label=239;break};case 238:$703=366;label=242;break;case 239:if(($3|0)==58){$700=1;label=241;break}else{label=240;break};case 240:$700=($3|0)==59;label=241;break;case 241:$703=$700?214:0;label=242;break;case 242:$705=$703;label=243;break;case 243:$707=$705;label=244;break;case 244:$709=$707;label=245;break;case 245:$711=$709;label=246;break;case 246:$func2=$711;label=247;break;case 247:label=248;break;case 248:label=249;break;case 249:HEAP32[$param>>2]=$dst_cn;if(($3|0)==34){$735=1;label=255;break}else{label=250;break};case 250:if(($3|0)==38){$735=1;label=255;break}else{label=251;break};case 251:if(($3|0)==54){$735=1;label=255;break}else{label=252;break};case 252:if(($3|0)==56){$735=1;label=255;break}else{label=253;break};case 253:if(($3|0)==58){$735=1;label=255;break}else{label=254;break};case 254:$735=($3|0)==60;label=255;break;case 255:HEAP32[$param+4>>2]=$735?0:2;label=263;break;case 256:if(($src_cn|0)!=1){label=258;break}else{label=257;break};case 257:if(($dst_cn|0)!=3){label=258;break}else{label=259;break};case 258:_cvError(-15,7168,10872,13664,2511);label=284;break;case 259:if(($depth|0)!=0){label=260;break}else{label=261;break};case 260:_cvError(-17,7168,8504,13664,2515);label=284;break;case 261:$func1=342;HEAP32[$param>>2]=$3;label=263;break;case 262:_cvError(-206,7168,8152,13664,2521);label=284;break;case 263:if(($func0|0)!=0){label=264;break}else{label=267;break};case 264:$761=HEAP32[$src+16>>2]|0;$766=HEAP32[$dst+16>>2]|0;$768=$5;$769=$size;HEAP32[$768>>2]=HEAP32[$769>>2];HEAP32[$768+4>>2]=HEAP32[$769+4>>2];$ippi_call_result=FUNCTION_TABLE_iiiiii[$func0&1023]($761,$src_step,$766,$dst_step,$5)|0;if(($ippi_call_result|0)<0){label=265;break}else{label=266;break};case 265:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,7168,7776,13664,2526);label=284;break;case 266:label=283;break;case 267:if(($func1|0)!=0){label=268;break}else{label=271;break};case 268:$785=HEAP32[$src+16>>2]|0;$790=HEAP32[$dst+16>>2]|0;$792=$6;$793=$size;HEAP32[$792>>2]=HEAP32[$793>>2];HEAP32[$792+4>>2]=HEAP32[$793+4>>2];$ippi_call_result1=FUNCTION_TABLE_iiiiiii[$func1&1023]($785,$src_step,$790,$dst_step,$6,HEAP32[$param>>2]|0)|0;if(($ippi_call_result1|0)<0){label=269;break}else{label=270;break};case 269:_cvError(_cvErrorFromIppStatus($ippi_call_result1)|0,7168,7776,13664,2531);label=284;break;case 270:label=282;break;case 271:if(($func2|0)!=0){label=272;break}else{label=275;break};case 272:$811=HEAP32[$src+16>>2]|0;$816=HEAP32[$dst+16>>2]|0;$818=$7;$819=$size;HEAP32[$818>>2]=HEAP32[$819>>2];HEAP32[$818+4>>2]=HEAP32[$819+4>>2];$ippi_call_result2=FUNCTION_TABLE_iiiiiiii[$func2&1023]($811,$src_step,$816,$dst_step,$7,HEAP32[$param>>2]|0,HEAP32[$param+4>>2]|0)|0;if(($ippi_call_result2|0)<0){label=273;break}else{label=274;break};case 273:_cvError(_cvErrorFromIppStatus($ippi_call_result2)|0,7168,7776,13664,2536);label=284;break;case 274:label=281;break;case 275:if(($func3|0)!=0){label=276;break}else{label=279;break};case 276:$839=HEAP32[$src+16>>2]|0;$844=HEAP32[$dst+16>>2]|0;$846=$8;$847=$size;HEAP32[$846>>2]=HEAP32[$847>>2];HEAP32[$846+4>>2]=HEAP32[$847+4>>2];$ippi_call_result3=FUNCTION_TABLE_iiiiiiiii[$func3&1023]($839,$src_step,$844,$dst_step,$8,HEAP32[$param>>2]|0,HEAP32[$param+4>>2]|0,HEAP32[$param+8>>2]|0)|0;if(($ippi_call_result3|0)<0){label=277;break}else{label=278;break};case 277:_cvError(_cvErrorFromIppStatus($ippi_call_result3)|0,7168,7776,13664,2541);label=284;break;case 278:label=280;break;case 279:_cvError(-210,7168,16080,13664,2544);label=284;break;case 280:label=281;break;case 281:label=282;break;case 282:label=283;break;case 283:label=284;break;case 284:STACKTOP=sp;return}}function __Z12cvGetMatSizePK5CvMat($agg_result,$mat){$agg_result=$agg_result|0;$mat=$mat|0;var $1=0;$1=$mat;HEAP32[$agg_result>>2]=HEAP32[$1+24>>2];HEAP32[$agg_result+4>>2]=HEAP32[$1+20>>2];return}function __ZL20icvBGR2BGRx_8u_C3C4RPKhiPhi6CvSizei($src,$srcstep,$dst,$dststep,$size,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$15=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$blue_idx;$2=$2>>>0|0;$4=$4>>>0|0;$2=$2-((HEAP32[$size>>2]|0)*3|0)|0;$15=$size|0;HEAP32[$15>>2]=HEAP32[$15>>2]<<2;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;$t2=HEAP8[$1+($5^2)|0]|0;HEAP8[$3+$i|0]=HEAP8[$1+$5|0]|0;HEAP8[$3+($i+1)|0]=$t1;HEAP8[$3+($i+2)|0]=$t2;HEAP8[$3+($i+3)|0]=0;label=6;break;case 6:$i=$i+4|0;$1=$1+3|0;label=4;break;case 7:label=8;break;case 8:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL21icvBGR2BGRx_16u_C3C4RPKtiPti6CvSizei($src,$srcstep,$dst,$dststep,$size,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$15=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$blue_idx;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$2=$2-((HEAP32[$size>>2]|0)*3|0)|0;$15=$size|0;HEAP32[$15>>2]=HEAP32[$15>>2]<<2;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$1+2>>1]|0;$t2=HEAP16[$1+(($5^2)<<1)>>1]|0;HEAP16[$3+($i<<1)>>1]=HEAP16[$1+($5<<1)>>1]|0;HEAP16[$3+($i+1<<1)>>1]=$t1;HEAP16[$3+($i+2<<1)>>1]=$t2;HEAP16[$3+($i+3<<1)>>1]=0;label=6;break;case 6:$i=$i+4|0;$1=$1+6|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL21icvBGR2BGRx_32f_C3C4RPKiiPii6CvSizei($src,$srcstep,$dst,$dststep,$size,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$15=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-((HEAP32[$size>>2]|0)*3|0)|0;$15=$size|0;HEAP32[$15>>2]=HEAP32[$15>>2]<<2;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$1+4>>2]|0;$t2=HEAP32[$1+(($5^2)<<2)>>2]|0;HEAP32[$3+($i<<2)>>2]=HEAP32[$1+($5<<2)>>2];HEAP32[$3+($i+1<<2)>>2]=$t1;HEAP32[$3+($i+2<<2)>>2]=$t2;HEAP32[$3+($i+3<<2)>>2]=0;label=6;break;case 6:$i=$i+4|0;$1=$1+12|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRx2BGR_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$t1=0,$t2=0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=$2>>>0|0;$4=$4>>>0|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;$t2=HEAP8[$1+($6^2)|0]|0;HEAP8[$3+$i|0]=HEAP8[$1+$6|0]|0;HEAP8[$3+($i+1)|0]=$t1;HEAP8[$3+($i+2)|0]=$t2;label=6;break;case 6:$i=$i+3|0;$1=$1+$5|0;label=4;break;case 7:label=8;break;case 8:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2BGR_16u_CnC3RPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$t1=0,$t2=0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$1+2>>1]|0;$t2=HEAP16[$1+(($6^2)<<1)>>1]|0;HEAP16[$3+($i<<1)>>1]=HEAP16[$1+($6<<1)>>1]|0;HEAP16[$3+($i+1<<1)>>1]=$t1;HEAP16[$3+($i+2<<1)>>1]=$t2;label=6;break;case 6:$i=$i+3|0;$1=$1+($5<<1)|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2BGR_32f_CnC3RPKiiPii6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$t1=0,$t2=0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$1+4>>2]|0;$t2=HEAP32[$1+(($6^2)<<2)>>2]|0;HEAP32[$3+($i<<2)>>2]=HEAP32[$1+($6<<2)>>2];HEAP32[$3+($i+1<<2)>>2]=$t1;HEAP32[$3+($i+2<<2)>>2]=$t2;label=6;break;case 6:$i=$i+3|0;$1=$1+($5<<2)|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvBGRA2RGBA_8u_C4RPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$t1=0,$t2=0,$t3=0,$9=0,$13=0,$14=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$2=$2>>>0|0;$4=$4>>>0|0;$9=$size|0;HEAP32[$9>>2]=HEAP32[$9>>2]<<2;label=2;break;case 2:$13=$size+4|0;$14=HEAP32[$13>>2]|0;HEAP32[$13>>2]=$14-1;if(($14|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;$t2=HEAP8[$1|0]|0;$t3=HEAP8[$1+3|0]|0;HEAP8[$3+$i|0]=HEAP8[$1+2|0]|0;HEAP8[$3+($i+1)|0]=$t1;HEAP8[$3+($i+2)|0]=$t2;HEAP8[$3+($i+3)|0]=$t3;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRA2RGBA_16u_C4RPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$t1=0,$t2=0,$t3=0,$9=0,$13=0,$14=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$9=$size|0;HEAP32[$9>>2]=HEAP32[$9>>2]<<2;label=2;break;case 2:$13=$size+4|0;$14=HEAP32[$13>>2]|0;HEAP32[$13>>2]=$14-1;if(($14|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$1+2>>1]|0;$t2=HEAP16[$1>>1]|0;$t3=HEAP16[$1+6>>1]|0;HEAP16[$3+($i<<1)>>1]=HEAP16[$1+4>>1]|0;HEAP16[$3+($i+1<<1)>>1]=$t1;HEAP16[$3+($i+2<<1)>>1]=$t2;HEAP16[$3+($i+3<<1)>>1]=$t3;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRA2RGBA_32f_C4RPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$t1=0,$t2=0,$t3=0,$9=0,$13=0,$14=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$9=$size|0;HEAP32[$9>>2]=HEAP32[$9>>2]<<2;label=2;break;case 2:$13=$size+4|0;$14=HEAP32[$13>>2]|0;HEAP32[$13>>2]=$14-1;if(($14|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$1+4>>2]|0;$t2=HEAP32[$1>>2]|0;$t3=HEAP32[$1+12>>2]|0;HEAP32[$3+($i<<2)>>2]=HEAP32[$1+8>>2];HEAP32[$3+($i+1<<2)>>2]=$t1;HEAP32[$3+($i+2<<2)>>2]=$t2;HEAP32[$3+($i+3<<2)>>2]=$t3;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL23icvBGRx2BGR5x5_8u_CnC2RPKhiPhi6CvSizeiii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx,$green_bits){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;$green_bits=$green_bits|0;var $1=0,$2=0,$3=0,$5=0,$6=0,$i=0,$15=0,$16=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$5=$src_cn;$6=$blue_idx;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=2;break;case 2:$15=$size+4|0;$16=HEAP32[$15>>2]|0;HEAP32[$15>>2]=$16-1;if(($16|0)!=0){label=3;break}else{label=16;break};case 3:if(($green_bits|0)==6){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:HEAP16[$3+($i<<1)>>1]=((HEAPU8[$1+$6|0]|0)>>3|((HEAPU8[$1+1|0]|0)&-4)<<3|((HEAPU8[$1+($6^2)|0]|0)&-8)<<8)&65535;label=7;break;case 7:$i=$i+1|0;$1=$1+$5|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:HEAP16[$3+($i<<1)>>1]=((HEAPU8[$1+$6|0]|0)>>3|((HEAPU8[$1+1|0]|0)&-8)<<2|((HEAPU8[$1+($6^2)|0]|0)&-8)<<7)&65535;label=12;break;case 12:$i=$i+1|0;$1=$1+$5|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+$2|0;$3=$3+$dststep|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL23icvBGR5x52BGRx_8u_C2CnRPKhiPhi6CvSizeiii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx,$green_bits){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;$green_bits=$green_bits|0;var $1=0,$3=0,$4=0,$5=0,$6=0,$i=0,$t=0,$t1=0,$15=0,$16=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=2;break;case 2:$15=$size+4|0;$16=HEAP32[$15>>2]|0;HEAP32[$15>>2]=$16-1;if(($16|0)!=0){label=3;break}else{label=20;break};case 3:if(($green_bits|0)==6){label=4;break}else{label=11;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=10;break};case 6:$t=HEAPU16[$1+($i<<1)>>1]|0;HEAP8[$3+$6|0]=$t<<3&255;HEAP8[$3+1|0]=$t>>>3&-4&255;HEAP8[$3+($6^2)|0]=$t>>>8&-8&255;if(($5|0)==4){label=7;break}else{label=8;break};case 7:HEAP8[$3+3|0]=0;label=8;break;case 8:label=9;break;case 9:$i=$i+1|0;$3=$3+$5|0;label=5;break;case 10:label=18;break;case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=17;break};case 13:$t1=HEAPU16[$1+($i<<1)>>1]|0;HEAP8[$3+$6|0]=$t1<<3&255;HEAP8[$3+1|0]=$t1>>>2&-8&255;HEAP8[$3+($6^2)|0]=$t1>>>7&-8&255;if(($5|0)==4){label=14;break}else{label=15;break};case 14:HEAP8[$3+3|0]=0;label=15;break;case 15:label=16;break;case 16:$i=$i+1|0;$3=$3+$5|0;label=12;break;case 17:label=18;break;case 18:label=19;break;case 19:$1=$1+$srcstep|0;$3=$3+$4|0;label=2;break;case 20:STACKTOP=sp;return 0}return 0}function __ZL22icvBGRx2Gray_16u_CnC1RPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$cb=0,$cr=0,$22=0,$23=0,$38=0,$44=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$cb=1868;$cr=4899;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;if(($blue_idx|0)!=0){label=2;break}else{label=3;break};case 2:$cb=4899;$cr=1868;label=3;break;case 3:label=4;break;case 4:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=5;break}else{label=11;break};case 5:$i=0;label=6;break;case 6:if(($i|0)<(HEAP32[$size>>2]|0)){label=7;break}else{label=9;break};case 7:$38=Math_imul(HEAPU16[$1>>1]|0,$cb)|0;$44=$38+((HEAPU16[$1+2>>1]|0)*9617|0)|0;HEAP16[$3+($i<<1)>>1]=($44+(Math_imul(HEAPU16[$1+4>>1]|0,$cr)|0)+8192|0)>>>14&65535;label=8;break;case 8:$i=$i+1|0;$1=$1+($5<<1)|0;label=6;break;case 9:label=10;break;case 10:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=4;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL22icvBGRx2Gray_32f_CnC1RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$cb=0.0,$cr=0.0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$cb=.11400000005960464;$cr=.29899999499320984;if(($blue_idx|0)!=0){label=2;break}else{label=3;break};case 2:$cb=.29899999499320984;$cr=.11400000005960464;label=3;break;case 3:$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=4;break;case 4:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=5;break}else{label=11;break};case 5:$i=0;label=6;break;case 6:if(($i|0)<(HEAP32[$size>>2]|0)){label=7;break}else{label=9;break};case 7:HEAPF32[$3+($i<<2)>>2]=+HEAPF32[$1>>2]*$cb+ +HEAPF32[$1+4>>2]*.5870000123977661+ +HEAPF32[$1+8>>2]*$cr;label=8;break;case 8:$i=$i+1|0;$1=$1+($5<<2)|0;label=6;break;case 9:label=10;break;case 10:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=4;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2Gray_8u_CnC1RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$tab=0,$r=0,$g=0,$b=0,$20=0,$61=0,$62=0,$120=0,$121=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=1024){label=2;break}else{label=18;break};case 2:$20=STACKTOP;STACKTOP=STACKTOP+3104|0;$tab=__Z10cvAlignPtrPKvi($20,32)|0;$r=0;$g=0;$b=8192;$i=0;label=3;break;case 3:if(($i|0)<256){label=4;break}else{label=9;break};case 4:HEAP32[$tab+($i<<2)>>2]=$b;HEAP32[$tab+($i+256<<2)>>2]=$g;HEAP32[$tab+($i+512<<2)>>2]=$r;$g=$g+9617|0;if(($6|0)!=0){label=6;break}else{label=5;break};case 5:$b=$b+1868|0;$r=$r+4899|0;label=7;break;case 6:$b=$b+4899|0;$r=$r+1868|0;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=3;break;case 9:label=10;break;case 10:$61=$size+4|0;$62=HEAP32[$61>>2]|0;HEAP32[$61>>2]=$62-1;if(($62|0)!=0){label=11;break}else{label=17;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=15;break};case 13:HEAP8[$3+$i|0]=(HEAP32[$tab+((HEAPU8[$1|0]|0)<<2)>>2]|0)+(HEAP32[$tab+((HEAPU8[$1+1|0]|0)+256<<2)>>2]|0)+(HEAP32[$tab+((HEAPU8[$1+2|0]|0)+512<<2)>>2]|0)>>14&255;label=14;break;case 14:$i=$i+1|0;$1=$1+$5|0;label=12;break;case 15:label=16;break;case 16:$1=$1+$2|0;$3=$3+$4|0;label=10;break;case 17:label=27;break;case 18:label=19;break;case 19:$120=$size+4|0;$121=HEAP32[$120>>2]|0;HEAP32[$120>>2]=$121-1;if(($121|0)!=0){label=20;break}else{label=26;break};case 20:$i=0;label=21;break;case 21:if(($i|0)<(HEAP32[$size>>2]|0)){label=22;break}else{label=24;break};case 22:HEAP8[$3+$i|0]=((HEAPU8[$1+$6|0]|0)*1868|0)+((HEAPU8[$1+1|0]|0)*9617|0)+((HEAPU8[$1+($6^2)|0]|0)*4899|0)+8192>>14&255;label=23;break;case 23:$i=$i+1|0;$1=$1+$5|0;label=21;break;case 24:label=25;break;case 25:$1=$1+$2|0;$3=$3+$4|0;label=19;break;case 26:label=27;break;case 27:STACKTOP=sp;return 0}return 0}function __ZL23icvBGR5x52Gray_8u_C2C1RPKhiPhi6CvSizei($src,$srcstep,$dst,$dststep,$size,$green_bits){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$green_bits=$green_bits|0;var $1=0,$3=0,$i=0,$t=0,$t1=0,$7=0,$8=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;label=2;break;case 2:$7=$size+4|0;$8=HEAP32[$7>>2]|0;HEAP32[$7>>2]=$8-1;if(($8|0)!=0){label=3;break}else{label=16;break};case 3:if(($green_bits|0)==6){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:$t=HEAPU16[$1+($i<<1)>>1]|0;$t=(($t<<3&248)*1868|0)+(($t>>3&252)*9617|0)+(($t>>8&248)*4899|0)|0;HEAP8[$3+$i|0]=$t+8192>>14&255;label=7;break;case 7:$i=$i+1|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:$t1=HEAPU16[$1+($i<<1)>>1]|0;$t1=(($t1<<3&248)*1868|0)+(($t1>>2&248)*9617|0)+(($t1>>7&248)*4899|0)|0;HEAP8[$3+$i|0]=$t1+8192>>14&255;label=12;break;case 12:$i=$i+1|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+$srcstep|0;$3=$3+$dststep|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL21icvGray2BGRx_8u_C1CnRPKhiPhi6CvSizei($src,$srcstep,$dst,$dststep,$size,$dst_cn){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$17=0,$18=0,$34=0,$57=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$2=$2>>>0|0;$4=$4>>>0|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=2;break;case 2:$17=$size+4|0;$18=HEAP32[$17>>2]|0;HEAP32[$17>>2]=$18-1;if(($18|0)!=0){label=3;break}else{label=16;break};case 3:if(($5|0)==3){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:$34=HEAP8[$1+$i|0]|0;HEAP8[$3+2|0]=$34;HEAP8[$3+1|0]=$34;HEAP8[$3|0]=$34;label=7;break;case 7:$i=$i+1|0;$3=$3+3|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:$57=HEAP8[$1+$i|0]|0;HEAP8[$3+2|0]=$57;HEAP8[$3+1|0]=$57;HEAP8[$3|0]=$57;HEAP8[$3+3|0]=0;label=12;break;case 12:$i=$i+1|0;$3=$3+4|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL22icvGray2BGRx_16u_C1CnRPKtiPti6CvSizei($src,$srcstep,$dst,$dststep,$size,$dst_cn){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$17=0,$18=0,$34=0,$57=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=2;break;case 2:$17=$size+4|0;$18=HEAP32[$17>>2]|0;HEAP32[$17>>2]=$18-1;if(($18|0)!=0){label=3;break}else{label=16;break};case 3:if(($5|0)==3){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:$34=HEAP16[$1+($i<<1)>>1]|0;HEAP16[$3+4>>1]=$34;HEAP16[$3+2>>1]=$34;HEAP16[$3>>1]=$34;label=7;break;case 7:$i=$i+1|0;$3=$3+6|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:$57=HEAP16[$1+($i<<1)>>1]|0;HEAP16[$3+4>>1]=$57;HEAP16[$3+2>>1]=$57;HEAP16[$3>>1]=$57;HEAP16[$3+6>>1]=0;label=12;break;case 12:$i=$i+1|0;$3=$3+8|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL22icvGray2BGRx_32f_C1CnRPKfiPfi6CvSizei($src,$srcstep,$dst,$dststep,$size,$dst_cn){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$17=0,$18=0,$34=0.0,$57=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;label=2;break;case 2:$17=$size+4|0;$18=HEAP32[$17>>2]|0;HEAP32[$17>>2]=$18-1;if(($18|0)!=0){label=3;break}else{label=16;break};case 3:if(($5|0)==3){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:$34=+HEAPF32[$1+($i<<2)>>2];HEAPF32[$3+8>>2]=$34;HEAPF32[$3+4>>2]=$34;HEAPF32[$3>>2]=$34;label=7;break;case 7:$i=$i+1|0;$3=$3+12|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:$57=+HEAPF32[$1+($i<<2)>>2];HEAPF32[$3+8>>2]=$57;HEAPF32[$3+4>>2]=$57;HEAPF32[$3>>2]=$57;HEAPF32[$3+12>>2]=0.0;label=12;break;case 12:$i=$i+1|0;$3=$3+16|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL23icvGray2BGR5x5_8u_C1C2RPKhiPhi6CvSizei($src,$srcstep,$dst,$dststep,$size,$green_bits){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$green_bits=$green_bits|0;var $1=0,$3=0,$i=0,$t=0,$t1=0,$7=0,$8=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;label=2;break;case 2:$7=$size+4|0;$8=HEAP32[$7>>2]|0;HEAP32[$7>>2]=$8-1;if(($8|0)!=0){label=3;break}else{label=16;break};case 3:if(($green_bits|0)==6){label=4;break}else{label=9;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$size>>2]|0)){label=6;break}else{label=8;break};case 6:$t=HEAPU8[$1+$i|0]|0;HEAP16[$3+($i<<1)>>1]=($t>>3|($t&-4)<<3|($t&-8)<<8)&65535;label=7;break;case 7:$i=$i+1|0;label=5;break;case 8:label=14;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:$t1=(HEAPU8[$1+$i|0]|0)>>3;HEAP16[$3+($i<<1)>>1]=($t1|$t1<<5|$t1<<10)&65535;label=12;break;case 12:$i=$i+1|0;label=10;break;case 13:label=14;break;case 14:label=15;break;case 15:$1=$1+$srcstep|0;$3=$3+$dststep|0;label=2;break;case 16:STACKTOP=sp;return 0}return 0}function __ZL22icvBGRx2YCrCb_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0,$r=0,$y=0,$17=0,$21=0,$22=0,$80=0,$95=0,$111=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=$2>>>0|0;$4=$4>>>0|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=18;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=16;break};case 5:$b=HEAPU8[$1+$6|0]|0;$r=HEAPU8[$1+(2^$6)|0]|0;$y=($b*1868|0)+((HEAPU8[$1+1|0]|0)*9617|0)+($r*4899|0)+8192>>14;$r=((($r-$y|0)*11682|0)+8192>>14)+128|0;$b=((($b-$y|0)*9241|0)+8192>>14)+128|0;if(($y&-256|0)!=0){label=7;break}else{label=6;break};case 6:$80=$y;label=8;break;case 7:$80=($y|0)>0?255:0;label=8;break;case 8:HEAP8[$3+$i|0]=$80&255;if(($r&-256|0)!=0){label=10;break}else{label=9;break};case 9:$95=$r;label=11;break;case 10:$95=($r|0)>0?255:0;label=11;break;case 11:HEAP8[$3+($i+1)|0]=$95&255;if(($b&-256|0)!=0){label=13;break}else{label=12;break};case 12:$111=$b;label=14;break;case 13:$111=($b|0)>0?255:0;label=14;break;case 14:HEAP8[$3+($i+2)|0]=$111&255;label=15;break;case 15:$i=$i+3|0;$1=$1+$5|0;label=4;break;case 16:label=17;break;case 17:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 18:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRx2Lab_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$5=0,$6=0,$i=0,$b=0,$g=0,$r=0,$x=0,$y=0,$z=0,$f=0,$L=0,$a=0,$13=0,$17=0,$18=0,$160=0,$175=0,$191=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$5=$src_cn;$6=$blue_idx;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$13=$size|0;HEAP32[$13>>2]=(HEAP32[$13>>2]|0)*3|0;label=2;break;case 2:$17=$size+4|0;$18=HEAP32[$17>>2]|0;HEAP32[$17>>2]=$18-1;if(($18|0)!=0){label=3;break}else{label=27;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=25;break};case 5:$b=HEAPU8[$1+$6|0]|0;$g=HEAPU8[$1+1|0]|0;$r=HEAPU8[$1+(2^$6)|0]|0;$x=($b*194|0)+($g*385|0)+($r*444|0)|0;$y=($b*74|0)+($g*732|0)+($r*218|0)|0;$z=($b*894|0)+($g*112|0)+($r*18|0)|0;$f=($x|0)>2312|0;$x=$x+512>>10;if(($f|0)!=0){label=6;break}else{label=7;break};case 6:$x=HEAPU16[21064+($x<<1)>>1]|0;label=8;break;case 7:$x=($x*32020|0)+145143>>10;label=8;break;case 8:$f=($z|0)>2312|0;$z=$z+512>>10;if(($f|0)!=0){label=9;break}else{label=10;break};case 9:$z=HEAPU16[21064+($z<<1)>>1]|0;label=11;break;case 10:$z=($z*32020|0)+145143>>10;label=11;break;case 11:$f=($y|0)>2312|0;$y=$y+512>>10;if(($f|0)!=0){label=12;break}else{label=13;break};case 12:$y=HEAPU16[21064+($y<<1)>>1]|0;$L=($y*302899|0)-42781901+524288>>20;label=14;break;case 13:$L=($y*9250|0)+512>>10;$y=($y*32020|0)+145143>>10;label=14;break;case 14:$a=((($x-$y|0)*500|0)+512>>10)+128|0;$b=((($y-$z|0)*200|0)+512>>10)+128|0;if(($L&-256|0)!=0){label=16;break}else{label=15;break};case 15:$160=$L;label=17;break;case 16:$160=($L|0)>0?255:0;label=17;break;case 17:HEAP8[$3+$i|0]=$160&255;if(($a&-256|0)!=0){label=19;break}else{label=18;break};case 18:$175=$a;label=20;break;case 19:$175=($a|0)>0?255:0;label=20;break;case 20:HEAP8[$3+($i+1)|0]=$175&255;if(($b&-256|0)!=0){label=22;break}else{label=21;break};case 21:$191=$b;label=23;break;case 22:$191=($b|0)>0?255:0;label=23;break;case 23:HEAP8[$3+($i+2)|0]=$191&255;label=24;break;case 24:$i=$i+3|0;$1=$1+$5|0;label=4;break;case 25:label=26;break;case 26:$1=$1+$2|0;$3=$3+$dststep|0;label=2;break;case 27:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRx2XYZ_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0,$matrix=0,$8=0,$x=0,$y=0,$z=0,$17=0,$18=0,$34=0,$63=0,$64=0,$80=0,$88=0,$105=0,$113=0,$130=0,$138=0,$170=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;_memcpy($matrix|0,16656,36)|0;if((HEAP32[6982]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL24icvBGRx2ABC_IPP_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6982]|0)|0;label=17;break;case 3:$3=$3>>>0|0;$5=$5>>>0|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=HEAP32[$matrix>>2]|0;HEAP32[$matrix>>2]=HEAP32[$matrix+8>>2];HEAP32[$matrix+8>>2]=$t;$t=HEAP32[$matrix+12>>2]|0;HEAP32[$matrix+12>>2]=HEAP32[$matrix+20>>2];HEAP32[$matrix+20>>2]=$t;$t=HEAP32[$matrix+24>>2]|0;HEAP32[$matrix+24>>2]=HEAP32[$matrix+32>>2];HEAP32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=16;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=14;break};case 9:$80=Math_imul(HEAPU8[$2|0]|0,HEAP32[$matrix>>2]|0)|0;$88=$80+(Math_imul(HEAPU8[$2+1|0]|0,HEAP32[$matrix+4>>2]|0)|0)|0;$x=$88+(Math_imul(HEAPU8[$2+2|0]|0,HEAP32[$matrix+8>>2]|0)|0)+512>>10;$105=Math_imul(HEAPU8[$2|0]|0,HEAP32[$matrix+12>>2]|0)|0;$113=$105+(Math_imul(HEAPU8[$2+1|0]|0,HEAP32[$matrix+16>>2]|0)|0)|0;$y=$113+(Math_imul(HEAPU8[$2+2|0]|0,HEAP32[$matrix+20>>2]|0)|0)+512>>10;$130=Math_imul(HEAPU8[$2|0]|0,HEAP32[$matrix+24>>2]|0)|0;$138=$130+(Math_imul(HEAPU8[$2+1|0]|0,HEAP32[$matrix+28>>2]|0)|0)|0;$z=$138+(Math_imul(HEAPU8[$2+2|0]|0,HEAP32[$matrix+32>>2]|0)|0)+512>>10;HEAP8[$4+$i|0]=$x&255;HEAP8[$4+($i+1)|0]=$y&255;if(($z&-256|0)!=0){label=11;break}else{label=10;break};case 10:$170=$z;label=12;break;case 11:$170=($z|0)>0?255:0;label=12;break;case 12:HEAP8[$4+($i+2)|0]=$170&255;label=13;break;case 13:$i=$i+3|0;$2=$2+$6|0;label=8;break;case 14:label=15;break;case 15:$2=$2+$3|0;$4=$4+$5|0;label=6;break;case 16:$1=0;label=17;break;case 17:STACKTOP=sp;return $1|0}return 0}function __ZL20icvBGRx2HSV_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$status=0,$8=0,$t0=0,$t1=0,$b=0,$g=0,$r=0,$h=0,$s=0,$v=0,$vmin=0,$diff=0,$vr=0,$vg=0,$16=0,$17=0,$25=0,$29=0,$30=0,$129=0,$133=0,$134=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;if((HEAP32[6990]|0)!=0){label=2;break}else{label=17;break};case 2:$16=$8;$17=$size;HEAP32[$16>>2]=HEAP32[$17>>2];HEAP32[$16+4>>2]=HEAP32[$17+4>>2];$status=__ZL24icvBGRx2ABC_IPP_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6990]|0)|0;if(($status|0)>=0){label=3;break}else{label=16;break};case 3:$25=$size|0;HEAP32[$25>>2]=(HEAP32[$25>>2]|0)*3|0;label=4;break;case 4:$29=$size+4|0;$30=HEAP32[$29>>2]|0;HEAP32[$29>>2]=$30-1;if(($30|0)!=0){label=5;break}else{label=15;break};case 5:$i=0;label=6;break;case 6:if(($i|0)<=((HEAP32[$size>>2]|0)-12|0)){label=7;break}else{label=9;break};case 7:$t0=HEAP8[22088+(HEAPU8[$4+$i|0]|0)|0]|0;$t1=HEAP8[22088+(HEAPU8[$4+($i+3)|0]|0)|0]|0;HEAP8[$4+$i|0]=$t0;HEAP8[$4+($i+3)|0]=$t1;$t0=HEAP8[22088+(HEAPU8[$4+($i+6)|0]|0)|0]|0;$t1=HEAP8[22088+(HEAPU8[$4+($i+9)|0]|0)|0]|0;HEAP8[$4+($i+6)|0]=$t0;HEAP8[$4+($i+9)|0]=$t1;label=8;break;case 8:$i=$i+12|0;label=6;break;case 9:label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:HEAP8[$4+$i|0]=HEAP8[22088+(HEAPU8[$4+$i|0]|0)|0]|0;label=12;break;case 12:$i=$i+3|0;label=10;break;case 13:label=14;break;case 14:$4=$4+$5|0;label=4;break;case 15:label=16;break;case 16:$1=$status;label=26;break;case 17:$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$129=$size|0;HEAP32[$129>>2]=(HEAP32[$129>>2]|0)*3|0;label=18;break;case 18:$133=$size+4|0;$134=HEAP32[$133>>2]|0;HEAP32[$133>>2]=$134-1;if(($134|0)!=0){label=19;break}else{label=25;break};case 19:$i=0;label=20;break;case 20:if(($i|0)<(HEAP32[$size>>2]|0)){label=21;break}else{label=23;break};case 21:$b=HEAPU8[$2+$7|0]|0;$g=HEAPU8[$2+1|0]|0;$r=HEAPU8[$2+(2^$7)|0]|0;$v=$b;$vmin=$b;$v=$v+(HEAPU8[$g-$v+264|0]|0)|0;$v=$v+(HEAPU8[$r-$v+264|0]|0)|0;$vmin=$vmin-(HEAPU8[$vmin-$g+264|0]|0)|0;$vmin=$vmin-(HEAPU8[$vmin-$r+264|0]|0)|0;$diff=$v-$vmin|0;$vr=($v|0)==($r|0)?-1:0;$vg=($v|0)==($g|0)?-1:0;$s=(Math_imul($diff,HEAP32[16720+($v<<2)>>2]|0)|0)>>12;$h=($vr&$g-$b)+(~$vr&($vg&$b-$r+($diff<<1))+(~$vg&$r-$g+($diff<<2)))|0;$h=(((Math_imul($h,HEAP32[16720+($diff<<2)>>2]|0)|0)*15|0)+262144>>19)+(($h|0)<0?180:0)|0;HEAP8[$4+$i|0]=$h&255;HEAP8[$4+($i+1)|0]=$s&255;HEAP8[$4+($i+2)|0]=$v&255;label=22;break;case 22:$i=$i+3|0;$2=$2+$6|0;label=20;break;case 23:label=24;break;case 24:$2=$2+$3|0;$4=$4+$5|0;label=18;break;case 25:$1=0;label=26;break;case 26:STACKTOP=sp;return $1|0}return 0}function __ZL23icvBGRx2YCrCb_16u_CnC3RPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0,$r=0,$y=0,$17=0,$21=0,$22=0,$80=0,$95=0,$111=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=18;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=16;break};case 5:$b=HEAPU16[$1+($6<<1)>>1]|0;$r=HEAPU16[$1+((2^$6)<<1)>>1]|0;$y=($b*1868|0)+((HEAPU16[$1+2>>1]|0)*9617|0)+($r*4899|0)+8192>>14;$r=((($r-$y|0)*11682|0)+8192>>14)+32768|0;$b=((($b-$y|0)*9241|0)+8192>>14)+32768|0;if(($y&-65536|0)!=0){label=7;break}else{label=6;break};case 6:$80=$y;label=8;break;case 7:$80=($y|0)>0?65535:0;label=8;break;case 8:HEAP16[$3+($i<<1)>>1]=$80&65535;if(($r&-65536|0)!=0){label=10;break}else{label=9;break};case 9:$95=$r;label=11;break;case 10:$95=($r|0)>0?65535:0;label=11;break;case 11:HEAP16[$3+($i+1<<1)>>1]=$95&65535;if(($b&-65536|0)!=0){label=13;break}else{label=12;break};case 12:$111=$b;label=14;break;case 13:$111=($b|0)>0?65535:0;label=14;break;case 14:HEAP16[$3+($i+2<<1)>>1]=$111&65535;label=15;break;case 15:$i=$i+3|0;$1=$1+($5<<1)|0;label=4;break;case 16:label=17;break;case 17:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 18:STACKTOP=sp;return 0}return 0}function __ZL23icvBGRx2YCrCb_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0.0,$r=0.0,$y=0.0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$b=+HEAPF32[$1+($6<<2)>>2];$r=+HEAPF32[$1+((2^$6)<<2)>>2];$y=$b*.11400000005960464+ +HEAPF32[$1+4>>2]*.5870000123977661+$r*.29899999499320984;$r=($r-$y)*.7129999995231628+.5;$b=($b-$y)*.5640000104904175+.5;HEAPF32[$3+($i<<2)>>2]=$y;HEAPF32[$3+($i+1<<2)>>2]=$r;HEAPF32[$3+($i+2<<2)>>2]=$b;label=6;break;case 6:$i=$i+3|0;$1=$1+($5<<2)|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL20icvBGRx2Luv_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$17=0,$18=0,$28=0,$29=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;if((HEAP32[6988]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL24icvBGRx2ABC_IPP_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6988]|0)|0;label=4;break;case 3:$28=$9;$29=$size;HEAP32[$28>>2]=HEAP32[$29>>2];HEAP32[$28+4>>2]=HEAP32[$29+4>>2];$1=__ZL20icvBGRx2ABC_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEiPKf($2,$3,$4,$5,$9,$6,$7,762,1,16696)|0;label=4;break;case 4:STACKTOP=sp;return $1|0}return 0}function __ZL20icvBGRx2HLS_8u_CnC3RPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$status=0,$8=0,$i=0,$t0=0,$t1=0,$9=0,$17=0,$18=0,$26=0,$30=0,$31=0,$128=0,$129=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;if((HEAP32[6992]|0)!=0){label=2;break}else{label=17;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$status=__ZL24icvBGRx2ABC_IPP_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6992]|0)|0;if(($status|0)>=0){label=3;break}else{label=16;break};case 3:$26=$size|0;HEAP32[$26>>2]=(HEAP32[$26>>2]|0)*3|0;label=4;break;case 4:$30=$size+4|0;$31=HEAP32[$30>>2]|0;HEAP32[$30>>2]=$31-1;if(($31|0)!=0){label=5;break}else{label=15;break};case 5:$i=0;label=6;break;case 6:if(($i|0)<=((HEAP32[$size>>2]|0)-12|0)){label=7;break}else{label=9;break};case 7:$t0=HEAP8[22088+(HEAPU8[$4+$i|0]|0)|0]|0;$t1=HEAP8[22088+(HEAPU8[$4+($i+3)|0]|0)|0]|0;HEAP8[$4+$i|0]=$t0;HEAP8[$4+($i+3)|0]=$t1;$t0=HEAP8[22088+(HEAPU8[$4+($i+6)|0]|0)|0]|0;$t1=HEAP8[22088+(HEAPU8[$4+($i+9)|0]|0)|0]|0;HEAP8[$4+($i+6)|0]=$t0;HEAP8[$4+($i+9)|0]=$t1;label=8;break;case 8:$i=$i+12|0;label=6;break;case 9:label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:HEAP8[$4+$i|0]=HEAP8[22088+(HEAPU8[$4+$i|0]|0)|0]|0;label=12;break;case 12:$i=$i+3|0;label=10;break;case 13:label=14;break;case 14:$4=$4+$5|0;label=4;break;case 15:label=16;break;case 16:$1=$status;label=18;break;case 17:$128=$9;$129=$size;HEAP32[$128>>2]=HEAP32[$129>>2];HEAP32[$128+4>>2]=HEAP32[$129+4>>2];$1=__ZL20icvBGRx2ABC_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEiPKf($2,$3,$4,$5,$9,$6,$7,66,1,17744)|0;label=18;break;case 18:STACKTOP=sp;return $1|0}return 0}function __ZL21icvBGRx2XYZ_16u_CnC3RPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0,$matrix=0,$8=0,$x=0,$y=0,$z=0,$17=0,$18=0,$34=0,$63=0,$64=0,$80=0,$88=0,$105=0,$113=0,$130=0,$138=0,$170=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;_memcpy($matrix|0,16456,36)|0;if((HEAP32[6986]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL25icvBGRx2ABC_IPP_16u_CnC3RPKtiPti6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6986]|0)|0;label=17;break;case 3:$3=($3>>>0)/2|0;$5=($5>>>0)/2|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=HEAP32[$matrix>>2]|0;HEAP32[$matrix>>2]=HEAP32[$matrix+8>>2];HEAP32[$matrix+8>>2]=$t;$t=HEAP32[$matrix+12>>2]|0;HEAP32[$matrix+12>>2]=HEAP32[$matrix+20>>2];HEAP32[$matrix+20>>2]=$t;$t=HEAP32[$matrix+24>>2]|0;HEAP32[$matrix+24>>2]=HEAP32[$matrix+32>>2];HEAP32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=16;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=14;break};case 9:$80=Math_imul(HEAPU16[$2>>1]|0,HEAP32[$matrix>>2]|0)|0;$88=$80+(Math_imul(HEAPU16[$2+2>>1]|0,HEAP32[$matrix+4>>2]|0)|0)|0;$x=$88+(Math_imul(HEAPU16[$2+4>>1]|0,HEAP32[$matrix+8>>2]|0)|0)+512>>10;$105=Math_imul(HEAPU16[$2>>1]|0,HEAP32[$matrix+12>>2]|0)|0;$113=$105+(Math_imul(HEAPU16[$2+2>>1]|0,HEAP32[$matrix+16>>2]|0)|0)|0;$y=$113+(Math_imul(HEAPU16[$2+4>>1]|0,HEAP32[$matrix+20>>2]|0)|0)+512>>10;$130=Math_imul(HEAPU16[$2>>1]|0,HEAP32[$matrix+24>>2]|0)|0;$138=$130+(Math_imul(HEAPU16[$2+2>>1]|0,HEAP32[$matrix+28>>2]|0)|0)|0;$z=$138+(Math_imul(HEAPU16[$2+4>>1]|0,HEAP32[$matrix+32>>2]|0)|0)+512>>10;HEAP16[$4+($i<<1)>>1]=$x&65535;HEAP16[$4+($i+1<<1)>>1]=$y&65535;if(($z&-65536|0)!=0){label=11;break}else{label=10;break};case 10:$170=$z;label=12;break;case 11:$170=($z|0)>0?65535:0;label=12;break;case 12:HEAP16[$4+($i+2<<1)>>1]=$170&65535;label=13;break;case 13:$i=$i+3|0;$2=$2+($6<<1)|0;label=8;break;case 14:label=15;break;case 15:$2=$2+($3<<1)|0;$4=$4+($5<<1)|0;label=6;break;case 16:$1=0;label=17;break;case 17:STACKTOP=sp;return $1|0}return 0}function __ZL21icvBGRx2XYZ_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0.0,$matrix=0,$8=0,$y=0.0,$z=0.0,$17=0,$18=0,$34=0,$63=0,$64=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;_memcpy($matrix|0,16416,36)|0;if((HEAP32[6984]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL25icvBGRx2ABC_IPP_32f_CnC3RPKfiPfi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6984]|0)|0;label=14;break;case 3:$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=+HEAPF32[$matrix>>2];HEAPF32[$matrix>>2]=+HEAPF32[$matrix+8>>2];HEAPF32[$matrix+8>>2]=$t;$t=+HEAPF32[$matrix+12>>2];HEAPF32[$matrix+12>>2]=+HEAPF32[$matrix+20>>2];HEAPF32[$matrix+20>>2]=$t;$t=+HEAPF32[$matrix+24>>2];HEAPF32[$matrix+24>>2]=+HEAPF32[$matrix+32>>2];HEAPF32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=13;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:$y=+HEAPF32[$2>>2]*+HEAPF32[$matrix+12>>2]+ +HEAPF32[$2+4>>2]*+HEAPF32[$matrix+16>>2]+ +HEAPF32[$2+8>>2]*+HEAPF32[$matrix+20>>2];$z=+HEAPF32[$2>>2]*+HEAPF32[$matrix+24>>2]+ +HEAPF32[$2+4>>2]*+HEAPF32[$matrix+28>>2]+ +HEAPF32[$2+8>>2]*+HEAPF32[$matrix+32>>2];HEAPF32[$4+($i<<2)>>2]=+HEAPF32[$2>>2]*+HEAPF32[$matrix>>2]+ +HEAPF32[$2+4>>2]*+HEAPF32[$matrix+4>>2]+ +HEAPF32[$2+8>>2]*+HEAPF32[$matrix+8>>2];HEAPF32[$4+($i+1<<2)>>2]=$y;HEAPF32[$4+($i+2<<2)>>2]=$z;label=10;break;case 10:$i=$i+3|0;$2=$2+($6<<2)|0;label=8;break;case 11:label=12;break;case 12:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=6;break;case 13:$1=0;label=14;break;case 14:STACKTOP=sp;return $1|0}return 0}function __ZL21icvBGRx2HSV_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0.0,$g=0.0,$r=0.0,$h=0.0,$s=0.0,$v=0.0,$vmin=0.0,$diff=0.0,$17=0,$21=0,$22=0,$44=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=25;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=23;break};case 5:$b=+HEAPF32[$1+($6<<2)>>2];$g=+HEAPF32[$1+4>>2];$r=+HEAPF32[$1+((2^$6)<<2)>>2];$44=$r;$vmin=$44;$v=$44;if($v<$g){label=6;break}else{label=7;break};case 6:$v=$g;label=7;break;case 7:if($v<$b){label=8;break}else{label=9;break};case 8:$v=$b;label=9;break;case 9:if($vmin>$g){label=10;break}else{label=11;break};case 10:$vmin=$g;label=11;break;case 11:if($vmin>$b){label=12;break}else{label=13;break};case 12:$vmin=$b;label=13;break;case 13:$diff=$v-$vmin;$s=$diff/(+Math_abs(+$v)+1.1920928955078125e-7);$diff=60.0/($diff+1.1920928955078125e-7);if($v==$r){label=14;break}else{label=15;break};case 14:$h=($g-$b)*$diff;label=19;break;case 15:if($v==$g){label=16;break}else{label=17;break};case 16:$h=($b-$r)*$diff+120.0;label=18;break;case 17:$h=($r-$g)*$diff+240.0;label=18;break;case 18:label=19;break;case 19:if($h<0.0){label=20;break}else{label=21;break};case 20:$h=$h+360.0;label=21;break;case 21:HEAPF32[$3+($i<<2)>>2]=$h;HEAPF32[$3+($i+1<<2)>>2]=$s;HEAPF32[$3+($i+2<<2)>>2]=$v;label=22;break;case 22:$i=$i+3|0;$1=$1+($5<<2)|0;label=4;break;case 23:label=24;break;case 24:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 25:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2Lab_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0.0,$g=0.0,$r=0.0,$x=0.0,$y=0.0,$z=0.0,$L=0.0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=18;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=16;break};case 5:$b=+HEAPF32[$1+($6<<2)>>2];$g=+HEAPF32[$1+4>>2];$r=+HEAPF32[$1+((2^$6)<<2)>>2];$x=$b*.18982799351215363+$g*.3762190043926239+$r*.4339529871940613;$y=$b*.0721689984202385+$g*.7151600122451782+$r*.21267099678516388;$z=$b*.8727660179138184+$g*.10947699844837189+$r*.017758000642061234;if($x>.008856000378727913){label=6;break}else{label=7;break};case 6:$x=+_cvCbrt($x);label=8;break;case 7:$x=$x*7.7870001792907715+.13793103396892548;label=8;break;case 8:if($z>.008856000378727913){label=9;break}else{label=10;break};case 9:$z=+_cvCbrt($z);label=11;break;case 10:$z=$z*7.7870001792907715+.13793103396892548;label=11;break;case 11:if($y>.008856000378727913){label=12;break}else{label=13;break};case 12:$y=+_cvCbrt($y);$L=$y*116.0-16.0;label=14;break;case 13:$L=$y*903.2999877929688;$y=$y*7.7870001792907715+.13793103396892548;label=14;break;case 14:$b=($y-$z)*200.0;HEAPF32[$3+($i<<2)>>2]=$L;HEAPF32[$3+($i+1<<2)>>2]=($x-$y)*500.0;HEAPF32[$3+($i+2<<2)>>2]=$b;label=15;break;case 15:$i=$i+3|0;$1=$1+($5<<2)|0;label=4;break;case 16:label=17;break;case 17:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 18:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2Luv_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$b=0.0,$g=0.0,$r=0.0,$x=0.0,$y=0.0,$z=0.0,$L=0.0,$u=0.0,$v=0.0,$t=0.0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$src_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$2=$2-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=17;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=15;break};case 5:$b=+HEAPF32[$1+($6<<2)>>2];$g=+HEAPF32[$1+4>>2];$r=+HEAPF32[$1+((2^$6)<<2)>>2];$x=$b*.18042300641536713+$g*.3575800061225891+$r*.4124529957771301;$y=$b*.0721689984202385+$g*.7151600122451782+$r*.21267099678516388;$z=$b*.9502270221710205+$g*.11919300258159637+$r*.01933399960398674;if($x!=0.0){label=9;break}else{label=6;break};case 6:if($y!=0.0){label=9;break}else{label=7;break};case 7:if($z!=0.0){label=9;break}else{label=8;break};case 8:$v=0.0;$u=0.0;$L=0.0;label=13;break;case 9:if($y>.008856000378727913){label=10;break}else{label=11;break};case 10:$L=+_cvCbrt($y)*116.0-16.0;label=12;break;case 11:$L=$y*903.2999877929688;label=12;break;case 12:$t=1.0/($x+15.0*$y+3.0*$z);$u=4.0*$x*$t;$v=9.0*$y*$t;$u=13.0*$L*($u-.1979394257068634);$v=13.0*$L*($v-.4683109521865845);label=13;break;case 13:HEAPF32[$3+($i<<2)>>2]=$L;HEAPF32[$3+($i+1<<2)>>2]=$u;HEAPF32[$3+($i+2<<2)>>2]=$v;label=14;break;case 14:$i=$i+3|0;$1=$1+($5<<2)|0;label=4;break;case 15:label=16;break;case 16:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 17:STACKTOP=sp;return 0}return 0}function __ZL22icvYCrCb2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$Y=0,$Cr=0,$Cb=0,$b=0,$g=0,$r=0,$17=0,$21=0,$22=0,$83=0,$98=0,$112=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=$2>>>0|0;$4=$4>>>0|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=20;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=18;break};case 5:$Y=(HEAPU8[$1+$i|0]|0)<<14;$Cr=(HEAPU8[$1+($i+1)|0]|0)-128|0;$Cb=(HEAPU8[$1+($i+2)|0]|0)-128|0;$b=$Y+($Cb*29049|0)+8192>>14;$g=$Y+($Cr*-11698|0)+($Cb*-5636|0)+8192>>14;$r=$Y+($Cr*22987|0)+8192>>14;if(($b&-256|0)!=0){label=7;break}else{label=6;break};case 6:$83=$b;label=8;break;case 7:$83=($b|0)>0?255:0;label=8;break;case 8:HEAP8[$3+$6|0]=$83&255;if(($g&-256|0)!=0){label=10;break}else{label=9;break};case 9:$98=$g;label=11;break;case 10:$98=($g|0)>0?255:0;label=11;break;case 11:HEAP8[$3+1|0]=$98&255;if(($r&-256|0)!=0){label=13;break}else{label=12;break};case 12:$112=$r;label=14;break;case 13:$112=($r|0)>0?255:0;label=14;break;case 14:HEAP8[$3+($6^2)|0]=$112&255;if(($5|0)==4){label=15;break}else{label=16;break};case 15:HEAP8[$3+3|0]=0;label=16;break;case 16:label=17;break;case 17:$i=$i+3|0;$3=$3+$5|0;label=4;break;case 18:label=19;break;case 19:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 20:STACKTOP=sp;return 0}return 0}function __ZL21icvBGRx2HLS_32f_CnC3RPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$status=0,$8=0,$t0=0.0,$t1=0.0,$b=0.0,$g=0.0,$r=0.0,$h=0.0,$s=0.0,$l=0.0,$vmin=0.0,$vmax=0.0,$diff=0.0,$16=0,$17=0,$25=0,$31=0,$32=0,$125=0,$129=0,$130=0,$152=0.0,$203=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;if((HEAP32[6994]|0)!=0){label=2;break}else{label=17;break};case 2:$16=$8;$17=$size;HEAP32[$16>>2]=HEAP32[$17>>2];HEAP32[$16+4>>2]=HEAP32[$17+4>>2];$status=__ZL25icvBGRx2ABC_IPP_32f_CnC3RPKfiPfi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6994]|0)|0;if(($status|0)>=0){label=3;break}else{label=16;break};case 3:$25=$size|0;HEAP32[$25>>2]=(HEAP32[$25>>2]|0)*3|0;$5=($5>>>0)/4|0;label=4;break;case 4:$31=$size+4|0;$32=HEAP32[$31>>2]|0;HEAP32[$31>>2]=$32-1;if(($32|0)!=0){label=5;break}else{label=15;break};case 5:$i=0;label=6;break;case 6:if(($i|0)<=((HEAP32[$size>>2]|0)-12|0)){label=7;break}else{label=9;break};case 7:$t0=+HEAPF32[$4+($i<<2)>>2]*360.0;$t1=+HEAPF32[$4+($i+3<<2)>>2]*360.0;HEAPF32[$4+($i<<2)>>2]=$t0;HEAPF32[$4+($i+3<<2)>>2]=$t1;$t0=+HEAPF32[$4+($i+6<<2)>>2]*360.0;$t1=+HEAPF32[$4+($i+9<<2)>>2]*360.0;HEAPF32[$4+($i+6<<2)>>2]=$t0;HEAPF32[$4+($i+9<<2)>>2]=$t1;label=8;break;case 8:$i=$i+12|0;label=6;break;case 9:label=10;break;case 10:if(($i|0)<(HEAP32[$size>>2]|0)){label=11;break}else{label=13;break};case 11:HEAPF32[$4+($i<<2)>>2]=+HEAPF32[$4+($i<<2)>>2]*360.0;label=12;break;case 12:$i=$i+3|0;label=10;break;case 13:label=14;break;case 14:$4=$4+($5<<2)|0;label=4;break;case 15:label=16;break;case 16:$1=$status;label=47;break;case 17:$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$125=$size|0;HEAP32[$125>>2]=(HEAP32[$125>>2]|0)*3|0;label=18;break;case 18:$129=$size+4|0;$130=HEAP32[$129>>2]|0;HEAP32[$129>>2]=$130-1;if(($130|0)!=0){label=19;break}else{label=46;break};case 19:$i=0;label=20;break;case 20:if(($i|0)<(HEAP32[$size>>2]|0)){label=21;break}else{label=44;break};case 21:$b=+HEAPF32[$2+($7<<2)>>2];$g=+HEAPF32[$2+4>>2];$r=+HEAPF32[$2+((2^$7)<<2)>>2];$h=0.0;$s=0.0;$152=$r;$vmin=$152;$vmax=$152;if($vmax<$g){label=22;break}else{label=23;break};case 22:$vmax=$g;label=23;break;case 23:if($vmax<$b){label=24;break}else{label=25;break};case 24:$vmax=$b;label=25;break;case 25:if($vmin>$g){label=26;break}else{label=27;break};case 26:$vmin=$g;label=27;break;case 27:if($vmin>$b){label=28;break}else{label=29;break};case 28:$vmin=$b;label=29;break;case 29:$diff=$vmax-$vmin;$l=($vmax+$vmin)*.5;if($diff>1.1920928955078125e-7){label=30;break}else{label=42;break};case 30:if($l<.5){label=31;break}else{label=32;break};case 31:$203=$diff/($vmax+$vmin);label=33;break;case 32:$203=$diff/(2.0-$vmax-$vmin);label=33;break;case 33:$s=$203;$diff=60.0/$diff;if($vmax==$r){label=34;break}else{label=35;break};case 34:$h=($g-$b)*$diff;label=39;break;case 35:if($vmax==$g){label=36;break}else{label=37;break};case 36:$h=($b-$r)*$diff+120.0;label=38;break;case 37:$h=($r-$g)*$diff+240.0;label=38;break;case 38:label=39;break;case 39:if($h<0.0){label=40;break}else{label=41;break};case 40:$h=$h+360.0;label=41;break;case 41:label=42;break;case 42:HEAPF32[$4+($i<<2)>>2]=$h;HEAPF32[$4+($i+1<<2)>>2]=$l;HEAPF32[$4+($i+2<<2)>>2]=$s;label=43;break;case 43:$i=$i+3|0;$2=$2+($6<<2)|0;label=20;break;case 44:label=45;break;case 45:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=18;break;case 46:$1=0;label=47;break;case 47:STACKTOP=sp;return $1|0}return 0}function __ZL20icvXYZ2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0,$matrix=0,$8=0,$b=0,$g=0,$r=0,$17=0,$18=0,$34=0,$63=0,$64=0,$81=0,$91=0,$111=0,$121=0,$141=0,$151=0,$174=0,$188=0,$202=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;_memcpy($matrix|0,16496,36)|0;if((HEAP32[6976]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL24icvABC2BGRx_IPP_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6976]|0)|0;label=25;break;case 3:$3=$3>>>0|0;$5=$5>>>0|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=HEAP32[$matrix>>2]|0;HEAP32[$matrix>>2]=HEAP32[$matrix+24>>2];HEAP32[$matrix+24>>2]=$t;$t=HEAP32[$matrix+4>>2]|0;HEAP32[$matrix+4>>2]=HEAP32[$matrix+28>>2];HEAP32[$matrix+28>>2]=$t;$t=HEAP32[$matrix+8>>2]|0;HEAP32[$matrix+8>>2]=HEAP32[$matrix+32>>2];HEAP32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=24;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=22;break};case 9:$81=Math_imul(HEAPU8[$2+$i|0]|0,HEAP32[$matrix>>2]|0)|0;$91=$81+(Math_imul(HEAPU8[$2+($i+1)|0]|0,HEAP32[$matrix+4>>2]|0)|0)|0;$b=$91+(Math_imul(HEAPU8[$2+($i+2)|0]|0,HEAP32[$matrix+8>>2]|0)|0)+512>>10;$111=Math_imul(HEAPU8[$2+$i|0]|0,HEAP32[$matrix+12>>2]|0)|0;$121=$111+(Math_imul(HEAPU8[$2+($i+1)|0]|0,HEAP32[$matrix+16>>2]|0)|0)|0;$g=$121+(Math_imul(HEAPU8[$2+($i+2)|0]|0,HEAP32[$matrix+20>>2]|0)|0)+512>>10;$141=Math_imul(HEAPU8[$2+$i|0]|0,HEAP32[$matrix+24>>2]|0)|0;$151=$141+(Math_imul(HEAPU8[$2+($i+1)|0]|0,HEAP32[$matrix+28>>2]|0)|0)|0;$r=$151+(Math_imul(HEAPU8[$2+($i+2)|0]|0,HEAP32[$matrix+32>>2]|0)|0)+512>>10;if(($b&-256|0)!=0){label=11;break}else{label=10;break};case 10:$174=$b;label=12;break;case 11:$174=($b|0)>0?255:0;label=12;break;case 12:HEAP8[$4|0]=$174&255;if(($g&-256|0)!=0){label=14;break}else{label=13;break};case 13:$188=$g;label=15;break;case 14:$188=($g|0)>0?255:0;label=15;break;case 15:HEAP8[$4+1|0]=$188&255;if(($r&-256|0)!=0){label=17;break}else{label=16;break};case 16:$202=$r;label=18;break;case 17:$202=($r|0)>0?255:0;label=18;break;case 18:HEAP8[$4+2|0]=$202&255;if(($6|0)==4){label=19;break}else{label=20;break};case 19:HEAP8[$4+3|0]=0;label=20;break;case 20:label=21;break;case 21:$i=$i+3|0;$4=$4+$6|0;label=8;break;case 22:label=23;break;case 23:$2=$2+$3|0;$4=$4+$5|0;label=6;break;case 24:$1=0;label=25;break;case 25:STACKTOP=sp;return $1|0}return 0}function __ZL23icvYCrCb2BGRx_16u_C3CnRPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$Y=0,$Cr=0,$Cb=0,$b=0,$g=0,$r=0,$17=0,$21=0,$22=0,$83=0,$98=0,$112=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=20;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=18;break};case 5:$Y=(HEAPU16[$1+($i<<1)>>1]|0)<<14;$Cr=(HEAPU16[$1+($i+1<<1)>>1]|0)-32768|0;$Cb=(HEAPU16[$1+($i+2<<1)>>1]|0)-32768|0;$b=$Y+($Cb*29049|0)+8192>>14;$g=$Y+($Cr*-11698|0)+($Cb*-5636|0)+8192>>14;$r=$Y+($Cr*22987|0)+8192>>14;if(($b&-65536|0)!=0){label=7;break}else{label=6;break};case 6:$83=$b;label=8;break;case 7:$83=($b|0)>0?65535:0;label=8;break;case 8:HEAP16[$3+($6<<1)>>1]=$83&65535;if(($g&-65536|0)!=0){label=10;break}else{label=9;break};case 9:$98=$g;label=11;break;case 10:$98=($g|0)>0?65535:0;label=11;break;case 11:HEAP16[$3+2>>1]=$98&65535;if(($r&-65536|0)!=0){label=13;break}else{label=12;break};case 12:$112=$r;label=14;break;case 13:$112=($r|0)>0?65535:0;label=14;break;case 14:HEAP16[$3+(($6^2)<<1)>>1]=$112&65535;if(($5|0)==4){label=15;break}else{label=16;break};case 15:HEAP16[$3+6>>1]=0;label=16;break;case 16:label=17;break;case 17:$i=$i+3|0;$3=$3+($5<<1)|0;label=4;break;case 18:label=19;break;case 19:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 20:STACKTOP=sp;return 0}return 0}function __ZL20icvHSV2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$src1=0,$s=0,$v=0,$8=0,$r=0,$g=0,$9=0,$21=0,$26=0,$35=0,$36=0,$64=0,$106=0,$183=0,$184=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;if((HEAP32[7e3]|0)!=0){label=2;break}else{label=29;break};case 2:if(16384>(HEAP32[$size>>2]|0)){label=3;break}else{label=4;break};case 3:$21=HEAP32[$size>>2]|0;label=5;break;case 4:$21=16384;label=5;break;case 5:$block_size=$21;$status=0;$26=STACKTOP;STACKTOP=STACKTOP+(($block_size*3|0)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($26,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=6;break;case 6:$35=$size+4|0;$36=HEAP32[$35>>2]|0;HEAP32[$35>>2]=$36-1;if(($36|0)!=0){label=7;break}else{label=28;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=26;break};case 9:$src1=$2+($i*3|0)|0;if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=10;break}else{label=11;break};case 10:$64=(HEAP32[$size>>2]|0)-$i|0;label=12;break;case 11:$64=$block_size;label=12;break;case 12:$di=$64;$k=0;label=13;break;case 13:if(($k|0)<($di*3|0|0)){label=14;break}else{label=16;break};case 14:$s=HEAP8[$src1+($k+1)|0]|0;$v=HEAP8[$src1+($k+2)|0]|0;HEAP8[$buffer+$k|0]=HEAP8[22344+(HEAPU8[$src1+$k|0]|0)|0]|0;HEAP8[$buffer+($k+1)|0]=$s;HEAP8[$buffer+($k+2)|0]=$v;label=15;break;case 15:$k=$k+3|0;label=13;break;case 16:$106=HEAP32[7e3]|0;__Z6cvSizeii($8,$di,1);$status=FUNCTION_TABLE_iiiiii[$106&1023]($buffer,$di*3|0,$buffer,$di*3|0,$8)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=30;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=HEAP8[$buffer+$k|0]|0;$g=HEAP8[$buffer+($k+1)|0]|0;HEAP8[$4+$7|0]=HEAP8[$buffer+($k+2)|0]|0;HEAP8[$4+1|0]=$g;HEAP8[$4+($7^2)|0]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAP8[$4+3|0]=0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+$6|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=8;break;case 26:label=27;break;case 27:$2=$2+$3|0;$4=$4+$5|0;label=6;break;case 28:$1=0;label=30;break;case 29:$183=$9;$184=$size;HEAP32[$183>>2]=HEAP32[$184>>2];HEAP32[$183+4>>2]=HEAP32[$184+4>>2];$1=__ZL20icvABC2BGRx_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEPKfi($2,$3,$4,$5,$9,$6,$7,394,16584,0)|0;label=30;break;case 30:STACKTOP=sp;return $1|0}return 0}function __ZL20icvHLS2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$src1=0,$l=0,$s=0,$8=0,$r=0,$g=0,$9=0,$21=0,$26=0,$35=0,$36=0,$64=0,$106=0,$183=0,$184=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;if((HEAP32[7002]|0)!=0){label=2;break}else{label=29;break};case 2:if(16384>(HEAP32[$size>>2]|0)){label=3;break}else{label=4;break};case 3:$21=HEAP32[$size>>2]|0;label=5;break;case 4:$21=16384;label=5;break;case 5:$block_size=$21;$status=0;$26=STACKTOP;STACKTOP=STACKTOP+(($block_size*3|0)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($26,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=6;break;case 6:$35=$size+4|0;$36=HEAP32[$35>>2]|0;HEAP32[$35>>2]=$36-1;if(($36|0)!=0){label=7;break}else{label=28;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=26;break};case 9:$src1=$2+($i*3|0)|0;if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=10;break}else{label=11;break};case 10:$64=(HEAP32[$size>>2]|0)-$i|0;label=12;break;case 11:$64=$block_size;label=12;break;case 12:$di=$64;$k=0;label=13;break;case 13:if(($k|0)<($di*3|0|0)){label=14;break}else{label=16;break};case 14:$l=HEAP8[$src1+($k+1)|0]|0;$s=HEAP8[$src1+($k+2)|0]|0;HEAP8[$buffer+$k|0]=HEAP8[22344+(HEAPU8[$src1+$k|0]|0)|0]|0;HEAP8[$buffer+($k+1)|0]=$l;HEAP8[$buffer+($k+2)|0]=$s;label=15;break;case 15:$k=$k+3|0;label=13;break;case 16:$106=HEAP32[7002]|0;__Z6cvSizeii($8,$di,1);$status=FUNCTION_TABLE_iiiiii[$106&1023]($buffer,$di*3|0,$buffer,$di*3|0,$8)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=30;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=HEAP8[$buffer+$k|0]|0;$g=HEAP8[$buffer+($k+1)|0]|0;HEAP8[$4+$7|0]=HEAP8[$buffer+($k+2)|0]|0;HEAP8[$4+1|0]=$g;HEAP8[$4+($7^2)|0]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAP8[$4+3|0]=0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+$6|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=8;break;case 26:label=27;break;case 27:$2=$2+$3|0;$4=$4+$5|0;label=6;break;case 28:$1=0;label=30;break;case 29:$183=$9;$184=$size;HEAP32[$183>>2]=HEAP32[$184>>2];HEAP32[$183+4>>2]=HEAP32[$184+4>>2];$1=__ZL20icvABC2BGRx_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEPKfi($2,$3,$4,$5,$9,$6,$7,508,16608,1)|0;label=30;break;case 30:STACKTOP=sp;return $1|0}return 0}function __ZL20icvLab2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$17=0,$18=0,$29=0,$30=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;if((HEAP32[6998]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL24icvABC2BGRx_IPP_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7^2,HEAP32[6998]|0)|0;label=4;break;case 3:$29=$9;$30=$size;HEAP32[$29>>2]=HEAP32[$30>>2];HEAP32[$29+4>>2]=HEAP32[$30+4>>2];$1=__ZL20icvABC2BGRx_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEPKfi($2,$3,$4,$5,$9,$6,$7,366,16560,1)|0;label=4;break;case 4:STACKTOP=sp;return $1|0}return 0}function __ZL20icvLuv2BGRx_8u_C3CnRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$9=0,$17=0,$18=0,$28=0,$29=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$9=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;if((HEAP32[6996]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL24icvABC2BGRx_IPP_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6996]|0)|0;label=4;break;case 3:$28=$9;$29=$size;HEAP32[$28>>2]=HEAP32[$29>>2];HEAP32[$28+4>>2]=HEAP32[$29+4>>2];$1=__ZL20icvABC2BGRx_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEPKfi($2,$3,$4,$5,$9,$6,$7,214,16536,1)|0;label=4;break;case 4:STACKTOP=sp;return $1|0}return 0}function __ZL23icvYCrCb2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$Y=0.0,$Cr=0.0,$Cb=0.0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:$Y=+HEAPF32[$1+($i<<2)>>2];$Cr=+HEAPF32[$1+($i+1<<2)>>2]-.5;$Cb=+HEAPF32[$1+($i+2<<2)>>2]-.5;HEAPF32[$3+($6<<2)>>2]=$Y+$Cb*1.7730000019073486;HEAPF32[$3+4>>2]=$Y+-.7139999866485596*$Cr+-.3440000116825104*$Cb;HEAPF32[$3+(($6^2)<<2)>>2]=$Y+$Cr*1.402999997138977;if(($5|0)==4){label=6;break}else{label=7;break};case 6:HEAPF32[$3+12>>2]=0.0;label=7;break;case 7:label=8;break;case 8:$i=$i+3|0;$3=$3+($5<<2)|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL21icvXYZ2BGRx_16u_C3CnRPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0,$matrix=0,$8=0,$b=0,$g=0,$r=0,$17=0,$18=0,$34=0,$63=0,$64=0,$81=0,$91=0,$111=0,$121=0,$141=0,$151=0,$174=0,$188=0,$202=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;_memcpy($matrix|0,16208,36)|0;if((HEAP32[6980]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL25icvABC2BGRx_IPP_16u_C3CnRPKtiPti6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6980]|0)|0;label=25;break;case 3:$3=($3>>>0)/2|0;$5=($5>>>0)/2|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=HEAP32[$matrix>>2]|0;HEAP32[$matrix>>2]=HEAP32[$matrix+24>>2];HEAP32[$matrix+24>>2]=$t;$t=HEAP32[$matrix+4>>2]|0;HEAP32[$matrix+4>>2]=HEAP32[$matrix+28>>2];HEAP32[$matrix+28>>2]=$t;$t=HEAP32[$matrix+8>>2]|0;HEAP32[$matrix+8>>2]=HEAP32[$matrix+32>>2];HEAP32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=24;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=22;break};case 9:$81=Math_imul(HEAPU16[$2+($i<<1)>>1]|0,HEAP32[$matrix>>2]|0)|0;$91=$81+(Math_imul(HEAPU16[$2+($i+1<<1)>>1]|0,HEAP32[$matrix+4>>2]|0)|0)|0;$b=$91+(Math_imul(HEAPU16[$2+($i+2<<1)>>1]|0,HEAP32[$matrix+8>>2]|0)|0)+512>>10;$111=Math_imul(HEAPU16[$2+($i<<1)>>1]|0,HEAP32[$matrix+12>>2]|0)|0;$121=$111+(Math_imul(HEAPU16[$2+($i+1<<1)>>1]|0,HEAP32[$matrix+16>>2]|0)|0)|0;$g=$121+(Math_imul(HEAPU16[$2+($i+2<<1)>>1]|0,HEAP32[$matrix+20>>2]|0)|0)+512>>10;$141=Math_imul(HEAPU16[$2+($i<<1)>>1]|0,HEAP32[$matrix+24>>2]|0)|0;$151=$141+(Math_imul(HEAPU16[$2+($i+1<<1)>>1]|0,HEAP32[$matrix+28>>2]|0)|0)|0;$r=$151+(Math_imul(HEAPU16[$2+($i+2<<1)>>1]|0,HEAP32[$matrix+32>>2]|0)|0)+512>>10;if(($b&-65536|0)!=0){label=11;break}else{label=10;break};case 10:$174=$b;label=12;break;case 11:$174=($b|0)>0?65535:0;label=12;break;case 12:HEAP16[$4>>1]=$174&65535;if(($g&-65536|0)!=0){label=14;break}else{label=13;break};case 13:$188=$g;label=15;break;case 14:$188=($g|0)>0?65535:0;label=15;break;case 15:HEAP16[$4+2>>1]=$188&65535;if(($r&-65536|0)!=0){label=17;break}else{label=16;break};case 16:$202=$r;label=18;break;case 17:$202=($r|0)>0?65535:0;label=18;break;case 18:HEAP16[$4+4>>1]=$202&65535;if(($6|0)==4){label=19;break}else{label=20;break};case 19:HEAP16[$4+6>>1]=0;label=20;break;case 20:label=21;break;case 21:$i=$i+3|0;$4=$4+($6<<1)|0;label=8;break;case 22:label=23;break;case 23:$2=$2+($3<<1)|0;$4=$4+($5<<1)|0;label=6;break;case 24:$1=0;label=25;break;case 25:STACKTOP=sp;return $1|0}return 0}function __ZL21icvXYZ2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$t=0.0,$matrix=0,$8=0,$g=0.0,$r=0.0,$17=0,$18=0,$34=0,$63=0,$64=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$matrix=sp|0;$8=sp+40|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;_memcpy($matrix|0,16168,36)|0;if((HEAP32[6978]|0)!=0){label=2;break}else{label=3;break};case 2:$17=$8;$18=$size;HEAP32[$17>>2]=HEAP32[$18>>2];HEAP32[$17+4>>2]=HEAP32[$18+4>>2];$1=__ZL25icvABC2BGRx_IPP_32f_C3CnRPKfiPfi6CvSizeiiPF8CvStatusPKviPviS2_E($2,$3,$4,$5,$8,$6,$7,HEAP32[6978]|0)|0;label=16;break;case 3:$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$34=$size|0;HEAP32[$34>>2]=(HEAP32[$34>>2]|0)*3|0;if(($7|0)!=0){label=4;break}else{label=5;break};case 4:$t=+HEAPF32[$matrix>>2];HEAPF32[$matrix>>2]=+HEAPF32[$matrix+24>>2];HEAPF32[$matrix+24>>2]=$t;$t=+HEAPF32[$matrix+4>>2];HEAPF32[$matrix+4>>2]=+HEAPF32[$matrix+28>>2];HEAPF32[$matrix+28>>2]=$t;$t=+HEAPF32[$matrix+8>>2];HEAPF32[$matrix+8>>2]=+HEAPF32[$matrix+32>>2];HEAPF32[$matrix+32>>2]=$t;label=5;break;case 5:label=6;break;case 6:$63=$size+4|0;$64=HEAP32[$63>>2]|0;HEAP32[$63>>2]=$64-1;if(($64|0)!=0){label=7;break}else{label=15;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=13;break};case 9:$g=+HEAPF32[$2+($i<<2)>>2]*+HEAPF32[$matrix+12>>2]+ +HEAPF32[$2+($i+1<<2)>>2]*+HEAPF32[$matrix+16>>2]+ +HEAPF32[$2+($i+2<<2)>>2]*+HEAPF32[$matrix+20>>2];$r=+HEAPF32[$2+($i<<2)>>2]*+HEAPF32[$matrix+24>>2]+ +HEAPF32[$2+($i+1<<2)>>2]*+HEAPF32[$matrix+28>>2]+ +HEAPF32[$2+($i+2<<2)>>2]*+HEAPF32[$matrix+32>>2];HEAPF32[$4>>2]=+HEAPF32[$2+($i<<2)>>2]*+HEAPF32[$matrix>>2]+ +HEAPF32[$2+($i+1<<2)>>2]*+HEAPF32[$matrix+4>>2]+ +HEAPF32[$2+($i+2<<2)>>2]*+HEAPF32[$matrix+8>>2];HEAPF32[$4+4>>2]=$g;HEAPF32[$4+8>>2]=$r;if(($6|0)==4){label=10;break}else{label=11;break};case 10:HEAPF32[$4+12>>2]=0.0;label=11;break;case 11:label=12;break;case 12:$i=$i+3|0;$4=$4+($6<<2)|0;label=8;break;case 13:label=14;break;case 14:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=6;break;case 15:$1=0;label=16;break;case 16:STACKTOP=sp;return $1|0}return 0}function __ZL21icvHSV2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$h=0.0,$s=0.0,$v=0.0,$b=0.0,$g=0.0,$r=0.0,$tab=0,$sector=0,$17=0,$21=0,$22=0,$49=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$tab=sp|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=25;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=23;break};case 5:$h=+HEAPF32[$1+($i<<2)>>2];$s=+HEAPF32[$1+($i+1<<2)>>2];$v=+HEAPF32[$1+($i+2<<2)>>2];if($s==0.0){label=6;break}else{label=7;break};case 6:$49=$v;$r=$49;$g=$49;$b=$49;label=19;break;case 7:$h=$h*.01666666753590107;if($h<0.0){label=8;break}else{label=12;break};case 8:label=9;break;case 9:$h=$h+6.0;label=10;break;case 10:if($h<0.0){label=9;break}else{label=11;break};case 11:label=18;break;case 12:if($h>=6.0){label=13;break}else{label=17;break};case 13:label=14;break;case 14:$h=$h-6.0;label=15;break;case 15:if($h>=6.0){label=14;break}else{label=16;break};case 16:label=17;break;case 17:label=18;break;case 18:$sector=__Z7cvFloord($h)|0;$h=$h- +($sector|0);HEAPF32[$tab>>2]=$v;HEAPF32[$tab+4>>2]=$v*(1.0-$s);HEAPF32[$tab+8>>2]=$v*(1.0-$s*$h);HEAPF32[$tab+12>>2]=$v*(1.0-$s*(1.0-$h));$b=+HEAPF32[$tab+(HEAP32[16248+($sector*12|0)>>2]<<2)>>2];$g=+HEAPF32[$tab+(HEAP32[16252+($sector*12|0)>>2]<<2)>>2];$r=+HEAPF32[$tab+(HEAP32[16256+($sector*12|0)>>2]<<2)>>2];label=19;break;case 19:HEAPF32[$3+($6<<2)>>2]=$b;HEAPF32[$3+4>>2]=$g;HEAPF32[$3+(($6^2)<<2)>>2]=$r;if(($5|0)==4){label=20;break}else{label=21;break};case 20:HEAPF32[$3+12>>2]=0.0;label=21;break;case 21:label=22;break;case 22:$i=$i+3|0;$3=$3+($5<<2)|0;label=4;break;case 23:label=24;break;case 24:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 25:STACKTOP=sp;return 0}return 0}function __ZL21icvLab2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$L=0.0,$b=0.0,$x=0.0,$y=0.0,$z=0.0,$17=0,$21=0,$22=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:$L=+HEAPF32[$1+($i<<2)>>2];$b=+HEAPF32[$1+($i+2<<2)>>2];$L=($L+16.0)*.008620689623057842;$x=$L+ +HEAPF32[$1+($i+1<<2)>>2]*.0020000000949949026;$z=$L-$b*.004999999888241291;$y=$L*$L*$L;$x=$x*$x*$x;$z=$z*$z*$z;$b=$x*.052890975028276443+$y*-.20404300093650818+$z*1.1511515378952026;HEAPF32[$3+($6<<2)>>2]=$b;HEAPF32[$3+4>>2]=$x*-.9212350249290466+$y*1.8759909868240356+$z*.045244261622428894;HEAPF32[$3+(($6^2)<<2)>>2]=$x*3.079932689666748+$y*-1.5371500253677368+$z*-.5427820086479187;if(($5|0)==4){label=6;break}else{label=7;break};case 6:HEAPF32[$3+12>>2]=0.0;label=7;break;case 7:label=8;break;case 8:$i=$i+3|0;$3=$3+($5<<2)|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL21icvLuv2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$L=0.0,$x=0.0,$y=0.0,$z=0.0,$t=0.0,$u1=0.0,$v1=0.0,$17=0,$21=0,$22=0,$66=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$dst_cn;$6=$blue_idx;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;$4=$4-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0;$17=$size|0;HEAP32[$17>>2]=(HEAP32[$17>>2]|0)*3|0;label=2;break;case 2:$21=$size+4|0;$22=HEAP32[$21>>2]|0;HEAP32[$21>>2]=$22-1;if(($22|0)!=0){label=3;break}else{label=17;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=15;break};case 5:$L=+HEAPF32[$1+($i<<2)>>2];if($L>=8.0){label=6;break}else{label=7;break};case 6:$t=($L+16.0)*.008620689623057842;$y=$t*$t*$t;label=11;break;case 7:$y=$L*.001107051968574524;if($L<.0010000000474974513){label=8;break}else{label=9;break};case 8:$66=.0010000000474974513;label=10;break;case 9:$66=$L;label=10;break;case 10:$L=$66;label=11;break;case 11:$t=1.0/(13.0*$L);$u1=+HEAPF32[$1+($i+1<<2)>>2]*$t+.1979394257068634;$v1=+HEAPF32[$1+($i+2<<2)>>2]*$t+.4683109521865845;$x=$u1*2.25*$y/$v1;$z=(12.0-3.0*$u1-20.0*$v1)*$y/(4.0*$v1);HEAPF32[$3+($6<<2)>>2]=.05564799904823303*$x+-.20404300093650818*$y+$z*1.0573110580444336;HEAPF32[$3+4>>2]=-.9692559838294983*$x+$y*1.8759909868240356+.04155600070953369*$z;HEAPF32[$3+(($6^2)<<2)>>2]=$x*3.240478992462158+$y*-1.5371500253677368+-.49853500723838806*$z;if(($5|0)==4){label=12;break}else{label=13;break};case 12:HEAPF32[$3+12>>2]=0.0;label=13;break;case 13:label=14;break;case 14:$i=$i+3|0;$3=$3+($5<<2)|0;label=4;break;case 15:label=16;break;case 16:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 17:STACKTOP=sp;return 0}return 0}function __ZL21icvHLS2BGRx_32f_C3CnRPKfiPfi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$block_size=0,$buffer=0,$di=0,$k=0,$status=0,$src1=0,$s=0.0,$v=0.0,$8=0,$r=0.0,$g=0.0,$h1=0.0,$l=0.0,$s2=0.0,$b3=0.0,$g4=0.0,$r5=0.0,$tab=0,$sector=0,$p2=0.0,$p1=0.0,$24=0,$29=0,$39=0,$40=0,$68=0,$108=0,$191=0,$195=0,$196=0,$223=0.0,$241=0.0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+24|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$8=sp|0;$tab=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;if((HEAP32[7004]|0)!=0){label=2;break}else{label=29;break};case 2:if(1024>(HEAP32[$size>>2]|0)){label=3;break}else{label=4;break};case 3:$24=HEAP32[$size>>2]|0;label=5;break;case 4:$24=1024;label=5;break;case 5:$block_size=$24;$status=0;$29=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<2)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($29,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=6;break;case 6:$39=$size+4|0;$40=HEAP32[$39>>2]|0;HEAP32[$39>>2]=$40-1;if(($40|0)!=0){label=7;break}else{label=28;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=26;break};case 9:$src1=$2+(($i*3|0)<<2)|0;if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=10;break}else{label=11;break};case 10:$68=(HEAP32[$size>>2]|0)-$i|0;label=12;break;case 11:$68=$block_size;label=12;break;case 12:$di=$68;$k=0;label=13;break;case 13:if(($k|0)<($di*3|0|0)){label=14;break}else{label=16;break};case 14:$s=+HEAPF32[$src1+($k+1<<2)>>2];$v=+HEAPF32[$src1+($k+2<<2)>>2];HEAPF32[$buffer+($k<<2)>>2]=+HEAPF32[$src1+($k<<2)>>2]*.0027777778450399637;HEAPF32[$buffer+($k+1<<2)>>2]=$s;HEAPF32[$buffer+($k+2<<2)>>2]=$v;label=15;break;case 15:$k=$k+3|0;label=13;break;case 16:$108=HEAP32[7004]|0;__Z6cvSizeii($8,$di,1);$status=FUNCTION_TABLE_iiiiii[$108&1023]($buffer,($di*3|0)<<2,$buffer,($di*3|0)<<2,$8)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=57;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=+HEAPF32[$buffer+($k<<2)>>2];$g=+HEAPF32[$buffer+($k+1<<2)>>2];HEAPF32[$4+($7<<2)>>2]=+HEAPF32[$buffer+($k+2<<2)>>2];HEAPF32[$4+4>>2]=$g;HEAPF32[$4+(($7^2)<<2)>>2]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAPF32[$4+12>>2]=0.0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+($6<<2)|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=8;break;case 26:label=27;break;case 27:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=6;break;case 28:$1=0;label=57;break;case 29:$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;$191=$size|0;HEAP32[$191>>2]=(HEAP32[$191>>2]|0)*3|0;label=30;break;case 30:$195=$size+4|0;$196=HEAP32[$195>>2]|0;HEAP32[$195>>2]=$196-1;if(($196|0)!=0){label=31;break}else{label=56;break};case 31:$i=0;label=32;break;case 32:if(($i|0)<(HEAP32[$size>>2]|0)){label=33;break}else{label=54;break};case 33:$h1=+HEAPF32[$2+($i<<2)>>2];$l=+HEAPF32[$2+($i+1<<2)>>2];$s2=+HEAPF32[$2+($i+2<<2)>>2];if($s2==0.0){label=34;break}else{label=35;break};case 34:$223=$l;$r5=$223;$g4=$223;$b3=$223;label=50;break;case 35:if($l<=.5){label=36;break}else{label=37;break};case 36:$241=$l*(1.0+$s2);label=38;break;case 37:$241=$l+$s2-$l*$s2;label=38;break;case 38:$p2=$241;$p1=2.0*$l-$p2;$h1=$h1*.01666666753590107;if($h1<0.0){label=39;break}else{label=43;break};case 39:label=40;break;case 40:$h1=$h1+6.0;label=41;break;case 41:if($h1<0.0){label=40;break}else{label=42;break};case 42:label=49;break;case 43:if($h1>=6.0){label=44;break}else{label=48;break};case 44:label=45;break;case 45:$h1=$h1-6.0;label=46;break;case 46:if($h1>=6.0){label=45;break}else{label=47;break};case 47:label=48;break;case 48:label=49;break;case 49:$sector=__Z7cvFloord($h1)|0;$h1=$h1- +($sector|0);HEAPF32[$tab>>2]=$p2;HEAPF32[$tab+4>>2]=$p1;HEAPF32[$tab+8>>2]=$p1+($p2-$p1)*(1.0-$h1);HEAPF32[$tab+12>>2]=$p1+($p2-$p1)*$h1;$b3=+HEAPF32[$tab+(HEAP32[16320+($sector*12|0)>>2]<<2)>>2];$g4=+HEAPF32[$tab+(HEAP32[16324+($sector*12|0)>>2]<<2)>>2];$r5=+HEAPF32[$tab+(HEAP32[16328+($sector*12|0)>>2]<<2)>>2];label=50;break;case 50:HEAPF32[$4+($7<<2)>>2]=$b3;HEAPF32[$4+4>>2]=$g4;HEAPF32[$4+(($7^2)<<2)>>2]=$r5;if(($6|0)==4){label=51;break}else{label=52;break};case 51:HEAPF32[$4+12>>2]=0.0;label=52;break;case 52:label=53;break;case 53:$i=$i+3|0;$4=$4+($6<<2)|0;label=32;break;case 54:label=55;break;case 55:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=30;break;case 56:$1=0;label=57;break;case 57:STACKTOP=sp;return $1|0}return 0}function __Z10cvAlignPtrPKvi($ptr,$align){$ptr=$ptr|0;$align=$align|0;var $2=0;$2=$align;return $ptr+$2-1&~($2-1)|0}function __Z6cvSizeii($agg_result,$width,$height){$agg_result=$agg_result|0;$width=$width|0;$height=$height|0;HEAP32[$agg_result>>2]=$width;HEAP32[$agg_result+4>>2]=$height;return}function __Z7cvRoundd($value){$value=+$value;var $temp=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;$temp=sp|0;HEAPF64[$temp>>3]=$value+6755399441055744.0;STACKTOP=sp;return HEAP32[$temp>>2]|0}function __ZL21icvBayer2BGR_8u_C1C3RPKhiPhi6CvSizei($bayer0,$bayer_step,$dst0,$dst_step,$size,$code){$bayer0=$bayer0|0;$bayer_step=$bayer_step|0;$dst0=$dst0|0;$dst_step=$dst_step|0;$size=$size|0;$code=$code|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$blue=0,$start_with_green=0,$t0=0,$t1=0,$bayer=0,$dst=0,$bayer_end=0,$12=0,$20=0,$33=0,$43=0,$46=0,$50=0,$51=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bayer0;$2=$bayer_step;$3=$dst0;$4=$dst_step;$5=$code;if(($5|0)==46){$12=1;label=3;break}else{label=2;break};case 2:$12=($5|0)==47;label=3;break;case 3:$blue=$12?-1:1;if(($5|0)==47){$20=1;label=5;break}else{label=4;break};case 4:$20=($5|0)==49;label=5;break;case 5:$start_with_green=$20&1;_memset($3|0,0,(HEAP32[$size>>2]|0)*3|0|0);$33=$3+(Math_imul((HEAP32[$size+4>>2]|0)-1|0,$4)|0)|0;_memset($33|0,0,(HEAP32[$size>>2]|0)*3|0|0);$3=$3+($4+4)|0;$43=$size+4|0;HEAP32[$43>>2]=(HEAP32[$43>>2]|0)-2;$46=$size|0;HEAP32[$46>>2]=(HEAP32[$46>>2]|0)-2;label=6;break;case 6:$50=$size+4|0;$51=HEAP32[$50>>2]|0;HEAP32[$50>>2]=$51-1;if(($51|0)>0){label=7;break}else{label=26;break};case 7:$bayer=$1;$dst=$3;$bayer_end=$bayer+(HEAP32[$size>>2]|0)|0;HEAP8[$dst+(((HEAP32[$size>>2]|0)*3|0)+1)|0]=0;HEAP8[$dst+((HEAP32[$size>>2]|0)*3|0)|0]=0;HEAP8[$dst+(((HEAP32[$size>>2]|0)*3|0)-1)|0]=0;HEAP8[$dst-2|0]=0;HEAP8[$dst-3|0]=0;HEAP8[$dst-4|0]=0;if((HEAP32[$size>>2]|0)<=0){label=8;break}else{label=9;break};case 8:label=25;break;case 9:if(($start_with_green|0)!=0){label=10;break}else{label=11;break};case 10:$t0=(HEAPU8[$bayer+1|0]|0)+(HEAPU8[$bayer+(($2<<1)+1)|0]|0)+1>>1;$t1=(HEAPU8[$bayer+$2|0]|0)+(HEAPU8[$bayer+($2+2)|0]|0)+1>>1;HEAP8[$dst+(-$blue|0)|0]=$t0&255;HEAP8[$dst|0]=HEAP8[$bayer+($2+1)|0]|0;HEAP8[$dst+$blue|0]=$t1&255;$bayer=$bayer+1|0;$dst=$dst+3|0;label=11;break;case 11:if(($blue|0)>0){label=12;break}else{label=17;break};case 12:label=13;break;case 13:if($bayer>>>0<=($bayer_end-2|0)>>>0){label=14;break}else{label=16;break};case 14:$t0=(HEAPU8[$bayer|0]|0)+(HEAPU8[$bayer+2|0]|0)+(HEAPU8[$bayer+($2<<1)|0]|0)+(HEAPU8[$bayer+(($2<<1)+2)|0]|0)+2>>2;$t1=(HEAPU8[$bayer+1|0]|0)+(HEAPU8[$bayer+$2|0]|0)+(HEAPU8[$bayer+($2+2)|0]|0)+(HEAPU8[$bayer+(($2<<1)+1)|0]|0)+2>>2;HEAP8[$dst-1|0]=$t0&255;HEAP8[$dst|0]=$t1&255;HEAP8[$dst+1|0]=HEAP8[$bayer+($2+1)|0]|0;$t0=(HEAPU8[$bayer+2|0]|0)+(HEAPU8[$bayer+(($2<<1)+2)|0]|0)+1>>1;$t1=(HEAPU8[$bayer+($2+1)|0]|0)+(HEAPU8[$bayer+($2+3)|0]|0)+1>>1;HEAP8[$dst+2|0]=$t0&255;HEAP8[$dst+3|0]=HEAP8[$bayer+($2+2)|0]|0;HEAP8[$dst+4|0]=$t1&255;label=15;break;case 15:$bayer=$bayer+2|0;$dst=$dst+6|0;label=13;break;case 16:label=22;break;case 17:label=18;break;case 18:if($bayer>>>0<=($bayer_end-2|0)>>>0){label=19;break}else{label=21;break};case 19:$t0=(HEAPU8[$bayer|0]|0)+(HEAPU8[$bayer+2|0]|0)+(HEAPU8[$bayer+($2<<1)|0]|0)+(HEAPU8[$bayer+(($2<<1)+2)|0]|0)+2>>2;$t1=(HEAPU8[$bayer+1|0]|0)+(HEAPU8[$bayer+$2|0]|0)+(HEAPU8[$bayer+($2+2)|0]|0)+(HEAPU8[$bayer+(($2<<1)+1)|0]|0)+2>>2;HEAP8[$dst+1|0]=$t0&255;HEAP8[$dst|0]=$t1&255;HEAP8[$dst-1|0]=HEAP8[$bayer+($2+1)|0]|0;$t0=(HEAPU8[$bayer+2|0]|0)+(HEAPU8[$bayer+(($2<<1)+2)|0]|0)+1>>1;$t1=(HEAPU8[$bayer+($2+1)|0]|0)+(HEAPU8[$bayer+($2+3)|0]|0)+1>>1;HEAP8[$dst+4|0]=$t0&255;HEAP8[$dst+3|0]=HEAP8[$bayer+($2+2)|0]|0;HEAP8[$dst+2|0]=$t1&255;label=20;break;case 20:$bayer=$bayer+2|0;$dst=$dst+6|0;label=18;break;case 21:label=22;break;case 22:if($bayer>>>0<$bayer_end>>>0){label=23;break}else{label=24;break};case 23:$t0=(HEAPU8[$bayer|0]|0)+(HEAPU8[$bayer+2|0]|0)+(HEAPU8[$bayer+($2<<1)|0]|0)+(HEAPU8[$bayer+(($2<<1)+2)|0]|0)+2>>2;$t1=(HEAPU8[$bayer+1|0]|0)+(HEAPU8[$bayer+$2|0]|0)+(HEAPU8[$bayer+($2+2)|0]|0)+(HEAPU8[$bayer+(($2<<1)+1)|0]|0)+2>>2;HEAP8[$dst+(-$blue|0)|0]=$t0&255;HEAP8[$dst|0]=$t1&255;HEAP8[$dst+$blue|0]=HEAP8[$bayer+($2+1)|0]|0;$bayer=$bayer+1|0;$dst=$dst+3|0;label=24;break;case 24:$blue=-$blue|0;$start_with_green=(($start_with_green|0)!=0^1)&1;label=25;break;case 25:$1=$1+$2|0;$3=$3+$4|0;label=6;break;case 26:STACKTOP=sp;return 0}return 0}function __Z7cvFloord($value){$value=+$value;var $1=0.0,$temp=0,$diff=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;$diff=sp|0;$1=$value;$temp=__Z7cvRoundd($1)|0;HEAPF32[$diff>>2]=$1- +($temp|0);STACKTOP=sp;return $temp-((HEAP32[$diff>>2]|0)<0)|0}function __ZL25icvABC2BGRx_IPP_32f_C3CnRPKfiPfi6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$10=0,$r=0.0,$g=0.0,$19=0,$30=0,$42=0,$43=0,$54=0,$64=0,$65=0,$93=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;$8=$ipp_func;if(1024>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=1024;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$42=$9;$43=$size;HEAP32[$42>>2]=HEAP32[$43>>2];HEAP32[$42+4>>2]=HEAP32[$43+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=29;break;case 9:$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;$54=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<2)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($54,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$64=$size+4|0;$65=HEAP32[$64>>2]|0;HEAP32[$64>>2]=$65-1;if(($65|0)!=0){label=11;break}else{label=28;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=26;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$93=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$93=$block_size;label=16;break;case 16:$di=$93;__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($2+(($i*3|0)<<2)|0,1073741824,$buffer,1073741824,$10)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=29;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=+HEAPF32[$buffer+($k<<2)>>2];$g=+HEAPF32[$buffer+($k+1<<2)>>2];HEAPF32[$4+($7<<2)>>2]=+HEAPF32[$buffer+($k+2<<2)>>2];HEAPF32[$4+4>>2]=$g;HEAPF32[$4+(($7^2)<<2)>>2]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAPF32[$4+12>>2]=0.0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+($6<<2)|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=12;break;case 26:label=27;break;case 27:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=10;break;case 28:$1=0;label=29;break;case 29:STACKTOP=sp;return $1|0}return 0}function __ZL25icvABC2BGRx_IPP_16u_C3CnRPKtiPti6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$10=0,$r=0,$g=0,$19=0,$30=0,$42=0,$43=0,$54=0,$64=0,$65=0,$93=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;$8=$ipp_func;if(1024>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=1024;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$42=$9;$43=$size;HEAP32[$42>>2]=HEAP32[$43>>2];HEAP32[$42+4>>2]=HEAP32[$43+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=29;break;case 9:$3=($3>>>0)/2|0;$5=($5>>>0)/2|0;$54=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<1)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($54,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$64=$size+4|0;$65=HEAP32[$64>>2]|0;HEAP32[$64>>2]=$65-1;if(($65|0)!=0){label=11;break}else{label=28;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=26;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$93=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$93=$block_size;label=16;break;case 16:$di=$93;__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($2+(($i*3|0)<<1)|0,1073741824,$buffer,1073741824,$10)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=29;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=HEAP16[$buffer+($k<<1)>>1]|0;$g=HEAP16[$buffer+($k+1<<1)>>1]|0;HEAP16[$4+($7<<1)>>1]=HEAP16[$buffer+($k+2<<1)>>1]|0;HEAP16[$4+2>>1]=$g;HEAP16[$4+(($7^2)<<1)>>1]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAP16[$4+6>>1]=0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+($6<<1)|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=12;break;case 26:label=27;break;case 27:$2=$2+($3<<1)|0;$4=$4+($5<<1)|0;label=10;break;case 28:$1=0;label=29;break;case 29:STACKTOP=sp;return $1|0}return 0}function __ZL24icvABC2BGRx_IPP_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$10=0,$r=0,$g=0,$19=0,$30=0,$40=0,$41=0,$52=0,$61=0,$62=0,$90=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$dst_cn;$7=$blue_idx;$8=$ipp_func;if(1024>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=1024;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$40=$9;$41=$size;HEAP32[$40>>2]=HEAP32[$41>>2];HEAP32[$40+4>>2]=HEAP32[$41+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=29;break;case 9:$3=$3>>>0|0;$5=$5>>>0|0;$52=STACKTOP;STACKTOP=STACKTOP+(($block_size*3|0)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($52,32)|0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$61=$size+4|0;$62=HEAP32[$61>>2]|0;HEAP32[$61>>2]=$62-1;if(($62|0)!=0){label=11;break}else{label=28;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=26;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$90=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$90=$block_size;label=16;break;case 16:$di=$90;__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($2+($i*3|0)|0,1073741824,$buffer,1073741824,$10)|0;if(($status|0)<0){label=17;break}else{label=18;break};case 17:$1=$status;label=29;break;case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=24;break};case 20:$r=HEAP8[$buffer+$k|0]|0;$g=HEAP8[$buffer+($k+1)|0]|0;HEAP8[$4+$7|0]=HEAP8[$buffer+($k+2)|0]|0;HEAP8[$4+1|0]=$g;HEAP8[$4+($7^2)|0]=$r;if(($6|0)==4){label=21;break}else{label=22;break};case 21:HEAP8[$4+3|0]=0;label=22;break;case 22:label=23;break;case 23:$k=$k+3|0;$4=$4+$6|0;label=19;break;case 24:label=25;break;case 25:$i=$i+$block_size|0;label=12;break;case 26:label=27;break;case 27:$2=$2+$3|0;$4=$4+$5|0;label=10;break;case 28:$1=0;label=29;break;case 29:STACKTOP=sp;return $1|0}return 0}function __ZL20icvABC2BGRx_8u_C3CnRPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEPKfi($src,$srcstep,$dst,$dststep,$size,$dst_cn,$blue_idx,$cvtfunc_32f,$pre_coeffs,$postscale){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$dst_cn=$dst_cn|0;$blue_idx=$blue_idx|0;$cvtfunc_32f=$cvtfunc_32f|0;$pre_coeffs=$pre_coeffs|0;$postscale=$postscale|0;var $1=0,$2=0,$4=0,$5=0,$6=0,$9=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$src1=0,$a=0.0,$b=0.0,$c=0.0,$11=0,$b1=0,$g=0,$r=0,$b2=0,$g3=0,$r4=0,$20=0,$25=0,$35=0,$36=0,$64=0,$78=0.0,$95=0.0,$112=0.0,$194=0,$208=0,$222=0,$276=0,$290=0,$304=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$11=sp|0;$2=$src;$4=$dst;$5=$dststep;$6=$dst_cn;$9=$pre_coeffs;if(256>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$20=HEAP32[$size>>2]|0;label=4;break;case 3:$20=256;label=4;break;case 4:$block_size=$20;$25=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<2)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($25,32)|0;$status=0;$5=$5-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=5;break;case 5:$35=$size+4|0;$36=HEAP32[$35>>2]|0;HEAP32[$35>>2]=$36-1;if(($36|0)!=0){label=6;break}else{label=54;break};case 6:$i=0;label=7;break;case 7:if(($i|0)<(HEAP32[$size>>2]|0)){label=8;break}else{label=52;break};case 8:$src1=$2+($i*3|0)|0;if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=9;break}else{label=10;break};case 9:$64=(HEAP32[$size>>2]|0)-$i|0;label=11;break;case 10:$64=$block_size;label=11;break;case 11:$di=$64;$k=0;label=12;break;case 12:if(($k|0)<($di*3|0|0)){label=13;break}else{label=15;break};case 13:$78=(copyTempFloat(1152+((HEAPU8[$src1+$k|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);$a=$78*+HEAPF32[$9>>2]+ +HEAPF32[$9+4>>2];$95=(copyTempFloat(1152+((HEAPU8[$src1+($k+1)|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);$b=$95*+HEAPF32[$9+8>>2]+ +HEAPF32[$9+12>>2];$112=(copyTempFloat(1152+((HEAPU8[$src1+($k+2)|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);$c=$112*+HEAPF32[$9+16>>2]+ +HEAPF32[$9+20>>2];HEAPF32[$buffer+($k<<2)>>2]=$a;HEAPF32[$buffer+($k+1<<2)>>2]=$b;HEAPF32[$buffer+($k+2<<2)>>2]=$c;label=14;break;case 14:$k=$k+3|0;label=12;break;case 15:__Z6cvSizeii($11,$di,1);$status=FUNCTION_TABLE_iiiiiiii[$cvtfunc_32f&1023]($buffer,0,$buffer,0,$11,3,$blue_idx)|0;if(($status|0)<0){label=16;break}else{label=17;break};case 16:$1=$status;label=55;break;case 17:if(($postscale|0)!=0){label=18;break}else{label=34;break};case 18:$k=0;label=19;break;case 19:if(($k|0)<($di*3|0|0)){label=20;break}else{label=33;break};case 20:$b1=__Z7cvRoundd(+HEAPF32[$buffer+($k<<2)>>2]*255.0)|0;$g=__Z7cvRoundd(+HEAPF32[$buffer+($k+1<<2)>>2]*255.0)|0;$r=__Z7cvRoundd(+HEAPF32[$buffer+($k+2<<2)>>2]*255.0)|0;if(($b1&-256|0)!=0){label=22;break}else{label=21;break};case 21:$194=$b1;label=23;break;case 22:$194=($b1|0)>0?255:0;label=23;break;case 23:HEAP8[$4|0]=$194&255;if(($g&-256|0)!=0){label=25;break}else{label=24;break};case 24:$208=$g;label=26;break;case 25:$208=($g|0)>0?255:0;label=26;break;case 26:HEAP8[$4+1|0]=$208&255;if(($r&-256|0)!=0){label=28;break}else{label=27;break};case 27:$222=$r;label=29;break;case 28:$222=($r|0)>0?255:0;label=29;break;case 29:HEAP8[$4+2|0]=$222&255;if(($6|0)==4){label=30;break}else{label=31;break};case 30:HEAP8[$4+3|0]=0;label=31;break;case 31:label=32;break;case 32:$k=$k+3|0;$4=$4+$6|0;label=19;break;case 33:label=50;break;case 34:$k=0;label=35;break;case 35:if(($k|0)<($di*3|0|0)){label=36;break}else{label=49;break};case 36:$b2=__Z7cvRoundd(+HEAPF32[$buffer+($k<<2)>>2])|0;$g3=__Z7cvRoundd(+HEAPF32[$buffer+($k+1<<2)>>2])|0;$r4=__Z7cvRoundd(+HEAPF32[$buffer+($k+2<<2)>>2])|0;if(($b2&-256|0)!=0){label=38;break}else{label=37;break};case 37:$276=$b2;label=39;break;case 38:$276=($b2|0)>0?255:0;label=39;break;case 39:HEAP8[$4|0]=$276&255;if(($g3&-256|0)!=0){label=41;break}else{label=40;break};case 40:$290=$g3;label=42;break;case 41:$290=($g3|0)>0?255:0;label=42;break;case 42:HEAP8[$4+1|0]=$290&255;if(($r4&-256|0)!=0){label=44;break}else{label=43;break};case 43:$304=$r4;label=45;break;case 44:$304=($r4|0)>0?255:0;label=45;break;case 45:HEAP8[$4+2|0]=$304&255;if(($6|0)==4){label=46;break}else{label=47;break};case 46:HEAP8[$4+3|0]=0;label=47;break;case 47:label=48;break;case 48:$k=$k+3|0;$4=$4+$6|0;label=35;break;case 49:label=50;break;case 50:label=51;break;case 51:$i=$i+$block_size|0;label=7;break;case 52:label=53;break;case 53:$2=$2+$srcstep|0;$4=$4+$5|0;label=5;break;case 54:$1=0;label=55;break;case 55:STACKTOP=sp;return $1|0}return 0}function __ZL25icvBGRx2ABC_IPP_32f_CnC3RPKfiPfi6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$b=0.0,$g=0.0,$10=0,$19=0,$30=0,$42=0,$43=0,$54=0,$64=0,$65=0,$93=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;$8=$ipp_func;if(16384>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=16384;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$42=$9;$43=$size;HEAP32[$42>>2]=HEAP32[$43>>2];HEAP32[$42+4>>2]=HEAP32[$43+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=27;break;case 9:$3=($3>>>0)/4|0;$5=($5>>>0)/4|0;$54=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<2)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($54,32)|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$64=$size+4|0;$65=HEAP32[$64>>2]|0;HEAP32[$64>>2]=$65-1;if(($65|0)!=0){label=11;break}else{label=26;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=24;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$93=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$93=$block_size;label=16;break;case 16:$di=$93;$k=0;label=17;break;case 17:if(($k|0)<($di*3|0|0)){label=18;break}else{label=20;break};case 18:$b=+HEAPF32[$2+($7<<2)>>2];$g=+HEAPF32[$2+4>>2];HEAPF32[$buffer+($k<<2)>>2]=+HEAPF32[$2+(($7^2)<<2)>>2];HEAPF32[$buffer+($k+1<<2)>>2]=$g;HEAPF32[$buffer+($k+2<<2)>>2]=$b;label=19;break;case 19:$k=$k+3|0;$2=$2+($6<<2)|0;label=17;break;case 20:__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($buffer,1073741824,$4+(($i*3|0)<<2)|0,1073741824,$10)|0;if(($status|0)<0){label=21;break}else{label=22;break};case 21:$1=$status;label=27;break;case 22:label=23;break;case 23:$i=$i+$block_size|0;label=12;break;case 24:label=25;break;case 25:$2=$2+($3<<2)|0;$4=$4+($5<<2)|0;label=10;break;case 26:$1=0;label=27;break;case 27:STACKTOP=sp;return $1|0}return 0}function __ZL25icvBGRx2ABC_IPP_16u_CnC3RPKtiPti6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$b=0,$g=0,$10=0,$19=0,$30=0,$42=0,$43=0,$54=0,$64=0,$65=0,$93=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;$8=$ipp_func;if(16384>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=16384;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$42=$9;$43=$size;HEAP32[$42>>2]=HEAP32[$43>>2];HEAP32[$42+4>>2]=HEAP32[$43+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=27;break;case 9:$3=($3>>>0)/2|0;$5=($5>>>0)/2|0;$54=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<1)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($54,32)|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$64=$size+4|0;$65=HEAP32[$64>>2]|0;HEAP32[$64>>2]=$65-1;if(($65|0)!=0){label=11;break}else{label=26;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=24;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$93=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$93=$block_size;label=16;break;case 16:$di=$93;$k=0;label=17;break;case 17:if(($k|0)<($di*3|0|0)){label=18;break}else{label=20;break};case 18:$b=HEAP16[$2+($7<<1)>>1]|0;$g=HEAP16[$2+2>>1]|0;HEAP16[$buffer+($k<<1)>>1]=HEAP16[$2+(($7^2)<<1)>>1]|0;HEAP16[$buffer+($k+1<<1)>>1]=$g;HEAP16[$buffer+($k+2<<1)>>1]=$b;label=19;break;case 19:$k=$k+3|0;$2=$2+($6<<1)|0;label=17;break;case 20:__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($buffer,1073741824,$4+(($i*3|0)<<1)|0,1073741824,$10)|0;if(($status|0)<0){label=21;break}else{label=22;break};case 21:$1=$status;label=27;break;case 22:label=23;break;case 23:$i=$i+$block_size|0;label=12;break;case 24:label=25;break;case 25:$2=$2+($3<<1)|0;$4=$4+($5<<1)|0;label=10;break;case 26:$1=0;label=27;break;case 27:STACKTOP=sp;return $1|0}return 0}function __ZL24icvBGRx2ABC_IPP_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_E($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx,$ipp_func){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;$ipp_func=$ipp_func|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0,$7=0,$8=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$9=0,$b=0,$g=0,$10=0,$19=0,$30=0,$40=0,$41=0,$52=0,$61=0,$62=0,$90=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$src_cn;$7=$blue_idx;$8=$ipp_func;if(16384>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$19=HEAP32[$size>>2]|0;label=4;break;case 3:$19=16384;label=4;break;case 4:$block_size=$19;if(($6|0)>3){$30=1;label=7;break}else{label=5;break};case 5:if(($7|0)!=2){$30=1;label=7;break}else{label=6;break};case 6:$30=($2|0)==($4|0);label=7;break;case 7:$status=0;if(($30&1|0)!=0){label=9;break}else{label=8;break};case 8:$40=$9;$41=$size;HEAP32[$40>>2]=HEAP32[$41>>2];HEAP32[$40+4>>2]=HEAP32[$41+4>>2];$1=FUNCTION_TABLE_iiiiii[$8&1023]($2,$3,$4,$5,$9)|0;label=27;break;case 9:$3=$3>>>0|0;$5=$5>>>0|0;$52=STACKTOP;STACKTOP=STACKTOP+(($block_size*3|0)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($52,32)|0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=10;break;case 10:$61=$size+4|0;$62=HEAP32[$61>>2]|0;HEAP32[$61>>2]=$62-1;if(($62|0)!=0){label=11;break}else{label=26;break};case 11:$i=0;label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=24;break};case 13:if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=14;break}else{label=15;break};case 14:$90=(HEAP32[$size>>2]|0)-$i|0;label=16;break;case 15:$90=$block_size;label=16;break;case 16:$di=$90;$k=0;label=17;break;case 17:if(($k|0)<($di*3|0|0)){label=18;break}else{label=20;break};case 18:$b=HEAP8[$2+$7|0]|0;$g=HEAP8[$2+1|0]|0;HEAP8[$buffer+$k|0]=HEAP8[$2+($7^2)|0]|0;HEAP8[$buffer+($k+1)|0]=$g;HEAP8[$buffer+($k+2)|0]=$b;label=19;break;case 19:$k=$k+3|0;$2=$2+$6|0;label=17;break;case 20:__Z6cvSizeii($10,$di,1);$status=FUNCTION_TABLE_iiiiii[$8&1023]($buffer,1073741824,$4+($i*3|0)|0,1073741824,$10)|0;if(($status|0)<0){label=21;break}else{label=22;break};case 21:$1=$status;label=27;break;case 22:label=23;break;case 23:$i=$i+$block_size|0;label=12;break;case 24:label=25;break;case 25:$2=$2+$3|0;$4=$4+$5|0;label=10;break;case 26:$1=0;label=27;break;case 27:STACKTOP=sp;return $1|0}return 0}function __ZL20icvBGRx2ABC_8u_CnC3RPKhiPhi6CvSizeiiPF8CvStatusPKviPviS2_iiEiPKf($src,$srcstep,$dst,$dststep,$size,$src_cn,$blue_idx,$cvtfunc_32f,$prescale,$post_coeffs){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$src_cn=$src_cn|0;$blue_idx=$blue_idx|0;$cvtfunc_32f=$cvtfunc_32f|0;$prescale=$prescale|0;$post_coeffs=$post_coeffs|0;var $1=0,$2=0,$3=0,$4=0,$6=0,$10=0,$block_size=0,$buffer=0,$i=0,$di=0,$k=0,$status=0,$dst1=0,$b=0.0,$g=0.0,$r=0.0,$b1=0.0,$g2=0.0,$r3=0.0,$11=0,$a=0,$b4=0,$c=0,$20=0,$25=0,$35=0,$36=0,$64=0,$242=0,$257=0,$273=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$11=sp|0;$2=$src;$3=$srcstep;$4=$dst;$6=$src_cn;$10=$post_coeffs;if(256>(HEAP32[$size>>2]|0)){label=2;break}else{label=3;break};case 2:$20=HEAP32[$size>>2]|0;label=4;break;case 3:$20=256;label=4;break;case 4:$block_size=$20;$25=STACKTOP;STACKTOP=STACKTOP+((($block_size*3|0)<<2)+32)|0;STACKTOP=STACKTOP+7>>3<<3;$buffer=__Z10cvAlignPtrPKvi($25,32)|0;$status=0;$3=$3-(Math_imul(HEAP32[$size>>2]|0,$6)|0)|0;label=5;break;case 5:$35=$size+4|0;$36=HEAP32[$35>>2]|0;HEAP32[$35>>2]=$36-1;if(($36|0)!=0){label=6;break}else{label=41;break};case 6:$i=0;label=7;break;case 7:if(($i|0)<(HEAP32[$size>>2]|0)){label=8;break}else{label=39;break};case 8:$dst1=$4+($i*3|0)|0;if(($block_size|0)>((HEAP32[$size>>2]|0)-$i|0)){label=9;break}else{label=10;break};case 9:$64=(HEAP32[$size>>2]|0)-$i|0;label=11;break;case 10:$64=$block_size;label=11;break;case 11:$di=$64;if(($prescale|0)!=0){label=12;break}else{label=17;break};case 12:$k=0;label=13;break;case 13:if(($k|0)<($di*3|0|0)){label=14;break}else{label=16;break};case 14:$b=(copyTempFloat(1152+((HEAPU8[$2|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2])*.003921568859368563;$g=(copyTempFloat(1152+((HEAPU8[$2+1|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2])*.003921568859368563;$r=(copyTempFloat(1152+((HEAPU8[$2+2|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2])*.003921568859368563;HEAPF32[$buffer+($k<<2)>>2]=$b;HEAPF32[$buffer+($k+1<<2)>>2]=$g;HEAPF32[$buffer+($k+2<<2)>>2]=$r;label=15;break;case 15:$k=$k+3|0;$2=$2+$6|0;label=13;break;case 16:label=22;break;case 17:$k=0;label=18;break;case 18:if(($k|0)<($di*3|0|0)){label=19;break}else{label=21;break};case 19:$b1=(copyTempFloat(1152+((HEAPU8[$2|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);$g2=(copyTempFloat(1152+((HEAPU8[$2+1|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);$r3=(copyTempFloat(1152+((HEAPU8[$2+2|0]|0)+256<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF32[$buffer+($k<<2)>>2]=$b1;HEAPF32[$buffer+($k+1<<2)>>2]=$g2;HEAPF32[$buffer+($k+2<<2)>>2]=$r3;label=20;break;case 20:$k=$k+3|0;$2=$2+$6|0;label=18;break;case 21:label=22;break;case 22:__Z6cvSizeii($11,$di,1);$status=FUNCTION_TABLE_iiiiiiii[$cvtfunc_32f&1023]($buffer,0,$buffer,0,$11,3,$blue_idx)|0;if(($status|0)<0){label=23;break}else{label=24;break};case 23:$1=$status;label=42;break;case 24:$k=0;label=25;break;case 25:if(($k|0)<($di*3|0|0)){label=26;break}else{label=37;break};case 26:$a=__Z7cvRoundd(+HEAPF32[$buffer+($k<<2)>>2]*+HEAPF32[$10>>2]+ +HEAPF32[$10+4>>2])|0;$b4=__Z7cvRoundd(+HEAPF32[$buffer+($k+1<<2)>>2]*+HEAPF32[$10+8>>2]+ +HEAPF32[$10+12>>2])|0;$c=__Z7cvRoundd(+HEAPF32[$buffer+($k+2<<2)>>2]*+HEAPF32[$10+16>>2]+ +HEAPF32[$10+20>>2])|0;if(($a&-256|0)!=0){label=28;break}else{label=27;break};case 27:$242=$a;label=29;break;case 28:$242=($a|0)>0?255:0;label=29;break;case 29:HEAP8[$dst1+$k|0]=$242&255;if(($b4&-256|0)!=0){label=31;break}else{label=30;break};case 30:$257=$b4;label=32;break;case 31:$257=($b4|0)>0?255:0;label=32;break;case 32:HEAP8[$dst1+($k+1)|0]=$257&255;if(($c&-256|0)!=0){label=34;break}else{label=33;break};case 33:$273=$c;label=35;break;case 34:$273=($c|0)>0?255:0;label=35;break;case 35:HEAP8[$dst1+($k+2)|0]=$273&255;label=36;break;case 36:$k=$k+3|0;label=25;break;case 37:label=38;break;case 38:$i=$i+$block_size|0;label=7;break;case 39:label=40;break;case 40:$2=$2+$3|0;$4=$4+$dststep|0;label=5;break;case 41:$1=0;label=42;break;case 42:STACKTOP=sp;return $1|0}return 0}function __Z14cvCvToIplDepthi($type){$type=$type|0;var $depth=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:$depth=$type&7;if(($depth|0)==1){$19=1;label=4;break}else{label=2;break};case 2:if(($depth|0)==3){$19=1;label=4;break}else{label=3;break};case 3:$19=($depth|0)==4;label=4;break;case 4:return(1212424721>>>(($depth&7)<<2>>>0)&15)<<3|($19?-2147483648:0)|0}return 0}function __ZN11GrFmtReader8GetWidthEv($this){$this=$this|0;return HEAP32[$this+8>>2]|0}function __ZN11GrFmtReader9GetHeightEv($this){$this=$this|0;return HEAP32[$this+12>>2]|0}function __ZN11GrFmtReader7IsColorEv($this){$this=$this|0;return HEAP8[$this+4|0]&1|0}function __ZN11GrFmtReader14UseNativeDepthEb($this,$yes){$this=$this|0;$yes=$yes|0;HEAP8[$this+1044|0]=$yes&1&1;return}function __ZN11GrFmtReader8GetDepthEv($this){$this=$this|0;return HEAP32[$this+16>>2]|0}function __ZN11GrFmtReader7IsFloatEv($this){$this=$this|0;return HEAP8[$this+1045|0]&1|0}function __ZN14CvImageFiltersC2Ev($this){$this=$this|0;var $2=0,$3=0,$4=0,$5=0,$6=0,$10=0,$11=0,$12=0,$17=0,$18=0,$19=0,$24=0,$25=0,$26=0,$31=0,$32=0,$33=0,$38=0,$39=0,$40=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;$5=__Znwj(16)|0;$6=$5;__ZN18GrFmtFactoriesListC2Ev($6);label=2;break;case 2:HEAP32[$4>>2]=$6;$10=HEAP32[$4>>2]|0;$11=__Znwj(16)|0;$12=$11;__ZN8GrFmtBmpC2Ev($12);label=3;break;case 3:__ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($10,$12)|0;$17=HEAP32[$4>>2]|0;$18=__Znwj(16)|0;$19=$18;__ZN9GrFmtJpegC2Ev($19);label=4;break;case 4:__ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($17,$19)|0;$24=HEAP32[$4>>2]|0;$25=__Znwj(16)|0;$26=$25;__ZN14GrFmtSunRasterC2Ev($26);label=5;break;case 5:__ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($24,$26)|0;$31=HEAP32[$4>>2]|0;$32=__Znwj(16)|0;$33=$32;__ZN8GrFmtPxMC2Ev($33);label=6;break;case 6:__ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($31,$33)|0;$38=HEAP32[$4>>2]|0;$39=__Znwj(16)|0;$40=$39;__ZN9GrFmtTiffC2Ev($40);label=7;break;case 7:__ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($38,$40)|0;return;case 8:$2=0;$3=0;__ZdlPv($5);label=14;break;case 9:$2=0;$3=0;__ZdlPv($11);label=14;break;case 10:$2=0;$3=0;__ZdlPv($18);label=14;break;case 11:$2=0;$3=0;__ZdlPv($25);label=14;break;case 12:$2=0;$3=0;__ZdlPv($32);label=14;break;case 13:$2=0;$3=0;__ZdlPv($39);label=14;break;case 14:abort()}}function __ZN14CvImageFiltersD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=HEAP32[$this>>2]|0;if(($4|0)==0){label=3;break}else{label=2;break};case 2:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+4>>2]&1023]($4);label=3;break;case 3:return}}function __ZNK14CvImageFilters10FindReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0;$5=HEAP32[$this>>2]|0;return FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5>>2]|0)+8>>2]&1023]($5,$filename)|0}function __ZNK14CvImageFilters10FindWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0;$5=HEAP32[$this>>2]|0;return FUNCTION_TABLE_iii[HEAP32[(HEAP32[$5>>2]|0)+12>>2]&1023]($5,$filename)|0}function ___cxx_global_var_init(){HEAP32[7006]=__ZL20icvSetCXCOREBindingsv()|0;return}function __ZL20icvSetCXCOREBindingsv(){return _cvSetImageIOFunctions(688,286,312,496)|0}function ___cxx_global_var_init1(){__ZN14CvImageFiltersC2Ev(29072);_atexit(232,29072,___dso_handle|0)|0;return}function _cvLoadImage($filename,$iscolor){$filename=$filename|0;$iscolor=$iscolor|0;return __ZL12icvLoadImagePKcib($filename,$iscolor,0)|0}function __ZL12icvLoadImagePKcib($filename,$flags,$load_as_matrix){$filename=$filename|0;$flags=$flags|0;$load_as_matrix=$load_as_matrix|0;var $1=0,$2=0,$3=0,$reader=0,$image=0,$matrix=0,$depth=0,$size=0,$iscolor=0,$cn=0,$type=0,$type1=0,$4=0,$20=0,$84=0,$116=0,$118=0,$119=0,$131=0,$153=0,$179=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+64|0;label=1;while(1)switch(label|0){case 1:$image=sp|0;$matrix=sp+40|0;$size=sp+48|0;$4=sp+56|0;$1=$filename;$2=$flags;$3=$load_as_matrix&1;$reader=0;HEAP32[$image>>2]=0;HEAP32[$matrix>>2]=0;$depth=8;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((_strlen($1|0)|0)==0){label=3;break}else{label=4;break};case 3:_cvError(-27,18200,12704,12352,380);label=45;break;case 4:$reader=__ZNK14CvImageFilters10FindReaderEPKc(29072,$1)|0;if(($reader|0)!=0){label=6;break}else{label=5;break};case 5:label=45;break;case 6:$20=$reader;if(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20>>2]|0)+8>>2]&1023]($20)|0){label=8;break}else{label=7;break};case 7:label=45;break;case 8:HEAP32[$size>>2]=__ZN11GrFmtReader8GetWidthEv($reader)|0;HEAP32[$size+4>>2]=__ZN11GrFmtReader9GetHeightEv($reader)|0;if(($2|0)==-1){label=9;break}else{label=10;break};case 9:$iscolor=(__ZN11GrFmtReader7IsColorEv($reader)|0)&1;label=18;break;case 10:if(($2&1|0)!=0){label=13;break}else{label=11;break};case 11:if(($2&4|0)!=0){label=12;break}else{label=14;break};case 12:if(__ZN11GrFmtReader7IsColorEv($reader)|0){label=13;break}else{label=14;break};case 13:$iscolor=1;label=15;break;case 14:$iscolor=0;label=15;break;case 15:if(($2&2|0)!=0){label=16;break}else{label=17;break};case 16:__ZN11GrFmtReader14UseNativeDepthEb($reader,1);$depth=__ZN11GrFmtReader8GetDepthEv($reader)|0;label=17;break;case 17:label=18;break;case 18:$cn=($iscolor|0)!=0?3:1;if($3&1){label=19;break}else{label=29;break};case 19:if(__ZN11GrFmtReader7IsFloatEv($reader)|0){label=20;break}else{label=22;break};case 20:if(($depth|0)!=8){label=21;break}else{label=22;break};case 21:$type=5;label=26;break;case 22:if(($depth|0)<=8){label=23;break}else{label=24;break};case 23:$84=0;label=25;break;case 24:$84=($depth|0)<=16?2:4;label=25;break;case 25:$type=$84;label=26;break;case 26:HEAP32[$matrix>>2]=_cvCreateMat(HEAP32[$size+4>>2]|0,HEAP32[$size>>2]|0,$type+($cn-1<<3)|0)|0;if((_cvGetErrStatus()|0)<0){label=27;break}else{label=28;break};case 27:_cvError(-1,18200,11368,12352,418);label=45;break;case 28:label=39;break;case 29:if(__ZN11GrFmtReader7IsFloatEv($reader)|0){label=30;break}else{label=32;break};case 30:if(($depth|0)!=8){label=31;break}else{label=32;break};case 31:$type1=32;label=36;break;case 32:if(($depth|0)<=8){label=33;break}else{label=34;break};case 33:$116=8;label=35;break;case 34:$116=($depth|0)<=16?16:-2147483616;label=35;break;case 35:$type1=$116;label=36;break;case 36:$118=$4;$119=$size;HEAP32[$118>>2]=HEAP32[$119>>2];HEAP32[$118+4>>2]=HEAP32[$119+4>>2];HEAP32[$image>>2]=_cvCreateImage($4,$type1,$cn)|0;if((_cvGetErrStatus()|0)<0){label=37;break}else{label=38;break};case 37:_cvError(-1,18200,11368,12352,427);label=45;break;case 38:HEAP32[$matrix>>2]=_cvGetMat(HEAP32[$image>>2]|0,sp+8|0,0,0)|0;label=39;break;case 39:$131=$reader;if(FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$131>>2]|0)+12>>2]&1023]($131,HEAP32[(HEAP32[$matrix>>2]|0)+16>>2]|0,HEAP32[(HEAP32[$matrix>>2]|0)+4>>2]|0,$iscolor)|0){label=44;break}else{label=40;break};case 40:if($3&1){label=41;break}else{label=42;break};case 41:_cvReleaseMat($matrix);label=43;break;case 42:_cvReleaseImage($image);label=43;break;case 43:label=45;break;case 44:label=45;break;case 45:$153=$reader;if(($153|0)==0){label=47;break}else{label=46;break};case 46:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$153>>2]|0)+4>>2]&1023]($153);label=47;break;case 47:if((_cvGetErrStatus()|0)<0){label=48;break}else{label=52;break};case 48:if($3&1){label=49;break}else{label=50;break};case 49:_cvReleaseMat($matrix);label=51;break;case 50:_cvReleaseImage($image);label=51;break;case 51:label=52;break;case 52:if($3&1){label=53;break}else{label=54;break};case 53:$179=HEAP32[$matrix>>2]|0;label=55;break;case 54:$179=HEAP32[$image>>2]|0;label=55;break;case 55:STACKTOP=sp;return $179|0}return 0}function _cvLoadImageM($filename,$iscolor){$filename=$filename|0;$iscolor=$iscolor|0;return __ZL12icvLoadImagePKcib($filename,$iscolor,1)|0}function _cvSaveImage($filename,$arr){$filename=$filename|0;$arr=$arr|0;var $1=0,$2=0,$origin=0,$writer=0,$temp=0,$temp2=0,$image=0,$channels=0,$ipl_depth=0,$92=0,$127=0,$153=0,$163=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;label=1;while(1)switch(label|0){case 1:$temp=sp|0;$temp2=sp+8|0;$1=$filename;$2=$arr;$origin=0;$writer=0;HEAP32[$temp>>2]=0;HEAP32[$temp2>>2]=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((_strlen($1|0)|0)==0){label=3;break}else{label=4;break};case 3:_cvError(-27,6880,12704,12352,484);label=31;break;case 4:$image=_cvGetMat($2,sp+16|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6880,11368,12352,486);label=31;break;case 6:if(($2|0)!=0){label=7;break}else{label=10;break};case 7:if((HEAP32[$2>>2]|0)==112){label=8;break}else{label=10;break};case 8:if((HEAP32[$2+68>>2]|0)!=0){label=9;break}else{label=10;break};case 9:$origin=HEAP32[$2+32>>2]|0;label=10;break;case 10:$channels=((HEAP32[$image>>2]&504)>>3)+1|0;if(($channels|0)!=1){label=11;break}else{label=14;break};case 11:if(($channels|0)!=3){label=12;break}else{label=14;break};case 12:if(($channels|0)!=4){label=13;break}else{label=14;break};case 13:_cvError(-15,6880,28384,12352,493);label=31;break;case 14:$writer=__ZNK14CvImageFilters10FindWriterEPKc(29072,$1)|0;if(($writer|0)!=0){label=16;break}else{label=15;break};case 15:_cvError(-2,6880,9504,12352,497);label=31;break;case 16:if(($origin|0)!=0){label=17;break}else{label=22;break};case 17:HEAP32[$temp>>2]=_cvCreateMat(HEAP32[$image+20>>2]|0,HEAP32[$image+24>>2]|0,HEAP32[$image>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=18;break}else{label=19;break};case 18:_cvError(-1,6880,11368,12352,501);label=31;break;case 19:_cvFlip($image,HEAP32[$temp>>2]|0,0);if((_cvGetErrStatus()|0)<0){label=20;break}else{label=21;break};case 20:_cvError(-1,6880,11368,12352,502);label=31;break;case 21:$image=HEAP32[$temp>>2]|0;label=22;break;case 22:$ipl_depth=__Z14cvCvToIplDepthi(HEAP32[$image>>2]|0)|0;$92=$writer;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$92>>2]|0)+8>>2]&1023]($92,$ipl_depth)|0){label=28;break}else{label=23;break};case 23:HEAP32[$temp2>>2]=_cvCreateMat(HEAP32[$image+20>>2]|0,HEAP32[$image+24>>2]|0,$channels-1<<3|0)|0;if((_cvGetErrStatus()|0)<0){label=24;break}else{label=25;break};case 24:_cvError(-1,6880,11368,12352,512);label=31;break;case 25:_cvConvertImage($image,HEAP32[$temp2>>2]|0,0);if((_cvGetErrStatus()|0)<0){label=26;break}else{label=27;break};case 26:_cvError(-1,6880,11368,12352,513);label=31;break;case 27:$image=HEAP32[$temp2>>2]|0;$ipl_depth=8;label=28;break;case 28:$127=$writer;if(FUNCTION_TABLE_iiiiiiii[HEAP32[(HEAP32[$127>>2]|0)+12>>2]&1023]($127,HEAP32[$image+16>>2]|0,HEAP32[$image+4>>2]|0,HEAP32[$image+24>>2]|0,HEAP32[$image+20>>2]|0,$ipl_depth,$channels)|0){label=30;break}else{label=29;break};case 29:_cvError(-2,6880,9e3,12352,520);label=31;break;case 30:label=31;break;case 31:$153=$writer;if(($153|0)==0){label=33;break}else{label=32;break};case 32:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$153>>2]|0)+4>>2]&1023]($153);label=33;break;case 33:_cvReleaseMat($temp);_cvReleaseMat($temp2);$163=(_cvGetErrStatus()|0)>=0|0;STACKTOP=sp;return $163|0}return 0}function __GLOBAL__I_a(){___cxx_global_var_init();___cxx_global_var_init1();return}function __Z24icvCvt_BGR2Gray_8u_C3C1RPKhiPhi6CvSizei($rgb,$rgb_step,$gray,$gray_step,$size,$_swap_rb){$rgb=$rgb|0;$rgb_step=$rgb_step|0;$gray=$gray|0;$gray_step=$gray_step|0;$size=$size|0;$_swap_rb=$_swap_rb|0;var $1=0,$3=0,$i=0,$swap_rb=0,$10=0,$11=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$rgb;$3=$gray;$swap_rb=($_swap_rb|0)!=0?2:0;label=2;break;case 2:$10=$size+4|0;$11=HEAP32[$10>>2]|0;HEAP32[$10>>2]=$11-1;if(($11|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:HEAP8[$3+$i|0]=((HEAPU8[$1+$swap_rb|0]|0)*1868|0)+((HEAPU8[$1+1|0]|0)*9617|0)+((HEAPU8[$1+($swap_rb^2)|0]|0)*4899|0)+8192>>14&255;label=6;break;case 6:$i=$i+1|0;$1=$1+3|0;label=4;break;case 7:$1=$1+($rgb_step-((HEAP32[$size>>2]|0)*3|0))|0;label=8;break;case 8:$3=$3+$gray_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z25icvCvt_BGRA2Gray_8u_C4C1RPKhiPhi6CvSizei($rgba,$rgba_step,$gray,$gray_step,$size,$_swap_rb){$rgba=$rgba|0;$rgba_step=$rgba_step|0;$gray=$gray|0;$gray_step=$gray_step|0;$size=$size|0;$_swap_rb=$_swap_rb|0;var $1=0,$3=0,$i=0,$swap_rb=0,$10=0,$11=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$rgba;$3=$gray;$swap_rb=($_swap_rb|0)!=0?2:0;label=2;break;case 2:$10=$size+4|0;$11=HEAP32[$10>>2]|0;HEAP32[$10>>2]=$11-1;if(($11|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:HEAP8[$3+$i|0]=((HEAPU8[$1+$swap_rb|0]|0)*1868|0)+((HEAPU8[$1+1|0]|0)*9617|0)+((HEAPU8[$1+($swap_rb^2)|0]|0)*4899|0)+8192>>14&255;label=6;break;case 6:$i=$i+1|0;$1=$1+4|0;label=4;break;case 7:$1=$1+($rgba_step-(HEAP32[$size>>2]<<2))|0;label=8;break;case 8:$3=$3+$gray_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z24icvCvt_Gray2BGR_8u_C1C3RPKhiPhi6CvSize($gray,$gray_step,$bgr,$bgr_step,$size){$gray=$gray|0;$gray_step=$gray_step|0;$bgr=$bgr|0;$bgr_step=$bgr_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$6=0,$7=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$gray;$3=$bgr;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$20=HEAP8[$1+$i|0]|0;HEAP8[$3+2|0]=$20;HEAP8[$3+1|0]=$20;HEAP8[$3|0]=$20;label=6;break;case 6:$i=$i+1|0;$3=$3+3|0;label=4;break;case 7:$3=$3+($bgr_step-((HEAP32[$size>>2]|0)*3|0))|0;label=8;break;case 8:$1=$1+$gray_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z24icvCvt_BGRA2BGR_8u_C4C3RPKhiPhi6CvSizei($bgra,$bgra_step,$bgr,$bgr_step,$size,$_swap_rb){$bgra=$bgra|0;$bgra_step=$bgra_step|0;$bgr=$bgr|0;$bgr_step=$bgr_step|0;$size=$size|0;$_swap_rb=$_swap_rb|0;var $1=0,$3=0,$i=0,$swap_rb=0,$t0=0,$t1=0,$10=0,$11=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgra;$3=$bgr;$swap_rb=($_swap_rb|0)!=0?2:0;label=2;break;case 2:$10=$size+4|0;$11=HEAP32[$10>>2]|0;HEAP32[$10>>2]=$11-1;if(($11|0)!=0){label=3;break}else{label=8;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1+$swap_rb|0]|0;$t1=HEAP8[$1+1|0]|0;HEAP8[$3|0]=$t0;HEAP8[$3+1|0]=$t1;$t0=HEAP8[$1+($swap_rb^2)|0]|0;HEAP8[$3+2|0]=$t0;label=6;break;case 6:$i=$i+1|0;$3=$3+3|0;$1=$1+4|0;label=4;break;case 7:$3=$3+($bgr_step-((HEAP32[$size>>2]|0)*3|0))|0;$1=$1+($bgra_step-(HEAP32[$size>>2]<<2))|0;label=2;break;case 8:STACKTOP=sp;return}}function __Z23icvCvt_BGRA2RGBA_8u_C4RPKhiPhi6CvSize($bgra,$bgra_step,$rgba,$rgba_step,$size){$bgra=$bgra|0;$bgra_step=$bgra_step|0;$rgba=$rgba|0;$rgba_step=$rgba_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$t0=0,$t1=0,$t3=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgra;$3=$rgba;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=8;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1|0]|0;$t1=HEAP8[$1+1|0]|0;$t3=HEAP8[$1+3|0]|0;HEAP8[$3|0]=HEAP8[$1+2|0]|0;HEAP8[$3+1|0]=$t1;HEAP8[$3+2|0]=$t0;HEAP8[$3+3|0]=$t3;label=6;break;case 6:$i=$i+1|0;$1=$1+4|0;$3=$3+4|0;label=4;break;case 7:$1=$1+($bgra_step-(HEAP32[$size>>2]<<2))|0;$3=$3+($rgba_step-(HEAP32[$size>>2]<<2))|0;label=2;break;case 8:STACKTOP=sp;return}}function __Z21icvCvt_BGR2RGB_8u_C3RPKhiPhi6CvSize($bgr,$bgr_step,$rgb,$rgb_step,$size){$bgr=$bgr|0;$bgr_step=$bgr_step|0;$rgb=$rgb|0;$rgb_step=$rgb_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$t1=0,$t2=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgr;$3=$rgb;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=8;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;$t2=HEAP8[$1+2|0]|0;HEAP8[$3+2|0]=HEAP8[$1|0]|0;HEAP8[$3+1|0]=$t1;HEAP8[$3|0]=$t2;label=6;break;case 6:$i=$i+1|0;$1=$1+3|0;$3=$3+3|0;label=4;break;case 7:$1=$1+($bgr_step-((HEAP32[$size>>2]|0)*3|0))|0;$3=$3+($rgb_step-((HEAP32[$size>>2]|0)*3|0))|0;label=2;break;case 8:STACKTOP=sp;return}}function __Z27icvCvt_BGR5552Gray_8u_C2C1RPKhiPhi6CvSize($bgr555,$bgr555_step,$gray,$gray_step,$size){$bgr555=$bgr555|0;$bgr555_step=$bgr555_step|0;$gray=$gray|0;$gray_step=$gray_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgr555;$3=$gray;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:HEAP8[$3+$i|0]=(((HEAPU16[$1+($i<<1)>>1]|0)<<3&248)*1868|0)+(((HEAPU16[$1+($i<<1)>>1]|0)>>2&248)*9617|0)+(((HEAPU16[$1+($i<<1)>>1]|0)>>7&248)*4899|0)+8192>>14&255;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$3=$3+$gray_step|0;$1=$1+$bgr555_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z27icvCvt_BGR5652Gray_8u_C2C1RPKhiPhi6CvSize($bgr565,$bgr565_step,$gray,$gray_step,$size){$bgr565=$bgr565|0;$bgr565_step=$bgr565_step|0;$gray=$gray|0;$gray_step=$gray_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgr565;$3=$gray;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:HEAP8[$3+$i|0]=(((HEAPU16[$1+($i<<1)>>1]|0)<<3&248)*1868|0)+(((HEAPU16[$1+($i<<1)>>1]|0)>>3&252)*9617|0)+(((HEAPU16[$1+($i<<1)>>1]|0)>>8&248)*4899|0)+8192>>14&255;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$3=$3+$gray_step|0;$1=$1+$bgr565_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z26icvCvt_BGR5552BGR_8u_C2C3RPKhiPhi6CvSize($bgr555,$bgr555_step,$bgr,$bgr_step,$size){$bgr555=$bgr555|0;$bgr555_step=$bgr555_step|0;$bgr=$bgr|0;$bgr_step=$bgr_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$t1=0,$t2=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgr555;$3=$bgr;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=(HEAPU16[$1+($i<<1)>>1]|0)>>2&248;$t2=(HEAPU16[$1+($i<<1)>>1]|0)>>7&248;HEAP8[$3|0]=(HEAPU16[$1+($i<<1)>>1]|0)<<3&248;HEAP8[$3+1|0]=$t1&255;HEAP8[$3+2|0]=$t2&255;label=6;break;case 6:$i=$i+1|0;$3=$3+3|0;label=4;break;case 7:$3=$3+($bgr_step-((HEAP32[$size>>2]|0)*3|0))|0;label=8;break;case 8:$1=$1+$bgr555_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z26icvCvt_BGR5652BGR_8u_C2C3RPKhiPhi6CvSize($bgr565,$bgr565_step,$bgr,$bgr_step,$size){$bgr565=$bgr565|0;$bgr565_step=$bgr565_step|0;$bgr=$bgr|0;$bgr_step=$bgr_step|0;$size=$size|0;var $1=0,$3=0,$i=0,$t1=0,$t2=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$bgr565;$3=$bgr;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=(HEAPU16[$1+($i<<1)>>1]|0)>>3&252;$t2=(HEAPU16[$1+($i<<1)>>1]|0)>>8&248;HEAP8[$3|0]=(HEAPU16[$1+($i<<1)>>1]|0)<<3&248;HEAP8[$3+1|0]=$t1&255;HEAP8[$3+2|0]=$t2&255;label=6;break;case 6:$i=$i+1|0;$3=$3+3|0;label=4;break;case 7:$3=$3+($bgr_step-((HEAP32[$size>>2]|0)*3|0))|0;label=8;break;case 8:$1=$1+$bgr565_step|0;label=2;break;case 9:STACKTOP=sp;return}}function __Z15FillGrayPaletteP12PaletteEntryib($palette,$bpp,$negative){$palette=$palette|0;$bpp=$bpp|0;$negative=$negative|0;var $1=0,$i=0,$length=0,$23=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$palette;$length=1<<$bpp;$i=0;label=2;break;case 2:if(($i|0)<($length|0)){label=3;break}else{label=5;break};case 3:$23=((($i*255|0|0)/($length-1|0)|0)^($negative&1?255:0))&255;HEAP8[$1+($i<<2)+2|0]=$23;HEAP8[$1+($i<<2)+1|0]=$23;HEAP8[$1+($i<<2)|0]=$23;HEAP8[$1+($i<<2)+3|0]=0;label=4;break;case 4:$i=$i+1|0;label=2;break;case 5:return}}function __Z14IsColorPaletteP12PaletteEntryi($palette,$bpp){$palette=$palette|0;$bpp=$bpp|0;var $1=0,$2=0,$i=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$palette;$i=0;label=2;break;case 2:if(($i|0)<(1<<$bpp|0)){label=3;break}else{label=8;break};case 3:if((HEAPU8[$2+($i<<2)|0]|0|0)!=(HEAPU8[$2+($i<<2)+1|0]|0|0)){label=5;break}else{label=4;break};case 4:if((HEAPU8[$2+($i<<2)|0]|0|0)!=(HEAPU8[$2+($i<<2)+2|0]|0|0)){label=5;break}else{label=6;break};case 5:$1=1;label=9;break;case 6:label=7;break;case 7:$i=$i+1|0;label=2;break;case 8:$1=0;label=9;break;case 9:return $1|0}return 0}function __Z12FillUniColorPhRS_iiRiii12PaletteEntry($data,$line_end,$step,$width3,$y,$height,$count3,$clr){$data=$data|0;$line_end=$line_end|0;$step=$step|0;$width3=$width3|0;$y=$y|0;$height=$height|0;$count3=$count3|0;$clr=$clr|0;var $1=0,$2=0,$7=0,$end=0,$54=0,$62=0,$64=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$clr;$clr=STACKTOP;STACKTOP=STACKTOP+4|0;STACKTOP=STACKTOP+7>>3<<3;HEAP32[$clr>>2]=HEAP32[tempParam>>2];label=1;while(1)switch(label|0){case 1:$1=$data;$2=$line_end;$7=$count3;label=2;break;case 2:$end=$1+$7|0;if($end>>>0>(HEAP32[$2>>2]|0)>>>0){label=3;break}else{label=4;break};case 3:$end=HEAP32[$2>>2]|0;label=4;break;case 4:$7=$7-($end-$1)|0;label=5;break;case 5:if($1>>>0<$end>>>0){label=6;break}else{label=8;break};case 6:HEAP8[$1|0]=HEAP8[$clr|0]|0;HEAP8[$1+1|0]=HEAP8[$clr+1|0]|0;HEAP8[$1+2|0]=HEAP8[$clr+2|0]|0;label=7;break;case 7:$1=$1+3|0;label=5;break;case 8:if($1>>>0>=(HEAP32[$2>>2]|0)>>>0){label=9;break}else{label=12;break};case 9:$54=$2;HEAP32[$54>>2]=(HEAP32[$54>>2]|0)+$step;$1=(HEAP32[$2>>2]|0)+(-$width3|0)|0;$62=$y;$64=(HEAP32[$62>>2]|0)+1|0;HEAP32[$62>>2]=$64;if(($64|0)>=($height|0)){label=10;break}else{label=11;break};case 10:label=14;break;case 11:label=12;break;case 12:label=13;break;case 13:if(($7|0)>0){label=2;break}else{label=14;break};case 14:STACKTOP=sp;return $1|0}return 0}function __Z11FillUniGrayPhRS_iiRiiih($data,$line_end,$step,$width,$y,$height,$count,$clr){$data=$data|0;$line_end=$line_end|0;$step=$step|0;$width=$width|0;$y=$y|0;$height=$height|0;$count=$count|0;$clr=$clr|0;var $1=0,$2=0,$7=0,$end=0,$45=0,$53=0,$55=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$data;$2=$line_end;$7=$count;label=2;break;case 2:$end=$1+$7|0;if($end>>>0>(HEAP32[$2>>2]|0)>>>0){label=3;break}else{label=4;break};case 3:$end=HEAP32[$2>>2]|0;label=4;break;case 4:$7=$7-($end-$1)|0;label=5;break;case 5:if($1>>>0<$end>>>0){label=6;break}else{label=8;break};case 6:HEAP8[$1]=$clr;label=7;break;case 7:$1=$1+1|0;label=5;break;case 8:if($1>>>0>=(HEAP32[$2>>2]|0)>>>0){label=9;break}else{label=12;break};case 9:$45=$2;HEAP32[$45>>2]=(HEAP32[$45>>2]|0)+$step;$1=(HEAP32[$2>>2]|0)+(-$width|0)|0;$53=$y;$55=(HEAP32[$53>>2]|0)+1|0;HEAP32[$53>>2]=$55;if(($55|0)>=($height|0)){label=10;break}else{label=11;break};case 10:label=14;break;case 11:label=12;break;case 12:label=13;break;case 13:if(($7|0)>0){label=2;break}else{label=14;break};case 14:return $1|0}return 0}function __Z12FillGrayRow8PhS_iS_($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$3=0,$i=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$data;$3=$len;$i=0;label=2;break;case 2:if(($i|0)<($3|0)){label=3;break}else{label=5;break};case 3:HEAP8[$1+$i|0]=HEAP8[$palette+(HEAPU8[$indices+$i|0]|0)|0]|0;label=4;break;case 4:$i=$i+1|0;label=2;break;case 5:return $1+$3|0}return 0}function __Z12FillGrayRow4PhS_iS_($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$2=0,$4=0,$end=0,$idx=0,$idx1=0,$clr=0,$10=0,$14=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$data;$2=$indices;$4=$palette;$end=$1+$len|0;label=2;break;case 2:$10=$1+2|0;$1=$10;if($10>>>0<$end>>>0){label=3;break}else{label=4;break};case 3:$14=$2;$2=$14+1|0;$idx=HEAPU8[$14]|0;HEAP8[$1-2|0]=HEAP8[$4+($idx>>4)|0]|0;HEAP8[$1-1|0]=HEAP8[$4+($idx&15)|0]|0;label=2;break;case 4:$idx1=HEAPU8[$2|0]|0;$clr=HEAP8[$4+($idx1>>4)|0]|0;HEAP8[$1-2|0]=$clr;if(($1|0)==($end|0)){label=5;break}else{label=6;break};case 5:$clr=HEAP8[$4+($idx1&15)|0]|0;HEAP8[$1-1|0]=$clr;label=6;break;case 6:return $end|0}return 0}function __Z16CvtPaletteToGrayPK12PaletteEntryPhi($palette,$grayPalette,$entries){$palette=$palette|0;$grayPalette=$grayPalette|0;$entries=$entries|0;var $i=0,$4=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$4=sp|0;$i=0;label=2;break;case 2:if(($i|0)<($entries|0)){label=3;break}else{label=5;break};case 3:__Z6cvSizeii($4,1,1);__Z24icvCvt_BGR2Gray_8u_C3C1RPKhiPhi6CvSizei($palette+($i<<2)|0,0,$grayPalette+$i|0,0,$4,0);label=4;break;case 4:$i=$i+1|0;label=2;break;case 5:STACKTOP=sp;return}}function __Z13FillColorRow8PhS_iP12PaletteEntry($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$2=0,$4=0,$end=0,$clr=0,$11=0,$18=0,$24=0,$25=0,$33=0,$34=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$clr=sp|0;$1=$data;$2=$indices;$4=$palette;$end=$1+($len*3|0)|0;label=2;break;case 2:$11=$1+3|0;$1=$11;if($11>>>0<$end>>>0){label=3;break}else{label=4;break};case 3:$18=$2;$2=$18+1|0;$24=$1-3|0;$25=$4+((HEAPU8[$18]|0)<<2)|0;HEAP8[$24]=HEAP8[$25]|0;HEAP8[$24+1|0]=HEAP8[$25+1|0]|0;HEAP8[$24+2|0]=HEAP8[$25+2|0]|0;HEAP8[$24+3|0]=HEAP8[$25+3|0]|0;label=2;break;case 4:$33=$clr;$34=$4+((HEAPU8[$2|0]|0)<<2)|0;HEAP8[$33]=HEAP8[$34]|0;HEAP8[$33+1|0]=HEAP8[$34+1|0]|0;HEAP8[$33+2|0]=HEAP8[$34+2|0]|0;HEAP8[$33+3|0]=HEAP8[$34+3|0]|0;HEAP8[$1-3|0]=HEAP8[$clr|0]|0;HEAP8[$1-3+1|0]=HEAP8[$clr+1|0]|0;HEAP8[$1-3+2|0]=HEAP8[$clr+2|0]|0;STACKTOP=sp;return $1|0}return 0}function __Z13FillColorRow4PhS_iP12PaletteEntry($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$2=0,$4=0,$end=0,$idx=0,$idx1=0,$clr=0,$11=0,$15=0,$26=0,$27=0,$35=0,$36=0,$46=0,$47=0,$71=0,$72=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$clr=sp|0;$1=$data;$2=$indices;$4=$palette;$end=$1+($len*3|0)|0;label=2;break;case 2:$11=$1+6|0;$1=$11;if($11>>>0<$end>>>0){label=3;break}else{label=4;break};case 3:$15=$2;$2=$15+1|0;$idx=HEAPU8[$15]|0;$26=$1-6|0;$27=$4+($idx>>4<<2)|0;HEAP8[$26]=HEAP8[$27]|0;HEAP8[$26+1|0]=HEAP8[$27+1|0]|0;HEAP8[$26+2|0]=HEAP8[$27+2|0]|0;HEAP8[$26+3|0]=HEAP8[$27+3|0]|0;$35=$1-3|0;$36=$4+(($idx&15)<<2)|0;HEAP8[$35]=HEAP8[$36]|0;HEAP8[$35+1|0]=HEAP8[$36+1|0]|0;HEAP8[$35+2|0]=HEAP8[$36+2|0]|0;HEAP8[$35+3|0]=HEAP8[$36+3|0]|0;label=2;break;case 4:$idx1=HEAPU8[$2|0]|0;$46=$clr;$47=$4+($idx1>>4<<2)|0;HEAP8[$46]=HEAP8[$47]|0;HEAP8[$46+1|0]=HEAP8[$47+1|0]|0;HEAP8[$46+2|0]=HEAP8[$47+2|0]|0;HEAP8[$46+3|0]=HEAP8[$47+3|0]|0;HEAP8[$1-6|0]=HEAP8[$clr|0]|0;HEAP8[$1-6+1|0]=HEAP8[$clr+1|0]|0;HEAP8[$1-6+2|0]=HEAP8[$clr+2|0]|0;if(($1|0)==($end|0)){label=5;break}else{label=6;break};case 5:$71=$clr;$72=$4+(($idx1&15)<<2)|0;HEAP8[$71]=HEAP8[$72]|0;HEAP8[$71+1|0]=HEAP8[$72+1|0]|0;HEAP8[$71+2|0]=HEAP8[$72+2|0]|0;HEAP8[$71+3|0]=HEAP8[$72+3|0]|0;HEAP8[$1-3|0]=HEAP8[$clr|0]|0;HEAP8[$1-3+1|0]=HEAP8[$clr+1|0]|0;HEAP8[$1-3+2|0]=HEAP8[$clr+2|0]|0;label=6;break;case 6:STACKTOP=sp;return $end|0}return 0}function __Z13FillColorRow1PhS_iP12PaletteEntry($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$2=0,$4=0,$end=0,$idx=0,$idx1=0,$clr=0,$11=0,$15=0,$28=0,$29=0,$39=0,$40=0,$50=0,$51=0,$61=0,$62=0,$72=0,$73=0,$83=0,$84=0,$94=0,$95=0,$105=0,$106=0,$125=0,$126=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$clr=sp|0;$1=$data;$2=$indices;$4=$palette;$end=$1+($len*3|0)|0;label=2;break;case 2:$11=$1+24|0;$1=$11;if($11>>>0<$end>>>0){label=3;break}else{label=4;break};case 3:$15=$2;$2=$15+1|0;$idx=HEAPU8[$15]|0;$28=$1-24|0;$29=$4+((($idx&128|0)!=0)<<2)|0;HEAP8[$28]=HEAP8[$29]|0;HEAP8[$28+1|0]=HEAP8[$29+1|0]|0;HEAP8[$28+2|0]=HEAP8[$29+2|0]|0;HEAP8[$28+3|0]=HEAP8[$29+3|0]|0;$39=$1-21|0;$40=$4+((($idx&64|0)!=0)<<2)|0;HEAP8[$39]=HEAP8[$40]|0;HEAP8[$39+1|0]=HEAP8[$40+1|0]|0;HEAP8[$39+2|0]=HEAP8[$40+2|0]|0;HEAP8[$39+3|0]=HEAP8[$40+3|0]|0;$50=$1-18|0;$51=$4+((($idx&32|0)!=0)<<2)|0;HEAP8[$50]=HEAP8[$51]|0;HEAP8[$50+1|0]=HEAP8[$51+1|0]|0;HEAP8[$50+2|0]=HEAP8[$51+2|0]|0;HEAP8[$50+3|0]=HEAP8[$51+3|0]|0;$61=$1-15|0;$62=$4+((($idx&16|0)!=0)<<2)|0;HEAP8[$61]=HEAP8[$62]|0;HEAP8[$61+1|0]=HEAP8[$62+1|0]|0;HEAP8[$61+2|0]=HEAP8[$62+2|0]|0;HEAP8[$61+3|0]=HEAP8[$62+3|0]|0;$72=$1-12|0;$73=$4+((($idx&8|0)!=0)<<2)|0;HEAP8[$72]=HEAP8[$73]|0;HEAP8[$72+1|0]=HEAP8[$73+1|0]|0;HEAP8[$72+2|0]=HEAP8[$73+2|0]|0;HEAP8[$72+3|0]=HEAP8[$73+3|0]|0;$83=$1-9|0;$84=$4+((($idx&4|0)!=0)<<2)|0;HEAP8[$83]=HEAP8[$84]|0;HEAP8[$83+1|0]=HEAP8[$84+1|0]|0;HEAP8[$83+2|0]=HEAP8[$84+2|0]|0;HEAP8[$83+3|0]=HEAP8[$84+3|0]|0;$94=$1-6|0;$95=$4+((($idx&2|0)!=0)<<2)|0;HEAP8[$94]=HEAP8[$95]|0;HEAP8[$94+1|0]=HEAP8[$95+1|0]|0;HEAP8[$94+2|0]=HEAP8[$95+2|0]|0;HEAP8[$94+3|0]=HEAP8[$95+3|0]|0;$105=$1-3|0;$106=$4+((($idx&1|0)!=0)<<2)|0;HEAP8[$105]=HEAP8[$106]|0;HEAP8[$105+1|0]=HEAP8[$106+1|0]|0;HEAP8[$105+2|0]=HEAP8[$106+2|0]|0;HEAP8[$105+3|0]=HEAP8[$106+3|0]|0;label=2;break;case 4:$idx1=(HEAPU8[$2|0]|0)<<24;$1=$1-24|0;label=5;break;case 5:if($1>>>0<$end>>>0){label=6;break}else{label=8;break};case 6:$125=$clr;$126=$4+((($idx1|0)<0)<<2)|0;HEAP8[$125]=HEAP8[$126]|0;HEAP8[$125+1|0]=HEAP8[$126+1|0]|0;HEAP8[$125+2|0]=HEAP8[$126+2|0]|0;HEAP8[$125+3|0]=HEAP8[$126+3|0]|0;HEAP8[$1|0]=HEAP8[$clr|0]|0;HEAP8[$1+1|0]=HEAP8[$clr+1|0]|0;HEAP8[$1+2|0]=HEAP8[$clr+2|0]|0;label=7;break;case 7:$1=$1+3|0;$idx1=$idx1+$idx1|0;label=5;break;case 8:STACKTOP=sp;return $1|0}return 0}function __ZN11GrFmtWriter17IsFormatSupportedEi($this,$depth){$this=$this|0;$depth=$depth|0;return($depth|0)==8|0}function __Z12FillGrayRow1PhS_iS_($data,$indices,$len,$palette){$data=$data|0;$indices=$indices|0;$len=$len|0;$palette=$palette|0;var $1=0,$2=0,$4=0,$end=0,$idx=0,$idx1=0,$10=0,$14=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$data;$2=$indices;$4=$palette;$end=$1+$len|0;label=2;break;case 2:$10=$1+8|0;$1=$10;if($10>>>0<$end>>>0){label=3;break}else{label=4;break};case 3:$14=$2;$2=$14+1|0;$idx=HEAPU8[$14]|0;HEAP8[$1-8|0]=HEAP8[$4+(($idx&128|0)!=0)|0]|0;HEAP8[$1-7|0]=HEAP8[$4+(($idx&64|0)!=0)|0]|0;HEAP8[$1-6|0]=HEAP8[$4+(($idx&32|0)!=0)|0]|0;HEAP8[$1-5|0]=HEAP8[$4+(($idx&16|0)!=0)|0]|0;HEAP8[$1-4|0]=HEAP8[$4+(($idx&8|0)!=0)|0]|0;HEAP8[$1-3|0]=HEAP8[$4+(($idx&4|0)!=0)|0]|0;HEAP8[$1-2|0]=HEAP8[$4+(($idx&2|0)!=0)|0]|0;HEAP8[$1-1|0]=HEAP8[$4+(($idx&1|0)!=0)|0]|0;label=2;break;case 4:$idx1=(HEAPU8[$2|0]|0)<<24;$1=$1-8|0;label=5;break;case 5:if($1>>>0<$end>>>0){label=6;break}else{label=8;break};case 6:HEAP8[$1|0]=HEAP8[$4+(($idx1|0)<0)|0]|0;label=7;break;case 7:$1=$1+1|0;$idx1=$idx1+$idx1|0;label=5;break;case 8:return $1|0}return 0}function __ZN11GrFmtReader5CloseEv($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2+12>>2]=0;HEAP32[$2+8>>2]=0;HEAP8[$2+4|0]=0;return}function __ZN18GrFmtFilterFactoryC2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=18640;HEAP32[$2+12>>2]=0;HEAP32[$2+4>>2]=0;HEAP32[$2+8>>2]=0;return}function _cvConvertImage($srcarr,$dstarr,$flags){$srcarr=$srcarr|0;$dstarr=$dstarr|0;$flags=$flags|0;var $3=0,$temp=0,$src=0,$dst=0,$src_cn=0,$swap_rb=0,$scale=0.0,$shift=0.0,$src_depth=0,$s=0,$d=0,$s_step=0,$d_step=0,$code=0,$size=0,$4=0,$5=0,$6=0,$7=0,$8=0,$103=0.0,$110=0,$166=0,$171=0,$177=0,$178=0,$184=0,$185=0,$195=0,$196=0,$203=0,$204=0,$211=0,$212=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+120|0;label=1;while(1)switch(label|0){case 1:$temp=sp|0;$size=sp+72|0;$4=sp+80|0;$5=sp+88|0;$6=sp+96|0;$7=sp+104|0;$8=sp+112|0;$3=$flags;HEAP32[$temp>>2]=0;$swap_rb=$3&2;$src=_cvGetMat($srcarr,sp+8|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,6712,11816,15104,515);label=45;break;case 3:$dst=_cvGetMat($dstarr,sp+40|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6712,11816,15104,516);label=45;break;case 5:$src_cn=((HEAP32[$src>>2]&504)>>3)+1|0;if(($src_cn|0)!=1){label=6;break}else{label=9;break};case 6:if(($src_cn|0)!=3){label=7;break}else{label=9;break};case 7:if(($src_cn|0)!=4){label=8;break}else{label=9;break};case 8:_cvError(-15,6712,12240,15104,521);label=45;break;case 9:if((HEAP32[$dst>>2]&7|0)!=0){label=10;break}else{label=11;break};case 10:_cvError(-17,6712,11184,15104,524);label=45;break;case 11:if((((HEAP32[$dst>>2]&504)>>3)+1|0)!=1){label=12;break}else{label=14;break};case 12:if((((HEAP32[$dst>>2]&504)>>3)+1|0)!=3){label=13;break}else{label=14;break};case 13:_cvError(-15,6712,10424,15104,527);label=45;break;case 14:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&7|0)==0){label=21;break}else{label=15;break};case 15:$scale=0.0;$shift=0.0;$src_depth=HEAP32[$src>>2]&7;HEAP32[$temp>>2]=_cvCreateMat(HEAP32[$src+20>>2]|0,HEAP32[$src+24>>2]|0,HEAP32[$src>>2]&504|HEAP32[$dst>>2]&7)|0;if(($src_depth|0)<=1){label=16;break}else{label=17;break};case 16:$103=1.0;label=18;break;case 17:$103=($src_depth|0)<=4?.00390625:255.0;label=18;break;case 18:$scale=$103;if(($src_depth|0)==1){$110=1;label=20;break}else{label=19;break};case 19:$110=($src_depth|0)==3;label=20;break;case 20:$shift=+(($110?128:0)|0);_cvConvertScale($src,HEAP32[$temp>>2]|0,$scale,$shift);$src=HEAP32[$temp>>2]|0;label=21;break;case 21:$s=HEAP32[$src+16>>2]|0;$d=HEAP32[$dst+16>>2]|0;$s_step=HEAP32[$src+4>>2]|0;$d_step=HEAP32[$dst+4>>2]|0;$code=($src_cn*10|0)+(((HEAP32[$dst>>2]&504)>>3)+1)|0;HEAP32[$size>>2]=HEAP32[$src+24>>2];HEAP32[$size+4>>2]=HEAP32[$src+20>>2];if((HEAP32[$src>>2]&HEAP32[$dst>>2]&16384|0)!=0){label=22;break}else{label=23;break};case 22:$166=$size|0;HEAP32[$166>>2]=Math_imul(HEAP32[$166>>2]|0,HEAP32[$size+4>>2]|0)|0;HEAP32[$size+4>>2]=1;$d_step=1073741824;$s_step=1073741824;label=23;break;case 23:$171=$code;if(($171|0)==13){label=24;break}else if(($171|0)==31){label=25;break}else if(($171|0)==33){label=26;break}else if(($171|0)==41){label=29;break}else if(($171|0)==43){label=30;break}else{label=31;break};case 24:$177=$4;$178=$size;HEAP32[$177>>2]=HEAP32[$178>>2];HEAP32[$177+4>>2]=HEAP32[$178+4>>2];__Z24icvCvt_Gray2BGR_8u_C1C3RPKhiPhi6CvSize($s,$s_step,$d,$d_step,$4);label=32;break;case 25:$184=$5;$185=$size;HEAP32[$184>>2]=HEAP32[$185>>2];HEAP32[$184+4>>2]=HEAP32[$185+4>>2];__Z24icvCvt_BGR2Gray_8u_C3C1RPKhiPhi6CvSizei($s,$s_step,$d,$d_step,$5,$swap_rb);label=32;break;case 26:if(($swap_rb|0)!=0){label=27;break}else{label=28;break};case 27:$195=$6;$196=$size;HEAP32[$195>>2]=HEAP32[$196>>2];HEAP32[$195+4>>2]=HEAP32[$196+4>>2];__Z21icvCvt_BGR2RGB_8u_C3RPKhiPhi6CvSize($s,$s_step,$d,$d_step,$6);label=28;break;case 28:label=32;break;case 29:$203=$7;$204=$size;HEAP32[$203>>2]=HEAP32[$204>>2];HEAP32[$203+4>>2]=HEAP32[$204+4>>2];__Z25icvCvt_BGRA2Gray_8u_C4C1RPKhiPhi6CvSizei($s,$s_step,$d,$d_step,$7,$swap_rb);label=32;break;case 30:$211=$8;$212=$size;HEAP32[$211>>2]=HEAP32[$212>>2];HEAP32[$211+4>>2]=HEAP32[$212+4>>2];__Z24icvCvt_BGRA2BGR_8u_C4C3RPKhiPhi6CvSizei($s,$s_step,$d,$d_step,$8,$swap_rb);label=32;break;case 31:_cvError(-210,6712,9432,15104,573);label=45;break;case 32:if(($code|0)!=33){label=34;break}else{label=33;break};case 33:if(($swap_rb|0)!=0){label=34;break}else{label=35;break};case 34:$src=$dst;label=35;break;case 35:if(($3&1|0)!=0){label=36;break}else{label=39;break};case 36:_cvFlip($src,$dst,0);if((_cvGetErrStatus()|0)<0){label=37;break}else{label=38;break};case 37:_cvError(-1,6712,11816,15104,582);label=45;break;case 38:label=44;break;case 39:if(($src|0)!=($dst|0)){label=40;break}else{label=43;break};case 40:_cvCopy($src,$dst,0);if((_cvGetErrStatus()|0)<0){label=41;break}else{label=42;break};case 41:_cvError(-1,6712,11816,15104,586);label=45;break;case 42:label=43;break;case 43:label=44;break;case 44:label=45;break;case 45:_cvReleaseMat($temp);STACKTOP=sp;return}}function _cvShowImage($0,$1){$0=$0|0;$1=$1|0;_cvError(-2,9392,14768,12168,89);return}function __ZN11GrFmtReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0;$3=$this;HEAP32[$3>>2]=19600;_strncpy($3+20|0,$filename|0,1023)|0;HEAP8[$3+1043|0]=0;HEAP32[$3+12>>2]=0;HEAP32[$3+8>>2]=0;HEAP8[$3+4|0]=0;HEAP32[$3+16>>2]=8;HEAP8[$3+1044|0]=0;HEAP8[$3+1045|0]=0;return}function __ZN11GrFmtReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11GrFmtReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11GrFmtReaderD2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=19600;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+16>>2]&1023]($2);return}function __ZN11GrFmtWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0;$3=$this;HEAP32[$3>>2]=19568;_strncpy($3+4|0,$filename|0,1023)|0;HEAP8[$3+1027|0]=0;return}function __ZN18GrFmtFilterFactory14CheckSignatureEPKc($this,$signature){$this=$this|0;$signature=$signature|0;var $2=0,$3=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$signature;$3=$this;if((HEAP32[$3+8>>2]|0)>0){label=2;break}else{$19=0;label=4;break};case 2:if(($2|0)!=0){label=3;break}else{$19=0;label=4;break};case 3:$19=(_memcmp($2|0,HEAP32[$3+12>>2]|0,HEAP32[$3+8>>2]|0)|0)==0;label=4;break;case 4:return $19|0}return 0}function __ZN18GrFmtFilterFactory14CheckExtensionEPKc($this,$format){$this=$this|0;$format=$format|0;var $1=0,$3=0,$descr=0,$len=0,$ext=0,$i=0,$len2=0,$c1=0,$4=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$format;$4=$this;$descr=0;$len=0;if(($3|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$4+4>>2]|0)!=0){label=4;break}else{label=3;break};case 3:$1=0;label=27;break;case 4:label=5;break;case 5:$ext=_strchr($3+1|0,46)|0;if(($ext|0)!=0){label=7;break}else{label=6;break};case 6:label=8;break;case 7:$3=$ext;label=5;break;case 8:$len=__ZL18GetExtensionLengthPKc($3)|0;if((HEAP8[$3|0]|0)!=46){label=10;break}else{label=9;break};case 9:if(($len|0)==0){label=10;break}else{label=11;break};case 10:$1=0;label=27;break;case 11:$descr=_strchr(HEAP32[$4+4>>2]|0,40)|0;label=12;break;case 12:if(($descr|0)!=0){label=13;break}else{label=26;break};case 13:$descr=_strchr($descr+1|0,46)|0;$len2=__ZL18GetExtensionLengthPKc($descr)|0;if(($len2|0)==0){label=14;break}else{label=15;break};case 14:label=26;break;case 15:if(($len2|0)==($len|0)){label=16;break}else{label=25;break};case 16:$i=0;label=17;break;case 17:if(($i|0)<($len|0)){label=18;break}else{label=22;break};case 18:$c1=_tolower(HEAP8[$3+($i+1)|0]|0)|0;if(($c1|0)!=(_tolower(HEAP8[$descr+($i+1)|0]|0)|0)){label=19;break}else{label=20;break};case 19:label=22;break;case 20:label=21;break;case 21:$i=$i+1|0;label=17;break;case 22:if(($i|0)==($len|0)){label=23;break}else{label=24;break};case 23:$1=1;label=27;break;case 24:label=25;break;case 25:label=12;break;case 26:$1=0;label=27;break;case 27:return $1|0}return 0}function __ZL18GetExtensionLengthPKc($buffer){$buffer=$buffer|0;var $1=0,$len=0,$ext=0,$7=0,$23=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$buffer;$len=0;if(($1|0)!=0){label=2;break}else{label=10;break};case 2:$ext=_strchr($1|0,46)|0;$7=$ext;$ext=$7+1|0;if(($7|0)!=0){label=3;break}else{label=9;break};case 3:label=4;break;case 4:if((_isalnum(HEAP8[$ext+$len|0]|0)|0)!=0){label=5;break}else{$23=0;label=6;break};case 5:$23=($len|0)<1024;label=6;break;case 6:if($23){label=7;break}else{label=8;break};case 7:$len=$len+1|0;label=4;break;case 8:label=9;break;case 9:label=10;break;case 10:return $len|0}return 0}function __ZN18GrFmtFactoriesListC2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=18680;HEAP32[$2+4>>2]=0;__ZN18GrFmtFactoriesList9RemoveAllEv($2);return}function __ZN18GrFmtFilterFactoryD2Ev($this){$this=$this|0;return}function __ZN11GrFmtWriterD2Ev($this){$this=$this|0;return}function __ZN18GrFmtFactoriesList18GetFirstFactoryPosEv($this){$this=$this|0;return HEAP32[$this+4>>2]|0}function __ZN18GrFmtFactoriesList14GetNextFactoryERPv($this,$pos){$this=$this|0;$pos=$pos|0;var $2=0,$factory=0,$temp=0,$3=0,$10=0,$24=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$pos;$3=$this;$factory=0;$temp=HEAP32[$2>>2]|0;if(($temp|0)!=0){label=2;break}else{label=6;break};case 2:$10=$temp;$temp=$10+4|0;$factory=HEAP32[$10>>2]|0;if($temp>>>0<((HEAP32[$3+4>>2]|0)+(HEAP32[$3+12>>2]<<2)|0)>>>0){label=3;break}else{label=4;break};case 3:$24=$temp;label=5;break;case 4:$24=0;label=5;break;case 5:HEAP32[$2>>2]=$24;label=6;break;case 6:return $factory|0}return 0}function __ZN18GrFmtFilterFactory18GetSignatureLengthEv($this){$this=$this|0;return HEAP32[$this+8>>2]|0}function __ZN18GrFmtFactoriesList9RemoveAllEv($this){$this=$this|0;var $i=0,$2=0,$17=0,$30=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+4>>2]|0)!=0){label=2;break}else{label=11;break};case 2:$i=0;label=3;break;case 3:if(($i|0)<(HEAP32[$2+12>>2]|0)){label=4;break}else{label=8;break};case 4:$17=HEAP32[(HEAP32[$2+4>>2]|0)+($i<<2)>>2]|0;if(($17|0)==0){label=6;break}else{label=5;break};case 5:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$17>>2]|0)+4>>2]&1023]($17);label=6;break;case 6:label=7;break;case 7:$i=$i+1|0;label=3;break;case 8:$30=HEAP32[$2+4>>2]|0;if(($30|0)==0){label=10;break}else{label=9;break};case 9:__ZdaPv($30);label=10;break;case 10:label=11;break;case 11:HEAP32[$2+4>>2]=0;HEAP32[$2+12>>2]=0;HEAP32[$2+8>>2]=0;return}}function __ZN18GrFmtFactoriesListD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN18GrFmtFactoriesListD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN18GrFmtFactoriesListD2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=18680;__ZN18GrFmtFactoriesList9RemoveAllEv($2);return}function __ZN18GrFmtFactoriesList10AddFactoryEP18GrFmtFilterFactory($this,$factory){$this=$this|0;$factory=$factory|0;var $newMaxFactories=0,$newFactories=0,$i=0,$3=0,$18$0=0,$43=0,$54=0,$55=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;if((HEAP32[$3+12>>2]|0)==(HEAP32[$3+8>>2]|0)){label=2;break}else{label=11;break};case 2:$newMaxFactories=HEAP32[$3+8>>2]<<1;if(($newMaxFactories|0)<16){label=3;break}else{label=4;break};case 3:$newMaxFactories=16;label=4;break;case 4:$18$0=_llvm_umul_with_overflow_i32($newMaxFactories|0,4)|0;$newFactories=__Znaj(tempRet0?-1:$18$0)|0;$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$3+12>>2]|0)){label=6;break}else{label=8;break};case 6:HEAP32[$newFactories+($i<<2)>>2]=HEAP32[(HEAP32[$3+4>>2]|0)+($i<<2)>>2];label=7;break;case 7:$i=$i+1|0;label=5;break;case 8:$43=HEAP32[$3+4>>2]|0;if(($43|0)==0){label=10;break}else{label=9;break};case 9:__ZdaPv($43);label=10;break;case 10:HEAP32[$3+4>>2]=$newFactories;HEAP32[$3+8>>2]=$newMaxFactories;label=11;break;case 11:$54=$3+12|0;$55=HEAP32[$54>>2]|0;HEAP32[$54>>2]=$55+1;HEAP32[(HEAP32[$3+4>>2]|0)+($55<<2)>>2]=$factory;return 1}return 0}function __ZN18GrFmtFactoriesList10FindReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $1=0,$3=0,$f=0,$signature=0,$sign_len=0,$reader=0,$pos=0,$cur_sign_len=0,$tempFactory1=0,$4=0,$47=0,$55=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+4104|0;label=1;while(1)switch(label|0){case 1:$signature=sp|0;$pos=sp+4096|0;$3=$filename;$4=$this;$f=0;$sign_len=0;$reader=0;HEAP32[$pos>>2]=__ZN18GrFmtFactoriesList18GetFirstFactoryPosEv($4)|0;if(($3|0)!=0){label=3;break}else{label=2;break};case 2:$1=0;label=17;break;case 3:label=4;break;case 4:if((HEAP32[$pos>>2]|0)!=0){label=5;break}else{label=8;break};case 5:$cur_sign_len=__ZN18GrFmtFilterFactory18GetSignatureLengthEv(__ZN18GrFmtFactoriesList14GetNextFactoryERPv($4,$pos)|0)|0;if(($sign_len|0)<($cur_sign_len|0)){label=6;break}else{label=7;break};case 6:$sign_len=$cur_sign_len;label=7;break;case 7:label=4;break;case 8:$f=_fopen($3|0,9792)|0;if(($f|0)!=0){label=9;break}else{label=16;break};case 9:$sign_len=_fread($signature|0,1,$sign_len|0,$f|0)|0;_fclose($f|0)|0;HEAP32[$pos>>2]=__ZN18GrFmtFactoriesList18GetFirstFactoryPosEv($4)|0;label=10;break;case 10:if((HEAP32[$pos>>2]|0)!=0){label=11;break}else{label=15;break};case 11:$tempFactory1=__ZN18GrFmtFactoriesList14GetNextFactoryERPv($4,$pos)|0;if((__ZN18GrFmtFilterFactory18GetSignatureLengthEv($tempFactory1)|0)<=($sign_len|0)){label=12;break}else{label=14;break};case 12:$47=$tempFactory1;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$47>>2]|0)+8>>2]&1023]($47,$signature|0)|0){label=13;break}else{label=14;break};case 13:$55=$tempFactory1;$reader=FUNCTION_TABLE_iii[HEAP32[(HEAP32[$55>>2]|0)+16>>2]&1023]($55,$3)|0;label=15;break;case 14:label=10;break;case 15:label=16;break;case 16:$1=$reader;label=17;break;case 17:STACKTOP=sp;return $1|0}return 0}function __ZN18GrFmtFactoriesList10FindWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $1=0,$3=0,$writer=0,$pos=0,$tempFactory=0,$4=0,$15=0,$23=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$pos=sp|0;$3=$filename;$4=$this;$writer=0;HEAP32[$pos>>2]=__ZN18GrFmtFactoriesList18GetFirstFactoryPosEv($4)|0;if(($3|0)!=0){label=3;break}else{label=2;break};case 2:$1=0;label=9;break;case 3:label=4;break;case 4:if((HEAP32[$pos>>2]|0)!=0){label=5;break}else{label=8;break};case 5:$tempFactory=__ZN18GrFmtFactoriesList14GetNextFactoryERPv($4,$pos)|0;$15=$tempFactory;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15>>2]|0)+12>>2]&1023]($15,$3)|0){label=6;break}else{label=7;break};case 6:$23=$tempFactory;$writer=FUNCTION_TABLE_iii[HEAP32[(HEAP32[$23>>2]|0)+20>>2]&1023]($23,$3)|0;label=8;break;case 7:label=4;break;case 8:$1=$writer;label=9;break;case 9:STACKTOP=sp;return $1|0}return 0}function __ZN11GrFmtWriterD1Ev($this){$this=$this|0;__ZN11GrFmtWriterD2Ev($this);return}function __ZN11GrFmtWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11GrFmtWriterD1Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN18GrFmtFilterFactoryD1Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN18GrFmtFilterFactoryD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN18GrFmtFilterFactoryD1Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN8GrFmtBmpC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN18GrFmtFilterFactoryC2Ev($2);HEAP32[$2>>2]=18528;HEAP32[$2+8>>2]=2;HEAP32[$2+12>>2]=HEAP32[5870];HEAP32[$2+4>>2]=9336;return}function __ZN8GrFmtBmpD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN8GrFmtBmpD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN8GrFmtBmpD2Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN8GrFmtBmp9NewReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(2160)|0;$7=$6;__ZN14GrFmtBmpReaderC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN8GrFmtBmp9NewWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(1060)|0;$7=$6;__ZN14GrFmtBmpWriterC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN12RLByteStreamC1Ev($this){$this=$this|0;__ZN12RLByteStreamC2Ev($this);return}function __ZN14GrFmtBmpReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14GrFmtBmpReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14GrFmtBmpReader5CloseEv($this){$this=$this|0;var $2=0,$4=0;$2=$this;$4=$2+1048|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);__ZN11GrFmtReader5CloseEv($2);return}function __ZN14GrFmtBmpReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtReaderC2EPKc($5,$filename);HEAP32[$5>>2]=19096;__ZN12RLByteStreamC1Ev($5+1048|0);label=2;break;case 2:HEAP32[$5+2152>>2]=-1;return;case 3:__ZN11GrFmtReaderD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtBmpReaderD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=19096;__ZN11RBaseStreamD2Ev($4+1048|0);label=2;break;case 2:__ZN11GrFmtReaderD2Ev($4);return;case 3:__ZN11GrFmtReaderD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtBmpReader10ReadHeaderEv($this){$this=$this|0;var $1=0,$result=0,$size=0,$clrused=0,$redmask=0,$greenmask=0,$bluemask=0,$buffer=0,$j=0,$clrused1=0,$3=0,$5=0,$13=0,$18=0,$20=0,$26=0,$29=0,$34=0,$38=0,$42=0,$46=0,$51=0,$139=0,$145=0,$159=0,$161=0,$163=0,$206=0,$210=0,$214=0,$309=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+768|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$3=$this;$result=0;$5=$3+1048|0;$13=invoke_iii(HEAP32[(HEAP32[$5>>2]|0)+8>>2]|0,$5|0,$3+20|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($13){label=3;break}else{label=2;break};case 2:$1=0;label=66;break;case 3:$18=invoke_ii(212,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$20=_saveSetjmp($18|0,label,setjmpTable)|0;label=67;break;case 67:if(($20|0)==0){label=4;break}else{label=63;break};case 4:invoke_vii(666,$3+1048|0,10);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$26=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2152>>2]=$26;$29=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$size=$29;if(($size|0)>=36){label=5;break}else{label=45;break};case 5:$34=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+8>>2]=$34;$38=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+12>>2]=$38;$42=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2148>>2]=$42>>16;$46=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2156>>2]=$46;invoke_vii(666,$3+1048|0,12);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$51=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$clrused=$51;invoke_vii(666,$3+1048|0,$size-36|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if((HEAP32[$3+8>>2]|0)>0){label=6;break}else{label=44;break};case 6:if((HEAP32[$3+12>>2]|0)>0){label=7;break}else{label=44;break};case 7:if((HEAP32[$3+2148>>2]|0)==1){label=12;break}else{label=8;break};case 8:if((HEAP32[$3+2148>>2]|0)==4){label=12;break}else{label=9;break};case 9:if((HEAP32[$3+2148>>2]|0)==8){label=12;break}else{label=10;break};case 10:if((HEAP32[$3+2148>>2]|0)==24){label=12;break}else{label=11;break};case 11:if((HEAP32[$3+2148>>2]|0)==32){label=12;break}else{label=13;break};case 12:if((HEAP32[$3+2156>>2]|0)==0){label=20;break}else{label=13;break};case 13:if((HEAP32[$3+2148>>2]|0)==16){label=14;break}else{label=16;break};case 14:if((HEAP32[$3+2156>>2]|0)==0){label=20;break}else{label=15;break};case 15:if((HEAP32[$3+2156>>2]|0)==3){label=20;break}else{label=16;break};case 16:if((HEAP32[$3+2148>>2]|0)==4){label=17;break}else{label=18;break};case 17:if((HEAP32[$3+2156>>2]|0)==2){label=20;break}else{label=18;break};case 18:if((HEAP32[$3+2148>>2]|0)==8){label=19;break}else{label=44;break};case 19:if((HEAP32[$3+2156>>2]|0)==1){label=20;break}else{label=44;break};case 20:HEAP8[$3+4|0]=1;$result=1;if((HEAP32[$3+2148>>2]|0)<=8){label=21;break}else{label=25;break};case 21:_memset($3+1124|0,0,1024);if(($clrused|0)==0){label=22;break}else{label=23;break};case 22:$139=1<<HEAP32[$3+2148>>2];label=24;break;case 23:$139=$clrused;label=24;break;case 24:invoke_viiii(32,$3+1048|0,$3+1124|0,$139<<2|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$145=invoke_iii(588,$3+1124|0,HEAP32[$3+2148>>2]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$3+4|0]=$145&1;label=43;break;case 25:if((HEAP32[$3+2148>>2]|0)==16){label=26;break}else{label=38;break};case 26:if((HEAP32[$3+2156>>2]|0)==3){label=27;break}else{label=38;break};case 27:$159=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$redmask=$159;$161=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$greenmask=$161;$163=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$bluemask=$163;if(($bluemask|0)==31){label=28;break}else{label=31;break};case 28:if(($greenmask|0)==992){label=29;break}else{label=31;break};case 29:if(($redmask|0)==31744){label=30;break}else{label=31;break};case 30:HEAP32[$3+2148>>2]=15;label=37;break;case 31:if(($bluemask|0)==31){label=32;break}else{label=35;break};case 32:if(($greenmask|0)==2016){label=33;break}else{label=35;break};case 33:if(($redmask|0)==63488){label=34;break}else{label=35;break};case 34:label=36;break;case 35:$result=0;label=36;break;case 36:label=37;break;case 37:label=42;break;case 38:if((HEAP32[$3+2148>>2]|0)==16){label=39;break}else{label=41;break};case 39:if((HEAP32[$3+2156>>2]|0)==0){label=40;break}else{label=41;break};case 40:HEAP32[$3+2148>>2]=15;label=41;break;case 41:label=42;break;case 42:label=43;break;case 43:label=44;break;case 44:label=62;break;case 45:if(($size|0)==12){label=46;break}else{label=61;break};case 46:$206=invoke_ii(430,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+8>>2]=$206;$210=invoke_ii(430,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+12>>2]=$210;$214=invoke_ii(298,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2148>>2]=$214>>16;HEAP32[$3+2156>>2]=0;if((HEAP32[$3+8>>2]|0)>0){label=47;break}else{label=60;break};case 47:if((HEAP32[$3+12>>2]|0)>0){label=48;break}else{label=60;break};case 48:if((HEAP32[$3+2148>>2]|0)==1){label=53;break}else{label=49;break};case 49:if((HEAP32[$3+2148>>2]|0)==4){label=53;break}else{label=50;break};case 50:if((HEAP32[$3+2148>>2]|0)==8){label=53;break}else{label=51;break};case 51:if((HEAP32[$3+2148>>2]|0)==24){label=53;break}else{label=52;break};case 52:if((HEAP32[$3+2148>>2]|0)==32){label=53;break}else{label=60;break};case 53:if((HEAP32[$3+2148>>2]|0)<=8){label=54;break}else{label=59;break};case 54:$clrused1=1<<HEAP32[$3+2148>>2];invoke_viiii(32,$3+1048|0,$buffer|0,$clrused1*3|0|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$j=0;label=55;break;case 55:if(($j|0)<($clrused1|0)){label=56;break}else{label=58;break};case 56:HEAP8[$3+1124+($j<<2)|0]=HEAP8[$buffer+($j*3|0)|0]|0;HEAP8[$3+1124+($j<<2)+1|0]=HEAP8[$buffer+(($j*3|0)+1)|0]|0;HEAP8[$3+1124+($j<<2)+2|0]=HEAP8[$buffer+(($j*3|0)+2)|0]|0;label=57;break;case 57:$j=$j+1|0;label=55;break;case 58:label=59;break;case 59:$result=1;label=60;break;case 60:label=61;break;case 61:label=62;break;case 62:label=63;break;case 63:if($result&1){label=65;break}else{label=64;break};case 64:HEAP32[$3+2152>>2]=-1;HEAP32[$3+12>>2]=-1;HEAP32[$3+8>>2]=-1;$309=$3+1048|0;invoke_vi(HEAP32[(HEAP32[$309>>2]|0)+12>>2]|0,$309|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=65;break;case 65:$1=$result&1;label=66;break;case 66:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==3){$20=threwValue;label=67}__THREW__=threwValue=0;break}return 0}function __ZN14GrFmtBmpReader8ReadDataEPhii($this,$data,$step,$color){$this=$this|0;$data=$data|0;$step=$step|0;$color=$color|0;var $1=0,$3=0,$4=0,$5=0,$buffer=0,$bgr_buffer=0,$gray_palette=0,$result=0,$src=0,$bgr=0,$src_pitch=0,$nch=0,$width3=0,$y=0,$6=0,$line_end=0,$code=0,$len=0,$clr=0,$gray_clr=0,$t=0,$end=0,$x_shift3=0,$y_shift=0,$7=0,$line_end1=0,$line_end_flag=0,$code2=0,$len3=0,$prev_y=0,$8=0,$prev_y4=0,$x_shift35=0,$y_shift6=0,$9=0,$10=0,$11=0,$12=0,$13=0,$14=0,$15=0,$16=0,$17=0,$31=0,$51=0,$76=0,$79=0,$106=0,$109=0,$114=0,$116=0,$124=0,$151=0,$152=0,$216=0,$229=0,$230=0,$236=0,$237=0,$291=0,$303=0,$323=0,$329=0,$346=0,$350=0,$370=0,$374=0,$375=0,$376=0,$387=0,$454=0,$481=0,$486=0,$487=0,$488=0,$500=0,$515=0,$533=0,$539=0,$569=0,$573=0,$600=0,$604=0,$605=0,$606=0,$617=0,$647=0,$648=0,$653=0,$654=0,$680=0,$681=0,$686=0,$687=0,$717=0,$718=0,$744=0,$745=0,$750=0,$751=0,$770=0,$779=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+8576|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$bgr_buffer=sp+4096|0;$gray_palette=sp+8192|0;$y=sp+8448|0;$6=sp+8456|0;$line_end=sp+8464|0;$clr=sp+8472|0;$gray_clr=sp+8480|0;$7=sp+8488|0;$line_end1=sp+8496|0;$8=sp+8504|0;$9=sp+8512|0;$10=sp+8520|0;$11=sp+8528|0;$12=sp+8536|0;$13=sp+8544|0;$14=sp+8552|0;$15=sp+8560|0;$16=sp+8568|0;$3=$data;$4=$step;$5=$color;$17=$this;$result=0;$src=$buffer|0;$bgr=$bgr_buffer|0;if((HEAP32[$17+2148>>2]|0)!=15){label=2;break}else{label=3;break};case 2:$31=HEAP32[$17+2148>>2]|0;label=4;break;case 3:$31=16;label=4;break;case 4:$src_pitch=(((Math_imul(HEAP32[$17+8>>2]|0,$31)|0)+7|0)/8|0)+3&-4;$nch=($5|0)!=0?3:1;$width3=Math_imul(HEAP32[$17+8>>2]|0,$nch)|0;if((HEAP32[$17+2152>>2]|0)<0){label=6;break}else{label=5;break};case 5:$51=invoke_ii(370,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($51){label=7;break}else{label=6;break};case 6:$1=0;label=155;break;case 7:$3=$3+(Math_imul((HEAP32[$17+12>>2]|0)-1|0,$4)|0)|0;$4=-$4|0;if((HEAP32[$17+2148>>2]|0)!=24){label=9;break}else{label=8;break};case 8:if(($5|0)!=0){label=11;break}else{label=9;break};case 9:if(($src_pitch+32|0)>4096){label=10;break}else{label=11;break};case 10:$76=$src_pitch+32|0;$79=invoke_ii(814,(($76|0)<0?-1:$76)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$src=$79;label=11;break;case 11:if(($5|0)!=0){label=17;break}else{label=12;break};case 12:if((HEAP32[$17+2148>>2]|0)<=8){label=13;break}else{label=14;break};case 13:invoke_viii(476,$17+1124|0,$gray_palette|0,1<<HEAP32[$17+2148>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=14;break;case 14:if((((HEAP32[$17+8>>2]|0)*3|0)+32|0)>4096){label=15;break}else{label=16;break};case 15:$106=((HEAP32[$17+8>>2]|0)*3|0)+32|0;$109=invoke_ii(814,(($106|0)<0?-1:$106)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$bgr=$109;label=16;break;case 16:label=17;break;case 17:$114=invoke_ii(212,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$116=_saveSetjmp($114|0,label,setjmpTable)|0;label=156;break;case 156:if(($116|0)==0){label=18;break}else{label=146;break};case 18:invoke_vii(710,$17+1048|0,HEAP32[$17+2152>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$124=HEAP32[$17+2148>>2]|0;if(($124|0)==1){label=19;break}else if(($124|0)==4){label=26;break}else if(($124|0)==8){label=68;break}else if(($124|0)==15){label=113;break}else if(($124|0)==16){label=121;break}else if(($124|0)==24){label=129;break}else if(($124|0)==32){label=136;break}else{label=144;break};case 19:HEAP32[$y>>2]=0;label=20;break;case 20:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=21;break}else{label=25;break};case 21:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_iiiii(478,(($5|0)!=0?$3:$bgr)|0,$src|0,HEAP32[$17+8>>2]|0,$17+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=23;break}else{label=22;break};case 22:$151=$bgr;$152=$3;invoke_viii(124,$6|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(360,$151|0,0,$152|0,0,$6|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=23;break;case 23:label=24;break;case 24:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=20;break;case 25:$result=1;label=145;break;case 26:if((HEAP32[$17+2156>>2]|0)==0){label=27;break}else{label=35;break};case 27:HEAP32[$y>>2]=0;label=28;break;case 28:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=29;break}else{label=34;break};case 29:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=30;break}else{label=31;break};case 30:invoke_iiiii(346,$3|0,$src|0,HEAP32[$17+8>>2]|0,$17+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=32;break;case 31:invoke_iiiii(730,$3|0,$src|0,HEAP32[$17+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=32;break;case 32:label=33;break;case 33:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=28;break;case 34:$result=1;label=67;break;case 35:if((HEAP32[$17+2156>>2]|0)==2){label=36;break}else{label=66;break};case 36:HEAP32[$line_end>>2]=$3+$width3;HEAP32[$y>>2]=0;label=37;break;case 37:$216=invoke_ii(430,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$216;$len=$code&255;$code=$code>>8;if(($len|0)!=0){label=38;break}else{label=47;break};case 38:$t=0;$229=$clr|0;$230=$17+1124+($code>>4<<2)|0;HEAP8[$229]=HEAP8[$230]|0;HEAP8[$229+1|0]=HEAP8[$230+1|0]|0;HEAP8[$229+2|0]=HEAP8[$230+2|0]|0;HEAP8[$229+3|0]=HEAP8[$230+3|0]|0;$236=$clr+4|0;$237=$17+1124+(($code&15)<<2)|0;HEAP8[$236]=HEAP8[$237]|0;HEAP8[$236+1|0]=HEAP8[$237+1|0]|0;HEAP8[$236+2|0]=HEAP8[$237+2|0]|0;HEAP8[$236+3|0]=HEAP8[$237+3|0]|0;HEAP8[$gray_clr|0]=HEAP8[$gray_palette+($code>>4)|0]|0;HEAP8[$gray_clr+1|0]=HEAP8[$gray_palette+($code&15)|0]|0;$end=$3+(Math_imul($len,$nch)|0)|0;if($end>>>0>(HEAP32[$line_end>>2]|0)>>>0){label=39;break}else{label=40;break};case 39:label=65;break;case 40:label=41;break;case 41:if(($5|0)!=0){label=42;break}else{label=43;break};case 42:HEAP8[$3|0]=HEAP8[$clr+($t<<2)|0]|0;HEAP8[$3+1|0]=HEAP8[$clr+($t<<2)+1|0]|0;HEAP8[$3+2|0]=HEAP8[$clr+($t<<2)+2|0]|0;label=44;break;case 43:HEAP8[$3]=HEAP8[$gray_clr+$t|0]|0;label=44;break;case 44:$t=$t^1;label=45;break;case 45:$291=$3+$nch|0;$3=$291;if($291>>>0<$end>>>0){label=41;break}else{label=46;break};case 46:label=63;break;case 47:if(($code|0)>2){label=48;break}else{label=54;break};case 48:$303=$3+(Math_imul($code,$nch)|0)|0;if($303>>>0>(HEAP32[$line_end>>2]|0)>>>0){label=49;break}else{label=50;break};case 49:label=65;break;case 50:invoke_viiii(32,$17+1048|0,$src|0,($code+1>>1)+1&-2|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=51;break}else{label=52;break};case 51:$323=invoke_iiiii(346,$3|0,$src|0,$code|0,$17+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$323;label=53;break;case 52:$329=invoke_iiiii(730,$3|0,$src|0,$code|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$329;label=53;break;case 53:label=62;break;case 54:$x_shift3=(HEAP32[$line_end>>2]|0)-$3|0;$y_shift=(HEAP32[$17+12>>2]|0)-(HEAP32[$y>>2]|0)|0;if(($code|0)==2){label=55;break}else{label=56;break};case 55:$346=invoke_ii(726,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$x_shift3=Math_imul($346,$nch)|0;$350=invoke_ii(726,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$y_shift=$350;label=56;break;case 56:$len=$x_shift3+(Math_imul($y_shift,$width3)|0)&(($code|0)==0)-1;if(($5|0)!=0){label=57;break}else{label=58;break};case 57:$370=HEAP32[$17+12>>2]|0;$374=$7;$375=$17+1124|0;HEAP8[$374]=HEAP8[$375]|0;HEAP8[$374+1|0]=HEAP8[$375+1|0]|0;HEAP8[$374+2|0]=HEAP8[$375+2|0]|0;HEAP8[$374+3|0]=HEAP8[$375+3|0]|0;$376=invoke_iiiiiiiii(622,$3|0,$line_end|0,$4|0,$width3|0,$y|0,$370|0,$x_shift3|0,$7|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$376;label=59;break;case 58:$387=invoke_iiiiiiiii(388,$3|0,$line_end|0,$4|0,$width3|0,$y|0,HEAP32[$17+12>>2]|0,$x_shift3|0,HEAP8[$gray_palette|0]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$387;label=59;break;case 59:if((HEAP32[$y>>2]|0)>=(HEAP32[$17+12>>2]|0)){label=60;break}else{label=61;break};case 60:label=64;break;case 61:label=62;break;case 62:label=63;break;case 63:label=37;break;case 64:$result=1;label=65;break;case 65:label=66;break;case 66:label=67;break;case 67:label=145;break;case 68:if((HEAP32[$17+2156>>2]|0)==0){label=69;break}else{label=77;break};case 69:HEAP32[$y>>2]=0;label=70;break;case 70:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=71;break}else{label=76;break};case 71:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=72;break}else{label=73;break};case 72:invoke_iiiii(808,$3|0,$src|0,HEAP32[$17+8>>2]|0,$17+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=74;break;case 73:invoke_iiiii(240,$3|0,$src|0,HEAP32[$17+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=74;break;case 74:label=75;break;case 75:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=70;break;case 76:$result=1;label=112;break;case 77:if((HEAP32[$17+2156>>2]|0)==1){label=78;break}else{label=111;break};case 78:HEAP32[$line_end1>>2]=$3+$width3;$line_end_flag=0;HEAP32[$y>>2]=0;label=79;break;case 79:$454=invoke_ii(430,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code2=$454;$len3=$code2&255;$code2=$code2>>8;if(($len3|0)!=0){label=80;break}else{label=86;break};case 80:$prev_y=HEAP32[$y>>2]|0;$len3=Math_imul($len3,$nch)|0;if(($3+$len3|0)>>>0>(HEAP32[$line_end1>>2]|0)>>>0){label=81;break}else{label=82;break};case 81:label=110;break;case 82:if(($5|0)!=0){label=83;break}else{label=84;break};case 83:$481=HEAP32[$17+12>>2]|0;$486=$8;$487=$17+1124+($code2<<2)|0;HEAP8[$486]=HEAP8[$487]|0;HEAP8[$486+1|0]=HEAP8[$487+1|0]|0;HEAP8[$486+2|0]=HEAP8[$487+2|0]|0;HEAP8[$486+3|0]=HEAP8[$487+3|0]|0;$488=invoke_iiiiiiiii(622,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,$481|0,$len3|0,$8|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$488;label=85;break;case 84:$500=invoke_iiiiiiiii(388,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,HEAP32[$17+12>>2]|0,$len3|0,HEAP8[$gray_palette+$code2|0]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$500;label=85;break;case 85:$line_end_flag=(HEAP32[$y>>2]|0)-$prev_y|0;label=108;break;case 86:if(($code2|0)>2){label=87;break}else{label=93;break};case 87:$prev_y4=HEAP32[$y>>2]|0;$515=$3+(Math_imul($code2,$nch)|0)|0;if($515>>>0>(HEAP32[$line_end1>>2]|0)>>>0){label=88;break}else{label=89;break};case 88:label=110;break;case 89:invoke_viiii(32,$17+1048|0,$src|0,$code2+1&-2|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=90;break}else{label=91;break};case 90:$533=invoke_iiiii(808,$3|0,$src|0,$code2|0,$17+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$533;label=92;break;case 91:$539=invoke_iiiii(240,$3|0,$src|0,$code2|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$539;label=92;break;case 92:$line_end_flag=(HEAP32[$y>>2]|0)-$prev_y4|0;label=107;break;case 93:$x_shift35=(HEAP32[$line_end1>>2]|0)-$3|0;$y_shift6=(HEAP32[$17+12>>2]|0)-(HEAP32[$y>>2]|0)|0;if(($code2|0)!=0){label=96;break}else{label=94;break};case 94:if(($line_end_flag|0)!=0){label=95;break}else{label=96;break};case 95:if(($x_shift35|0)<($width3|0)){label=96;break}else{label=106;break};case 96:if(($code2|0)==2){label=97;break}else{label=98;break};case 97:$569=invoke_ii(726,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$x_shift35=Math_imul($569,$nch)|0;$573=invoke_ii(726,$17+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$y_shift6=$573;label=98;break;case 98:$x_shift35=$x_shift35+((Math_imul($y_shift6,$width3)|0)&(($code2|0)==0)-1)|0;if((HEAP32[$y>>2]|0)>=(HEAP32[$17+12>>2]|0)){label=99;break}else{label=100;break};case 99:label=109;break;case 100:if(($5|0)!=0){label=101;break}else{label=102;break};case 101:$600=HEAP32[$17+12>>2]|0;$604=$9;$605=$17+1124|0;HEAP8[$604]=HEAP8[$605]|0;HEAP8[$604+1|0]=HEAP8[$605+1|0]|0;HEAP8[$604+2|0]=HEAP8[$605+2|0]|0;HEAP8[$604+3|0]=HEAP8[$605+3|0]|0;$606=invoke_iiiiiiiii(622,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,$600|0,$x_shift35|0,$9|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$606;label=103;break;case 102:$617=invoke_iiiiiiiii(388,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,HEAP32[$17+12>>2]|0,$x_shift35|0,HEAP8[$gray_palette|0]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$617;label=103;break;case 103:if((HEAP32[$y>>2]|0)>=(HEAP32[$17+12>>2]|0)){label=104;break}else{label=105;break};case 104:label=109;break;case 105:label=106;break;case 106:$line_end_flag=0;label=107;break;case 107:label=108;break;case 108:label=79;break;case 109:$result=1;label=110;break;case 110:label=111;break;case 111:label=112;break;case 112:label=145;break;case 113:HEAP32[$y>>2]=0;label=114;break;case 114:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=115;break}else{label=120;break};case 115:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=117;break}else{label=116;break};case 116:$647=$src;$648=$3;invoke_viii(124,$10|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(586,$647|0,0,$648|0,0,$10|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=118;break;case 117:$653=$src;$654=$3;invoke_viii(124,$11|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(12,$653|0,0,$654|0,0,$11|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=118;break;case 118:label=119;break;case 119:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=114;break;case 120:$result=1;label=145;break;case 121:HEAP32[$y>>2]=0;label=122;break;case 122:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=123;break}else{label=128;break};case 123:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=125;break}else{label=124;break};case 124:$680=$src;$681=$3;invoke_viii(124,$12|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(386,$680|0,0,$681|0,0,$12|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=126;break;case 125:$686=$src;$687=$3;invoke_viii(124,$13|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(204,$686|0,0,$687|0,0,$13|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=126;break;case 126:label=127;break;case 127:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=122;break;case 128:$result=1;label=145;break;case 129:HEAP32[$y>>2]=0;label=130;break;case 130:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=131;break}else{label=135;break};case 131:invoke_viiii(32,$17+1048|0,(($5|0)!=0?$3:$src)|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=133;break}else{label=132;break};case 132:$717=$src;$718=$3;invoke_viii(124,$14|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(360,$717|0,0,$718|0,0,$14|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=133;break;case 133:label=134;break;case 134:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=130;break;case 135:$result=1;label=145;break;case 136:HEAP32[$y>>2]=0;label=137;break;case 137:if((HEAP32[$y>>2]|0)<(HEAP32[$17+12>>2]|0)){label=138;break}else{label=143;break};case 138:invoke_viiii(32,$17+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=140;break}else{label=139;break};case 139:$744=$src;$745=$3;invoke_viii(124,$15|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(182,$744|0,0,$745|0,0,$15|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=141;break;case 140:$750=$src;$751=$3;invoke_viii(124,$16|0,HEAP32[$17+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(812,$750|0,0,$751|0,0,$16|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=141;break;case 141:label=142;break;case 142:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=137;break;case 143:$result=1;label=145;break;case 144:label=145;break;case 145:label=146;break;case 146:if(($src|0)!=($buffer|0)){label=147;break}else{label=150;break};case 147:$770=$src;if(($770|0)==0){label=149;break}else{label=148;break};case 148:invoke_vi(188,$770|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=149;break;case 149:label=150;break;case 150:if(($bgr|0)!=($bgr_buffer|0)){label=151;break}else{label=154;break};case 151:$779=$bgr;if(($779|0)==0){label=153;break}else{label=152;break};case 152:invoke_vi(188,$779|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=153;break;case 153:label=154;break;case 154:$1=$result&1;label=155;break;case 155:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==17){$116=threwValue;label=156}__THREW__=threwValue=0;break}return 0}function __ZN14RJpegBitStream5FlushEv($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2+48>>2]=(HEAP32[$2+44>>2]|0)+(HEAP32[$2+64>>2]|0);HEAP32[$2+52>>2]=(HEAP32[$2+48>>2]|0)-4;HEAP32[$2+76>>2]=0;return}function __ZN14RJpegBitStream11AlignOnByteEv($this){$this=$this|0;var $4=0;$4=$this+76|0;HEAP32[$4>>2]=HEAP32[$4>>2]&-8;return}function __ZN12WLByteStreamC1Ev($this){$this=$this|0;__ZN12WLByteStreamC2Ev($this);return}function __ZN14GrFmtBmpWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14GrFmtBmpWriterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14GrFmtBmpWriter10WriteImageEPKhiiiii($this,$data,$step,$width,$height,$0,$channels){$this=$this|0;$data=$data|0;$step=$step|0;$width=$width|0;$height=$height|0;$0=$0|0;$channels=$channels|0;var $3=0,$4=0,$5=0,$6=0,$8=0,$result=0,$fileStep=0,$zeropad=0,$bitmapHeaderSize=0,$headerSize=0,$palette=0,$9=0,$17=0,$35=0,$81=0,$105=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1032|0;label=1;while(1)switch(label|0){case 1:$zeropad=sp|0;$palette=sp+8|0;$3=$data;$4=$step;$5=$width;$6=$height;$8=$channels;$9=$this;$result=0;$fileStep=(Math_imul($5,$8)|0)+3&-4;_memset($zeropad|0,0,5);$17=$9+1028|0;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17>>2]|0)+8>>2]&1023]($17,$9+4|0)|0){label=2;break}else{label=11;break};case 2:$bitmapHeaderSize=40;$headerSize=$bitmapHeaderSize+14+(($8|0)>1?0:1024)|0;$35=HEAP32[5870]|0;__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$35,_strlen(HEAP32[5870]|0)|0);__ZN12WLByteStream8PutDWordEi($9+1028|0,(Math_imul($fileStep,$6)|0)+$headerSize|0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,$headerSize);__ZN12WLByteStream8PutDWordEi($9+1028|0,$bitmapHeaderSize);__ZN12WLByteStream8PutDWordEi($9+1028|0,$5);__ZN12WLByteStream8PutDWordEi($9+1028|0,$6);__ZN12WLByteStream7PutWordEi($9+1028|0,1);__ZN12WLByteStream7PutWordEi($9+1028|0,$8<<3);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);__ZN12WLByteStream8PutDWordEi($9+1028|0,0);if(($8|0)==1){label=3;break}else{label=4;break};case 3:__Z15FillGrayPaletteP12PaletteEntryib($palette|0,8,0);__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$palette|0,1024);label=4;break;case 4:$5=Math_imul($5,$8)|0;$3=$3+(Math_imul($4,$6-1|0)|0)|0;label=5;break;case 5:$81=$6;$6=$81-1|0;if(($81|0)!=0){label=6;break}else{label=10;break};case 6:__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$3,$5);if(($fileStep|0)>($5|0)){label=7;break}else{label=8;break};case 7:__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$zeropad|0,$fileStep-$5|0);label=8;break;case 8:label=9;break;case 9:$3=$3+(-$4|0)|0;label=5;break;case 10:$105=$9+1028|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$105>>2]|0)+12>>2]&1023]($105);$result=1;label=11;break;case 11:STACKTOP=sp;return $result&1|0}return 0}function __ZN12WLByteStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN11WBaseStreamC2Ev($2);HEAP32[$2>>2]=19184;return}function __ZN12RLByteStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN11RBaseStreamC2Ev($2);HEAP32[$2>>2]=19280;return}function __ZN9GrFmtJpegC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN18GrFmtFilterFactoryC2Ev($2);HEAP32[$2>>2]=18448;HEAP32[$2+8>>2]=3;HEAP32[$2+12>>2]=9248;HEAP32[$2+4>>2]=13632;return}function __ZN9GrFmtJpegD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN9GrFmtJpegD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN9GrFmtJpegD2Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN9GrFmtJpeg9NewReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(2348)|0;$7=$6;__ZN15GrFmtJpegReaderC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN9GrFmtJpeg9NewWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(1104)|0;$7=$6;__ZN15GrFmtJpegWriterC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN11RMBitStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN11RLBitStreamC2Ev($2);HEAP32[$2>>2]=19424;return}function __ZN12RMByteStreamC1Ev($this){$this=$this|0;__ZN12RMByteStreamC2Ev($this);return}function __ZN14RJpegBitStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14RJpegBitStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14RJpegBitStream4OpenEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0,$8=0,$14=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+12>>2]&1023]($3);$8=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8>>2]|0)+24>>2]&1023]($8);$14=$3+80|0;HEAP8[$3+73|0]=(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14>>2]|0)+8>>2]&1023]($14,$filename)|0)&1;if(HEAP8[$3+73|0]&1){label=2;break}else{label=3;break};case 2:__ZN11RMBitStream6SetPosEi($3,0);label=3;break;case 3:return HEAP8[$3+73|0]&1|0}return 0}function __ZN14RJpegBitStream5CloseEv($this){$this=$this|0;var $2=0,$4=0;$2=$this;$4=$2+80|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);HEAP8[$2+73|0]=0;return}function __ZN14RJpegBitStream9ReadBlockEv($this){$this=$this|0;var $end=0,$current=0,$sz=0,$val=0,$2=0,$15=0,$17=0,$41=0,$47=0,$52=0,$56=0,$66=0,$69=0,$113=0,label=0,setjmpLabel=0,setjmpTable=0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$2=$this;$end=(HEAP32[$2+44>>2]|0)+(HEAP32[$2+64>>2]|0)|0;$current=HEAP32[$2+44>>2]|0;$15=invoke_ii(212,$2+80|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;$17=_saveSetjmp($15|0,label,setjmpTable)|0;label=23;break;case 23:if(($17|0)==0){label=2;break}else{label=16;break};case 2:$sz=HEAP32[$2+60>>2]|0;invoke_viii(444,$current+(-$sz|0)|0,(HEAP32[$2+48>>2]|0)+(-$sz|0)|0,$sz|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;label=3;break;case 3:if($current>>>0<$end>>>0){label=4;break}else{label=14;break};case 4:$41=invoke_ii(726,$2+80|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;$val=$41;if(($val|0)!=255){label=5;break}else{label=6;break};case 5:$47=$current;$current=$47+1|0;HEAP8[$47]=$val&255;label=13;break;case 6:$52=invoke_ii(726,$2+80|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;$val=$52;if(($val|0)==0){label=7;break}else{label=8;break};case 7:$56=$current;$current=$56+1|0;HEAP8[$56]=-1;label=12;break;case 8:if(208<=($val|0)){label=9;break}else{label=10;break};case 9:if(($val|0)<=215){label=11;break}else{label=10;break};case 10:$66=$2+80|0;$69=invoke_ii(142,$2+80|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;invoke_vii(710,$66|0,$69-2|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;label=15;break;case 11:label=12;break;case 12:label=13;break;case 13:label=3;break;case 14:label=15;break;case 15:label=20;break;case 16:if(($current|0)==(HEAP32[$2+44>>2]|0)){label=17;break}else{label=19;break};case 17:if(HEAP8[$2+72|0]&1){label=18;break}else{label=19;break};case 18:invoke_vii(682,$2+4|0,-123|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;label=19;break;case 19:label=20;break;case 20:HEAP32[$2+52>>2]=HEAP32[$2+44>>2];HEAP32[$2+48>>2]=(HEAP32[$2+44>>2]|0)+($current-(HEAP32[$2+44>>2]|0)+3&-4);$113=invoke_i(570)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;if($113){label=22;break}else{label=21;break};case 21:invoke_vii(738,HEAP32[$2+44>>2]|0,HEAP32[$2+48>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return}__THREW__=threwValue=0;label=22;break;case 22:return;case-1:if((setjmpLabel|0)==1){$17=threwValue;label=23}__THREW__=threwValue=0;break}}function __ZN14RJpegBitStream10FindMarkerEv($this){$this=$this|0;var $code=0,$2=0,$16=0,$18=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$code=__ZN12RMByteStream7GetWordEv($2+80|0)|0;label=2;break;case 2:if(($code&65280|0)!=65280){$18=1;label=6;break}else{label=3;break};case 3:if(($code|0)==65535){$16=1;label=5;break}else{label=4;break};case 4:$16=($code|0)==65280;label=5;break;case 5:$18=$16;label=6;break;case 6:if($18){label=7;break}else{label=8;break};case 7:$code=($code&255)<<8|(__ZN12RLByteStream7GetByteEv($2+80|0)|0);label=2;break;case 8:return $code|0}return 0}function __ZN14GrFmtBmpWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtWriterC2EPKc($5,$filename);HEAP32[$5>>2]=19064;__ZN12WLByteStreamC1Ev($5+1028|0);label=2;break;case 2:return;case 3:__ZN11GrFmtWriterD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtBmpWriterD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=19064;__ZN11WBaseStreamD2Ev($4+1028|0);label=2;break;case 2:__ZN11GrFmtWriterD2Ev($4);return;case 3:__ZN11GrFmtWriterD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14RJpegBitStreamC2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RMBitStreamC2Ev($4);HEAP32[$4>>2]=18904;__ZN12RMByteStreamC1Ev($4+80|0);label=2;break;case 2:return;case 3:__ZN11RBaseStreamD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14RJpegBitStreamD2Ev($this){$this=$this|0;var $2=0,$3=0,$4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18904;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);label=2;break;case 2:__ZN11RBaseStreamD2Ev($4+80|0);label=3;break;case 3:__ZN11RBaseStreamD2Ev($4);return;case 4:$2=0;$3=0;__ZN11RBaseStreamD2Ev($4+80|0);label=6;break;case 5:$2=0;$3=0;label=7;break;case 6:label=7;break;case 7:__ZN11RBaseStreamD2Ev($4);label=8;break;case 8:label=9;break;case 9:abort();case 10:__ZSt9terminatev()}}function __ZN15GrFmtJpegReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN15GrFmtJpegReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN15GrFmtJpegReader5CloseEv($this){$this=$this|0;var $2=0;$2=$this;__ZN14RJpegBitStream5CloseEv($2+2192|0);__ZN11GrFmtReader5CloseEv($2);return}function __ZN15GrFmtJpegReader10ReadHeaderEv($this){$this=$this|0;var $1=0,$buffer=0,$i=0,$result=0,$is_sof=0,$is_qt=0,$is_ht=0,$is_sos=0,$lstrm=0,$marker=0,$pos=0,$length=0,$idx=0,$ci=0,$3=0,$8=0,$20=0,$22=0,$31=0,$50=0,$52=0,$53=0,$59=0,$63=0,$69=0,$72=0,$76=0,$81=0,$118=0,$143=0,$156=0,$163=0,$266=0,$271=0,$280=0,$303=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$3=$this;$result=0;$is_sof=0;$is_qt=0;$is_ht=0;$is_sos=0;$8=invoke_iii(46,$3+2192|0,$3+20|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($8){label=3;break}else{label=2;break};case 2:$1=0;label=60;break;case 3:_memset($3+2148|0,0,4);_memset($3+2168|0,0,4);_memset($3+2188|0,0,4);HEAP32[$3+1068>>2]=0;$20=invoke_ii(212,$3+2192|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$22=_saveSetjmp($20|0,label,setjmpTable)|0;label=61;break;case 61:if(($22|0)==0){label=4;break}else{label=53;break};case 4:$lstrm=$3+2272|0;invoke_vii(666,$lstrm|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=5;break;case 5:$31=invoke_ii(172,$3+2192|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$marker=$31&255;if(($marker|0)!=216){label=6;break}else{label=51;break};case 6:if(($marker|0)!=217){label=7;break}else{label=51;break};case 7:if(($marker|0)!=1){label=8;break}else{label=51;break};case 8:if(208<=($marker|0)){label=9;break}else{label=10;break};case 9:if(($marker|0)<=215){label=51;break}else{label=10;break};case 10:$50=invoke_ii(142,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$pos=$50;$52=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$length=$52;$53=$marker;if(($53|0)==224){label=11;break}else if(($53|0)==192){label=14;break}else if(($53|0)==219){label=42;break}else if(($53|0)==196){label=45;break}else if(($53|0)==218){label=48;break}else if(($53|0)==221){label=49;break}else{label=50;break};case 11:invoke_viiii(32,$lstrm|0,$buffer|0,5,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$59=invoke_iii(442,$buffer|0,11944)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($59|0)==0){label=12;break}else{label=13;break};case 12:$63=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+1052>>2]=$63;label=13;break;case 13:label=50;break;case 14:$69=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+1060>>2]=$69;$72=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+12>>2]=$72;$76=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+8>>2]=$76;$81=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+1056>>2]=$81;if((HEAP32[$3+8>>2]|0)==0){label=18;break}else{label=15;break};case 15:if((HEAP32[$3+12>>2]|0)==0){label=18;break}else{label=16;break};case 16:if((HEAP32[$3+1056>>2]|0)!=1){label=17;break}else{label=19;break};case 17:if((HEAP32[$3+1056>>2]|0)!=3){label=18;break}else{label=19;break};case 18:label=52;break;case 19:HEAP8[$3+4|0]=(HEAP32[$3+1056>>2]|0)==3|0;_memset($3+1088|0,-1|0,36);$i=0;label=20;break;case 20:if(($i|0)<(HEAP32[$3+1056>>2]|0)){label=21;break}else{label=41;break};case 21:$118=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$idx=$118;if(($idx|0)<1){label=23;break}else{label=22;break};case 22:if(($idx|0)>(HEAP32[$3+1056>>2]|0)){label=23;break}else{label=24;break};case 23:$idx=$i+1|0;label=24;break;case 24:$ci=$3+1088+(($idx-1|0)*12|0)|0;if((HEAP8[$ci+2|0]|0)>0){label=25;break}else{label=26;break};case 25:label=52;break;case 26:$143=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$ci|0]=$143&255;HEAP8[$ci+1|0]=HEAP8[$ci|0]&15;$156=$ci|0;HEAP8[$156]=HEAP8[$156]>>4&255;$163=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$ci+2|0]=$163&255;if((HEAP8[$ci|0]|0)==1){label=29;break}else{label=27;break};case 27:if((HEAP8[$ci|0]|0)==2){label=29;break}else{label=28;break};case 28:if((HEAP8[$ci|0]|0)==4){label=29;break}else{label=38;break};case 29:if((HEAP8[$ci+1|0]|0)==1){label=32;break}else{label=30;break};case 30:if((HEAP8[$ci+1|0]|0)==2){label=32;break}else{label=31;break};case 31:if((HEAP8[$ci+1|0]|0)==4){label=32;break}else{label=38;break};case 32:if((HEAP8[$ci+2|0]|0)<3){label=33;break}else{label=38;break};case 33:if(($i|0)!=2){label=39;break}else{label=34;break};case 34:if((HEAP8[$ci|0]|0)==(HEAP8[$3+1100|0]|0)){label=35;break}else{label=38;break};case 35:if((HEAP8[$ci+1|0]|0)==(HEAP8[$3+1101|0]|0)){label=36;break}else{label=38;break};case 36:if((HEAP8[$ci|0]|0)<=(HEAP8[$3+1088|0]|0)){label=37;break}else{label=38;break};case 37:if((HEAP8[$ci+1|0]|0)<=(HEAP8[$3+1089|0]|0)){label=39;break}else{label=38;break};case 38:label=52;break;case 39:label=40;break;case 40:$i=$i+1|0;label=20;break;case 41:$is_sof=1;HEAP32[$3+1064>>2]=$marker-192;label=50;break;case 42:$266=invoke_iii(644,$3|0,$length|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($266){label=44;break}else{label=43;break};case 43:label=52;break;case 44:$is_qt=1;label=50;break;case 45:$271=invoke_iii(650,$3|0,$length|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($271){label=47;break}else{label=46;break};case 46:label=52;break;case 47:$is_ht=1;label=50;break;case 48:$is_sos=1;HEAP32[$3+1048>>2]=$pos-2;label=52;break;case 49:$280=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+1068>>2]=$280;label=50;break;case 50:invoke_vii(710,$lstrm|0,$pos+$length|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=51;break;case 51:label=5;break;case 52:label=53;break;case 53:if($is_sof&1){label=54;break}else{$303=0;label=57;break};case 54:if($is_qt&1){label=55;break}else{$303=0;label=57;break};case 55:if($is_ht&1){label=56;break}else{$303=0;label=57;break};case 56:$303=$is_sos&1;label=57;break;case 57:$result=$303&1;if($result&1){label=59;break}else{label=58;break};case 58:HEAP32[$3+12>>2]=-1;HEAP32[$3+8>>2]=-1;HEAP32[$3+1048>>2]=-1;invoke_vi(134,$3+2192|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=59;break;case 59:$1=$result&1;label=60;break;case 60:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==3){$22=threwValue;label=61}__THREW__=threwValue=0;break}return 0}function __ZN15GrFmtJpegReader15LoadQuantTablesEi($this,$length){$this=$this|0;$length=$length|0;var $1=0,$3=0,$buffer=0,$i=0,$tq_size=0,$lstrm=0,$tq=0,$size=0,$idx=0,$idx1=0,$4=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+128|0;label=1;while(1)switch(label|0){case 1:$buffer=sp|0;$3=$length;$4=$this;$lstrm=$4+2272|0;$3=$3-2|0;label=2;break;case 2:if(($3|0)>0){label=3;break}else{label=19;break};case 3:$tq=__ZN12RLByteStream7GetByteEv($lstrm)|0;$size=$tq>>4;$tq=$tq&15;$tq_size=(64<<$size)+1|0;if(($tq|0)>3){label=6;break}else{label=4;break};case 4:if(($size|0)>1){label=6;break}else{label=5;break};case 5:if(($3|0)<($tq_size|0)){label=6;break}else{label=7;break};case 6:$1=0;label=20;break;case 7:$3=$3-$tq_size|0;__ZN12RLByteStream8GetBytesEPviPi($lstrm,$buffer|0,$tq_size-1|0,0);if(($size|0)==0){label=8;break}else{label=13;break};case 8:$i=0;label=9;break;case 9:if(($i|0)<64){label=10;break}else{label=12;break};case 10:$idx=HEAPU8[20952+$i|0]|0;HEAP32[$4+1124+($tq<<8)+($idx<<2)>>2]=Math_imul((HEAPU8[$buffer+$i|0]|0)<<4,HEAP32[22728+($idx<<2)>>2]|0)|0;label=11;break;case 11:$i=$i+1|0;label=9;break;case 12:label=18;break;case 13:$i=0;label=14;break;case 14:if(($i|0)<64){label=15;break}else{label=17;break};case 15:$idx1=HEAPU8[20952+$i|0]|0;HEAP32[$4+1124+($tq<<8)+($idx1<<2)>>2]=Math_imul(HEAPU16[$buffer+($i<<1)>>1]|0,HEAP32[22728+($idx1<<2)>>2]|0)|0;label=16;break;case 16:$i=$i+1|0;label=14;break;case 17:label=18;break;case 18:HEAP8[$4+2148+$tq|0]=1;label=2;break;case 19:$1=1;label=20;break;case 20:STACKTOP=sp;return $1|0}return 0}function __ZN15GrFmtJpegReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0,$4=0,$i=0,$5=0,$10=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtReaderC2EPKc($5,$filename);HEAP32[$5>>2]=18816;$10=$5+2192|0;__ZN14RJpegBitStreamC2Ev($10);label=2;break;case 2:HEAP32[$5+1056>>2]=-1;HEAP32[$5+1048>>2]=-1;$i=0;label=3;break;case 3:if(($i|0)<4){label=4;break}else{label=10;break};case 4:label=5;break;case 5:HEAP32[$5+2152+($i<<2)>>2]=__Znaj(8192)|0;label=6;break;case 6:HEAP32[$5+2172+($i<<2)>>2]=__Znaj(8192)|0;label=7;break;case 7:$i=$i+1|0;label=3;break;case 8:$3=0;$4=0;label=12;break;case 9:$3=0;$4=0;__ZN14RJpegBitStreamD2Ev($10);label=11;break;case 10:return;case 11:label=12;break;case 12:__ZN11GrFmtReaderD2Ev($5);label=13;break;case 13:label=14;break;case 14:abort();case 15:__ZSt9terminatev()}}function __ZN15GrFmtJpegReaderD2Ev($this){$this=$this|0;var $i=0,$4=0,$13=0,$24=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18816;$i=0;label=2;break;case 2:if(($i|0)<4){label=3;break}else{label=9;break};case 3:$13=HEAP32[$4+2152+($i<<2)>>2]|0;if(($13|0)==0){label=5;break}else{label=4;break};case 4:__ZdaPv($13);label=5;break;case 5:HEAP32[$4+2152+($i<<2)>>2]=0;$24=HEAP32[$4+2172+($i<<2)>>2]|0;if(($24|0)==0){label=7;break}else{label=6;break};case 6:__ZdaPv($24);label=7;break;case 7:HEAP32[$4+2172+($i<<2)>>2]=0;label=8;break;case 8:$i=$i+1|0;label=2;break;case 9:__ZN14RJpegBitStreamD2Ev($4+2192|0);label=10;break;case 10:__ZN11GrFmtReaderD2Ev($4);return;case 11:__ZN11GrFmtReaderD2Ev($4);label=12;break;case 12:label=13;break;case 13:abort();case 14:__ZSt9terminatev()}}function __ZN15GrFmtJpegReader17LoadHuffmanTablesEi($this,$length){$this=$this|0;$length=$length|0;var $1=0,$3=0,$buffer=0,$i=0,$ht_size=0,$lstrm=0,$t=0,$hclass=0,$4=0,$64=0,$78=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+5120|0;label=1;while(1)switch(label|0){case 1:$buffer=sp|0;$3=$length;$4=$this;$lstrm=$4+2272|0;$3=$3-2|0;label=2;break;case 2:if(($3|0)>0){label=3;break}else{label=22;break};case 3:$t=__ZN12RLByteStream7GetByteEv($lstrm)|0;$hclass=$t>>4;$t=$t&15;if(($t|0)>3){label=6;break}else{label=4;break};case 4:if(($hclass|0)>1){label=6;break}else{label=5;break};case 5:if(($3|0)<17){label=6;break}else{label=7;break};case 6:$1=0;label=23;break;case 7:$3=$3-17|0;__ZN12RLByteStream8GetBytesEPviPi($lstrm,$buffer|0,16,0);$i=0;$ht_size=0;label=8;break;case 8:if(($i|0)<16){label=9;break}else{label=11;break};case 9:$ht_size=$ht_size+(HEAPU8[$buffer+$i|0]|0)|0;label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:if(($3|0)<($ht_size|0)){label=12;break}else{label=13;break};case 12:$1=0;label=23;break;case 13:$3=$3-$ht_size|0;__ZN12RLByteStream8GetBytesEPviPi($lstrm,$buffer+16|0,$ht_size,0);$64=__Z26bsCreateSourceHuffmanTablePKhPiii($buffer|0,sp+1024|0,16,9)|0;if(($hclass|0)==0){label=14;break}else{label=15;break};case 14:$78=HEAP32[$4+2152+($t<<2)>>2]|0;label=16;break;case 15:$78=HEAP32[$4+2172+($t<<2)>>2]|0;label=16;break;case 16:if(__Z26bsCreateDecodeHuffmanTablePKiPsi($64,$78,4096)|0){label=18;break}else{label=17;break};case 17:$1=0;label=23;break;case 18:if(($hclass|0)==0){label=19;break}else{label=20;break};case 19:HEAP8[$4+2168+$t|0]=1;label=21;break;case 20:HEAP8[$4+2188+$t|0]=1;label=21;break;case 21:label=2;break;case 22:$1=1;label=23;break;case 23:STACKTOP=sp;return $1|0}return 0}function __ZN15GrFmtJpegReader8ReadDataEPhii($this,$data,$step,$color){$this=$this|0;$data=$data|0;$step=$step|0;$color=$color|0;var $1=0,$3=0,$4=0,$5=0,$lstrm=0,$marker=0,$pos=0,$length=0,$idx=0,$i=0,$ns=0,$sum=0,$a=0,$td=0,$ta=0,$c=0,$6=0,$13=0,$18=0,$20=0,$31=0,$51=0,$53=0,$54=0,$57=0,$61=0,$64=0,$78=0,$101=0,$173=0,$177=0,$181=0,$195=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$idx=sp|0;$3=$data;$4=$step;$5=$color;$6=$this;if((HEAP32[$6+1048>>2]|0)<0){label=3;break}else{label=2;break};case 2:$13=invoke_ii(370,$6+2192|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($13){label=4;break}else{label=3;break};case 3:$1=0;label=43;break;case 4:$18=invoke_ii(212,$6+2192|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$20=_saveSetjmp($18|0,label,setjmpTable)|0;label=44;break;case 44:if(($20|0)==0){label=5;break}else{label=42;break};case 5:$lstrm=$6+2272|0;invoke_vii(710,$lstrm|0,HEAP32[$6+1048>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=6;break;case 6:$31=invoke_ii(172,$6+2192|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$marker=$31&255;if(($marker|0)==216){label=8;break}else{label=7;break};case 7:if(($marker|0)==217){label=8;break}else{label=9;break};case 8:label=41;break;case 9:if(($marker|0)!=1){label=10;break}else{label=40;break};case 10:if(208<=($marker|0)){label=11;break}else{label=12;break};case 11:if(($marker|0)<=215){label=40;break}else{label=12;break};case 12:$51=invoke_ii(142,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$pos=$51;$53=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$length=$53;$54=$marker;if(($54|0)==196){label=13;break}else if(($54|0)==218){label=16;break}else if(($54|0)==221){label=36;break}else{label=37;break};case 13:$57=invoke_iii(650,$6|0,$length|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($57){label=15;break}else{label=14;break};case 14:label=41;break;case 15:label=37;break;case 16:$61=$idx;HEAP32[$61>>2]=HEAP32[4038];HEAP32[$61+4>>2]=HEAP32[4039];HEAP32[$61+8>>2]=HEAP32[4040];$64=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$ns=$64;$sum=0;if(($ns|0)!=(HEAP32[$6+1056>>2]|0)){label=17;break}else{label=18;break};case 17:label=41;break;case 18:$i=0;label=19;break;case 19:if(($i|0)<($ns|0)){label=20;break}else{label=33;break};case 20:$78=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$c=$78-1|0;if(($c|0)<0){label=22;break}else{label=21;break};case 21:if((HEAP32[$6+1056>>2]|0)<=($c|0)){label=22;break}else{label=23;break};case 22:$c=$i;label=23;break;case 23:if((HEAP32[$idx+($c<<2)>>2]|0)!=-1){label=24;break}else{label=25;break};case 24:label=41;break;case 25:HEAP32[$idx+($i<<2)>>2]=$c;$101=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$td=$101;$ta=$td&15;$td=$td>>4;if(($ta|0)<=3){label=26;break}else{label=30;break};case 26:if(HEAP8[$6+2188+$ta|0]&1){label=27;break}else{label=30;break};case 27:if(($td|0)<=3){label=28;break}else{label=30;break};case 28:if(HEAP8[$6+2168+$td|0]&1){label=29;break}else{label=30;break};case 29:if(HEAP8[$6+2148+(HEAP8[$6+1088+($c*12|0)+2|0]|0)|0]&1){label=31;break}else{label=30;break};case 30:label=41;break;case 31:HEAP8[$6+1088+($c*12|0)+3|0]=$td&255;HEAP8[$6+1088+($c*12|0)+4|0]=$ta&255;$sum=$sum+(Math_imul(HEAP8[$6+1088+($c*12|0)|0]|0,HEAP8[$6+1088+($c*12|0)+1|0]|0)|0)|0;label=32;break;case 32:$i=$i+1|0;label=19;break;case 33:if(($sum|0)>10){label=34;break}else{label=35;break};case 34:label=41;break;case 35:$173=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$6+1072>>2]=$173;$177=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$6+1076>>2]=$177;$181=invoke_ii(726,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$a=$181;HEAP32[$6+1084>>2]=$a&15;HEAP32[$6+1080>>2]=$a>>4;invoke_viiiiii(206,$6|0,$idx|0,$ns|0,$3|0,$4|0,$5|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=41;break;case 36:$195=invoke_ii(300,$lstrm|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$6+1068>>2]=$195;label=37;break;case 37:if(($marker|0)!=218){label=38;break}else{label=39;break};case 38:invoke_vii(710,$lstrm|0,$pos+$length|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=39;break;case 39:label=40;break;case 40:label=6;break;case 41:label=42;break;case 42:$1=1;label=43;break;case 43:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==4){$20=threwValue;label=44}__THREW__=threwValue=0;break}return 0}function __ZN15GrFmtJpegReader11ProcessScanEPiiPhii($this,$idx,$ns,$data,$step,$color){$this=$this|0;$idx=$idx|0;$ns=$ns|0;$data=$data|0;$step=$step|0;$color=$color|0;var $2=0,$3=0,$4=0,$5=0,$6=0,$i=0,$s=0,$mcu=0,$x1=0,$y1=0,$temp=0,$blocks=0,$pos=0,$h=0,$v=0,$x_shift=0,$y_shift=0,$c=0,$x2=0,$y2=0,$x=0,$y=0,$xc=0,$cmp=0,$data1=0,$c1=0,$val=0,$val2=0,$shift=0,$cmpCb=0,$cmpCr=0,$Y=0,$Cb=0,$Cr=0,$t=0,$Y3=0,$Cb4=0,$Cr5=0,$t6=0,$Y7=0,$Cb8=0,$Cr9=0,$t10=0,$val11=0,$7=0,$218=0,$219=0,$261=0,$346=0,$370=0,$392=0,$442=0,$466=0,$488=0,$517=0,$542=0,$564=0,$617=0,$641=0,$663=0,$697=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+2864|0;label=1;while(1)switch(label|0){case 1:$temp=sp|0;$blocks=sp+256|0;$pos=sp+2816|0;$h=sp+2832|0;$v=sp+2848|0;$2=$idx;$3=$ns;$4=$data;$5=$step;$6=$color;$7=$this;$s=0;$x1=0;$y1=0;$x_shift=0;$y_shift=0;$i=0;label=2;break;case 2:if(($i|0)<($3|0)){label=3;break}else{label=5;break};case 3:$c=HEAP32[$2+($i<<2)>>2]|0;HEAP32[$h+($c<<2)>>2]=HEAP8[$7+1088+($c*12|0)|0]<<3;HEAP32[$v+($c<<2)>>2]=HEAP8[$7+1088+($c*12|0)+1|0]<<3;HEAP32[$pos+($c<<2)>>2]=$s>>6;$s=$s+(Math_imul(HEAP32[$h+($c<<2)>>2]|0,HEAP32[$v+($c<<2)>>2]|0)|0)|0;label=4;break;case 4:$i=$i+1|0;label=2;break;case 5:if(($3|0)==3){label=6;break}else{label=7;break};case 6:$x_shift=(HEAP32[$h>>2]|0)/(HEAP32[$h+4>>2]<<1|0)|0;$y_shift=(HEAP32[$v>>2]|0)/(HEAP32[$v+4>>2]<<1|0)|0;label=7;break;case 7:__ZN14RJpegBitStream5FlushEv($7+2192|0);__ZN15GrFmtJpegReader12ResetDecoderEv($7);$mcu=0;label=8;break;case 8:if(($mcu|0)==(HEAP32[$7+1068>>2]|0)){label=9;break}else{label=11;break};case 9:if((HEAP32[$7+1068>>2]|0)!=0){label=10;break}else{label=11;break};case 10:__ZN15GrFmtJpegReader12ResetDecoderEv($7);__ZN14RJpegBitStream11AlignOnByteEv($7+2192|0);$mcu=0;label=11;break;case 11:$i=0;label=12;break;case 12:if(($i|0)<($3|0)){label=13;break}else{label=25;break};case 13:$c1=HEAP32[$2+($i<<2)>>2]|0;$cmp=$blocks+(HEAP32[$pos+($c1<<2)>>2]<<8)|0;$y=0;label=14;break;case 14:if(($y|0)<(HEAP32[$v+($c1<<2)>>2]|0)){label=15;break}else{label=23;break};case 15:$x=0;label=16;break;case 16:if(($x|0)<(HEAP32[$h+($c1<<2)>>2]|0)){label=17;break}else{label=21;break};case 17:__ZN15GrFmtJpegReader8GetBlockEPii($7,$temp|0,$c1);if(($i|0)<((($6|0)!=0?3:1)|0)){label=18;break}else{label=19;break};case 18:__ZL11aan_idct8x8PiS_i($temp|0,$cmp+($x<<2)|0,HEAP32[$h+($c1<<2)>>2]|0);label=19;break;case 19:label=20;break;case 20:$x=$x+8|0;label=16;break;case 21:label=22;break;case 22:$y=$y+8|0;$cmp=$cmp+(HEAP32[$h+($c1<<2)>>2]<<3<<2)|0;label=14;break;case 23:label=24;break;case 24:$i=$i+1|0;label=12;break;case 25:$y2=HEAP32[$v>>2]|0;$x2=HEAP32[$h>>2]|0;if(($y1+$y2|0)>(HEAP32[$7+12>>2]|0)){label=26;break}else{label=27;break};case 26:$y2=(HEAP32[$7+12>>2]|0)-$y1|0;label=27;break;case 27:if(($x1+$x2|0)>(HEAP32[$7+8>>2]|0)){label=28;break}else{label=29;break};case 28:$x2=(HEAP32[$7+8>>2]|0)-$x1|0;label=29;break;case 29:$cmp=$blocks|0;$data1=$4+(Math_imul($x1,($6|0)!=0?3:1)|0)|0;if(($3|0)==1){label=30;break}else{label=52;break};case 30:$y=0;label=31;break;case 31:if(($y|0)<($y2|0)){label=32;break}else{label=51;break};case 32:if(($6|0)!=0){label=33;break}else{label=41;break};case 33:$x=0;label=34;break;case 34:if(($x|0)<($x2|0)){label=35;break}else{label=40;break};case 35:$val=(HEAP32[$cmp+($x<<2)>>2]|0)+514>>2;if(($val&-256|0)==0){label=36;break}else{label=37;break};case 36:$218=$val;label=38;break;case 37:$218=~($val>>31);label=38;break;case 38:$219=$218&255;HEAP8[$data1+(($x*3|0)+2)|0]=$219;HEAP8[$data1+(($x*3|0)+1)|0]=$219;HEAP8[$data1+($x*3|0)|0]=$219;label=39;break;case 39:$x=$x+1|0;label=34;break;case 40:label=49;break;case 41:$x=0;label=42;break;case 42:if(($x|0)<($x2|0)){label=43;break}else{label=48;break};case 43:$val2=(HEAP32[$cmp+($x<<2)>>2]|0)+514>>2;if(($val2&-256|0)==0){label=44;break}else{label=45;break};case 44:$261=$val2;label=46;break;case 45:$261=~($val2>>31);label=46;break;case 46:HEAP8[$data1+$x|0]=$261&255;label=47;break;case 47:$x=$x+1|0;label=42;break;case 48:label=49;break;case 49:label=50;break;case 50:$y=$y+1|0;$data1=$data1+$5|0;$cmp=$cmp+(HEAP32[$h>>2]<<2)|0;label=31;break;case 51:label=120;break;case 52:$y=0;label=53;break;case 53:if(($y|0)<($y2|0)){label=54;break}else{label=119;break};case 54:if(($6|0)!=0){label=55;break}else{label=109;break};case 55:$shift=Math_imul(HEAP32[$h+4>>2]|0,$y>>$y_shift)|0;$cmpCb=$blocks+(HEAP32[$pos+4>>2]<<8)+($shift<<2)|0;$cmpCr=$blocks+(HEAP32[$pos+8>>2]<<8)+($shift<<2)|0;$x=0;if(($x_shift|0)==0){label=56;break}else{label=70;break};case 56:label=57;break;case 57:if(($x|0)<($x2|0)){label=58;break}else{label=69;break};case 58:$Y=(HEAP32[$cmp+($x<<2)>>2]|0)+512<<12;$Cb=HEAP32[$cmpCb+($x<<2)>>2]|0;$Cr=HEAP32[$cmpCr+($x<<2)>>2]|0;$t=$Y+($Cb*7258|0)>>14;if(($t&-256|0)==0){label=59;break}else{label=60;break};case 59:$346=$t;label=61;break;case 60:$346=~($t>>31);label=61;break;case 61:HEAP8[$data1+($x*3|0)|0]=$346&255;$t=$Y+($Cb*-1410|0)+($Cr*-2925|0)>>14;if(($t&-256|0)==0){label=62;break}else{label=63;break};case 62:$370=$t;label=64;break;case 63:$370=~($t>>31);label=64;break;case 64:HEAP8[$data1+(($x*3|0)+1)|0]=$370&255;$t=$Y+($Cr*5743|0)>>14;if(($t&-256|0)==0){label=65;break}else{label=66;break};case 65:$392=$t;label=67;break;case 66:$392=~($t>>31);label=67;break;case 67:HEAP8[$data1+(($x*3|0)+2)|0]=$392&255;label=68;break;case 68:$x=$x+1|0;label=57;break;case 69:label=95;break;case 70:if(($x_shift|0)==1){label=71;break}else{label=94;break};case 71:$xc=0;label=72;break;case 72:if(($x|0)<=($x2-2|0)){label=73;break}else{label=93;break};case 73:$Y3=(HEAP32[$cmp+($x<<2)>>2]|0)+512<<12;$Cb4=HEAP32[$cmpCb+($xc<<2)>>2]|0;$Cr5=HEAP32[$cmpCr+($xc<<2)>>2]|0;$t6=$Y3+($Cb4*7258|0)>>14;if(($t6&-256|0)==0){label=74;break}else{label=75;break};case 74:$442=$t6;label=76;break;case 75:$442=~($t6>>31);label=76;break;case 76:HEAP8[$data1+($x*3|0)|0]=$442&255;$t6=$Y3+($Cb4*-1410|0)+($Cr5*-2925|0)>>14;if(($t6&-256|0)==0){label=77;break}else{label=78;break};case 77:$466=$t6;label=79;break;case 78:$466=~($t6>>31);label=79;break;case 79:HEAP8[$data1+(($x*3|0)+1)|0]=$466&255;$t6=$Y3+($Cr5*5743|0)>>14;if(($t6&-256|0)==0){label=80;break}else{label=81;break};case 80:$488=$t6;label=82;break;case 81:$488=~($t6>>31);label=82;break;case 82:HEAP8[$data1+(($x*3|0)+2)|0]=$488&255;$Y3=(HEAP32[$cmp+($x+1<<2)>>2]|0)+512<<12;$t6=$Y3+($Cb4*7258|0)>>14;if(($t6&-256|0)==0){label=83;break}else{label=84;break};case 83:$517=$t6;label=85;break;case 84:$517=~($t6>>31);label=85;break;case 85:HEAP8[$data1+(($x*3|0)+3)|0]=$517&255;$t6=$Y3+($Cb4*-1410|0)+($Cr5*-2925|0)>>14;if(($t6&-256|0)==0){label=86;break}else{label=87;break};case 86:$542=$t6;label=88;break;case 87:$542=~($t6>>31);label=88;break;case 88:HEAP8[$data1+(($x*3|0)+4)|0]=$542&255;$t6=$Y3+($Cr5*5743|0)>>14;if(($t6&-256|0)==0){label=89;break}else{label=90;break};case 89:$564=$t6;label=91;break;case 90:$564=~($t6>>31);label=91;break;case 91:HEAP8[$data1+(($x*3|0)+5)|0]=$564&255;label=92;break;case 92:$x=$x+2|0;$xc=$xc+1|0;label=72;break;case 93:label=94;break;case 94:label=95;break;case 95:label=96;break;case 96:if(($x|0)<($x2|0)){label=97;break}else{label=108;break};case 97:$Y7=(HEAP32[$cmp+($x<<2)>>2]|0)+512<<12;$Cb8=HEAP32[$cmpCb+($x>>$x_shift<<2)>>2]|0;$Cr9=HEAP32[$cmpCr+($x>>$x_shift<<2)>>2]|0;$t10=$Y7+($Cb8*7258|0)>>14;if(($t10&-256|0)==0){label=98;break}else{label=99;break};case 98:$617=$t10;label=100;break;case 99:$617=~($t10>>31);label=100;break;case 100:HEAP8[$data1+($x*3|0)|0]=$617&255;$t10=$Y7+($Cb8*-1410|0)+($Cr9*-2925|0)>>14;if(($t10&-256|0)==0){label=101;break}else{label=102;break};case 101:$641=$t10;label=103;break;case 102:$641=~($t10>>31);label=103;break;case 103:HEAP8[$data1+(($x*3|0)+1)|0]=$641&255;$t10=$Y7+($Cr9*5743|0)>>14;if(($t10&-256|0)==0){label=104;break}else{label=105;break};case 104:$663=$t10;label=106;break;case 105:$663=~($t10>>31);label=106;break;case 106:HEAP8[$data1+(($x*3|0)+2)|0]=$663&255;label=107;break;case 107:$x=$x+1|0;label=96;break;case 108:label=117;break;case 109:$x=0;label=110;break;case 110:if(($x|0)<($x2|0)){label=111;break}else{label=116;break};case 111:$val11=(HEAP32[$cmp+($x<<2)>>2]|0)+514>>2;if(($val11&-256|0)==0){label=112;break}else{label=113;break};case 112:$697=$val11;label=114;break;case 113:$697=~($val11>>31);label=114;break;case 114:HEAP8[$data1+$x|0]=$697&255;label=115;break;case 115:$x=$x+1|0;label=110;break;case 116:label=117;break;case 117:label=118;break;case 118:$y=$y+1|0;$data1=$data1+$5|0;$cmp=$cmp+(HEAP32[$h>>2]<<2)|0;label=53;break;case 119:label=120;break;case 120:$x1=$x1+(HEAP32[$h>>2]|0)|0;if(($x1|0)>=(HEAP32[$7+8>>2]|0)){label=121;break}else{label=124;break};case 121:$x1=0;$y1=$y1+(HEAP32[$v>>2]|0)|0;$4=$4+(Math_imul(HEAP32[$v>>2]|0,$5)|0)|0;if(($y1|0)>=(HEAP32[$7+12>>2]|0)){label=122;break}else{label=123;break};case 122:label=126;break;case 123:label=124;break;case 124:label=125;break;case 125:$mcu=$mcu+1|0;label=8;break;case 126:STACKTOP=sp;return}}function __ZN15GrFmtJpegReader12ResetDecoderEv($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2+1120>>2]=0;HEAP32[$2+1108>>2]=0;HEAP32[$2+1096>>2]=0;return}function __ZL11aan_idct8x8PiS_i($src,$dst,$step){$src=$src|0;$dst=$dst|0;$step=$step|0;var $1=0,$2=0,$workspace=0,$work=0,$i=0,$x0=0,$x1=0,$x2=0,$x3=0,$x4=0,$x01=0,$x12=0,$x23=0,$x34=0,$x45=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+256|0;label=1;while(1)switch(label|0){case 1:$workspace=sp|0;$1=$src;$2=$dst;$work=$workspace|0;$i=8;label=2;break;case 2:if(($i|0)>0){label=3;break}else{label=5;break};case 3:$x0=HEAP32[$1+20>>2]|0;$x1=HEAP32[$1+12>>2]|0;$x2=HEAP32[$1+4>>2]|0;$x3=HEAP32[$1+28>>2]|0;$x4=$x0+$x1|0;$x0=$x0-$x1|0;$x1=$x2+$x3|0;$x2=$x2-$x3|0;$x3=$x1+$x4|0;$x1=$x1-$x4|0;$x4=($x0+$x2|0)*30274|0;$x0=$x4-($x0*42813|0)+8192>>14;$x2=($x2*17734|0)-$x4+8192>>14;$x1=($x1*23170|0)+8192>>14;$x0=$x0-$x3|0;$x1=$x1-$x0|0;$x2=$x2+$x1|0;HEAP32[$work+28>>2]=$x3;HEAP32[$work+24>>2]=$x0;HEAP32[$work+20>>2]=$x1;HEAP32[$work+16>>2]=$x2;$x2=HEAP32[$1+8>>2]|0;$x3=HEAP32[$1+24>>2]|0;$x0=HEAP32[$1>>2]|0;$x1=HEAP32[$1+16>>2]|0;$x4=$x2+$x3|0;$x2=((($x2-$x3|0)*23170|0)+8192>>14)-$x4|0;$x3=$x0+$x1|0;$x0=$x0-$x1|0;$x1=$x3+$x4|0;$x3=$x3-$x4|0;$x4=$x0+$x2|0;$x0=$x0-$x2|0;$x2=HEAP32[$work+28>>2]|0;$x1=$x1-$x2|0;$x2=($x2<<1)+$x1|0;HEAP32[$work+28>>2]=$x1;HEAP32[$work>>2]=$x2;$x2=HEAP32[$work+24>>2]|0;$x1=$x4+$x2|0;$x4=$x4-$x2|0;HEAP32[$work+4>>2]=$x1;HEAP32[$work+24>>2]=$x4;$x1=HEAP32[$work+20>>2]|0;$x2=HEAP32[$work+16>>2]|0;$x4=$x0+$x1|0;$x0=$x0-$x1|0;$x1=$x3+$x2|0;$x3=$x3-$x2|0;HEAP32[$work+8>>2]=$x4;HEAP32[$work+20>>2]=$x0;HEAP32[$work+12>>2]=$x3;HEAP32[$work+16>>2]=$x1;label=4;break;case 4:$i=$i-1|0;$1=$1+32|0;$work=$work+32|0;label=2;break;case 5:$work=$workspace|0;$i=8;label=6;break;case 6:if(($i|0)>0){label=7;break}else{label=9;break};case 7:$x01=HEAP32[$work+160>>2]|0;$x12=HEAP32[$work+96>>2]|0;$x23=HEAP32[$work+32>>2]|0;$x34=HEAP32[$work+224>>2]|0;$x45=$x01+$x12|0;$x01=$x01-$x12|0;$x12=$x23+$x34|0;$x23=$x23-$x34|0;$x34=$x12+$x45|0;$x12=$x12-$x45|0;$x45=($x01+$x23|0)*30274|0;$x01=$x45-($x01*42813|0)+8192>>14;$x23=($x23*17734|0)-$x45+8192>>14;$x12=($x12*23170|0)+8192>>14;$x01=$x01-$x34|0;$x12=$x12-$x01|0;$x23=$x23+$x12|0;HEAP32[$2+28>>2]=$x34;HEAP32[$2+24>>2]=$x01;HEAP32[$2+20>>2]=$x12;HEAP32[$2+16>>2]=$x23;$x23=HEAP32[$work+64>>2]|0;$x34=HEAP32[$work+192>>2]|0;$x01=HEAP32[$work>>2]|0;$x12=HEAP32[$work+128>>2]|0;$x45=$x23+$x34|0;$x23=((($x23-$x34|0)*23170|0)+8192>>14)-$x45|0;$x34=$x01+$x12|0;$x01=$x01-$x12|0;$x12=$x34+$x45|0;$x34=$x34-$x45|0;$x45=$x01+$x23|0;$x01=$x01-$x23|0;$x23=HEAP32[$2+28>>2]|0;$x12=$x12-$x23|0;$x23=($x23<<1)+$x12|0;$x12=$x12+4>>3;$x23=$x23+4>>3;HEAP32[$2+28>>2]=$x12;HEAP32[$2>>2]=$x23;$x23=HEAP32[$2+24>>2]|0;$x12=$x45+$x23+4>>3;$x45=$x45-$x23+4>>3;HEAP32[$2+4>>2]=$x12;HEAP32[$2+24>>2]=$x45;$x12=HEAP32[$2+20>>2]|0;$x23=HEAP32[$2+16>>2]|0;$x45=$x01+$x12+4>>3;$x01=$x01-$x12+4>>3;$x12=$x34+$x23+4>>3;$x34=$x34-$x23+4>>3;HEAP32[$2+8>>2]=$x45;HEAP32[$2+20>>2]=$x01;HEAP32[$2+12>>2]=$x34;HEAP32[$2+16>>2]=$x12;label=8;break;case 8:$i=$i-1|0;$2=$2+($step<<2)|0;$work=$work+4|0;label=6;break;case 9:STACKTOP=sp;return}}function __ZN15GrFmtJpegReader8GetBlockEPii($this,$block,$c){$this=$this|0;$block=$block|0;$c=$c|0;var $2=0,$3=0,$ta=0,$tq=0,$i=0,$cat=0,$mask=0,$val=0,$4=0,$39=0,$53=0,$62=0,$93=0,$111=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$block;$3=$c;$4=$this;_memset($2|0,0,256);$ta=HEAP32[$4+2172+(HEAP8[$4+1088+($3*12|0)+4|0]<<2)>>2]|0;$tq=$4+1124+(HEAP8[$4+1088+($3*12|0)+2|0]<<8)|0;$i=0;$cat=__ZN11RMBitStream7GetHuffEPKs($4+2192|0,HEAP32[$4+2152+(HEAP8[$4+1088+($3*12|0)+3|0]<<2)>>2]|0)|0;$39=7184+($cat<<2)|0;$mask=HEAPU8[$39]|HEAPU8[$39+1|0]<<8|HEAPU8[$39+2|0]<<16|HEAPU8[$39+3|0]<<24|0;$val=__ZN11RMBitStream3GetEi($4+2192|0,$cat)|0;if(($val<<1|0)<=($mask|0)){label=2;break}else{label=3;break};case 2:$53=$mask;label=4;break;case 3:$53=0;label=4;break;case 4:$val=$val-$53|0;$62=$val+(HEAP32[$4+1088+($3*12|0)+8>>2]|0)|0;$val=$62;HEAP32[$4+1088+($3*12|0)+8>>2]=$62;HEAP32[$2>>2]=(Math_imul($val,HEAP32[$tq>>2]|0)|0)+32768>>16;label=5;break;case 5:$cat=__ZN11RMBitStream7GetHuffEPKs($4+2192|0,$ta)|0;if(($cat|0)==0){label=6;break}else{label=7;break};case 6:label=13;break;case 7:$i=$i+(($cat>>4)+1)|0;$cat=$cat&15;$93=7184+($cat<<2)|0;$mask=HEAPU8[$93]|HEAPU8[$93+1|0]<<8|HEAPU8[$93+2|0]<<16|HEAPU8[$93+3|0]<<24|0;$val=__ZN11RMBitStream3GetEi($4+2192|0,$cat)|0;$cat=HEAPU8[20952+$i|0]|0;if(($val<<1|0)<=($mask|0)){label=8;break}else{label=9;break};case 8:$111=$mask;label=10;break;case 9:$111=0;label=10;break;case 10:$val=$val-$111|0;HEAP32[$2+($cat<<2)>>2]=(Math_imul($val,HEAP32[$tq+($cat<<2)>>2]|0)|0)+32768>>16;if(($i|0)>=63){label=11;break}else{label=12;break};case 11:label=13;break;case 12:label=5;break;case 13:return}}function __ZN12WMByteStreamC1Ev($this){$this=$this|0;__ZN12WMByteStreamC2Ev($this);return}function __ZN14WJpegBitStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14WJpegBitStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14WJpegBitStream4OpenEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0,$8=0,$14=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+12>>2]&1023]($3);$8=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$8>>2]|0)+24>>2]&1023]($8);$14=$3+44|0;HEAP8[$3+28|0]=(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14>>2]|0)+8>>2]&1023]($14,$filename)|0)&1;if(HEAP8[$3+28|0]&1){label=2;break}else{label=3;break};case 2:HEAP32[$3+20>>2]=0;__ZN11WMBitStream11ResetBufferEv($3);label=3;break;case 3:return HEAP8[$3+28|0]&1|0}return 0}function __ZN14WJpegBitStream5CloseEv($this){$this=$this|0;var $2=0,$13=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if(HEAP8[$2+28|0]&1){label=2;break}else{label=3;break};case 2:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+28>>2]&1023]($2);$13=$2+44|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$13>>2]|0)+12>>2]&1023]($13);HEAP8[$2+28|0]=0;label=3;break;case 3:return}}function __ZN14WJpegBitStreamC2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WMBitStreamC2Ev($4);HEAP32[$4>>2]=18856;__ZN12WMByteStreamC1Ev($4+44|0);label=2;break;case 2:return;case 3:__ZN11WBaseStreamD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14WJpegBitStreamD2Ev($this){$this=$this|0;var $2=0,$3=0,$4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18856;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);label=2;break;case 2:HEAP8[$4+28|0]=0;__ZN11WBaseStreamD2Ev($4+44|0);label=3;break;case 3:__ZN11WBaseStreamD2Ev($4);return;case 4:$2=0;$3=0;__ZN11WBaseStreamD2Ev($4+44|0);label=6;break;case 5:$2=0;$3=0;label=7;break;case 6:label=7;break;case 7:__ZN11WBaseStreamD2Ev($4);label=8;break;case 8:label=9;break;case 9:abort();case 10:__ZSt9terminatev()}}function __ZN14WJpegBitStream5FlushEv($this){$this=$this|0;var $2=0,$10=0,$13=0,$14=0;$2=$this;__ZN11WMBitStream3PutEii($2,-1,HEAP32[$2+32>>2]&31);$10=HEAP32[$2+40>>2]|0;$13=$2+12|0;$14=HEAP32[$13>>2]|0;HEAP32[$13>>2]=$14+4;HEAP32[$14>>2]=$10;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+16>>2]&1023]($2);__ZN11WMBitStream11ResetBufferEv($2);return}function __ZN14WJpegBitStream10WriteBlockEv($this){$this=$this|0;var $ptr=0,$val=0,$2=0,$22=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$ptr=HEAP32[$2+4>>2]|0;if(__Z13bsIsBigEndianv()|0){label=3;break}else{label=2;break};case 2:__Z12bsBSwapBlockPhS_(HEAP32[$2+4>>2]|0,HEAP32[$2+12>>2]|0);label=3;break;case 3:label=4;break;case 4:if($ptr>>>0<(HEAP32[$2+12>>2]|0)>>>0){label=5;break}else{label=8;break};case 5:$22=$ptr;$ptr=$22+1|0;$val=HEAPU8[$22]|0;__ZN12WLByteStream7PutByteEi($2+44|0,$val);if(($val|0)==255){label=6;break}else{label=7;break};case 6:__ZN12WLByteStream7PutByteEi($2+44|0,0);label=7;break;case 7:label=4;break;case 8:HEAP32[$2+12>>2]=HEAP32[$2+4>>2];return}}function __ZN15GrFmtJpegWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN15GrFmtJpegWriterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN15GrFmtJpegWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtWriterC2EPKc($5,$filename);HEAP32[$5>>2]=18784;__ZN14WJpegBitStreamC2Ev($5+1028|0);label=2;break;case 2:return;case 3:__ZN11GrFmtWriterD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN15GrFmtJpegWriterD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18784;__ZN14WJpegBitStreamD2Ev($4+1028|0);label=2;break;case 2:__ZN11GrFmtWriterD2Ev($4);return;case 3:__ZN11GrFmtWriterD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN15GrFmtJpegWriter10WriteImageEPKhiiiii($this,$data,$step,$width,$height,$0,$_channels){$this=$this|0;$data=$data|0;$step=$step|0;$width=$width|0;$height=$height|0;$0=$0|0;$_channels=$_channels|0;var $2=0,$4=0,$5=0,$6=0,$7=0,$9=0,$x=0,$y=0,$i=0,$j=0,$quality=0,$lowstrm=0,$fdct_qtab=0,$huff_dc_tab=0,$huff_ac_tab=0,$channels=0,$x_scale=0,$y_scale=0,$dc_pred=0,$x_step=0,$y_step=0,$block=0,$buffer=0,$luma_count=0,$block_count=0,$Y_step=0,$idx=0,$qval=0,$htable=0,$is_ac_tab=0,$idx1=0,$tableSize=0,$x_limit=0,$y_limit=0,$rgb_data=0,$Y_data=0,$UV_data=0,$r=0,$g=0,$b=0,$j2=0,$is_chroma=0,$run=0,$val=0,$htable2=0,$a=0,$cat=0,$a3=0,$cat4=0,$10=0,$66=0,$74=0,$108=0,$150=0,$152=0,$178=0,$190=0,$391=0,$398=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8352|0;label=1;while(1)switch(label|0){case 1:$fdct_qtab=sp|0;$huff_dc_tab=sp+512|0;$huff_ac_tab=sp+640|0;$dc_pred=sp+2688|0;$block=sp+2704|0;$buffer=sp+4240|0;$a=sp+8336|0;$a3=sp+8344|0;$4=$data;$5=$step;$6=$width;$7=$height;$9=$_channels;$10=$this;if(__ZN14WJpegBitStream4OpenEPKc($10+1028|0,$10+4|0)|0){label=3;break}else{label=2;break};case 2:$2=0;label=99;break;case 3:$quality=12;$lowstrm=$10+1072|0;$channels=($9|0)>1?3:1;$x_scale=($channels|0)>1?2:1;$y_scale=$x_scale;_memset($dc_pred|0,0,12);$x_step=$x_scale<<3;$y_step=$y_scale<<3;$luma_count=Math_imul($x_scale,$y_scale)|0;$block_count=$luma_count+$channels-1|0;$Y_step=$x_scale<<3;if(($quality|0)<3){label=4;break}else{label=5;break};case 4:$quality=3;label=5;break;case 5:if(($quality|0)>12){label=6;break}else{label=7;break};case 6:$quality=12;label=7;break;case 7:__ZN12WLByteStream8PutBytesEPKvi($lowstrm,23456,20);$i=0;label=8;break;case 8:if(($i|0)<((($channels|0)>1?2:1)|0)){label=9;break}else{label=25;break};case 9:if(($i|0)==0){label=10;break}else{label=11;break};case 10:$66=22664;label=12;break;case 11:$66=22600;label=12;break;case 12:if(($i|0)>0){label=13;break}else{label=14;break};case 13:$74=$luma_count;label=15;break;case 14:$74=1;label=15;break;case 15:__ZN12WMByteStream7PutWordEi($lowstrm,65499);__ZN12WMByteStream7PutWordEi($lowstrm,67);__ZN12WLByteStream7PutByteEi($lowstrm,$i|0);$j=0;label=16;break;case 16:if(($j|0)<64){label=17;break}else{label=23;break};case 17:$idx=HEAPU8[20952+$j|0]|0;$qval=__Z7cvRoundd(+(HEAPU8[$66+$idx|0]|0|0)*(1.0/+($quality|0)))|0;if(($qval|0)<1){label=18;break}else{label=19;break};case 18:$qval=1;label=19;break;case 19:if(($qval|0)>255){label=20;break}else{label=21;break};case 20:$qval=255;label=21;break;case 21:$108=Math_imul($qval,$74)|0;HEAP32[$fdct_qtab+($i<<8)+($idx<<2)>>2]=__Z7cvRoundd(+(8388608/(Math_imul($108,HEAP32[22728+($idx<<2)>>2]|0)|0)|0|0))|0;__ZN12WLByteStream7PutByteEi($lowstrm,$qval);label=22;break;case 22:$j=$j+1|0;label=16;break;case 23:label=24;break;case 24:$i=$i+1|0;label=8;break;case 25:$i=0;label=26;break;case 26:if(($i|0)<((($channels|0)>1?4:2)|0)){label=27;break}else{label=38;break};case 27:if(($i|0)==0){label=28;break}else{label=29;break};case 28:$152=23424;label=33;break;case 29:if(($i|0)==1){label=30;break}else{label=31;break};case 30:$150=23208;label=32;break;case 31:$150=($i|0)==2?23392:23024;label=32;break;case 32:$152=$150;label=33;break;case 33:$htable=$152;$is_ac_tab=$i&1;$idx1=($i|0)>=2|0;$tableSize=(($is_ac_tab|0)!=0?162:12)+16|0;__ZN12WMByteStream7PutWordEi($lowstrm,65476);__ZN12WMByteStream7PutWordEi($lowstrm,$tableSize+3|0);__ZN12WLByteStream7PutByteEi($lowstrm,($is_ac_tab<<4)+$idx1|0);__ZN12WLByteStream8PutBytesEPKvi($lowstrm,$htable,$tableSize);$178=__Z26bsCreateSourceHuffmanTablePKhPiii($htable,$buffer|0,16,9)|0;if(($is_ac_tab|0)!=0){label=34;break}else{label=35;break};case 34:$190=$huff_ac_tab+($idx1<<10)|0;label=36;break;case 35:$190=$huff_dc_tab+($idx1<<6)|0;label=36;break;case 36:__Z26bsCreateEncodeHuffmanTablePKiPmi($178,$190,($is_ac_tab|0)!=0?256:16)|0;label=37;break;case 37:$i=$i+1|0;label=26;break;case 38:__ZN12WMByteStream7PutWordEi($lowstrm,65472);__ZN12WMByteStream7PutWordEi($lowstrm,($channels*3|0)+8|0);__ZN12WLByteStream7PutByteEi($lowstrm,8);__ZN12WMByteStream7PutWordEi($lowstrm,$7);__ZN12WMByteStream7PutWordEi($lowstrm,$6);__ZN12WLByteStream7PutByteEi($lowstrm,$channels);$i=0;label=39;break;case 39:if(($i|0)<($channels|0)){label=40;break}else{label=45;break};case 40:__ZN12WLByteStream7PutByteEi($lowstrm,$i+1|0);if(($i|0)==0){label=41;break}else{label=42;break};case 41:__ZN12WLByteStream7PutByteEi($lowstrm,($x_scale<<4)+$y_scale|0);label=43;break;case 42:__ZN12WLByteStream7PutByteEi($lowstrm,17);label=43;break;case 43:__ZN12WLByteStream7PutByteEi($lowstrm,($i|0)>0|0);label=44;break;case 44:$i=$i+1|0;label=39;break;case 45:__ZN12WMByteStream7PutWordEi($lowstrm,65498);__ZN12WMByteStream7PutWordEi($lowstrm,($channels<<1)+6|0);__ZN12WLByteStream7PutByteEi($lowstrm,$channels);$i=0;label=46;break;case 46:if(($i|0)<($channels|0)){label=47;break}else{label=49;break};case 47:__ZN12WLByteStream7PutByteEi($lowstrm,$i+1|0);__ZN12WLByteStream7PutByteEi($lowstrm,((($i|0)>0)<<4)+(($i|0)>0)|0);label=48;break;case 48:$i=$i+1|0;label=46;break;case 49:__ZN12WMByteStream7PutWordEi($lowstrm,63);__ZN12WLByteStream7PutByteEi($lowstrm,0);$y=0;label=50;break;case 50:if(($y|0)<($7|0)){label=51;break}else{label=98;break};case 51:$x=0;label=52;break;case 52:if(($x|0)<($6|0)){label=53;break}else{label=96;break};case 53:$x_limit=$x_step;$y_limit=$y_step;$rgb_data=$4+(Math_imul($x,$9)|0)|0;$Y_data=$block|0;if(($x+$x_limit|0)>($6|0)){label=54;break}else{label=55;break};case 54:$x_limit=$6-$x|0;label=55;break;case 55:if(($y+$y_limit|0)>($7|0)){label=56;break}else{label=57;break};case 56:$y_limit=$7-$y|0;label=57;break;case 57:_memset($block|0,0,$block_count<<6<<2|0);if(($channels|0)>1){label=58;break}else{label=69;break};case 58:$UV_data=$block+($luma_count<<8)|0;$i=0;label=59;break;case 59:if(($i|0)<($y_limit|0)){label=60;break}else{label=68;break};case 60:$j=0;label=61;break;case 61:if(($j|0)<($x_limit|0)){label=62;break}else{label=64;break};case 62:$r=HEAPU8[$rgb_data+2|0]|0;$g=HEAPU8[$rgb_data+1|0]|0;$b=HEAPU8[$rgb_data|0]|0;$j2=$j>>$x_scale-1;HEAP32[$Y_data+($j<<2)>>2]=(($r*1225|0)+($g*2404|0)+($b*467|0)+512>>10)-512;$391=$UV_data+($j2<<2)|0;HEAP32[$391>>2]=(HEAP32[$391>>2]|0)+(($r*-691|0)+($g*-1357|0)+($b<<11)+512>>10);$398=$UV_data+($j2+8<<2)|0;HEAP32[$398>>2]=(HEAP32[$398>>2]|0)+(($r<<11)+($g*-1715|0)+($b*-333|0)+512>>10);label=63;break;case 63:$j=$j+1|0;$rgb_data=$rgb_data+$9|0;label=61;break;case 64:$rgb_data=$rgb_data+(-(Math_imul($x_limit,$9)|0)|0)|0;if(($i+1&$y_scale-1|0)==0){label=65;break}else{label=66;break};case 65:$UV_data=$UV_data+64|0;label=66;break;case 66:label=67;break;case 67:$i=$i+1|0;$rgb_data=$rgb_data+$5|0;$Y_data=$Y_data+($Y_step<<2)|0;label=59;break;case 68:label=78;break;case 69:$i=0;label=70;break;case 70:if(($i|0)<($y_limit|0)){label=71;break}else{label=77;break};case 71:$j=0;label=72;break;case 72:if(($j|0)<($x_limit|0)){label=73;break}else{label=75;break};case 73:HEAP32[$Y_data+($j<<2)>>2]=((HEAPU8[$rgb_data+$j|0]|0)<<2)-512;label=74;break;case 74:$j=$j+1|0;label=72;break;case 75:label=76;break;case 76:$i=$i+1|0;$rgb_data=$rgb_data+$5|0;$Y_data=$Y_data+($Y_step<<2)|0;label=70;break;case 77:label=78;break;case 78:$i=0;label=79;break;case 79:if(($i|0)<($block_count|0)){label=80;break}else{label=94;break};case 80:$is_chroma=($i|0)>=($luma_count|0)|0;$run=0;$htable2=$huff_ac_tab+($is_chroma<<10)|0;__ZL11aan_fdct8x8PiS_iPKi($block+(($i&-2)<<8)+(($i&1)<<3<<2)|0,$buffer|0,$x_scale<<3,$fdct_qtab+($is_chroma<<8)|0);$j=$is_chroma+(($i|0)>($luma_count|0))|0;$val=(HEAP32[$buffer>>2]|0)-(HEAP32[$dc_pred+($j<<2)>>2]|0)|0;HEAP32[$dc_pred+($j<<2)>>2]=HEAP32[$buffer>>2];HEAPF32[$a>>2]=+($val|0);$cat=(HEAP32[$a>>2]>>23&255)-(126&(($val|0)!=0?-1:0))|0;__ZN11WMBitStream7PutHuffEiPKm($10+1028|0,$cat,$huff_dc_tab+($is_chroma<<6)|0);__ZN11WMBitStream3PutEii($10+1028|0,$val-(($val|0)<0?1:0)|0,$cat);$j=1;label=81;break;case 81:if(($j|0)<64){label=82;break}else{label=90;break};case 82:$val=HEAP32[$buffer+((HEAPU8[20952+$j|0]|0)<<2)>>2]|0;if(($val|0)==0){label=83;break}else{label=84;break};case 83:$run=$run+1|0;label=88;break;case 84:label=85;break;case 85:if(($run|0)>=16){label=86;break}else{label=87;break};case 86:__ZN11WMBitStream7PutHuffEiPKm($10+1028|0,240,$htable2);$run=$run-16|0;label=85;break;case 87:HEAPF32[$a3>>2]=+($val|0);$cat4=(HEAP32[$a3>>2]>>23&255)-(126&(($val|0)!=0?-1:0))|0;__ZN11WMBitStream7PutHuffEiPKm($10+1028|0,$cat4+($run<<4)|0,$htable2);__ZN11WMBitStream3PutEii($10+1028|0,$val-(($val|0)<0?1:0)|0,$cat4);$run=0;label=88;break;case 88:label=89;break;case 89:$j=$j+1|0;label=81;break;case 90:if(($run|0)!=0){label=91;break}else{label=92;break};case 91:__ZN11WMBitStream7PutHuffEiPKm($10+1028|0,0,$htable2);label=92;break;case 92:label=93;break;case 93:$i=$i+1|0;label=79;break;case 94:label=95;break;case 95:$x=$x+$x_step|0;label=52;break;case 96:label=97;break;case 97:$y=$y+$y_step|0;$4=$4+(Math_imul($y_step,$5)|0)|0;label=50;break;case 98:__ZN14WJpegBitStream5FlushEv($10+1028|0);__ZN12WMByteStream7PutWordEi($lowstrm,65497);__ZN14WJpegBitStream5CloseEv($10+1028|0);$2=1;label=99;break;case 99:STACKTOP=sp;return $2|0}return 0}function __ZL11aan_fdct8x8PiS_iPKi($src,$dst,$step,$postscale){$src=$src|0;$dst=$dst|0;$step=$step|0;$postscale=$postscale|0;var $1=0,$2=0,$4=0,$workspace=0,$work=0,$i=0,$x0=0,$x1=0,$x2=0,$x3=0,$x4=0,$x01=0,$x12=0,$x23=0,$x34=0,$x45=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+256|0;label=1;while(1)switch(label|0){case 1:$workspace=sp|0;$1=$src;$2=$dst;$4=$postscale;$work=$workspace|0;$i=8;label=2;break;case 2:if(($i|0)>0){label=3;break}else{label=5;break};case 3:$x0=HEAP32[$1>>2]|0;$x1=HEAP32[$1+28>>2]|0;$x2=HEAP32[$1+12>>2]|0;$x3=HEAP32[$1+16>>2]|0;$x4=$x0+$x1|0;$x0=$x0-$x1|0;$x1=$x2+$x3|0;$x2=$x2-$x3|0;HEAP32[$work+28>>2]=$x0;HEAP32[$work+4>>2]=$x2;$x2=$x4+$x1|0;$x4=$x4-$x1|0;$x0=HEAP32[$1+4>>2]|0;$x3=HEAP32[$1+24>>2]|0;$x1=$x0+$x3|0;$x0=$x0-$x3|0;HEAP32[$work+20>>2]=$x0;$x0=HEAP32[$1+8>>2]|0;$x3=HEAP32[$1+20>>2]|0;HEAP32[$work+12>>2]=$x0-$x3;$x0=$x0+$x3|0;$x3=$x0+$x1|0;$x0=$x0-$x1|0;$x1=$x2+$x3|0;$x2=$x2-$x3|0;HEAP32[$work>>2]=$x1;HEAP32[$work+16>>2]=$x2;$x0=(($x0-$x4|0)*11585|0)+8192>>14;$x1=$x4+$x0|0;$x4=$x4-$x0|0;HEAP32[$work+8>>2]=$x4;HEAP32[$work+24>>2]=$x1;$x0=HEAP32[$work+4>>2]|0;$x1=HEAP32[$work+12>>2]|0;$x2=HEAP32[$work+20>>2]|0;$x3=HEAP32[$work+28>>2]|0;$x0=$x0+$x1|0;$x1=$x1+$x2|0;$x2=$x2+$x3|0;$x1=($x1*11585|0)+8192>>14;$x4=$x1+$x3|0;$x3=$x3-$x1|0;$x1=($x0-$x2|0)*6270|0;$x0=($x0*8867|0)+$x1+8192>>14;$x2=($x2*21407|0)+$x1+8192>>14;$x1=$x0+$x3|0;$x3=$x3-$x0|0;$x0=$x4+$x2|0;$x4=$x4-$x2|0;HEAP32[$work+20>>2]=$x1;HEAP32[$work+4>>2]=$x0;HEAP32[$work+28>>2]=$x4;HEAP32[$work+12>>2]=$x3;label=4;break;case 4:$i=$i-1|0;$1=$1+($step<<2)|0;$work=$work+32|0;label=2;break;case 5:$work=$workspace|0;$i=8;label=6;break;case 6:if(($i|0)>0){label=7;break}else{label=9;break};case 7:$x01=HEAP32[$work>>2]|0;$x12=HEAP32[$work+224>>2]|0;$x23=HEAP32[$work+96>>2]|0;$x34=HEAP32[$work+128>>2]|0;$x45=$x01+$x12|0;$x01=$x01-$x12|0;$x12=$x23+$x34|0;$x23=$x23-$x34|0;HEAP32[$work+224>>2]=$x01;HEAP32[$work>>2]=$x23;$x23=$x45+$x12|0;$x45=$x45-$x12|0;$x01=HEAP32[$work+32>>2]|0;$x34=HEAP32[$work+192>>2]|0;$x12=$x01+$x34|0;$x01=$x01-$x34|0;HEAP32[$work+128>>2]=$x01;$x01=HEAP32[$work+64>>2]|0;$x34=HEAP32[$work+160>>2]|0;HEAP32[$work+96>>2]=$x01-$x34;$x01=$x01+$x34|0;$x34=$x01+$x12|0;$x01=$x01-$x12|0;$x12=$x23+$x34|0;$x23=$x23-$x34|0;HEAP32[$2>>2]=(Math_imul($x12,HEAP32[$4>>2]|0)|0)+8192>>14;HEAP32[$2+16>>2]=(Math_imul($x23,HEAP32[$4+16>>2]|0)|0)+8192>>14;$x01=(($x01-$x45|0)*11585|0)+8192>>14;$x12=$x45+$x01|0;$x45=$x45-$x01|0;HEAP32[$2+8>>2]=(Math_imul($x45,HEAP32[$4+8>>2]|0)|0)+8192>>14;HEAP32[$2+24>>2]=(Math_imul($x12,HEAP32[$4+24>>2]|0)|0)+8192>>14;$x01=HEAP32[$work>>2]|0;$x12=HEAP32[$work+96>>2]|0;$x23=HEAP32[$work+128>>2]|0;$x34=HEAP32[$work+224>>2]|0;$x01=$x01+$x12|0;$x12=$x12+$x23|0;$x23=$x23+$x34|0;$x12=($x12*11585|0)+8192>>14;$x45=$x12+$x34|0;$x34=$x34-$x12|0;$x12=($x01-$x23|0)*6270|0;$x01=($x01*8867|0)+$x12+8192>>14;$x23=($x23*21407|0)+$x12+8192>>14;$x12=$x01+$x34|0;$x34=$x34-$x01|0;$x01=$x45+$x23|0;$x45=$x45-$x23|0;HEAP32[$2+20>>2]=(Math_imul($x12,HEAP32[$4+20>>2]|0)|0)+8192>>14;HEAP32[$2+4>>2]=(Math_imul($x01,HEAP32[$4+4>>2]|0)|0)+8192>>14;HEAP32[$2+28>>2]=(Math_imul($x45,HEAP32[$4+28>>2]|0)|0)+8192>>14;HEAP32[$2+12>>2]=(Math_imul($x34,HEAP32[$4+12>>2]|0)|0)+8192>>14;label=8;break;case 8:$i=$i-1|0;$work=$work+4|0;$4=$4+32|0;$2=$2+32|0;label=6;break;case 9:STACKTOP=sp;return}}function __ZN12WMByteStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN12WLByteStreamC2Ev($2);HEAP32[$2>>2]=19136;return}function __ZN12RMByteStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN12RLByteStreamC2Ev($2);HEAP32[$2>>2]=19232;return}function __ZN11RLBitStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN11RBaseStreamC2Ev($2);HEAP32[$2>>2]=19472;return}function __ZN8GrFmtPxMC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN18GrFmtFilterFactoryC2Ev($2);HEAP32[$2>>2]=18488;HEAP32[$2+8>>2]=3;HEAP32[$2+12>>2]=28368;HEAP32[$2+4>>2]=13232;return}function __ZN8GrFmtPxMD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN8GrFmtPxMD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN8GrFmtPxMD2Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN8GrFmtPxM14CheckSignatureEPKc($this,$signature){$this=$this|0;$signature=$signature|0;var $2=0,$29=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$signature;if((HEAP8[$2|0]|0)==80){label=2;break}else{$29=0;label=5;break};case 2:if(49<=(HEAP8[$2+1|0]|0)){label=3;break}else{$29=0;label=5;break};case 3:if((HEAP8[$2+1|0]|0)<=54){label=4;break}else{$29=0;label=5;break};case 4:$29=(_isspace(HEAP8[$2+2|0]|0)|0)!=0;label=5;break;case 5:return $29|0}return 0}function __ZN8GrFmtPxM9NewReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(2164)|0;$7=$6;__ZN14GrFmtPxMReaderC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN8GrFmtPxM9NewWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(1060)|0;$7=$6;__ZN14GrFmtPxMWriterC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN14GrFmtPxMReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14GrFmtPxMReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14GrFmtPxMReader5CloseEv($this){$this=$this|0;var $4=0;$4=$this+1048|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);return}function __ZN14GrFmtPxMReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtReaderC2EPKc($5,$filename);HEAP32[$5>>2]=19024;__ZN12RLByteStreamC1Ev($5+1048|0);label=2;break;case 2:HEAP32[$5+2152>>2]=-1;return;case 3:__ZN11GrFmtReaderD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtPxMReaderD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=19024;__ZN11RBaseStreamD2Ev($4+1048|0);label=2;break;case 2:__ZN11GrFmtReaderD2Ev($4);return;case 3:__ZN11GrFmtReaderD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtPxMReader10ReadHeaderEv($this){$this=$this|0;var $1=0,$result=0,$code=0,$3=0,$5=0,$13=0,$18=0,$20=0,$24=0,$30=0,$31=0,$51=0,$55=0,$64=0,$66=0,$94=0,$108=0,label=0,setjmpLabel=0,setjmpTable=0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$3=$this;$result=0;$5=$3+1048|0;$13=invoke_iii(HEAP32[(HEAP32[$5>>2]|0)+8>>2]|0,$5|0,$3+20|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($13){label=3;break}else{label=2;break};case 2:$1=0;label=26;break;case 3:$18=invoke_ii(212,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$20=_saveSetjmp($18|0,label,setjmpTable)|0;label=27;break;case 27:if(($20|0)==0){label=4;break}else{label=23;break};case 4:$24=invoke_ii(726,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$24;if(($code|0)!=80){label=5;break}else{label=6;break};case 5:label=22;break;case 6:$30=invoke_ii(726,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$30;$31=$code;if(($31|0)==49|($31|0)==52){label=7;break}else if(($31|0)==50|($31|0)==53){label=8;break}else if(($31|0)==51|($31|0)==54){label=9;break}else{label=10;break};case 7:HEAP32[$3+2148>>2]=1;label=11;break;case 8:HEAP32[$3+2148>>2]=8;label=11;break;case 9:HEAP32[$3+2148>>2]=24;label=11;break;case 10:label=22;break;case 11:HEAP8[$3+2156|0]=($code|0)>=52|0;HEAP8[$3+4|0]=(HEAP32[$3+2148>>2]|0)>8|0;$51=invoke_iii(764,$3+1048|0,2147483647)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+8>>2]=$51;$55=invoke_iii(764,$3+1048|0,2147483647)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+12>>2]=$55;if((HEAP32[$3+2148>>2]|0)==1){label=12;break}else{label=13;break};case 12:$66=1;label=14;break;case 13:$64=invoke_iii(764,$3+1048|0,2147483647)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$66=$64;label=14;break;case 14:HEAP32[$3+2160>>2]=$66;if((HEAP32[$3+2160>>2]|0)>255){label=15;break}else{label=16;break};case 15:HEAP8[$3+2156|0]=0;label=16;break;case 16:if((HEAP32[$3+8>>2]|0)>0){label=17;break}else{label=21;break};case 17:if((HEAP32[$3+12>>2]|0)>0){label=18;break}else{label=21;break};case 18:if((HEAP32[$3+2160>>2]|0)>0){label=19;break}else{label=21;break};case 19:if((HEAP32[$3+2160>>2]|0)<65536){label=20;break}else{label=21;break};case 20:$94=invoke_ii(142,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2152>>2]=$94;$result=1;label=21;break;case 21:label=22;break;case 22:label=23;break;case 23:if($result&1){label=25;break}else{label=24;break};case 24:HEAP32[$3+2152>>2]=-1;HEAP32[$3+12>>2]=-1;HEAP32[$3+8>>2]=-1;$108=$3+1048|0;invoke_vi(HEAP32[(HEAP32[$108>>2]|0)+12>>2]|0,$108|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=25;break;case 25:$1=$result&1;label=26;break;case 26:return $1|0;case-1:if((setjmpLabel|0)==3){$20=threwValue;label=27}__THREW__=threwValue=0;break}return 0}function __ZL10ReadNumberR12RLByteStreami($strm,$maxdigits){$strm=$strm|0;$maxdigits=$maxdigits|0;var $1=0,$code=0,$val=0,$digits=0,$23=0,$50=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$strm;$val=0;$digits=0;$code=__ZN12RLByteStream7GetByteEv($1)|0;if((_isdigit($code|0)|0)!=0){label=16;break}else{label=2;break};case 2:label=3;break;case 3:if(($code|0)==35){label=4;break}else{label=10;break};case 4:label=5;break;case 5:$code=__ZN12RLByteStream7GetByteEv($1)|0;label=6;break;case 6:if(($code|0)!=10){label=7;break}else{$23=0;label=8;break};case 7:$23=($code|0)!=13;label=8;break;case 8:if($23){label=5;break}else{label=9;break};case 9:label=10;break;case 10:$code=__ZN12RLByteStream7GetByteEv($1)|0;label=11;break;case 11:if((_isspace($code|0)|0)!=0){label=12;break}else{label=13;break};case 12:$code=__ZN12RLByteStream7GetByteEv($1)|0;label=11;break;case 13:label=14;break;case 14:if((_isdigit($code|0)|0)!=0^1){label=3;break}else{label=15;break};case 15:label=16;break;case 16:label=17;break;case 17:$val=($val*10|0)+$code-48|0;$50=$digits+1|0;$digits=$50;if(($50|0)>=($maxdigits|0)){label=18;break}else{label=19;break};case 18:label=21;break;case 19:$code=__ZN12RLByteStream7GetByteEv($1)|0;label=20;break;case 20:if((_isdigit($code|0)|0)!=0){label=17;break}else{label=21;break};case 21:return $val|0}return 0}function __ZN14GrFmtPxMReader8ReadDataEPhii($this,$data,$step,$color){$this=$this|0;$data=$data|0;$step=$step|0;$color=$color|0;var $1=0,$3=0,$4=0,$5=0,$buffer=0,$pal_buffer=0,$bgr_buffer=0,$palette=0,$result=0,$src=0,$gray_palette=0,$bgr=0,$src_pitch=0,$width3=0,$i=0,$x=0,$y=0,$code=0,$6=0,$7=0,$8=0,$36=0,$44=0,$47=0,$56=0,$59=0,$72=0,$75=0,$111=0,$113=0,$121=0,$142=0,$234=0,$284=0,$285=0,$290=0,$291=0,$311=0,$320=0,$329=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+13328|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$pal_buffer=sp+4096|0;$bgr_buffer=sp+8192|0;$palette=sp+12288|0;$6=sp+13312|0;$7=sp+13320|0;$3=$data;$4=$step;$5=$color;$8=$this;$result=0;$src=$buffer|0;$gray_palette=$pal_buffer|0;$bgr=$bgr_buffer|0;$src_pitch=((Math_imul(HEAP32[$8+8>>2]|0,HEAP32[$8+2148>>2]|0)|0)+7|0)/8|0;$width3=Math_imul(HEAP32[$8+8>>2]|0,HEAP8[$8+4|0]&1?3:1)|0;if((HEAP32[$8+2152>>2]|0)<0){label=3;break}else{label=2;break};case 2:$36=invoke_ii(370,$8+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($36){label=4;break}else{label=3;break};case 3:$1=0;label=76;break;case 4:if(($src_pitch+32|0)>4096){label=5;break}else{label=6;break};case 5:$44=$width3+32|0;$47=invoke_ii(814,(($44|0)<0?-1:$44)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$src=$47;label=6;break;case 6:if(((HEAP32[$8+2160>>2]|0)+1|0)>4096){label=7;break}else{label=8;break};case 7:$56=(HEAP32[$8+2160>>2]|0)+1|0;$59=invoke_ii(814,(($56|0)<0?-1:$56)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$gray_palette=$59;label=8;break;case 8:if((((HEAP32[$8+8>>2]|0)*3|0)+32|0)>4096){label=9;break}else{label=10;break};case 9:$72=((HEAP32[$8+8>>2]|0)*3|0)+32|0;$75=invoke_ii(814,(($72|0)<0?-1:$72)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$bgr=$75;label=10;break;case 10:$i=0;label=11;break;case 11:if(($i|0)<=(HEAP32[$8+2160>>2]|0)){label=12;break}else{label=14;break};case 12:HEAP8[$gray_palette+$i|0]=((($i*255|0|0)/(HEAP32[$8+2160>>2]|0)|0)^((HEAP32[$8+2148>>2]|0)==1?255:0))&255;label=13;break;case 13:$i=$i+1|0;label=11;break;case 14:invoke_viii(396,$palette|0,((HEAP32[$8+2148>>2]|0)==1?1:8)|0,(HEAP32[$8+2148>>2]|0)==1|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$111=invoke_ii(212,$8+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$113=_saveSetjmp($111|0,label,setjmpTable)|0;label=77;break;case 77:if(($113|0)==0){label=15;break}else{label=63;break};case 15:invoke_vii(710,$8+1048|0,HEAP32[$8+2152>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$121=HEAP32[$8+2148>>2]|0;if(($121|0)==1){label=16;break}else if(($121|0)==8|($121|0)==24){label=38;break}else{label=61;break};case 16:if(HEAP8[$8+2156|0]&1){label=29;break}else{label=17;break};case 17:$y=0;label=18;break;case 18:if(($y|0)<(HEAP32[$8+12>>2]|0)){label=19;break}else{label=28;break};case 19:$x=0;label=20;break;case 20:if(($x|0)<(HEAP32[$8+8>>2]|0)){label=21;break}else{label=23;break};case 21:$142=invoke_iii(764,$8+1048|0,1)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$src+$x|0]=($142|0)!=0|0;label=22;break;case 22:$x=$x+1|0;label=20;break;case 23:if(($5|0)!=0){label=24;break}else{label=25;break};case 24:invoke_iiiii(808,$3|0,$src|0,HEAP32[$8+8>>2]|0,$palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 25:invoke_iiiii(240,$3|0,$src|0,HEAP32[$8+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 26:label=27;break;case 27:$y=$y+1|0;$3=$3+$4|0;label=18;break;case 28:label=37;break;case 29:$y=0;label=30;break;case 30:if(($y|0)<(HEAP32[$8+12>>2]|0)){label=31;break}else{label=36;break};case 31:invoke_viiii(32,$8+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=32;break}else{label=33;break};case 32:invoke_iiiii(478,$3|0,$src|0,HEAP32[$8+8>>2]|0,$palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 33:invoke_iiiii(626,$3|0,$src|0,HEAP32[$8+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 34:label=35;break;case 35:$y=$y+1|0;$3=$3+$4|0;label=30;break;case 36:label=37;break;case 37:$result=1;label=62;break;case 38:$y=0;label=39;break;case 39:if(($y|0)<(HEAP32[$8+12>>2]|0)){label=40;break}else{label=60;break};case 40:if(HEAP8[$8+2156|0]&1){label=48;break}else{label=41;break};case 41:$x=0;label=42;break;case 42:if(($x|0)<($width3|0)){label=43;break}else{label=47;break};case 43:$234=invoke_iii(764,$8+1048|0,2147483647)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$234;if($code>>>0>(HEAP32[$8+2160>>2]|0)>>>0){label=44;break}else{label=45;break};case 44:$code=HEAP32[$8+2160>>2]|0;label=45;break;case 45:HEAP8[$src+$x|0]=HEAP8[$gray_palette+$code|0]|0;label=46;break;case 46:$x=$x+1|0;label=42;break;case 47:label=49;break;case 48:invoke_viiii(32,$8+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=49;break;case 49:if((HEAP32[$8+2148>>2]|0)==8){label=50;break}else{label=54;break};case 50:if(($5|0)!=0){label=51;break}else{label=52;break};case 51:invoke_iiiii(808,$3|0,$src|0,HEAP32[$8+8>>2]|0,$palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=53;break;case 52:_memcpy($3|0,$src|0,HEAP32[$8+8>>2]|0)|0;label=53;break;case 53:label=58;break;case 54:if(($5|0)!=0){label=55;break}else{label=56;break};case 55:$284=$src;$285=$3;invoke_viii(124,$6|0,HEAP32[$8+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(24,$284|0,0,$285|0,0,$6|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=57;break;case 56:$290=$src;$291=$3;invoke_viii(124,$7|0,HEAP32[$8+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(360,$290|0,0,$291|0,0,$7|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=57;break;case 57:label=58;break;case 58:label=59;break;case 59:$y=$y+1|0;$3=$3+$4|0;label=39;break;case 60:$result=1;label=62;break;case 61:label=62;break;case 62:label=63;break;case 63:if(($src|0)!=($buffer|0)){label=64;break}else{label=67;break};case 64:$311=$src;if(($311|0)==0){label=66;break}else{label=65;break};case 65:invoke_vi(188,$311|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=66;break;case 66:label=67;break;case 67:if(($bgr|0)!=($bgr_buffer|0)){label=68;break}else{label=71;break};case 68:$320=$bgr;if(($320|0)==0){label=70;break}else{label=69;break};case 69:invoke_vi(188,$320|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=70;break;case 70:label=71;break;case 71:if(($gray_palette|0)!=($pal_buffer|0)){label=72;break}else{label=75;break};case 72:$329=$gray_palette;if(($329|0)==0){label=74;break}else{label=73;break};case 73:invoke_vi(188,$329|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=74;break;case 74:label=75;break;case 75:$1=$result&1;label=76;break;case 76:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==14){$113=threwValue;label=77}__THREW__=threwValue=0;break}return 0}function __ZN14GrFmtPxMWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14GrFmtPxMWriterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14GrFmtPxMWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtWriterC2EPKc($5,$filename);HEAP32[$5>>2]=18992;__ZN12WLByteStreamC1Ev($5+1028|0);label=2;break;case 2:return;case 3:__ZN11GrFmtWriterD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN14GrFmtPxMWriter10WriteImageEPKhiiiii($this,$data,$step,$width,$height,$0,$_channels){$this=$this|0;$data=$data|0;$step=$step|0;$width=$width|0;$height=$height|0;$0=$0|0;$_channels=$_channels|0;var $2=0,$4=0,$6=0,$7=0,$9=0,$isBinary=0,$result=0,$channels=0,$fileStep=0,$x=0,$y=0,$lineLength=0,$bufferSize=0,$buffer=0,$i=0,$10=0,$11=0,$ptr=0,$12=0,$20=0,$48=0,$56=0,$126=0,$175=0,$177=0,$206=0,$223=0,$228=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;while(1)switch(label|0){case 1:$10=sp|0;$11=sp+8|0;$4=$data;$6=$width;$7=$height;$9=$_channels;$12=$this;$isBinary=0;$result=0;$channels=($9|0)>1?3:1;$fileStep=Math_imul($6,$channels)|0;$20=$12+1028|0;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$20>>2]|0)+8>>2]&1023]($20,$12+4|0)|0){label=2;break}else{label=41;break};case 2:$lineLength=(Math_imul((Math_imul($isBinary&1?1:4,$channels)|0)+(($channels|0)>1?2:0)|0,$6)|0)+32|0;$bufferSize=128;$buffer=0;if(($bufferSize|0)<($lineLength|0)){label=3;break}else{label=4;break};case 3:$bufferSize=$lineLength;label=4;break;case 4:$48=$bufferSize;$buffer=__Znaj(($48|0)<0?-1:$48)|0;if(($buffer|0)!=0){label=6;break}else{label=5;break};case 5:$56=$12+1028|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$56>>2]|0)+12>>2]&1023]($56);$2=0;label=42;break;case 6:if(HEAP8[30384]&1){label=12;break}else{label=7;break};case 7:$i=0;label=8;break;case 8:if(($i|0)<256){label=9;break}else{label=11;break};case 9:_sprintf(29080+($i*5|0)|0,11904,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$i,tempInt)|0)|0;label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:HEAP8[30384]=1;label=12;break;case 12:_sprintf($buffer|0,10928,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,HEAP32[tempInt>>2]=(($channels|0)>1?1:0)+50+($isBinary&1?3:0),HEAP32[tempInt+8>>2]=$6,HEAP32[tempInt+16>>2]=$7,tempInt)|0)|0;__ZN12WLByteStream8PutBytesEPKvi($12+1028|0,$buffer,_strlen($buffer|0)|0);$y=0;label=13;break;case 13:if(($y|0)<($7|0)){label=14;break}else{label=38;break};case 14:if($isBinary&1){label=15;break}else{label=24;break};case 15:if(($9|0)==3){label=16;break}else{label=17;break};case 16:__Z6cvSizeii($10,$6,1);__Z21icvCvt_BGR2RGB_8u_C3RPKhiPhi6CvSize($4,0,$buffer,0,$10);label=20;break;case 17:if(($9|0)==4){label=18;break}else{label=19;break};case 18:__Z6cvSizeii($11,$6,1);__Z24icvCvt_BGRA2BGR_8u_C4C3RPKhiPhi6CvSizei($4,0,$buffer,0,$11,1);label=19;break;case 19:label=20;break;case 20:if(($channels|0)>1){label=21;break}else{label=22;break};case 21:$126=$buffer;label=23;break;case 22:$126=$4;label=23;break;case 23:__ZN12WLByteStream8PutBytesEPKvi($12+1028|0,$126,$fileStep);label=36;break;case 24:$ptr=$buffer;if(($channels|0)>1){label=25;break}else{label=30;break};case 25:$x=0;label=26;break;case 26:if(($x|0)<(Math_imul($6,$channels)|0)){label=27;break}else{label=29;break};case 27:_strcpy($ptr|0,29080+((HEAPU8[$4+($x+2)|0]|0)*5|0)|0)|0;$ptr=$ptr+4|0;_strcpy($ptr|0,29080+((HEAPU8[$4+($x+1)|0]|0)*5|0)|0)|0;$ptr=$ptr+4|0;_strcpy($ptr|0,29080+((HEAPU8[$4+$x|0]|0)*5|0)|0)|0;$ptr=$ptr+4|0;$175=$ptr;$ptr=$175+1|0;HEAP8[$175]=32;$177=$ptr;$ptr=$177+1|0;HEAP8[$177]=32;label=28;break;case 28:$x=$x+$channels|0;label=26;break;case 29:label=35;break;case 30:$x=0;label=31;break;case 31:if(($x|0)<($6|0)){label=32;break}else{label=34;break};case 32:_strcpy($ptr|0,29080+((HEAPU8[$4+$x|0]|0)*5|0)|0)|0;$ptr=$ptr+4|0;label=33;break;case 33:$x=$x+1|0;label=31;break;case 34:label=35;break;case 35:$206=$ptr;$ptr=$206+1|0;HEAP8[$206]=10;__ZN12WLByteStream8PutBytesEPKvi($12+1028|0,$buffer,$ptr-$buffer|0);label=36;break;case 36:label=37;break;case 37:$y=$y+1|0;$4=$4+$step|0;label=13;break;case 38:$223=$buffer;if(($223|0)==0){label=40;break}else{label=39;break};case 39:__ZdaPv($223);label=40;break;case 40:$228=$12+1028|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$228>>2]|0)+12>>2]&1023]($228);$result=1;label=41;break;case 41:$2=$result&1;label=42;break;case 42:STACKTOP=sp;return $2|0}return 0}function __ZN14GrFmtSunRasterC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN18GrFmtFilterFactoryC2Ev($2);HEAP32[$2>>2]=18952;HEAP32[$2+8>>2]=4;HEAP32[$2+12>>2]=HEAP32[5754];HEAP32[$2+4>>2]=8472;return}function __ZN14GrFmtSunRasterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN14GrFmtSunRasterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN14GrFmtSunRasterD2Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN14GrFmtSunRaster9NewReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(2168)|0;$7=$6;__ZN20GrFmtSunRasterReaderC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN14GrFmtSunRaster9NewWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(1060)|0;$7=$6;__ZN20GrFmtSunRasterWriterC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN20GrFmtSunRasterReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN20GrFmtSunRasterReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN20GrFmtSunRasterReader5CloseEv($this){$this=$this|0;var $4=0;$4=$this+1048|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);return}function __ZN14GrFmtPxMWriterD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18992;__ZN11WBaseStreamD2Ev($4+1028|0);label=2;break;case 2:__ZN11GrFmtWriterD2Ev($4);return;case 3:__ZN11GrFmtWriterD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN20GrFmtSunRasterReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtReaderC2EPKc($5,$filename);HEAP32[$5>>2]=18600;__ZN12RMByteStreamC1Ev($5+1048|0);label=2;break;case 2:HEAP32[$5+2152>>2]=-1;return;case 3:__ZN11GrFmtReaderD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN20GrFmtSunRasterReaderD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18600;__ZN11RBaseStreamD2Ev($4+1048|0);label=2;break;case 2:__ZN11GrFmtReaderD2Ev($4);return;case 3:__ZN11GrFmtReaderD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN20GrFmtSunRasterReader10ReadHeaderEv($this){$this=$this|0;var $1=0,$result=0,$palSize=0,$readed=0,$buffer=0,$i=0,$3=0,$5=0,$13=0,$18=0,$20=0,$26=0,$30=0,$34=0,$43=0,$46=0,$49=0,$180=0,$186=0,$208=0,$222=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+776|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$readed=sp|0;$buffer=sp+8|0;$3=$this;$result=0;$5=$3+1048|0;$13=invoke_iii(HEAP32[(HEAP32[$5>>2]|0)+8>>2]|0,$5|0,$3+20|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($13){label=3;break}else{label=2;break};case 2:$1=0;label=36;break;case 3:$18=invoke_ii(212,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$20=_saveSetjmp($18|0,label,setjmpTable)|0;label=37;break;case 37:if(($20|0)==0){label=4;break}else{label=33;break};case 4:invoke_vii(666,$3+1048|0,4);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$26=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+8>>2]=$26;$30=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+12>>2]=$30;$34=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2148>>2]=$34;$palSize=(1<<HEAP32[$3+2148>>2])*3|0;invoke_vii(666,$3+1048|0,4);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$43=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2156>>2]=$43;$46=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2160>>2]=$46;$49=invoke_ii(698,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2164>>2]=$49;if((HEAP32[$3+8>>2]|0)>0){label=5;break}else{label=32;break};case 5:if((HEAP32[$3+12>>2]|0)>0){label=6;break}else{label=32;break};case 6:if((HEAP32[$3+2148>>2]|0)==1){label=10;break}else{label=7;break};case 7:if((HEAP32[$3+2148>>2]|0)==8){label=10;break}else{label=8;break};case 8:if((HEAP32[$3+2148>>2]|0)==24){label=10;break}else{label=9;break};case 9:if((HEAP32[$3+2148>>2]|0)==32){label=10;break}else{label=32;break};case 10:if((HEAP32[$3+2156>>2]|0)==0){label=15;break}else{label=11;break};case 11:if((HEAP32[$3+2156>>2]|0)==1){label=15;break}else{label=12;break};case 12:if((HEAP32[$3+2156>>2]|0)==2){label=13;break}else{label=14;break};case 13:if((HEAP32[$3+2148>>2]|0)==8){label=15;break}else{label=14;break};case 14:if((HEAP32[$3+2156>>2]|0)==3){label=15;break}else{label=32;break};case 15:if((HEAP32[$3+2160>>2]|0)==0){label=16;break}else{label=17;break};case 16:if((HEAP32[$3+2164>>2]|0)==0){label=20;break}else{label=17;break};case 17:if((HEAP32[$3+2160>>2]|0)==1){label=18;break}else{label=32;break};case 18:if((HEAP32[$3+2164>>2]|0)<=($palSize|0)){label=19;break}else{label=32;break};case 19:if((HEAP32[$3+2148>>2]|0)<=8){label=20;break}else{label=32;break};case 20:_memset($3+1124|0,0,1024);if((HEAP32[$3+2164>>2]|0)!=0){label=21;break}else{label=28;break};case 21:invoke_viiii(32,$3+1048|0,$buffer|0,HEAP32[$3+2164>>2]|0,$readed|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if((HEAP32[$readed>>2]|0)==(HEAP32[$3+2164>>2]|0)){label=22;break}else{label=27;break};case 22:$palSize=(HEAP32[$3+2164>>2]|0)/3|0;$i=0;label=23;break;case 23:if(($i|0)<($palSize|0)){label=24;break}else{label=26;break};case 24:HEAP8[$3+1124+($i<<2)|0]=HEAP8[$buffer+($i+($palSize<<1))|0]|0;HEAP8[$3+1124+($i<<2)+1|0]=HEAP8[$buffer+($i+$palSize)|0]|0;HEAP8[$3+1124+($i<<2)+2|0]=HEAP8[$buffer+$i|0]|0;HEAP8[$3+1124+($i<<2)+3|0]=0;label=25;break;case 25:$i=$i+1|0;label=23;break;case 26:$180=invoke_iii(588,$3+1124|0,HEAP32[$3+2148>>2]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$3+4|0]=$180&1;$186=invoke_ii(142,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2152>>2]=$186;$result=1;label=27;break;case 27:label=31;break;case 28:HEAP8[$3+4|0]=(HEAP32[$3+2148>>2]|0)>8|0;if(HEAP8[$3+4|0]&1){label=30;break}else{label=29;break};case 29:invoke_viii(396,$3+1124|0,HEAP32[$3+2148>>2]|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=30;break;case 30:$208=invoke_ii(142,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2152>>2]=$208;$result=1;label=31;break;case 31:label=32;break;case 32:label=33;break;case 33:if($result&1){label=35;break}else{label=34;break};case 34:HEAP32[$3+2152>>2]=-1;HEAP32[$3+12>>2]=-1;HEAP32[$3+8>>2]=-1;$222=$3+1048|0;invoke_vi(HEAP32[(HEAP32[$222>>2]|0)+12>>2]|0,$222|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=35;break;case 35:$1=$result&1;label=36;break;case 36:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==3){$20=threwValue;label=37}__THREW__=threwValue=0;break}return 0}function __ZN20GrFmtSunRasterReader8ReadDataEPhii($this,$data,$step,$color){$this=$this|0;$data=$data|0;$step=$step|0;$color=$color|0;var $1=0,$3=0,$4=0,$5=0,$buffer=0,$bgr_buffer=0,$gray_palette=0,$result=0,$src=0,$bgr=0,$src_pitch=0,$nch=0,$width3=0,$y=0,$line_end=0,$tsrc=0,$max_count=0,$code=0,$len=0,$len1=0,$line_end1=0,$max_count2=0,$code3=0,$len4=0,$len15=0,$tsrc6=0,$6=0,$7=0,$8=0,$9=0,$10=0,$11=0,$38=0,$46=0,$49=0,$62=0,$65=0,$83=0,$85=0,$93=0,$158=0,$164=0,$177=0,$191=0,$238=0,$306=0,$312=0,$320=0,$325=0,$367=0,$376=0,$381=0,$382=0,$383=0,$395=0,$411=0,$423=0,$457=0,$458=0,$464=0,$465=0,$498=0,$499=0,$509=0,$510=0,$533=0,$542=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+8504|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$bgr_buffer=sp+4096|0;$gray_palette=sp+8192|0;$y=sp+8448|0;$line_end1=sp+8456|0;$6=sp+8464|0;$7=sp+8472|0;$8=sp+8480|0;$9=sp+8488|0;$10=sp+8496|0;$3=$data;$4=$step;$5=$color;$11=$this;$result=0;$src=$buffer|0;$bgr=$bgr_buffer|0;$src_pitch=(((Math_imul(HEAP32[$11+8>>2]|0,HEAP32[$11+2148>>2]|0)|0)+7|0)/8|0)+1&-2;$nch=($5|0)!=0?3:1;$width3=Math_imul(HEAP32[$11+8>>2]|0,$nch)|0;if((HEAP32[$11+2152>>2]|0)<0){label=3;break}else{label=2;break};case 2:$38=invoke_ii(370,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($38){label=4;break}else{label=3;break};case 3:$1=0;label=113;break;case 4:if(($src_pitch+32|0)>4096){label=5;break}else{label=6;break};case 5:$46=$src_pitch+32|0;$49=invoke_ii(814,(($46|0)<0?-1:$46)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$src=$49;label=6;break;case 6:if((((HEAP32[$11+8>>2]|0)*3|0)+32|0)>4096){label=7;break}else{label=8;break};case 7:$62=((HEAP32[$11+8>>2]|0)*3|0)+32|0;$65=invoke_ii(814,(($62|0)<0?-1:$62)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$bgr=$65;label=8;break;case 8:if(($5|0)!=0){label=11;break}else{label=9;break};case 9:if((HEAP32[$11+2160>>2]|0)==1){label=10;break}else{label=11;break};case 10:invoke_viii(476,$11+1124|0,$gray_palette|0,1<<HEAP32[$11+2148>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=11;break;case 11:$83=invoke_ii(212,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$85=_saveSetjmp($83|0,label,setjmpTable)|0;label=114;break;case 114:if(($85|0)==0){label=12;break}else{label=104;break};case 12:invoke_vii(710,$11+1048|0,HEAP32[$11+2152>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$93=HEAP32[$11+2148>>2]|0;if(($93|0)==1){label=13;break}else if(($93|0)==8){label=45;break}else if(($93|0)==24){label=84;break}else if(($93|0)==32){label=94;break}else{label=102;break};case 13:if((HEAP32[$11+2156>>2]|0)!=2){label=14;break}else{label=22;break};case 14:HEAP32[$y>>2]=0;label=15;break;case 15:if((HEAP32[$y>>2]|0)<(HEAP32[$11+12>>2]|0)){label=16;break}else{label=21;break};case 16:invoke_viiii(32,$11+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=17;break}else{label=18;break};case 17:invoke_iiiii(478,$3|0,$src|0,HEAP32[$11+8>>2]|0,$11+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=19;break;case 18:invoke_iiiii(626,$3|0,$src|0,HEAP32[$11+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=19;break;case 19:label=20;break;case 20:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=15;break;case 21:$result=1;label=44;break;case 22:$line_end=$src+(((Math_imul(HEAP32[$11+8>>2]|0,HEAP32[$11+2148>>2]|0)|0)+7|0)/8|0)|0;$tsrc=$src;HEAP32[$y>>2]=0;label=23;break;case 23:$max_count=$line_end-$tsrc|0;$code=0;$len=0;$len1=0;label=24;break;case 24:$158=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$158;if(($code|0)==128){label=25;break}else{label=28;break};case 25:$164=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$len=$164;if(($len|0)!=0){label=26;break}else{label=27;break};case 26:label=30;break;case 27:label=28;break;case 28:HEAP8[$tsrc+$len1|0]=$code&255;label=29;break;case 29:$177=$len1+1|0;$len1=$177;if(($177|0)<($max_count|0)){label=24;break}else{label=30;break};case 30:$tsrc=$tsrc+$len1|0;if(($len|0)>0){label=31;break}else{label=34;break};case 31:$len=$len+1|0;$191=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code=$191;if(($len|0)>($line_end-$tsrc|0)){label=32;break}else{label=33;break};case 32:label=43;break;case 33:_memset($tsrc|0,$code&255|0,$len|0);$tsrc=$tsrc+$len|0;label=34;break;case 34:if($tsrc>>>0>=$line_end>>>0){label=35;break}else{label=41;break};case 35:$tsrc=$src;if(($5|0)!=0){label=36;break}else{label=37;break};case 36:invoke_iiiii(478,$3|0,$src|0,HEAP32[$11+8>>2]|0,$11+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=38;break;case 37:invoke_iiiii(626,$3|0,$src|0,HEAP32[$11+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=38;break;case 38:$3=$3+$4|0;$238=(HEAP32[$y>>2]|0)+1|0;HEAP32[$y>>2]=$238;if(($238|0)>=(HEAP32[$11+12>>2]|0)){label=39;break}else{label=40;break};case 39:label=42;break;case 40:label=41;break;case 41:label=23;break;case 42:$result=1;label=43;break;case 43:label=44;break;case 44:label=103;break;case 45:if((HEAP32[$11+2156>>2]|0)!=2){label=46;break}else{label=54;break};case 46:HEAP32[$y>>2]=0;label=47;break;case 47:if((HEAP32[$y>>2]|0)<(HEAP32[$11+12>>2]|0)){label=48;break}else{label=53;break};case 48:invoke_viiii(32,$11+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=49;break}else{label=50;break};case 49:invoke_iiiii(808,$3|0,$src|0,HEAP32[$11+8>>2]|0,$11+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=51;break;case 50:invoke_iiiii(240,$3|0,$src|0,HEAP32[$11+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=51;break;case 51:label=52;break;case 52:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=47;break;case 53:$result=1;label=83;break;case 54:HEAP32[$line_end1>>2]=$3+$width3;HEAP32[$y>>2]=0;label=55;break;case 55:$max_count2=(HEAP32[$line_end1>>2]|0)-$3|0;$code3=0;$len4=0;$tsrc6=$src;label=56;break;case 56:$306=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code3=$306;if(($code3|0)==128){label=57;break}else{label=60;break};case 57:$312=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$len4=$312;if(($len4|0)!=0){label=58;break}else{label=59;break};case 58:label=62;break;case 59:label=60;break;case 60:$320=$tsrc6;$tsrc6=$320+1|0;HEAP8[$320]=$code3&255;label=61;break;case 61:$325=$max_count2-$nch|0;$max_count2=$325;if(($325|0)>0){label=56;break}else{label=62;break};case 62:$len15=$tsrc6-$src|0;if(($len15|0)>0){label=63;break}else{label=67;break};case 63:if(($5|0)!=0){label=64;break}else{label=65;break};case 64:invoke_iiiii(808,$3|0,$src|0,$len15|0,$11+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=66;break;case 65:invoke_iiiii(240,$3|0,$src|0,$len15|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=66;break;case 66:$3=$3+(Math_imul($len15,$nch)|0)|0;label=67;break;case 67:if(($len4|0)>0){label=68;break}else{label=74;break};case 68:$len4=Math_imul($len4+1|0,$nch)|0;$367=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$code3=$367;if(($5|0)!=0){label=69;break}else{label=70;break};case 69:$376=HEAP32[$11+12>>2]|0;$381=$6;$382=$11+1124+($code3<<2)|0;HEAP8[$381]=HEAP8[$382]|0;HEAP8[$381+1|0]=HEAP8[$382+1|0]|0;HEAP8[$381+2|0]=HEAP8[$382+2|0]|0;HEAP8[$381+3|0]=HEAP8[$382+3|0]|0;$383=invoke_iiiiiiiii(622,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,$376|0,$len4|0,$6|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$383;label=71;break;case 70:$395=invoke_iiiiiiiii(388,$3|0,$line_end1|0,$4|0,$width3|0,$y|0,HEAP32[$11+12>>2]|0,$len4|0,HEAP8[$gray_palette+$code3|0]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$3=$395;label=71;break;case 71:if((HEAP32[$y>>2]|0)>=(HEAP32[$11+12>>2]|0)){label=72;break}else{label=73;break};case 72:label=81;break;case 73:label=74;break;case 74:if(($3|0)==(HEAP32[$line_end1>>2]|0)){label=75;break}else{label=80;break};case 75:$411=invoke_ii(726,$11+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($411|0)!=0){label=76;break}else{label=77;break};case 76:label=82;break;case 77:HEAP32[$line_end1>>2]=(HEAP32[$line_end1>>2]|0)+$4;$3=(HEAP32[$line_end1>>2]|0)+(-$width3|0)|0;$423=(HEAP32[$y>>2]|0)+1|0;HEAP32[$y>>2]=$423;if(($423|0)>=(HEAP32[$11+12>>2]|0)){label=78;break}else{label=79;break};case 78:label=81;break;case 79:label=80;break;case 80:label=55;break;case 81:$result=1;label=82;break;case 82:label=83;break;case 83:label=103;break;case 84:HEAP32[$y>>2]=0;label=85;break;case 85:if((HEAP32[$y>>2]|0)<(HEAP32[$11+12>>2]|0)){label=86;break}else{label=93;break};case 86:invoke_viiii(32,$11+1048|0,(($5|0)!=0?$3:$bgr)|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=87;break}else{label=90;break};case 87:if((HEAP32[$11+2156>>2]|0)==3){label=88;break}else{label=89;break};case 88:$457=$3;$458=$3;invoke_viii(124,$7|0,HEAP32[$11+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(24,$457|0,0,$458|0,0,$7|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=89;break;case 89:label=91;break;case 90:$464=$bgr;$465=$3;invoke_viii(124,$8|0,HEAP32[$11+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(360,$464|0,0,$465|0,0,$8|0,((HEAP32[$11+2156>>2]|0)==3?2:0)|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=91;break;case 91:label=92;break;case 92:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=85;break;case 93:$result=1;label=103;break;case 94:HEAP32[$y>>2]=0;label=95;break;case 95:if((HEAP32[$y>>2]|0)<(HEAP32[$11+12>>2]|0)){label=96;break}else{label=101;break};case 96:invoke_viiii(32,$11+1048|0,$src+3|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=97;break}else{label=98;break};case 97:$498=$src+4|0;$499=$3;invoke_viii(124,$9|0,HEAP32[$11+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(812,$498|0,0,$499|0,0,$9|0,((HEAP32[$11+2156>>2]|0)==3?2:0)|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=99;break;case 98:$509=$src+4|0;$510=$3;invoke_viii(124,$10|0,HEAP32[$11+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(182,$509|0,0,$510|0,0,$10|0,((HEAP32[$11+2156>>2]|0)==3?2:0)|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=99;break;case 99:label=100;break;case 100:HEAP32[$y>>2]=(HEAP32[$y>>2]|0)+1;$3=$3+$4|0;label=95;break;case 101:$result=1;label=103;break;case 102:label=103;break;case 103:label=104;break;case 104:if(($src|0)!=($buffer|0)){label=105;break}else{label=108;break};case 105:$533=$src;if(($533|0)==0){label=107;break}else{label=106;break};case 106:invoke_vi(188,$533|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=107;break;case 107:label=108;break;case 108:if(($bgr|0)!=($bgr_buffer|0)){label=109;break}else{label=112;break};case 109:$542=$bgr;if(($542|0)==0){label=111;break}else{label=110;break};case 110:invoke_vi(188,$542|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=111;break;case 111:label=112;break;case 112:$1=$result&1;label=113;break;case 113:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==11){$85=threwValue;label=114}__THREW__=threwValue=0;break}return 0}function __ZN20GrFmtSunRasterWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN20GrFmtSunRasterWriterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN20GrFmtSunRasterWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtWriterC2EPKc($5,$filename);HEAP32[$5>>2]=18568;__ZN12WMByteStreamC1Ev($5+1028|0);label=2;break;case 2:return;case 3:__ZN11GrFmtWriterD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN20GrFmtSunRasterWriter10WriteImageEPKhiiiii($this,$data,$step,$width,$height,$0,$channels){$this=$this|0;$data=$data|0;$step=$step|0;$width=$width|0;$height=$height|0;$0=$0|0;$channels=$channels|0;var $3=0,$5=0,$6=0,$8=0,$result=0,$fileStep=0,$y=0,$9=0,$16=0,$28=0,$62=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$data;$5=$width;$6=$height;$8=$channels;$9=$this;$result=0;$fileStep=(Math_imul($5,$8)|0)+1&-2;$16=$9+1028|0;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16>>2]|0)+8>>2]&1023]($16,$9+4|0)|0){label=2;break}else{label=7;break};case 2:$28=HEAP32[5754]|0;__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$28,_strlen(HEAP32[5754]|0)|0);__ZN12WMByteStream8PutDWordEi($9+1028|0,$5);__ZN12WMByteStream8PutDWordEi($9+1028|0,$6);__ZN12WMByteStream8PutDWordEi($9+1028|0,$8<<3);__ZN12WMByteStream8PutDWordEi($9+1028|0,Math_imul($fileStep,$6)|0);__ZN12WMByteStream8PutDWordEi($9+1028|0,1);__ZN12WMByteStream8PutDWordEi($9+1028|0,0);__ZN12WMByteStream8PutDWordEi($9+1028|0,0);$y=0;label=3;break;case 3:if(($y|0)<($6|0)){label=4;break}else{label=6;break};case 4:__ZN12WLByteStream8PutBytesEPKvi($9+1028|0,$3,$fileStep);label=5;break;case 5:$y=$y+1|0;$3=$3+$step|0;label=3;break;case 6:$62=$9+1028|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$62>>2]|0)+12>>2]&1023]($62);$result=1;label=7;break;case 7:return $result&1|0}return 0}function __ZN20GrFmtSunRasterWriterD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18568;__ZN11WBaseStreamD2Ev($4+1028|0);label=2;break;case 2:__ZN11GrFmtWriterD2Ev($4);return;case 3:__ZN11GrFmtWriterD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN9GrFmtTiffC2Ev($this){$this=$this|0;var $2=0;$2=$this;__ZN18GrFmtFilterFactoryC2Ev($2);HEAP32[$2>>2]=18408;HEAP32[$2+8>>2]=4;HEAP32[$2+12>>2]=28360;HEAP32[$2+4>>2]=12760;return}function __ZN9GrFmtTiffD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN9GrFmtTiffD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN9GrFmtTiffD2Ev($this){$this=$this|0;__ZN18GrFmtFilterFactoryD2Ev($this);return}function __ZN9GrFmtTiff14CheckSignatureEPKc($this,$signature){$this=$this|0;$signature=$signature|0;var $2=0,$12=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$signature;if((_memcmp($2|0,23008,4)|0)==0){$12=1;label=3;break}else{label=2;break};case 2:$12=(_memcmp($2|0,23e3,4)|0)==0;label=3;break;case 3:return $12|0}return 0}function __ZN9GrFmtTiff9NewReaderEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(2184)|0;$7=$6;__ZN15GrFmtTiffReaderC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN9GrFmtTiff9NewWriterEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $6=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$6=__Znwj(1060)|0;$7=$6;__ZN15GrFmtTiffWriterC2EPKc($7,$filename);label=2;break;case 2:return $7|0;case 3:__ZdlPv($6);label=4;break;case 4:abort()}return 0}function __ZN15GrFmtTiffReaderD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN15GrFmtTiffReaderD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN15GrFmtTiffReader5CloseEv($this){$this=$this|0;var $4=0;$4=$this+1048|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+12>>2]&1023]($4);return}function __ZN15GrFmtTiffReader9GetWordExEv($this){$this=$this|0;var $val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$val=__ZN12RLByteStream7GetWordEv($2+1048|0)|0;if((HEAP32[$2+2180>>2]|0)==19789){label=2;break}else{label=3;break};case 2:$val=$val>>8|($val&255)<<8;label=3;break;case 3:return $val|0}return 0}function __ZN15GrFmtTiffReader10GetDWordExEv($this){$this=$this|0;var $val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$val=__ZN12RLByteStream8GetDWordEv($2+1048|0)|0;if((HEAP32[$2+2180>>2]|0)==19789){label=2;break}else{label=3;break};case 2:$val=$val<<24|($val&65280)<<8|$val>>8&65280|$val>>>24;label=3;break;case 3:return $val|0}return 0}function __ZN15GrFmtTiffReader9ReadTableEii13TiffFieldTypeRPiRi($this,$offset,$count,$fieldType,$array,$arraysize){$this=$this|0;$offset=$offset|0;$count=$count|0;$fieldType=$fieldType|0;$array=$array|0;$arraysize=$arraysize|0;var $1=0,$3=0,$4=0,$5=0,$6=0,$7=0,$i=0,$pos=0,$8=0,$29=0,$49$0=0,$80=0,$96=0,$121=0,$137=0,$154=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$offset;$4=$count;$5=$fieldType;$6=$array;$7=$arraysize;$8=$this;if(($4|0)<0){label=2;break}else{label=3;break};case 2:$1=-125;label=49;break;case 3:if(($5|0)!=3){label=4;break}else{label=7;break};case 4:if(($5|0)!=4){label=5;break}else{label=7;break};case 5:if(($5|0)!=1){label=6;break}else{label=7;break};case 6:$1=-125;label=49;break;case 7:if(($4|0)>(HEAP32[$7>>2]|0)){label=8;break}else{label=13;break};case 8:$29=HEAP32[$6>>2]|0;if(($29|0)==0){label=10;break}else{label=9;break};case 9:__ZdaPv($29);label=10;break;case 10:HEAP32[$7>>2]=((HEAP32[$7>>2]|0)*3|0|0)/2|0;if((HEAP32[$7>>2]|0)<($4|0)){label=11;break}else{label=12;break};case 11:HEAP32[$7>>2]=$4;label=12;break;case 12:$49$0=_llvm_umul_with_overflow_i32(HEAP32[$7>>2]|0,4)|0;HEAP32[$6>>2]=__Znaj(tempRet0?-1:$49$0)|0;label=13;break;case 13:if(($4|0)>1){label=14;break}else{label=47;break};case 14:$pos=__ZN11RBaseStream6GetPosEv($8+1048|0)|0;__ZN11RBaseStream6SetPosEi($8+1048|0,$3);if(($5|0)==4){label=15;break}else{label=27;break};case 15:if((HEAP32[$8+2180>>2]|0)==19789){label=16;break}else{label=21;break};case 16:$i=0;label=17;break;case 17:if(($i|0)<($4|0)){label=18;break}else{label=20;break};case 18:$80=__ZN12RMByteStream8GetDWordEv($8+1048|0)|0;HEAP32[(HEAP32[$6>>2]|0)+($i<<2)>>2]=$80;label=19;break;case 19:$i=$i+1|0;label=17;break;case 20:label=26;break;case 21:$i=0;label=22;break;case 22:if(($i|0)<($4|0)){label=23;break}else{label=25;break};case 23:$96=__ZN12RLByteStream8GetDWordEv($8+1048|0)|0;HEAP32[(HEAP32[$6>>2]|0)+($i<<2)>>2]=$96;label=24;break;case 24:$i=$i+1|0;label=22;break;case 25:label=26;break;case 26:label=46;break;case 27:if(($5|0)==3){label=28;break}else{label=40;break};case 28:if((HEAP32[$8+2180>>2]|0)==19789){label=29;break}else{label=34;break};case 29:$i=0;label=30;break;case 30:if(($i|0)<($4|0)){label=31;break}else{label=33;break};case 31:$121=__ZN12RMByteStream7GetWordEv($8+1048|0)|0;HEAP32[(HEAP32[$6>>2]|0)+($i<<2)>>2]=$121;label=32;break;case 32:$i=$i+1|0;label=30;break;case 33:label=39;break;case 34:$i=0;label=35;break;case 35:if(($i|0)<($4|0)){label=36;break}else{label=38;break};case 36:$137=__ZN12RLByteStream7GetWordEv($8+1048|0)|0;HEAP32[(HEAP32[$6>>2]|0)+($i<<2)>>2]=$137;label=37;break;case 37:$i=$i+1|0;label=35;break;case 38:label=39;break;case 39:label=45;break;case 40:$i=0;label=41;break;case 41:if(($i|0)<($4|0)){label=42;break}else{label=44;break};case 42:$154=__ZN12RLByteStream7GetByteEv($8+1048|0)|0;HEAP32[(HEAP32[$6>>2]|0)+($i<<2)>>2]=$154;label=43;break;case 43:$i=$i+1|0;label=41;break;case 44:label=45;break;case 45:label=46;break;case 46:__ZN11RBaseStream6SetPosEi($8+1048|0,$pos);label=48;break;case 47:HEAP32[HEAP32[$6>>2]>>2]=$3;label=48;break;case 48:$1=0;label=49;break;case 49:return $1|0}return 0}function __ZN15GrFmtTiffReaderC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtReaderC2EPKc($5,$filename);HEAP32[$5>>2]=18744;__ZN12RLByteStreamC1Ev($5+1048|0);label=2;break;case 2:HEAP32[$5+2160>>2]=0;HEAP32[$5+2164>>2]=0;HEAP32[$5+2168>>2]=-1;HEAP32[$5+2156>>2]=0;HEAP32[$5+2152>>2]=0;return;case 3:__ZN11GrFmtReaderD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN15GrFmtTiffReaderD2Ev($this){$this=$this|0;var $2=0,$3=0,$4=0,$12=0,$18=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18744;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+16>>2]&1023]($4);label=2;break;case 2:$12=HEAP32[$4+2160>>2]|0;if(($12|0)==0){label=4;break}else{label=3;break};case 3:__ZdaPv($12);label=4;break;case 4:$18=HEAP32[$4+2152>>2]|0;if(($18|0)==0){label=6;break}else{label=5;break};case 5:__ZdaPv($18);label=6;break;case 6:__ZN11RBaseStreamD2Ev($4+1048|0);label=7;break;case 7:__ZN11GrFmtReaderD2Ev($4);return;case 8:$2=0;$3=0;__ZN11RBaseStreamD2Ev($4+1048|0);label=10;break;case 9:$2=0;$3=0;label=11;break;case 10:label=11;break;case 11:__ZN11GrFmtReaderD2Ev($4);label=12;break;case 12:label=13;break;case 13:abort();case 14:__ZSt9terminatev()}}function __ZN15GrFmtTiffReader10ReadHeaderEv($this){$this=$this|0;var $1=0,$result=0,$photometric=0,$channels=0,$pal_length=0,$bpp_arr=0,$i=0,$j=0,$tag=0,$fieldType=0,$count1=0,$value=0,$bpp_arr_ref=0,$3=0,$5=0,$13=0,$28=0,$30=0,$34=0,$38=0,$42=0,$48=0,$49=0,$50=0,$51=0,$79=0,$97=0,$151=0,$189=0,$294=0,$353=0,$396=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$bpp_arr=sp|0;$count1=sp+16|0;$bpp_arr_ref=sp+24|0;$3=$this;$result=0;$photometric=-1;$channels=1;$pal_length=-1;$5=$3+1048|0;$13=invoke_iii(HEAP32[(HEAP32[$5>>2]|0)+8>>2]|0,$5|0,$3+20|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($13){label=3;break}else{label=2;break};case 2:$1=0;label=102;break;case 3:HEAP32[$3+8>>2]=-1;HEAP32[$3+12>>2]=-1;HEAP32[$3+2168>>2]=-1;HEAP32[$3+2148>>2]=1;HEAP32[$3+2176>>2]=1;HEAP32[$3+2172>>2]=-1;HEAP8[$3+4|0]=0;$28=invoke_ii(212,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$30=_saveSetjmp($28|0,label,setjmpTable)|0;label=103;break;case 103:if(($30|0)==0){label=4;break}else{label=99;break};case 4:$34=invoke_ii(430,$3+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$3+2180>>2]=$34;invoke_vii(666,$3+1048|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$38=invoke_ii(598,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_vii(710,$3+1048|0,$38|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$42=invoke_ii(176,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$i=0;label=5;break;case 5:if(($i|0)<($42|0)){label=6;break}else{label=64;break};case 6:$48=invoke_ii(176,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$tag=$48;$49=invoke_ii(176,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$fieldType=$49;$50=invoke_ii(598,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP32[$count1>>2]=$50;$51=invoke_ii(598,$3|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$value=$51;if((HEAP32[$count1>>2]|0)==1){label=7;break}else{label=15;break};case 7:if((HEAP32[$3+2180>>2]|0)==19789){label=8;break}else{label=14;break};case 8:if(($fieldType|0)==3){label=9;break}else{label=10;break};case 9:$value=$value>>>16;label=13;break;case 10:if(($fieldType|0)==1){label=11;break}else{label=12;break};case 11:$value=$value>>>24;label=12;break;case 12:label=13;break;case 13:label=14;break;case 14:$value=$value&HEAP32[20920+($fieldType<<2)>>2];label=15;break;case 15:$79=$tag;if(($79|0)==256){label=16;break}else if(($79|0)==257){label=17;break}else if(($79|0)==258){label=18;break}else if(($79|0)==259){label=29;break}else if(($79|0)==262){label=34;break}else if(($79|0)==273){label=37;break}else if(($79|0)==277){label=40;break}else if(($79|0)==278){label=45;break}else if(($79|0)==284){label=46;break}else if(($79|0)==320){label=49;break}else if(($79|0)==279){label=61;break}else{label=62;break};case 16:HEAP32[$3+8>>2]=$value;label=62;break;case 17:HEAP32[$3+12>>2]=$value;label=62;break;case 18:HEAP32[$bpp_arr_ref>>2]=$bpp_arr;if((HEAP32[$count1>>2]|0)>4){label=19;break}else{label=20;break};case 19:label=98;break;case 20:$97=invoke_iiiiiii(94,$3|0,$value|0,HEAP32[$count1>>2]|0,$fieldType|0,$bpp_arr_ref|0,$count1|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($97|0)<0){label=21;break}else{label=22;break};case 21:label=98;break;case 22:$j=1;label=23;break;case 23:if(($j|0)<(HEAP32[$count1>>2]|0)){label=24;break}else{label=28;break};case 24:if((HEAP32[$bpp_arr+($j<<2)>>2]|0)!=(HEAP32[$bpp_arr>>2]|0)){label=25;break}else{label=26;break};case 25:label=98;break;case 26:label=27;break;case 27:$j=$j+1|0;label=23;break;case 28:HEAP32[$3+2148>>2]=HEAP32[$bpp_arr>>2];label=62;break;case 29:HEAP32[$3+2176>>2]=$value;if((HEAP32[$3+2176>>2]|0)!=1){label=30;break}else{label=33;break};case 30:if((HEAP32[$3+2176>>2]|0)!=2){label=31;break}else{label=33;break};case 31:if((HEAP32[$3+2176>>2]|0)!=32773){label=32;break}else{label=33;break};case 32:label=98;break;case 33:label=62;break;case 34:$photometric=$value;if($photometric>>>0>3){label=35;break}else{label=36;break};case 35:label=98;break;case 36:label=62;break;case 37:HEAP32[$3+2168>>2]=HEAP32[$count1>>2];$151=invoke_iiiiiii(94,$3|0,$value|0,HEAP32[$count1>>2]|0,$fieldType|0,$3+2160|0,$3+2164|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($151|0)<0){label=38;break}else{label=39;break};case 38:label=98;break;case 39:label=62;break;case 40:$channels=$value;if(($channels|0)!=1){label=41;break}else{label=44;break};case 41:if(($channels|0)!=3){label=42;break}else{label=44;break};case 42:if(($channels|0)!=4){label=43;break}else{label=44;break};case 43:label=98;break;case 44:label=62;break;case 45:HEAP32[$3+2172>>2]=$value;label=62;break;case 46:if(($value|0)!=1){label=47;break}else{label=48;break};case 47:label=98;break;case 48:label=62;break;case 49:if(($fieldType|0)!=3){label=51;break}else{label=50;break};case 50:if((HEAP32[$count1>>2]|0)<2){label=51;break}else{label=52;break};case 51:label=98;break;case 52:$189=invoke_iiiiiii(94,$3|0,$value|0,HEAP32[$count1>>2]|0,$fieldType|0,$3+2152|0,$3+2156|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($189|0)<0){label=53;break}else{label=54;break};case 53:label=98;break;case 54:$pal_length=(HEAP32[$count1>>2]|0)/3|0;if(($pal_length|0)>256){label=55;break}else{label=56;break};case 55:label=98;break;case 56:$i=0;label=57;break;case 57:if(($i|0)<($pal_length|0)){label=58;break}else{label=60;break};case 58:HEAP8[$3+1124+($i<<2)+2|0]=HEAP32[(HEAP32[$3+2152>>2]|0)+($i<<2)>>2]>>8&255;HEAP8[$3+1124+($i<<2)+1|0]=HEAP32[(HEAP32[$3+2152>>2]|0)+($i+$pal_length<<2)>>2]>>8&255;HEAP8[$3+1124+($i<<2)|0]=HEAP32[(HEAP32[$3+2152>>2]|0)+($i+($pal_length<<1)<<2)>>2]>>8&255;label=59;break;case 59:$i=$i+1|0;label=57;break;case 60:label=62;break;case 61:label=62;break;case 62:label=63;break;case 63:$i=$i+1|0;label=5;break;case 64:if((HEAP32[$3+2168>>2]|0)==1){label=65;break}else{label=67;break};case 65:if((HEAP32[$3+2172>>2]|0)==-1){label=66;break}else{label=67;break};case 66:HEAP32[$3+2172>>2]=HEAP32[$3+12>>2];label=67;break;case 67:if((HEAP32[$3+8>>2]|0)>0){label=68;break}else{label=97;break};case 68:if((HEAP32[$3+12>>2]|0)>0){label=69;break}else{label=97;break};case 69:if((HEAP32[$3+2168>>2]|0)>0){label=70;break}else{label=97;break};case 70:if((((HEAP32[$3+12>>2]|0)+(HEAP32[$3+2172>>2]|0)-1|0)/(HEAP32[$3+2172>>2]|0)|0|0)==(HEAP32[$3+2168>>2]|0)){label=71;break}else{label=97;break};case 71:$294=HEAP32[$3+2148>>2]|0;if(($294|0)==1){label=72;break}else if(($294|0)==4|($294|0)==8){label=77;break}else{label=95;break};case 72:if(($photometric|0)==0){label=75;break}else{label=73;break};case 73:if(($photometric|0)==1){label=74;break}else{label=76;break};case 74:if(($channels|0)==1){label=75;break}else{label=76;break};case 75:invoke_viii(396,$3+1124|0,HEAP32[$3+2148>>2]|0,($photometric|0)==0|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$result=1;HEAP8[$3+4|0]=0;label=76;break;case 76:label=96;break;case 77:if(($photometric|0)==0){label=81;break}else{label=78;break};case 78:if(($photometric|0)==1){label=81;break}else{label=79;break};case 79:if(($photometric|0)==3){label=80;break}else{label=87;break};case 80:if(($pal_length|0)==(1<<HEAP32[$3+2148>>2]|0)){label=81;break}else{label=87;break};case 81:if((HEAP32[$3+2176>>2]|0)!=2){label=82;break}else{label=87;break};case 82:if(($channels|0)==1){label=83;break}else{label=87;break};case 83:if(($pal_length|0)<0){label=84;break}else{label=85;break};case 84:invoke_viii(396,$3+1124|0,HEAP32[$3+2148>>2]|0,($photometric|0)==0|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$3+4|0]=0;label=86;break;case 85:$353=invoke_iii(588,$3+1124|0,HEAP32[$3+2148>>2]|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;HEAP8[$3+4|0]=$353&1;label=86;break;case 86:$result=1;label=94;break;case 87:if(($photometric|0)==2){label=88;break}else{label=93;break};case 88:if(($pal_length|0)<0){label=89;break}else{label=93;break};case 89:if(($channels|0)==3){label=91;break}else{label=90;break};case 90:if(($channels|0)==4){label=91;break}else{label=93;break};case 91:if((HEAP32[$3+2176>>2]|0)==1){label=92;break}else{label=93;break};case 92:HEAP32[$3+2148>>2]=$channels<<3;HEAP8[$3+4|0]=1;$result=1;label=93;break;case 93:label=94;break;case 94:label=96;break;case 95:label=98;break;case 96:label=97;break;case 97:label=98;break;case 98:label=99;break;case 99:if($result&1){label=101;break}else{label=100;break};case 100:HEAP32[$3+2168>>2]=-1;HEAP32[$3+12>>2]=-1;HEAP32[$3+8>>2]=-1;$396=$3+1048|0;invoke_vi(HEAP32[(HEAP32[$396>>2]|0)+12>>2]|0,$396|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=101;break;case 101:$1=$result&1;label=102;break;case 102:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==3){$30=threwValue;label=103}__THREW__=threwValue=0;break}return 0}function __ZN15GrFmtTiffReader8ReadDataEPhii($this,$data,$step,$color){$this=$this|0;$data=$data|0;$step=$step|0;$color=$color|0;var $1=0,$3=0,$4=0,$5=0,$buffer=0,$gray_palette=0,$result=0,$src=0,$src_pitch=0,$y=0,$s=0,$y_limit=0,$6=0,$7=0,$8=0,$9=0,$10=0,$26=0,$34=0,$37=0,$56=0,$58=0,$105=0,$134=0,$135=0,$140=0,$141=0,$149=0,$175=0,$176=0,$181=0,$182=0,$208=0,label=0,sp=0,setjmpLabel=0,setjmpTable=0;sp=STACKTOP;STACKTOP=STACKTOP+4384|0;label=1;setjmpLabel=0;setjmpTable=STACKTOP;STACKTOP=STACKTOP+168|0;HEAP32[setjmpTable>>2]=0;while(1)switch(label|0){case 1:$buffer=sp|0;$gray_palette=sp+4096|0;$6=sp+4352|0;$7=sp+4360|0;$8=sp+4368|0;$9=sp+4376|0;$3=$data;$4=$step;$5=$color;$10=$this;$result=0;$src=$buffer|0;$src_pitch=((Math_imul(HEAP32[$10+8>>2]|0,HEAP32[$10+2148>>2]|0)|0)+7|0)/8|0;$y=0;if((HEAP32[$10+2168>>2]|0)<0){label=3;break}else{label=2;break};case 2:$26=invoke_ii(370,$10+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if($26){label=4;break}else{label=3;break};case 3:$1=0;label=48;break;case 4:if(($src_pitch+32|0)>4096){label=5;break}else{label=6;break};case 5:$34=$src_pitch+32|0;$37=invoke_ii(814,(($34|0)<0?-1:$34)|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$src=$37;label=6;break;case 6:if(($5|0)!=0){label=10;break}else{label=7;break};case 7:if((HEAP32[$10+2148>>2]|0)<=8){label=8;break}else{label=9;break};case 8:invoke_viii(476,$10+1124|0,$gray_palette|0,1<<HEAP32[$10+2148>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=9;break;case 9:label=10;break;case 10:$56=invoke_ii(212,$10+1048|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;$58=_saveSetjmp($56|0,label,setjmpTable)|0;label=49;break;case 49:if(($58|0)==0){label=11;break}else{label=43;break};case 11:$s=0;label=12;break;case 12:if(($s|0)<(HEAP32[$10+2168>>2]|0)){label=13;break}else{label=42;break};case 13:$y_limit=HEAP32[$10+2172>>2]|0;$y_limit=$y_limit+$y|0;if(($y_limit|0)>(HEAP32[$10+12>>2]|0)){label=14;break}else{label=15;break};case 14:$y_limit=HEAP32[$10+12>>2]|0;label=15;break;case 15:invoke_vii(710,$10+1048|0,HEAP32[(HEAP32[$10+2160>>2]|0)+($s<<2)>>2]|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if((HEAP32[$10+2176>>2]|0)==1){label=16;break}else{label=38;break};case 16:label=17;break;case 17:if(($y|0)<($y_limit|0)){label=18;break}else{label=37;break};case 18:invoke_viiii(32,$10+1048|0,$src|0,$src_pitch|0,0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;if(($5|0)!=0){label=19;break}else{label=27;break};case 19:$105=HEAP32[$10+2148>>2]|0;if(($105|0)==1){label=20;break}else if(($105|0)==4){label=21;break}else if(($105|0)==8){label=22;break}else if(($105|0)==24){label=23;break}else if(($105|0)==32){label=24;break}else{label=25;break};case 20:invoke_iiiii(478,$3|0,$src|0,HEAP32[$10+8>>2]|0,$10+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 21:invoke_iiiii(346,$3|0,$src|0,HEAP32[$10+8>>2]|0,$10+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 22:invoke_iiiii(808,$3|0,$src|0,HEAP32[$10+8>>2]|0,$10+1124|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 23:$134=$src;$135=$3;invoke_viii(124,$6|0,HEAP32[$10+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiii(24,$134|0,0,$135|0,0,$6|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 24:$140=$src;$141=$3;invoke_viii(124,$7|0,HEAP32[$10+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(812,$140|0,0,$141|0,0,$7|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=26;break;case 25:label=40;break;case 26:label=35;break;case 27:$149=HEAP32[$10+2148>>2]|0;if(($149|0)==1){label=28;break}else if(($149|0)==4){label=29;break}else if(($149|0)==8){label=30;break}else if(($149|0)==24){label=31;break}else if(($149|0)==32){label=32;break}else{label=33;break};case 28:invoke_iiiii(626,$3|0,$src|0,HEAP32[$10+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 29:invoke_iiiii(730,$3|0,$src|0,HEAP32[$10+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 30:invoke_iiiii(240,$3|0,$src|0,HEAP32[$10+8>>2]|0,$gray_palette|0)|0;if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 31:$175=$src;$176=$3;invoke_viii(124,$8|0,HEAP32[$10+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(360,$175|0,0,$176|0,0,$8|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 32:$181=$src;$182=$3;invoke_viii(124,$9|0,HEAP32[$10+8>>2]|0,1);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;invoke_viiiiii(182,$181|0,0,$182|0,0,$9|0,2);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=34;break;case 33:label=40;break;case 34:label=35;break;case 35:label=36;break;case 36:$y=$y+1|0;$3=$3+$4|0;label=17;break;case 37:label=39;break;case 38:label=39;break;case 39:$result=1;label=40;break;case 40:label=41;break;case 41:$s=$s+1|0;label=12;break;case 42:label=43;break;case 43:if(($src|0)!=($buffer|0)){label=44;break}else{label=47;break};case 44:$208=$src;if(($208|0)==0){label=46;break}else{label=45;break};case 45:invoke_vi(188,$208|0);if((__THREW__|0)!=0&(threwValue|0)!=0){setjmpLabel=_testSetjmp(HEAP32[__THREW__>>2]|0,setjmpTable)|0;if((setjmpLabel|0)>0){label=-1;break}else return 0}__THREW__=threwValue=0;label=46;break;case 46:label=47;break;case 47:$1=$result&1;label=48;break;case 48:STACKTOP=sp;return $1|0;case-1:if((setjmpLabel|0)==10){$58=threwValue;label=49}__THREW__=threwValue=0;break}return 0}function __ZN15GrFmtTiffWriterD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN15GrFmtTiffWriterD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($this,$tag,$fieldType,$count,$value){$this=$this|0;$tag=$tag|0;$fieldType=$fieldType|0;$count=$count|0;$value=$value|0;var $6=0;$6=$this;__ZN12WLByteStream7PutWordEi($6+1028|0,$tag);__ZN12WLByteStream7PutWordEi($6+1028|0,$fieldType);__ZN12WLByteStream8PutDWordEi($6+1028|0,$count);__ZN12WLByteStream8PutDWordEi($6+1028|0,$value);return}function __ZN15GrFmtTiffWriterC2EPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $5=0,label=0;label=1;while(1)switch(label|0){case 1:$5=$this;__ZN11GrFmtWriterC2EPKc($5,$filename);HEAP32[$5>>2]=18712;__ZN12WLByteStreamC1Ev($5+1028|0);label=2;break;case 2:return;case 3:__ZN11GrFmtWriterD2Ev($5);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __ZN15GrFmtTiffWriterD2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;HEAP32[$4>>2]=18712;__ZN11WBaseStreamD2Ev($4+1028|0);label=2;break;case 2:__ZN11GrFmtWriterD2Ev($4);return;case 3:__ZN11GrFmtWriterD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __Z13bsIsBigEndianv(){return(HEAP32[2034]&255|0)!=0|0}function __Z12bsBSwapBlockPhS_($start,$end){$start=$start|0;$end=$end|0;var $1=0,$data=0,$i=0,$temp=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$start;$data=$1;$i=0;label=2;break;case 2:if(($i|0)<(($end-$1+3|0)/4|0|0)){label=3;break}else{label=5;break};case 3:$temp=HEAP32[$data+($i<<2)>>2]|0;$temp=$temp<<24|($temp&65280)<<8|$temp>>>8&65280|$temp>>>24;HEAP32[$data+($i<<2)>>2]=$temp;label=4;break;case 4:$i=$i+1|0;label=2;break;case 5:return}}function __ZN11RBaseStream8IsOpenedEv($this){$this=$this|0;return HEAP8[$this+73|0]&1|0}function __ZN11RBaseStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=19520;HEAP32[$2+52>>2]=0;HEAP32[$2+48>>2]=0;HEAP32[$2+44>>2]=0;HEAP32[$2+56>>2]=0;HEAP32[$2+64>>2]=32768;HEAP32[$2+60>>2]=4;HEAP8[$2+73|0]=0;HEAP8[$2+72|0]=0;return}function __ZN11RBaseStream6SetPosEi($this,$pos){$this=$this|0;$pos=$pos|0;var $2=0,$offset=0,$block_pos=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$pos;$3=$this;$offset=$2&(HEAP32[$3+64>>2]|0)-1;$block_pos=$2-$offset|0;if((HEAP32[$3+52>>2]|0)>>>0<(HEAP32[$3+48>>2]|0)>>>0){label=2;break}else{label=4;break};case 2:if(($block_pos|0)==((HEAP32[$3+68>>2]|0)-(HEAP32[$3+64>>2]|0)|0)){label=3;break}else{label=4;break};case 3:HEAP32[$3+52>>2]=(HEAP32[$3+44>>2]|0)+$offset;label=5;break;case 4:HEAP32[$3+68>>2]=$block_pos;HEAP32[$3+52>>2]=(HEAP32[$3+44>>2]|0)+(HEAP32[$3+64>>2]|0)+$offset;label=5;break;case 5:return}}function __ZN11RBaseStream6GetPosEv($this){$this=$this|0;var $2=0;$2=$this;return(HEAP32[$2+68>>2]|0)-(HEAP32[$2+64>>2]|0)+((HEAP32[$2+52>>2]|0)-(HEAP32[$2+44>>2]|0))|0}function __ZN11RBaseStream4SkipEi($this,$bytes){$this=$this|0;$bytes=$bytes|0;var $5=0;$5=$this+52|0;HEAP32[$5>>2]=(HEAP32[$5>>2]|0)+$bytes;return}function __ZN11RBaseStream6JmpBufEv($this){$this=$this|0;var $2=0;$2=$this;HEAP8[$2+72|0]=1;return $2+4|0}function __ZN15GrFmtTiffWriter10WriteImageEPKhiiiii($this,$data,$step,$width,$height,$0,$channels){$this=$this|0;$data=$data|0;$step=$step|0;$width=$width|0;$height=$height|0;$0=$0|0;$channels=$channels|0;var $3=0,$5=0,$6=0,$8=0,$result=0,$fileStep=0,$rowsPerStrip=0,$i=0,$stripCount=0,$directoryOffset=0,$stripOffsets=0,$stripCounts=0,$buffer=0,$stripOffsetsOffset=0,$stripCountsOffset=0,$bitsPerSample=0,$y=0,$limit=0,$9=0,$10=0,$f=0,$11=0,$16=0,$45$0=0,$52$0=0,$59=0,$114=0,$125=0,$255=0,$290=0,$295=0,$300=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;while(1)switch(label|0){case 1:$9=sp|0;$10=sp+8|0;$3=$data;$5=$width;$6=$height;$8=$channels;$11=$this;$result=0;$fileStep=Math_imul($5,$8)|0;$16=$11+1028|0;if(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16>>2]|0)+8>>2]&1023]($16,$11+4|0)|0){label=2;break}else{label=53;break};case 2:$rowsPerStrip=8192/($fileStep|0)|0;if(($rowsPerStrip|0)<1){label=3;break}else{label=4;break};case 3:$rowsPerStrip=1;label=4;break;case 4:if(($rowsPerStrip|0)>($6|0)){label=5;break}else{label=6;break};case 5:$rowsPerStrip=$6;label=6;break;case 6:$stripCount=($6+$rowsPerStrip-1|0)/($rowsPerStrip|0)|0;$directoryOffset=0;$45$0=_llvm_umul_with_overflow_i32($stripCount|0,4)|0;$stripOffsets=__Znaj(tempRet0?-1:$45$0)|0;$52$0=_llvm_umul_with_overflow_i32($stripCount|0,2)|0;$stripCounts=__Znaj(tempRet0?-1:$52$0)|0;$59=$fileStep+32|0;$buffer=__Znaj(($59|0)<0?-1:$59)|0;$stripOffsetsOffset=0;$stripCountsOffset=0;$bitsPerSample=8;$y=0;__ZN12WLByteStream8PutBytesEPKvi($11+1028|0,23008,4);__ZN12WLByteStream8PutDWordEi($11+1028|0,$directoryOffset);$i=0;label=7;break;case 7:if(($i|0)<($stripCount|0)){label=8;break}else{label=24;break};case 8:$limit=$y+$rowsPerStrip|0;if(($limit|0)>($6|0)){label=9;break}else{label=10;break};case 9:$limit=$6;label=10;break;case 10:HEAP32[$stripOffsets+($i<<2)>>2]=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;label=11;break;case 11:if(($y|0)<($limit|0)){label=12;break}else{label=22;break};case 12:if(($8|0)==3){label=13;break}else{label=14;break};case 13:__Z6cvSizeii($9,$5,1);__Z21icvCvt_BGR2RGB_8u_C3RPKhiPhi6CvSize($3,0,$buffer,0,$9);label=17;break;case 14:if(($8|0)==4){label=15;break}else{label=16;break};case 15:__Z6cvSizeii($10,$5,1);__Z23icvCvt_BGRA2RGBA_8u_C4RPKhiPhi6CvSize($3,0,$buffer,0,$10);label=16;break;case 16:label=17;break;case 17:if(($8|0)>1){label=18;break}else{label=19;break};case 18:$114=$buffer;label=20;break;case 19:$114=$3;label=20;break;case 20:__ZN12WLByteStream8PutBytesEPKvi($11+1028|0,$114,$fileStep);label=21;break;case 21:$y=$y+1|0;$3=$3+$step|0;label=11;break;case 22:$125=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;HEAP16[$stripCounts+($i<<1)>>1]=$125-(HEAP32[$stripOffsets+($i<<2)>>2]|0)&65535;label=23;break;case 23:$i=$i+1|0;label=7;break;case 24:if(($stripCount|0)>2){label=25;break}else{label=34;break};case 25:$stripOffsetsOffset=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;$i=0;label=26;break;case 26:if(($i|0)<($stripCount|0)){label=27;break}else{label=29;break};case 27:__ZN12WLByteStream8PutDWordEi($11+1028|0,HEAP32[$stripOffsets+($i<<2)>>2]|0);label=28;break;case 28:$i=$i+1|0;label=26;break;case 29:$stripCountsOffset=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;$i=0;label=30;break;case 30:if(($i|0)<($stripCount|0)){label=31;break}else{label=33;break};case 31:__ZN12WLByteStream7PutWordEi($11+1028|0,HEAP16[$stripCounts+($i<<1)>>1]|0);label=32;break;case 32:$i=$i+1|0;label=30;break;case 33:label=42;break;case 34:if(($stripCount|0)==2){label=35;break}else{label=40;break};case 35:$stripOffsetsOffset=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;$i=0;label=36;break;case 36:if(($i|0)<($stripCount|0)){label=37;break}else{label=39;break};case 37:__ZN12WLByteStream8PutDWordEi($11+1028|0,HEAP32[$stripOffsets+($i<<2)>>2]|0);label=38;break;case 38:$i=$i+1|0;label=36;break;case 39:$stripCountsOffset=(HEAP16[$stripCounts>>1]|0)+(HEAP16[$stripCounts+2>>1]<<16)|0;label=41;break;case 40:$stripOffsetsOffset=HEAP32[$stripOffsets>>2]|0;$stripCountsOffset=HEAP16[$stripCounts>>1]|0;label=41;break;case 41:label=42;break;case 42:if(($8|0)>1){label=43;break}else{label=46;break};case 43:$bitsPerSample=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;__ZN12WLByteStream7PutWordEi($11+1028|0,8);__ZN12WLByteStream7PutWordEi($11+1028|0,8);__ZN12WLByteStream7PutWordEi($11+1028|0,8);if(($8|0)==4){label=44;break}else{label=45;break};case 44:__ZN12WLByteStream7PutWordEi($11+1028|0,8);label=45;break;case 45:label=46;break;case 46:$directoryOffset=__ZN11WBaseStream6GetPosEv($11+1028|0)|0;__ZN12WLByteStream7PutWordEi($11+1028|0,9);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,256,4,1,$5);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,257,4,1,$6);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,258,3,$8,$bitsPerSample);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,259,4,1,1);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,262,3,1,($8|0)>1?2:1);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,273,4,$stripCount,$stripOffsetsOffset);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,277,3,1,$8);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,278,4,1,$rowsPerStrip);__ZN15GrFmtTiffWriter8WriteTagE7TiffTag13TiffFieldTypeii($11,279,($stripCount|0)>1?3:4,$stripCount,$stripCountsOffset);__ZN12WLByteStream8PutDWordEi($11+1028|0,0);$255=$11+1028|0;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$255>>2]|0)+12>>2]&1023]($255);$f=_fopen($11+4|0,11840)|0;HEAP8[$buffer|0]=$directoryOffset&255;HEAP8[$buffer+1|0]=$directoryOffset>>8&255;HEAP8[$buffer+2|0]=$directoryOffset>>16&255;HEAP8[$buffer+3|0]=$directoryOffset>>24&255;_fseek($f|0,4,0)|0;_fwrite($buffer|0,1,4,$f|0)|0;_fclose($f|0)|0;$290=$stripOffsets;if(($290|0)==0){label=48;break}else{label=47;break};case 47:__ZdaPv($290);label=48;break;case 48:$295=$stripCounts;if(($295|0)==0){label=50;break}else{label=49;break};case 49:__ZdaPv($295);label=50;break;case 50:$300=$buffer;if(($300|0)==0){label=52;break}else{label=51;break};case 51:__ZdaPv($300);label=52;break;case 52:$result=1;label=53;break;case 53:STACKTOP=sp;return $result&1|0}return 0}function __ZN11RBaseStream8AllocateEv($this){$this=$this|0;var $2=0,$11=0,$18=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+44>>2]|0)!=0){label=3;break}else{label=2;break};case 2:$11=(HEAP32[$2+64>>2]|0)+(HEAP32[$2+60>>2]|0)|0;HEAP32[$2+44>>2]=__Znaj(($11|0)<0?-1:$11)|0;$18=$2+44|0;HEAP32[$18>>2]=(HEAP32[$18>>2]|0)+(HEAP32[$2+60>>2]|0);label=3;break;case 3:HEAP32[$2+48>>2]=(HEAP32[$2+44>>2]|0)+(HEAP32[$2+64>>2]|0);HEAP32[$2+52>>2]=HEAP32[$2+48>>2];return}}function __ZN11RBaseStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11RBaseStreamD2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=19520;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+12>>2]&1023]($2);FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+20>>2]&1023]($2);return}function __ZN11RBaseStream9ReadBlockEv($this){$this=$this|0;var $readed=0,$2=0,$42=0,$48=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+44>>2]|0)!=0){label=2;break}else{label=3;break};case 2:_memcpy((HEAP32[$2+44>>2]|0)+(-(HEAP32[$2+60>>2]|0)|0)|0,(HEAP32[$2+48>>2]|0)+(-(HEAP32[$2+60>>2]|0)|0)|0,HEAP32[$2+60>>2]|0)|0;label=3;break;case 3:__ZN11RBaseStream6SetPosEi($2,__ZN11RBaseStream6GetPosEv($2)|0);_fseek(HEAP32[$2+56>>2]|0,HEAP32[$2+68>>2]|0,0)|0;$readed=_fread(HEAP32[$2+44>>2]|0,1,HEAP32[$2+64>>2]|0,HEAP32[$2+56>>2]|0)|0;HEAP32[$2+48>>2]=(HEAP32[$2+44>>2]|0)+$readed;$42=$2+52|0;HEAP32[$42>>2]=(HEAP32[$42>>2]|0)+(-(HEAP32[$2+64>>2]|0)|0);$48=$2+68|0;HEAP32[$48>>2]=(HEAP32[$48>>2]|0)+(HEAP32[$2+64>>2]|0);if(($readed|0)==0){label=5;break}else{label=4;break};case 4:if((HEAP32[$2+52>>2]|0)>>>0>=(HEAP32[$2+48>>2]|0)>>>0){label=5;break}else{label=8;break};case 5:if(HEAP8[$2+72|0]&1){label=6;break}else{label=7;break};case 6:_longjmp($2+4|0,-123|0);label=7;break;case 7:label=8;break;case 8:return}}function __ZN11RBaseStream4OpenEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+12>>2]&1023]($3);FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+24>>2]&1023]($3);HEAP32[$3+56>>2]=_fopen($filename|0,12640)|0;if((HEAP32[$3+56>>2]|0)!=0){label=2;break}else{label=3;break};case 2:HEAP8[$3+73|0]=1;__ZN11RBaseStream6SetPosEi($3,0);label=3;break;case 3:return(HEAP32[$3+56>>2]|0)!=0|0}return 0}function __ZN11RBaseStream5CloseEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+56>>2]|0)!=0){label=2;break}else{label=3;break};case 2:_fclose(HEAP32[$2+56>>2]|0)|0;HEAP32[$2+56>>2]=0;label=3;break;case 3:HEAP8[$2+73|0]=0;return}}function __ZN11RBaseStream7ReleaseEv($this){$this=$this|0;var $2=0,$12=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+44>>2]|0)!=0){label=2;break}else{label=5;break};case 2:$12=(HEAP32[$2+44>>2]|0)+(-(HEAP32[$2+60>>2]|0)|0)|0;if(($12|0)==0){label=4;break}else{label=3;break};case 3:__ZdaPv($12);label=4;break;case 4:label=5;break;case 5:HEAP32[$2+52>>2]=0;HEAP32[$2+48>>2]=0;HEAP32[$2+44>>2]=0;return}}function __ZN11RMBitStream4MoveEi($this,$shift){$this=$this|0;$shift=$shift|0;var $new_bit_idx=0,$3=0,$13=0;$3=$this;$new_bit_idx=(HEAP32[$3+76>>2]|0)-$shift|0;$13=$3+52|0;HEAP32[$13>>2]=(HEAP32[$13>>2]|0)+(-($new_bit_idx>>5<<2)|0);HEAP32[$3+76>>2]=$new_bit_idx&31;return}function __ZN12RLByteStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN12RLByteStream7GetByteEv($this){$this=$this|0;var $current=0,$val=0,$2=0,$12=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$current=HEAP32[$2+52>>2]|0;if($current>>>0>=(HEAP32[$2+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$12=$2;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$12>>2]|0)+16>>2]&1023]($12);$current=HEAP32[$2+52>>2]|0;label=3;break;case 3:$val=HEAPU8[$current]|0;HEAP32[$2+52>>2]=$current+1;return $val|0}return 0}function __ZN12RLByteStream8GetBytesEPviPi($this,$buffer,$count,$readed){$this=$this|0;$buffer=$buffer|0;$count=$count|0;$readed=$readed|0;var $3=0,$4=0,$data=0,$l=0,$5=0,$36=0,$49=0,$62=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$count;$4=$readed;$5=$this;$data=$buffer;if(($4|0)!=0){label=2;break}else{label=3;break};case 2:HEAP32[$4>>2]=0;label=3;break;case 3:label=4;break;case 4:if(($3|0)>0){label=5;break}else{label=14;break};case 5:label=6;break;case 6:$l=(HEAP32[$5+48>>2]|0)-(HEAP32[$5+52>>2]|0)|0;if(($l|0)>($3|0)){label=7;break}else{label=8;break};case 7:$l=$3;label=8;break;case 8:if(($l|0)>0){label=9;break}else{label=10;break};case 9:label=11;break;case 10:$36=$5;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$36>>2]|0)+16>>2]&1023]($36);label=6;break;case 11:_memcpy($data|0,HEAP32[$5+52>>2]|0,$l)|0;$49=$5+52|0;HEAP32[$49>>2]=(HEAP32[$49>>2]|0)+$l;$data=$data+$l|0;$3=$3-$l|0;if(($4|0)!=0){label=12;break}else{label=13;break};case 12:$62=$4;HEAP32[$62>>2]=(HEAP32[$62>>2]|0)+$l;label=13;break;case 13:label=4;break;case 14:return}}function __ZN12RMByteStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN12RLByteStream7GetWordEv($this){$this=$this|0;var $current=0,$val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$current=HEAP32[$2+52>>2]|0;if(($current+1|0)>>>0<(HEAP32[$2+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$val=(HEAPU8[$current|0]|0)+((HEAPU8[$current+1|0]|0)<<8)|0;HEAP32[$2+52>>2]=$current+2;label=4;break;case 3:$val=__ZN12RLByteStream7GetByteEv($2)|0;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<8;label=4;break;case 4:return $val|0}return 0}function __ZN12RLByteStream8GetDWordEv($this){$this=$this|0;var $current=0,$val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$current=HEAP32[$2+52>>2]|0;if(($current+3|0)>>>0<(HEAP32[$2+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$val=(HEAPU8[$current|0]|0)+((HEAPU8[$current+1|0]|0)<<8)+((HEAPU8[$current+2|0]|0)<<16)+((HEAPU8[$current+3|0]|0)<<24)|0;HEAP32[$2+52>>2]=$current+4;label=4;break;case 3:$val=__ZN12RLByteStream7GetByteEv($2)|0;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<8;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<16;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<24;label=4;break;case 4:return $val|0}return 0}function __ZN12RMByteStream7GetWordEv($this){$this=$this|0;var $current=0,$val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$current=HEAP32[$2+52>>2]|0;if(($current+1|0)>>>0<(HEAP32[$2+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$val=((HEAPU8[$current|0]|0)<<8)+(HEAPU8[$current+1|0]|0)|0;HEAP32[$2+52>>2]=$current+2;label=4;break;case 3:$val=(__ZN12RLByteStream7GetByteEv($2)|0)<<8;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0);label=4;break;case 4:return $val|0}return 0}function __ZN12RMByteStream8GetDWordEv($this){$this=$this|0;var $current=0,$val=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;$current=HEAP32[$2+52>>2]|0;if(($current+3|0)>>>0<(HEAP32[$2+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$val=((HEAPU8[$current|0]|0)<<24)+((HEAPU8[$current+1|0]|0)<<16)+((HEAPU8[$current+2|0]|0)<<8)+(HEAPU8[$current+3|0]|0)|0;HEAP32[$2+52>>2]=$current+4;label=4;break;case 3:$val=(__ZN12RLByteStream7GetByteEv($2)|0)<<24;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<16;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0)<<8;$val=$val|(__ZN12RLByteStream7GetByteEv($2)|0);label=4;break;case 4:return $val|0}return 0}function __ZN11RLBitStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11RLBitStream9ReadBlockEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;__ZN11RBaseStream9ReadBlockEv($2);if(__Z13bsIsBigEndianv()|0){label=2;break}else{label=3;break};case 2:__Z12bsBSwapBlockPhS_(HEAP32[$2+44>>2]|0,HEAP32[$2+48>>2]|0);label=3;break;case 3:return}}function __ZN11RMBitStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11RBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11RMBitStream9ReadBlockEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;__ZN11RBaseStream9ReadBlockEv($2);if(__Z13bsIsBigEndianv()|0){label=3;break}else{label=2;break};case 2:__Z12bsBSwapBlockPhS_(HEAP32[$2+44>>2]|0,HEAP32[$2+48>>2]|0);label=3;break;case 3:return}}function __ZN11RMBitStream6SetPosEi($this,$pos){$this=$this|0;$pos=$pos|0;var $offset=0,$3=0;$3=$this;__ZN11RBaseStream6SetPosEi($3,$pos);$offset=(HEAP32[$3+52>>2]|0)-(HEAP32[$3+48>>2]|0)|0;HEAP32[$3+52>>2]=(HEAP32[$3+48>>2]|0)+($offset-1&-4);HEAP32[$3+76>>2]=32-(($offset&3)<<3)&31;return}function __ZN11RMBitStream3GetEi($this,$bits){$this=$this|0;$bits=$bits|0;var $2=0,$bit_idx=0,$mask=0,$current=0,$3=0,$19=0,$37=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$bits;$3=$this;$bit_idx=(HEAP32[$3+76>>2]|0)-$2|0;$mask=$bit_idx>>31;$current=(HEAP32[$3+52>>2]|0)+(-$mask<<2)|0;$19=$current;HEAP32[$3+52>>2]=$19;if($19>>>0>=(HEAP32[$3+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+16>>2]&1023]($3);$current=HEAP32[$3+52>>2]|0;label=3;break;case 3:$37=$bit_idx&31;$bit_idx=$37;HEAP32[$3+76>>2]=$37;return(HEAP32[$current-4>>2]<<-$bit_idx&$mask|(HEAP32[$current>>2]|0)>>>($bit_idx>>>0))&HEAP32[7184+($2<<2)>>2]|0}return 0}function __ZN11RMBitStream4ShowEi($this,$bits){$this=$this|0;$bits=$bits|0;var $2=0,$bit_idx=0,$mask=0,$current=0,$3=0,$38=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$bits;$3=$this;$bit_idx=(HEAP32[$3+76>>2]|0)-$2|0;$mask=$bit_idx>>31;$current=(HEAP32[$3+52>>2]|0)+(-$mask<<2)|0;if($current>>>0>=(HEAP32[$3+48>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:HEAP32[$3+52>>2]=$current;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+16>>2]&1023]($3);$current=HEAP32[$3+52>>2]|0;$38=$3+52|0;HEAP32[$38>>2]=(HEAP32[$38>>2]|0)-4;label=3;break;case 3:return(HEAP32[$current-4>>2]<<-$bit_idx&$mask|(HEAP32[$current>>2]|0)>>>($bit_idx>>>0))&HEAP32[7184+($2<<2)>>2]|0}return 0}function __ZN11RMBitStream7GetHuffEPKs($this,$table){$this=$this|0;$table=$table|0;var $2=0,$val=0,$code_bits=0,$table_bits=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$table;$3=$this;label=2;break;case 2:$table_bits=HEAP16[$2>>1]|0;$val=HEAP16[$2+((__ZN11RMBitStream4ShowEi($3,$table_bits)|0)+1<<1)>>1]|0;$code_bits=$val&15;$val=$val>>4;if(($code_bits|0)!=0){label=3;break}else{label=4;break};case 3:label=5;break;case 4:$2=$2+($val<<1)|0;__ZN11RMBitStream4MoveEi($3,$table_bits);label=2;break;case 5:__ZN11RMBitStream4MoveEi($3,$code_bits);if(($val|0)==2047){label=6;break}else{label=9;break};case 6:if(HEAP8[$3+72|0]&1){label=7;break}else{label=8;break};case 7:_longjmp($3+4|0,-124|0);label=8;break;case 8:label=9;break;case 9:return $val|0}return 0}function __Z26bsCreateSourceHuffmanTablePKhPiii($src,$dst,$max_bits,$first_bits){$src=$src|0;$dst=$dst|0;$max_bits=$max_bits|0;$first_bits=$first_bits|0;var $1=0,$2=0,$3=0,$i=0,$val_idx=0,$code=0,$table=0,$code_count=0,$k=0,$7=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$src;$2=$dst;$3=$max_bits;$code=0;$table=$2;$7=$2;$2=$7+4|0;HEAP32[$7>>2]=$first_bits;$i=1;$val_idx=$3;label=2;break;case 2:if(($i|0)<=($3|0)){label=3;break}else{label=9;break};case 3:$code_count=HEAPU8[$1+($i-1)|0]|0;HEAP32[$2>>2]=$code_count;$code=$code<<1;$k=0;label=4;break;case 4:if(($k|0)<($code_count|0)){label=5;break}else{label=7;break};case 5:HEAP32[$2+($k+1<<2)>>2]=(HEAPU8[$1+($val_idx+$k)|0]|0)<<20|$code+$k;label=6;break;case 6:$k=$k+1|0;label=4;break;case 7:$code=$code+$code_count|0;$2=$2+($code_count+1<<2)|0;$val_idx=$val_idx+$code_count|0;label=8;break;case 8:$i=$i+1|0;label=2;break;case 9:HEAP32[$2>>2]=-1;return $table|0}return 0}function __ZN11WBaseStreamC2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=19376;HEAP32[$2+12>>2]=0;HEAP32[$2+8>>2]=0;HEAP32[$2+4>>2]=0;HEAP32[$2+24>>2]=0;HEAP32[$2+16>>2]=32768;HEAP8[$2+28|0]=0;return}function __ZN11WBaseStream6GetPosEv($this){$this=$this|0;var $2=0;$2=$this;return(HEAP32[$2+20>>2]|0)+((HEAP32[$2+12>>2]|0)-(HEAP32[$2+4>>2]|0))|0}function __Z26bsCreateDecodeHuffmanTablePKiPsi($src,$table,$max_size){$src=$src|0;$table=$table|0;$max_size=$max_size|0;var $1=0,$2=0,$3=0,$first_bits=0,$sub_tables=0,$size=0,$i=0,$k=0,$code_count=0,$sb=0,$b=0,$code_count1=0,$table_bits=0,$code_bits=0,$code2=0,$val=0,$j=0,$offset=0,$idx=0,$22=0,$121=0,$153=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16384|0;label=1;while(1)switch(label|0){case 1:$sub_tables=sp|0;$2=$src;$3=$table;$first_bits=HEAP32[$2>>2]|0;$size=(1<<$first_bits)+1|0;_memset($sub_tables|0,0,1<<$first_bits<<3|0);$i=1;$k=1;label=2;break;case 2:if((HEAP32[$2+($k<<2)>>2]|0)>=0){label=3;break}else{label=12;break};case 3:$22=$k;$k=$22+1|0;$code_count=HEAP32[$2+($22<<2)>>2]|0;$sb=$i-$first_bits|0;if(($sb|0)<=0){label=4;break}else{label=5;break};case 4:$k=$k+$code_count|0;label=10;break;case 5:$code_count=$code_count+$k|0;label=6;break;case 6:if(($k|0)<($code_count|0)){label=7;break}else{label=9;break};case 7:HEAP32[$sub_tables+((HEAP32[$2+($k<<2)>>2]&1048575)>>$sb<<3)>>2]=$sb;label=8;break;case 8:$k=$k+1|0;label=6;break;case 9:label=10;break;case 10:label=11;break;case 11:$i=$i+1|0;label=2;break;case 12:$i=0;label=13;break;case 13:if(($i|0)<(1<<$first_bits|0)){label=14;break}else{label=18;break};case 14:$b=HEAP32[$sub_tables+($i<<3)>>2]|0;if(($b|0)>0){label=15;break}else{label=16;break};case 15:$b=1<<$b;HEAP32[$sub_tables+($i<<3)+4>>2]=$size;$size=$size+($b+1)|0;label=16;break;case 16:label=17;break;case 17:$i=$i+1|0;label=13;break;case 18:if(($size|0)>($max_size|0)){label=19;break}else{label=20;break};case 19:$1=0;label=39;break;case 20:$i=0;label=21;break;case 21:if(($i|0)<($size|0)){label=22;break}else{label=24;break};case 22:HEAP16[$3+($i<<1)>>1]=32753;label=23;break;case 23:$i=$i+1|0;label=21;break;case 24:HEAP16[$3>>1]=$first_bits&65535;$i=1;$k=1;label=25;break;case 25:if((HEAP32[$2+($k<<2)>>2]|0)>=0){label=26;break}else{label=38;break};case 26:$121=$k;$k=$121+1|0;$code_count1=HEAP32[$2+($121<<2)>>2]|0;$code_count1=$code_count1+$k|0;label=27;break;case 27:if(($k|0)<($code_count1|0)){label=28;break}else{label=36;break};case 28:$table_bits=$first_bits;$code_bits=$i;$code2=HEAP32[$2+($k<<2)>>2]&1048575;$val=HEAP32[$2+($k<<2)>>2]>>20;$offset=0;if(($code_bits|0)>($table_bits|0)){label=29;break}else{label=30;break};case 29:$153=$code_bits-$table_bits|0;$code_bits=$153;$idx=$code2>>$153;$code2=$code2&(1<<$code_bits)-1;$offset=HEAP32[$sub_tables+($idx<<3)+4>>2]|0;$table_bits=HEAP32[$sub_tables+($idx<<3)>>2]|0;HEAP16[$3+($offset<<1)>>1]=$table_bits&65535;HEAP16[$3+($idx+1<<1)>>1]=$offset<<4&65535;label=30;break;case 30:$table_bits=$table_bits-$code_bits|0;$val=$val<<4|$code_bits;$offset=$offset+(($code2<<$table_bits)+1)|0;$j=0;label=31;break;case 31:if(($j|0)<(1<<$table_bits|0)){label=32;break}else{label=34;break};case 32:HEAP16[$3+($offset+$j<<1)>>1]=$val&65535;label=33;break;case 33:$j=$j+1|0;label=31;break;case 34:label=35;break;case 35:$k=$k+1|0;label=27;break;case 36:label=37;break;case 37:$i=$i+1|0;label=25;break;case 38:$1=1;label=39;break;case 39:STACKTOP=sp;return $1|0}return 0}function __ZN11WBaseStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11WBaseStreamD2Ev($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2>>2]=19376;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+12>>2]&1023]($2);FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+20>>2]&1023]($2);return}function __ZN11WBaseStream8AllocateEv($this){$this=$this|0;var $2=0,$8=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+4>>2]|0)!=0){label=3;break}else{label=2;break};case 2:$8=HEAP32[$2+16>>2]|0;HEAP32[$2+4>>2]=__Znaj(($8|0)<0?-1:$8)|0;label=3;break;case 3:HEAP32[$2+8>>2]=(HEAP32[$2+4>>2]|0)+(HEAP32[$2+16>>2]|0);HEAP32[$2+12>>2]=HEAP32[$2+4>>2];return}}function __ZN11WBaseStream10WriteBlockEv($this){$this=$this|0;var $size=0,$2=0,$20=0;$2=$this;$size=(HEAP32[$2+12>>2]|0)-(HEAP32[$2+4>>2]|0)|0;_fwrite(HEAP32[$2+4>>2]|0,1,$size|0,HEAP32[$2+24>>2]|0)|0;HEAP32[$2+12>>2]=HEAP32[$2+4>>2];$20=$2+20|0;HEAP32[$20>>2]=(HEAP32[$20>>2]|0)+$size;return}function __ZN11WBaseStream4OpenEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+12>>2]&1023]($3);FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3>>2]|0)+24>>2]&1023]($3);HEAP32[$3+24>>2]=_fopen($filename|0,11776)|0;if((HEAP32[$3+24>>2]|0)!=0){label=2;break}else{label=3;break};case 2:HEAP8[$3+28|0]=1;HEAP32[$3+20>>2]=0;HEAP32[$3+12>>2]=HEAP32[$3+4>>2];label=3;break;case 3:return(HEAP32[$3+24>>2]|0)!=0|0}return 0}function __ZN11WBaseStream5CloseEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+24>>2]|0)!=0){label=2;break}else{label=3;break};case 2:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+16>>2]&1023]($2);_fclose(HEAP32[$2+24>>2]|0)|0;HEAP32[$2+24>>2]=0;label=3;break;case 3:HEAP8[$2+28|0]=0;return}}function __ZN11WBaseStream7ReleaseEv($this){$this=$this|0;var $2=0,$8=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+4>>2]|0)!=0){label=2;break}else{label=5;break};case 2:$8=HEAP32[$2+4>>2]|0;if(($8|0)==0){label=4;break}else{label=3;break};case 3:__ZdaPv($8);label=4;break;case 4:label=5;break;case 5:HEAP32[$2+12>>2]=0;HEAP32[$2+8>>2]=0;HEAP32[$2+4>>2]=0;return}}function __ZN12WLByteStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN12WLByteStream7PutByteEi($this,$val){$this=$this|0;$val=$val|0;var $3=0,$7=0,$8=0,$18=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$this;$7=$3+12|0;$8=HEAP32[$7>>2]|0;HEAP32[$7>>2]=$8+1;HEAP8[$8]=$val&255;if((HEAP32[$3+12>>2]|0)>>>0>=(HEAP32[$3+8>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$18=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$18>>2]|0)+16>>2]&1023]($18);label=3;break;case 3:return}}function __ZN12WLByteStream8PutBytesEPKvi($this,$buffer,$count){$this=$this|0;$buffer=$buffer|0;$count=$count|0;var $3=0,$data=0,$l=0,$4=0,$35=0,$53=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$count;$4=$this;$data=$buffer;label=2;break;case 2:if(($3|0)!=0){label=3;break}else{label=10;break};case 3:$l=(HEAP32[$4+8>>2]|0)-(HEAP32[$4+12>>2]|0)|0;if(($l|0)>($3|0)){label=4;break}else{label=5;break};case 4:$l=$3;label=5;break;case 5:if(($l|0)>0){label=6;break}else{label=7;break};case 6:_memcpy(HEAP32[$4+12>>2]|0,$data|0,$l)|0;$35=$4+12|0;HEAP32[$35>>2]=(HEAP32[$35>>2]|0)+$l;$data=$data+$l|0;$3=$3-$l|0;label=7;break;case 7:if((HEAP32[$4+12>>2]|0)==(HEAP32[$4+8>>2]|0)){label=8;break}else{label=9;break};case 8:$53=$4;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$53>>2]|0)+16>>2]&1023]($53);label=9;break;case 9:label=2;break;case 10:return}}function __ZN12WLByteStream7PutWordEi($this,$val){$this=$this|0;$val=$val|0;var $2=0,$current=0,$3=0,$35=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$val;$3=$this;$current=HEAP32[$3+12>>2]|0;if(($current+1|0)>>>0<(HEAP32[$3+8>>2]|0)>>>0){label=2;break}else{label=5;break};case 2:HEAP8[$current|0]=$2&255;HEAP8[$current+1|0]=$2>>8&255;HEAP32[$3+12>>2]=$current+2;if((HEAP32[$3+12>>2]|0)==(HEAP32[$3+8>>2]|0)){label=3;break}else{label=4;break};case 3:$35=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35>>2]|0)+16>>2]&1023]($35);label=4;break;case 4:label=6;break;case 5:__ZN12WLByteStream7PutByteEi($3,$2);__ZN12WLByteStream7PutByteEi($3,$2>>8);label=6;break;case 6:return}}function __ZN11WMBitStream11ResetBufferEv($this){$this=$this|0;var $2=0;$2=$this;HEAP32[$2+40>>2]=0;HEAP32[$2+32>>2]=32;HEAP32[$2+12>>2]=HEAP32[$2+4>>2];return}function __ZN12WLByteStream8PutDWordEi($this,$val){$this=$this|0;$val=$val|0;var $2=0,$current=0,$3=0,$45=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$val;$3=$this;$current=HEAP32[$3+12>>2]|0;if(($current+3|0)>>>0<(HEAP32[$3+8>>2]|0)>>>0){label=2;break}else{label=5;break};case 2:HEAP8[$current|0]=$2&255;HEAP8[$current+1|0]=$2>>8&255;HEAP8[$current+2|0]=$2>>16&255;HEAP8[$current+3|0]=$2>>24&255;HEAP32[$3+12>>2]=$current+4;if((HEAP32[$3+12>>2]|0)==(HEAP32[$3+8>>2]|0)){label=3;break}else{label=4;break};case 3:$45=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45>>2]|0)+16>>2]&1023]($45);label=4;break;case 4:label=6;break;case 5:__ZN12WLByteStream7PutByteEi($3,$2);__ZN12WLByteStream7PutByteEi($3,$2>>8);__ZN12WLByteStream7PutByteEi($3,$2>>16);__ZN12WLByteStream7PutByteEi($3,$2>>24);label=6;break;case 6:return}}function __ZN12WMByteStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN12WMByteStream7PutWordEi($this,$val){$this=$this|0;$val=$val|0;var $2=0,$current=0,$3=0,$35=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$val;$3=$this;$current=HEAP32[$3+12>>2]|0;if(($current+1|0)>>>0<(HEAP32[$3+8>>2]|0)>>>0){label=2;break}else{label=5;break};case 2:HEAP8[$current|0]=$2>>8&255;HEAP8[$current+1|0]=$2&255;HEAP32[$3+12>>2]=$current+2;if((HEAP32[$3+12>>2]|0)==(HEAP32[$3+8>>2]|0)){label=3;break}else{label=4;break};case 3:$35=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$35>>2]|0)+16>>2]&1023]($35);label=4;break;case 4:label=6;break;case 5:__ZN12WLByteStream7PutByteEi($3,$2>>8);__ZN12WLByteStream7PutByteEi($3,$2);label=6;break;case 6:return}}function __ZN12WMByteStream8PutDWordEi($this,$val){$this=$this|0;$val=$val|0;var $2=0,$current=0,$3=0,$45=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$val;$3=$this;$current=HEAP32[$3+12>>2]|0;if(($current+3|0)>>>0<(HEAP32[$3+8>>2]|0)>>>0){label=2;break}else{label=5;break};case 2:HEAP8[$current|0]=$2>>24&255;HEAP8[$current+1|0]=$2>>16&255;HEAP8[$current+2|0]=$2>>8&255;HEAP8[$current+3|0]=$2&255;HEAP32[$3+12>>2]=$current+4;if((HEAP32[$3+12>>2]|0)==(HEAP32[$3+8>>2]|0)){label=3;break}else{label=4;break};case 3:$45=$3;FUNCTION_TABLE_vi[HEAP32[(HEAP32[$45>>2]|0)+16>>2]&1023]($45);label=4;break;case 4:label=6;break;case 5:__ZN12WLByteStream7PutByteEi($3,$2>>24);__ZN12WLByteStream7PutByteEi($3,$2>>16);__ZN12WLByteStream7PutByteEi($3,$2>>8);__ZN12WLByteStream7PutByteEi($3,$2);label=6;break;case 6:return}}function __ZN11WMBitStreamD0Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WBaseStreamD2Ev($4);label=2;break;case 2:__ZdlPv($4);return;case 3:__ZdlPv($4);label=4;break;case 4:abort()}}function __ZN11WMBitStream4OpenEPKc($this,$filename){$this=$this|0;$filename=$filename|0;var $3=0;$3=$this;__ZN11WMBitStream11ResetBufferEv($3);return __ZN11WBaseStream4OpenEPKc($3,$filename)|0}function __ZN11WMBitStream5FlushEv($this){$this=$this|0;var $2=0,$13=0,$16=0,$17=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if((HEAP32[$2+32>>2]|0)<32){label=2;break}else{label=3;break};case 2:__ZN11WMBitStream3PutEii($2,HEAP32[$2+36>>2]|0,HEAP32[$2+32>>2]&7);$13=HEAP32[$2+40>>2]|0;$16=$2+12|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17+4;HEAP32[$17>>2]=$13;label=3;break;case 3:return}}function __ZN11WMBitStream3PutEii($this,$val,$bits){$this=$this|0;$val=$val|0;$bits=$bits|0;var $2=0,$3=0,$bit_idx=0,$curval=0,$4=0,$33=0,$34=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$val;$3=$bits;$4=$this;$bit_idx=(HEAP32[$4+32>>2]|0)-$3|0;$curval=HEAP32[$4+40>>2]|0;$2=$2&HEAP32[7184+($3<<2)>>2];if(($bit_idx|0)>=0){label=2;break}else{label=3;break};case 2:$curval=$curval|$2<<$bit_idx;label=6;break;case 3:$33=$4+12|0;$34=HEAP32[$33>>2]|0;HEAP32[$33>>2]=$34+4;HEAP32[$34>>2]=$curval|$2>>>((-$bit_idx|0)>>>0);if((HEAP32[$4+12>>2]|0)>>>0>=(HEAP32[$4+8>>2]|0)>>>0){label=4;break}else{label=5;break};case 4:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$4>>2]|0)+16>>2]&1023]($4);label=5;break;case 5:$bit_idx=$bit_idx+32|0;$curval=$2<<$bit_idx;label=6;break;case 6:HEAP32[$4+40>>2]=$curval;HEAP32[$4+32>>2]=$bit_idx;return}}function __ZN11WMBitStream5CloseEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if(HEAP8[$2+28|0]&1){label=2;break}else{label=3;break};case 2:FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2>>2]|0)+28>>2]&1023]($2);__ZN11WBaseStream5CloseEv($2);label=3;break;case 3:return}}function __ZN11WMBitStream10WriteBlockEv($this){$this=$this|0;var $2=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$this;if(__Z13bsIsBigEndianv()|0){label=3;break}else{label=2;break};case 2:__Z12bsBSwapBlockPhS_(HEAP32[$2+4>>2]|0,HEAP32[$2+12>>2]|0);label=3;break;case 3:__ZN11WBaseStream10WriteBlockEv($2);return}}function __ZN11WMBitStream7PutHuffEiPKm($this,$val,$table){$this=$this|0;$val=$val|0;$table=$table|0;var $2=0,$3=0,$code=0;$2=$val;$3=$table;$2=$2-(HEAP32[$3>>2]|0)|0;$code=HEAP32[$3+($2+2<<2)>>2]|0;__ZN11WMBitStream3PutEii($this,$code>>>8,$code&255);return}function __Z26bsCreateEncodeHuffmanTablePKiPmi($src,$table,$max_size){$src=$src|0;$table=$table|0;$max_size=$max_size|0;var $1=0,$2=0,$3=0,$i=0,$k=0,$min_val=0,$max_val=0,$size=0,$code_count=0,$val=0,$code_count1=0,$12=0,$77=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$src;$3=$table;$min_val=2147483647;$max_val=-2147483648;$i=1;$k=1;label=2;break;case 2:if((HEAP32[$2+($k<<2)>>2]|0)>=0){label=3;break}else{label=13;break};case 3:$12=$k;$k=$12+1|0;$code_count=HEAP32[$2+($12<<2)>>2]|0;$code_count=$code_count+$k|0;label=4;break;case 4:if(($k|0)<($code_count|0)){label=5;break}else{label=11;break};case 5:$val=HEAP32[$2+($k<<2)>>2]>>20;if(($val|0)<($min_val|0)){label=6;break}else{label=7;break};case 6:$min_val=$val;label=7;break;case 7:if(($val|0)>($max_val|0)){label=8;break}else{label=9;break};case 8:$max_val=$val;label=9;break;case 9:label=10;break;case 10:$k=$k+1|0;label=4;break;case 11:label=12;break;case 12:$i=$i+1|0;label=2;break;case 13:$size=$max_val-$min_val+3|0;if(($size|0)>($max_size|0)){label=14;break}else{label=15;break};case 14:$1=0;label=24;break;case 15:_memset($3|0,0,$size<<2|0);HEAP32[$3>>2]=$min_val;HEAP32[$3+4>>2]=$size-2;$i=1;$k=1;label=16;break;case 16:if((HEAP32[$2+($k<<2)>>2]|0)>=0){label=17;break}else{label=23;break};case 17:$77=$k;$k=$77+1|0;$code_count1=HEAP32[$2+($77<<2)>>2]|0;$code_count1=$code_count1+$k|0;label=18;break;case 18:if(($k|0)<($code_count1|0)){label=19;break}else{label=21;break};case 19:HEAP32[$3+((HEAP32[$2+($k<<2)>>2]>>20)-$min_val+2<<2)>>2]=(HEAP32[$2+($k<<2)>>2]&1048575)<<8|$i;label=20;break;case 20:$k=$k+1|0;label=18;break;case 21:label=22;break;case 22:$i=$i+1|0;label=16;break;case 23:$1=1;label=24;break;case 24:return $1|0}return 0}function _cvCreateMat($height,$width,$type){$height=$height|0;$width=$width|0;$type=$type|0;var $arr=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$arr=sp|0;HEAP32[$arr>>2]=0;HEAP32[$arr>>2]=_cvCreateMatHeader($height,$width,$type)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,6864,11432,15536,104);label=6;break;case 3:_cvCreateData(HEAP32[$arr>>2]|0);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6864,11432,15536,105);label=6;break;case 5:label=6;break;case 6:if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvReleaseMat($arr);label=8;break;case 8:STACKTOP=sp;return HEAP32[$arr>>2]|0}return 0}function _cvCreateMatHeader($rows,$cols,$type){$rows=$rows|0;$cols=$cols|0;$type=$type|0;var $1=0,$2=0,$3=0,$arr=0,$min_step=0,$42=0,$58=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$arr=sp|0;$1=$rows;$2=$cols;$3=$type;HEAP32[$arr>>2]=0;$3=$3&511;if(($1|0)<=0){label=3;break}else{label=2;break};case 2:if(($2|0)<=0){label=3;break}else{label=4;break};case 3:_cvError(-201,6400,9576,15536,136);label=14;break;case 4:$min_step=Math_imul((($3&504)>>3)+1<<(47696>>>(($3&7)<<1>>>0)&3),$2)|0;if(($min_step|0)<=0){label=5;break}else{label=6;break};case 5:_cvError(-210,6400,9048,15536,140);label=14;break;case 6:HEAP32[$arr>>2]=_cvAlloc(28)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6400,11432,15536,142);label=14;break;case 8:if(($1|0)==1){label=9;break}else{label=10;break};case 9:$42=0;label=11;break;case 10:$42=__Z7cvAlignii($min_step,1)|0;label=11;break;case 11:HEAP32[(HEAP32[$arr>>2]|0)+4>>2]=$42;if((HEAP32[(HEAP32[$arr>>2]|0)+4>>2]|0)==0){$58=1;label=13;break}else{label=12;break};case 12:$58=(HEAP32[(HEAP32[$arr>>2]|0)+4>>2]|0)==($min_step|0);label=13;break;case 13:HEAP32[HEAP32[$arr>>2]>>2]=1111621632|$3|($58?16384:0);HEAP32[(HEAP32[$arr>>2]|0)+20>>2]=$1;HEAP32[(HEAP32[$arr>>2]|0)+24>>2]=$2;HEAP32[(HEAP32[$arr>>2]|0)+16>>2]=0;HEAP32[(HEAP32[$arr>>2]|0)+8>>2]=0;HEAP32[(HEAP32[$arr>>2]|0)+12>>2]=1;__ZL12icvCheckHugeP5CvMat(HEAP32[$arr>>2]|0);label=14;break;case 14:if((_cvGetErrStatus()|0)<0){label=15;break}else{label=16;break};case 15:_cvReleaseMat($arr);label=16;break;case 16:STACKTOP=sp;return HEAP32[$arr>>2]|0}return 0}function __ZN11WMBitStreamC2Ev($this){$this=$this|0;var $4=0,label=0;label=1;while(1)switch(label|0){case 1:$4=$this;__ZN11WBaseStreamC2Ev($4);HEAP32[$4>>2]=19328;HEAP32[$4+36>>2]=0;__ZN11WMBitStream11ResetBufferEv($4);label=2;break;case 2:return;case 3:__ZN11WBaseStreamD2Ev($4);label=4;break;case 4:label=5;break;case 5:abort();case 6:__ZSt9terminatev()}}function __Z7cvAlignii($size,$align){$size=$size|0;$align=$align|0;var $2=0;$2=$align;return $size+$2-1&-$2|0}function __ZL12icvCheckHugeP5CvMat($arr){$arr=$arr|0;var $1=0,$4=0,$9=0,$11$0=0,$11$1=0,$$etemp$0$1=0,$15=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;$4=HEAP32[$1+4>>2]|0;$9=HEAP32[$1+20>>2]|0;$11$0=___muldi3($4,($4|0)<0?-1:0,$9,($9|0)<0?-1:0)|0;$11$1=tempRet0;$$etemp$0$1=0;if(($11$1|0)>($$etemp$0$1|0)|($11$1|0)==($$etemp$0$1|0)&$11$0>>>0>2147483647>>>0){label=2;break}else{label=3;break};case 2:$15=$1|0;HEAP32[$15>>2]=HEAP32[$15>>2]&-16385;label=3;break;case 3:return}}function _cvCreateData($arr){$arr=$arr|0;var $1=0,$step=0,$mat=0,$img=0,$depth=0,$width=0,$mat1=0,$i=0,$total_size2=0,$size=0,$114=0,$146=0,$221=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;if(($1|0)!=0){label=2;break}else{label=12;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=12;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=12;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=12;break};case 5:$mat=$1;$step=HEAP32[$mat+4>>2]|0;if((HEAP32[$mat+16>>2]|0)!=0){label=6;break}else{label=7;break};case 6:_cvError(-2,6328,10472,15536,965);label=48;break;case 7:if(($step|0)==0){label=8;break}else{label=9;break};case 8:$step=Math_imul(((HEAP32[$mat>>2]&504)>>3)+1<<(47696>>>((HEAP32[$mat>>2]&7)<<1>>>0)&3),HEAP32[$mat+24>>2]|0)|0;label=9;break;case 9:HEAP32[$mat+8>>2]=_cvAlloc((Math_imul($step,HEAP32[$mat+20>>2]|0)|0)+36|0)|0;if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,6328,11432,15536,971);label=48;break;case 11:HEAP32[$mat+16>>2]=__Z10cvAlignPtrPKvi((HEAP32[$mat+8>>2]|0)+4|0,32)|0;HEAP32[HEAP32[$mat+8>>2]>>2]=1;label=47;break;case 12:if(($1|0)!=0){label=13;break}else{label=25;break};case 13:if((HEAP32[$1>>2]|0)==112){label=14;break}else{label=25;break};case 14:$img=$1;if((HEAP32[$img+68>>2]|0)!=0){label=15;break}else{label=16;break};case 15:_cvError(-2,6328,10472,15536,980);label=48;break;case 16:if((HEAP32[7591]|0)!=0){label=20;break}else{label=17;break};case 17:$114=_cvAlloc(HEAP32[$img+64>>2]|0)|0;HEAP32[$img+108>>2]=$114;HEAP32[$img+68>>2]=$114;if((_cvGetErrStatus()|0)<0){label=18;break}else{label=19;break};case 18:_cvError(-1,6328,11432,15536,985);label=48;break;case 19:label=24;break;case 20:$depth=HEAP32[$img+16>>2]|0;$width=HEAP32[$img+40>>2]|0;if((HEAP32[$img+16>>2]|0)==32){label=22;break}else{label=21;break};case 21:if((HEAP32[$img+8>>2]|0)==64){label=22;break}else{label=23;break};case 22:$146=$img+40|0;HEAP32[$146>>2]=Math_imul(HEAP32[$146>>2]|0,(HEAP32[$img+16>>2]|0)==32?4:8)|0;HEAP32[$img+16>>2]=8;label=23;break;case 23:FUNCTION_TABLE_viii[HEAP32[7591]&1023]($img,0,0);HEAP32[$img+40>>2]=$width;HEAP32[$img+16>>2]=$depth;label=24;break;case 24:label=46;break;case 25:if(($1|0)!=0){label=26;break}else{label=44;break};case 26:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=27;break}else{label=44;break};case 27:$mat1=$1;$total_size2=((HEAP32[$mat1>>2]&504)>>3)+1<<(47696>>>((HEAP32[$mat1>>2]&7)<<1>>>0)&3);if((HEAP32[$mat1+16>>2]|0)!=0){label=28;break}else{label=29;break};case 28:_cvError(-2,6328,10472,15536,1011);label=48;break;case 29:if((HEAP32[$mat1>>2]&16384|0)!=0){label=30;break}else{label=34;break};case 30:if((HEAP32[$mat1+24>>2]|0)!=0){label=31;break}else{label=32;break};case 31:$221=HEAP32[$mat1+24>>2]|0;label=33;break;case 32:$221=$total_size2;label=33;break;case 33:$total_size2=Math_imul(HEAP32[$mat1+20>>2]|0,$221)|0;label=41;break;case 34:$i=(HEAP32[$mat1+4>>2]|0)-1|0;label=35;break;case 35:if(($i|0)>=0){label=36;break}else{label=40;break};case 36:$size=Math_imul(HEAP32[$mat1+20+($i<<3)+4>>2]|0,HEAP32[$mat1+20+($i<<3)>>2]|0)|0;if($total_size2>>>0<$size>>>0){label=37;break}else{label=38;break};case 37:$total_size2=$size;label=38;break;case 38:label=39;break;case 39:$i=$i-1|0;label=35;break;case 40:label=41;break;case 41:HEAP32[$mat1+8>>2]=_cvAlloc($total_size2+36|0)|0;if((_cvGetErrStatus()|0)<0){label=42;break}else{label=43;break};case 42:_cvError(-1,6328,11432,15536,1030);label=48;break;case 43:HEAP32[$mat1+16>>2]=__Z10cvAlignPtrPKvi((HEAP32[$mat1+8>>2]|0)+4|0,32)|0;HEAP32[HEAP32[$mat1+8>>2]>>2]=1;label=45;break;case 44:_cvError(-5,6328,10280,15536,1036);label=48;break;case 45:label=46;break;case 46:label=47;break;case 47:label=48;break;case 48:return}}function _cvReleaseMat($array){$array=$array|0;var $1=0,$arr=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$array;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-9,7152,28352,15536,227);label=13;break;case 3:if((HEAP32[$1>>2]|0)!=0){label=4;break}else{label=12;break};case 4:$arr=HEAP32[$1>>2]|0;if(($arr|0)!=0){label=5;break}else{label=8;break};case 5:if((HEAP32[$arr>>2]&-65536|0)==1111621632){label=6;break}else{label=8;break};case 6:if((HEAP32[$arr+24>>2]|0)>0){label=7;break}else{label=8;break};case 7:if((HEAP32[$arr+20>>2]|0)>0){label=11;break}else{label=8;break};case 8:if(($arr|0)!=0){label=9;break}else{label=10;break};case 9:if((HEAP32[$arr>>2]&-65536|0)==1111687168){label=11;break}else{label=10;break};case 10:_cvError(-206,7152,28352,15536,234);label=13;break;case 11:HEAP32[$1>>2]=0;_cvDecRefData($arr);_cvFree_($arr);$arr=0;label=12;break;case 12:label=13;break;case 13:return}}function _cvInitMatHeader($arr,$rows,$cols,$type,$data,$step){$arr=$arr|0;$rows=$rows|0;$cols=$cols|0;$type=$type|0;$data=$data|0;$step=$step|0;var $1=0,$2=0,$3=0,$4=0,$6=0,$mask=0,$min_step=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;$2=$rows;$3=$cols;$4=$type;$6=$step;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,5976,28352,15536,176);label=15;break;case 3:if(($4&7)>>>0>8){label=4;break}else{label=5;break};case 4:_cvError(-15,5976,28352,15536,179);label=15;break;case 5:if(($2|0)<=0){label=7;break}else{label=6;break};case 6:if(($3|0)<=0){label=7;break}else{label=8;break};case 7:_cvError(-201,5976,7656,15536,182);label=15;break;case 8:$4=$4&511;HEAP32[$1>>2]=$4|1111621632;HEAP32[$1+20>>2]=$2;HEAP32[$1+24>>2]=$3;HEAP32[$1+16>>2]=$data;HEAP32[$1+8>>2]=0;HEAP32[$1+12>>2]=0;$mask=((HEAP32[$1+20>>2]|0)<=1)-1|0;$min_step=(Math_imul(HEAP32[$1+24>>2]|0,(($4&504)>>3)+1<<(47696>>>(($4&7)<<1>>>0)&3))|0)&$mask;if(($6|0)!=2147483647){label=9;break}else{label=13;break};case 9:if(($6|0)!=0){label=10;break}else{label=13;break};case 10:if(($6|0)<($min_step|0)){label=11;break}else{label=12;break};case 11:_cvError(-13,5976,28352,15536,199);label=15;break;case 12:HEAP32[$1+4>>2]=$6&$mask;label=14;break;case 13:HEAP32[$1+4>>2]=$min_step;label=14;break;case 14:HEAP32[$1>>2]=1111621632|$4|((HEAP32[$1+4>>2]|0)==($min_step|0)?16384:0);__ZL12icvCheckHugeP5CvMat($1);label=15;break;case 15:return $1|0}return 0}function _cvDecRefData($arr){$arr=$arr|0;var $1=0,$mat=0,$mat1=0,$45=0,$47=0,$89=0,$91=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;if(($1|0)!=0){label=2;break}else{label=10;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=10;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=10;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=10;break};case 5:if((HEAP32[$1+16>>2]|0)!=0){label=6;break}else{label=10;break};case 6:$mat=$1;HEAP32[$mat+16>>2]=0;if((HEAP32[$mat+8>>2]|0)!=0){label=7;break}else{label=9;break};case 7:$45=HEAP32[$mat+8>>2]|0;$47=(HEAP32[$45>>2]|0)-1|0;HEAP32[$45>>2]=$47;if(($47|0)==0){label=8;break}else{label=9;break};case 8:_cvFree_(HEAP32[$mat+8>>2]|0);HEAP32[$mat+8>>2]=0;label=9;break;case 9:HEAP32[$mat+8>>2]=0;label=18;break;case 10:if(($1|0)!=0){label=11;break}else{label=17;break};case 11:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=12;break}else{label=17;break};case 12:if((HEAP32[$1+16>>2]|0)!=0){label=13;break}else{label=17;break};case 13:$mat1=$1;HEAP32[$mat1+16>>2]=0;if((HEAP32[$mat1+8>>2]|0)!=0){label=14;break}else{label=16;break};case 14:$89=HEAP32[$mat1+8>>2]|0;$91=(HEAP32[$89>>2]|0)-1|0;HEAP32[$89>>2]=$91;if(($91|0)==0){label=15;break}else{label=16;break};case 15:_cvFree_(HEAP32[$mat1+8>>2]|0);HEAP32[$mat1+8>>2]=0;label=16;break;case 16:HEAP32[$mat1+8>>2]=0;label=17;break;case 17:label=18;break;case 18:return}}function _cvCloneMat($src){$src=$src|0;var $1=0,$dst=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$src;$dst=0;if(($1|0)!=0){label=2;break}else{label=5;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=5;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=5;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=6;break}else{label=5;break};case 5:_cvError(-5,7112,15296,15536,256);label=15;break;case 6:$dst=_cvCreateMatHeader(HEAP32[$1+20>>2]|0,HEAP32[$1+24>>2]|0,HEAP32[$1>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,7112,11432,15536,258);label=15;break;case 8:if((HEAP32[$1+16>>2]|0)!=0){label=9;break}else{label=14;break};case 9:_cvCreateData($dst);if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,7112,11432,15536,262);label=15;break;case 11:_cvCopy($1,$dst,0);if((_cvGetErrStatus()|0)<0){label=12;break}else{label=13;break};case 12:_cvError(-1,7112,11432,15536,263);label=15;break;case 13:label=14;break;case 14:label=15;break;case 15:return $dst|0}return 0}function _cvInitMatNDHeader($mat,$dims,$sizes,$type,$data){$mat=$mat|0;$dims=$dims|0;$sizes=$sizes|0;$type=$type|0;$data=$data|0;var $1=0,$2=0,$3=0,$4=0,$result=0,$i=0,$step=0,$17=0,$60$1=0,$$etemp$7$1=0,$74=0,$77$0=0,$82$1=0,$$etemp$16$1=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$step=sp|0;$1=$mat;$2=$dims;$3=$sizes;$4=$type;$result=0;$4=$4&511;$17=(($4&504)>>3)+1<<(47696>>>(($4&7)<<1>>>0)&3);HEAP32[$step>>2]=$17;HEAP32[$step+4>>2]=($17|0)<0?-1:0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6968,14480,15536,291);label=19;break;case 3:if((HEAP32[$step>>2]|0)==0&(HEAP32[$step+4>>2]|0)==0){label=4;break}else{label=5;break};case 4:_cvError(-210,6968,13864,15536,294);label=19;break;case 5:if(($3|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-27,6968,13504,15536,297);label=19;break;case 7:if(($2|0)<=0){label=9;break}else{label=8;break};case 8:if(($2|0)>32){label=9;break}else{label=10;break};case 9:_cvError(-211,6968,13e3,15536,301);label=19;break;case 10:$i=$2-1|0;label=11;break;case 11:if(($i|0)>=0){label=12;break}else{label=18;break};case 12:if((HEAP32[$3+($i<<2)>>2]|0)<=0){label=13;break}else{label=14;break};case 13:_cvError(-201,6968,12648,15536,306);label=19;break;case 14:HEAP32[$1+20+($i<<3)>>2]=HEAP32[$3+($i<<2)>>2];$60$1=HEAP32[$step+4>>2]|0;$$etemp$7$1=0;if(($60$1|0)>($$etemp$7$1|0)|($60$1|0)==($$etemp$7$1|0)&(HEAP32[$step>>2]|0)>>>0>2147483647>>>0){label=15;break}else{label=16;break};case 15:_cvError(-211,6968,12520,15536,309);label=19;break;case 16:HEAP32[$1+20+($i<<3)+4>>2]=HEAP32[$step>>2];$74=HEAP32[$3+($i<<2)>>2]|0;$77$0=___muldi3(HEAP32[$step>>2]|0,HEAP32[$step+4>>2]|0,$74,($74|0)<0?-1:0)|0;HEAP32[$step>>2]=$77$0;HEAP32[$step+4>>2]=tempRet0;label=17;break;case 17:$i=$i-1|0;label=11;break;case 18:$82$1=HEAP32[$step+4>>2]|0;$$etemp$16$1=0;HEAP32[$1>>2]=1111687168|(($82$1|0)<=($$etemp$16$1|0)&(($82$1|0)<($$etemp$16$1|0)|(HEAP32[$step>>2]|0)>>>0<=2147483647>>>0)?16384:0)|$4;HEAP32[$1+4>>2]=$2;HEAP32[$1+16>>2]=$data;HEAP32[$1+8>>2]=0;HEAP32[$1+12>>2]=0;$result=$1;label=19;break;case 19:if((_cvGetErrStatus()|0)<0){label=20;break}else{label=22;break};case 20:if(($1|0)!=0){label=21;break}else{label=22;break};case 21:HEAP32[$1>>2]=0;HEAP32[$1+16>>2]=0;label=22;break;case 22:STACKTOP=sp;return $result|0}return 0}
function _cvCreateMatND($dims,$sizes,$type){$dims=$dims|0;$sizes=$sizes|0;$type=$type|0;var $arr=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$arr=sp|0;HEAP32[$arr>>2]=0;HEAP32[$arr>>2]=_cvCreateMatNDHeader($dims,$sizes,$type)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,6848,11432,15536,343);label=6;break;case 3:_cvCreateData(HEAP32[$arr>>2]|0);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6848,11432,15536,344);label=6;break;case 5:label=6;break;case 6:if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvReleaseMatND($arr);label=8;break;case 8:STACKTOP=sp;return HEAP32[$arr>>2]|0}return 0}function _cvCreateMatNDHeader($dims,$sizes,$type){$dims=$dims|0;$sizes=$sizes|0;$type=$type|0;var $1=0,$arr=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$arr=sp|0;$1=$dims;HEAP32[$arr>>2]=0;if(($1|0)<=0){label=3;break}else{label=2;break};case 2:if(($1|0)>32){label=3;break}else{label=4;break};case 3:_cvError(-211,6824,13e3,15536,367);label=9;break;case 4:HEAP32[$arr>>2]=_cvAlloc(276)|0;if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6824,11432,15536,369);label=9;break;case 6:_cvInitMatNDHeader(HEAP32[$arr>>2]|0,$1,$sizes,$type,0)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6824,11432,15536,371);label=9;break;case 8:HEAP32[(HEAP32[$arr>>2]|0)+12>>2]=1;label=9;break;case 9:if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvReleaseMatND($arr);label=11;break;case 11:STACKTOP=sp;return HEAP32[$arr>>2]|0}return 0}function _cvReleaseMatND($mat){$mat=$mat|0;_cvReleaseMat($mat);return}function _cvCloneMatND($src){$src=$src|0;var $1=0,$dst=0,$i=0,$sizes=0,$16=0,label=0,sp=0;sp=STACKTOP;label=1;while(1)switch(label|0){case 1:$1=$src;$dst=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=4;break}else{label=3;break};case 3:_cvError(-5,6800,12288,15536,395);label=17;break;case 4:$16=STACKTOP;STACKTOP=STACKTOP+(HEAP32[$1+4>>2]<<2)|0;STACKTOP=STACKTOP+7>>3<<3;$sizes=$16;$i=0;label=5;break;case 5:if(($i|0)<(HEAP32[$1+4>>2]|0)){label=6;break}else{label=8;break};case 6:HEAP32[$sizes+($i<<2)>>2]=HEAP32[$1+20+($i<<3)>>2];label=7;break;case 7:$i=$i+1|0;label=5;break;case 8:$dst=_cvCreateMatNDHeader(HEAP32[$1+4>>2]|0,$sizes,HEAP32[$1>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-1,6800,11432,15536,402);label=17;break;case 10:if((HEAP32[$1+16>>2]|0)!=0){label=11;break}else{label=16;break};case 11:_cvCreateData($dst);if((_cvGetErrStatus()|0)<0){label=12;break}else{label=13;break};case 12:_cvError(-1,6800,11432,15536,406);label=17;break;case 13:_cvCopy($1,$dst,0);if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,6800,11432,15536,407);label=17;break;case 15:label=16;break;case 16:label=17;break;case 17:STACKTOP=sp;return $dst|0}return 0}function _cvInitNArrayIterator($count,$arrs,$mask,$stubs,$iterator,$flags){$count=$count|0;$arrs=$arrs|0;$mask=$mask|0;$stubs=$stubs|0;$iterator=$iterator|0;$flags=$flags|0;var $1=0,$2=0,$4=0,$5=0,$6=0,$dims=0,$i=0,$j=0,$size=0,$dim0=0,$step=0,$hdr0=0,$arr=0,$hdr=0,$coi=0,$7=0,$42=0,$108=0,$202=0,$219=0,$229=0,$232$0=0,$241$1=0,$$etemp$10$1=0,$302=0,$303=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+24|0;label=1;while(1)switch(label|0){case 1:$step=sp|0;$coi=sp+8|0;$7=sp+16|0;$1=$count;$2=$arrs;$4=$stubs;$5=$iterator;$6=$flags;$dims=-1;$dim0=-1;$hdr0=0;if(($1|0)<1){label=3;break}else{label=2;break};case 2:if(($1|0)>10){label=3;break}else{label=4;break};case 3:_cvError(-211,6768,12064,15536,494);label=77;break;case 4:if(($2|0)!=0){label=5;break}else{label=6;break};case 5:if(($4|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-27,6768,11952,15536,497);label=77;break;case 7:if(($5|0)!=0){label=9;break}else{label=8;break};case 8:_cvError(-27,6768,11872,15536,500);label=77;break;case 9:$i=0;label=10;break;case 10:if(($i|0)<=($1|0)){label=11;break}else{label=68;break};case 11:if(($i|0)<($1|0)){label=12;break}else{label=13;break};case 12:$42=HEAP32[$2+($i<<2)>>2]|0;label=14;break;case 13:$42=$mask;label=14;break;case 14:$arr=$42;if(($arr|0)!=0){label=18;break}else{label=15;break};case 15:if(($i|0)<($1|0)){label=16;break}else{label=17;break};case 16:_cvError(-27,6768,11952,15536,510);label=77;break;case 17:label=68;break;case 18:if(($arr|0)!=0){label=19;break}else{label=22;break};case 19:if((HEAP32[$arr>>2]&-65536|0)==1111687168){label=20;break}else{label=22;break};case 20:if((HEAP32[$arr+16>>2]|0)!=0){label=21;break}else{label=22;break};case 21:$hdr=$arr;label=27;break;case 22:HEAP32[$coi>>2]=0;$hdr=__ZL10cvGetMatNDPKvP7CvMatNDPi($arr,$4+($i*276|0)|0,$coi)|0;if((_cvGetErrStatus()|0)<0){label=23;break}else{label=24;break};case 23:_cvError(-1,6768,11432,15536,519);label=77;break;case 24:if((HEAP32[$coi>>2]|0)!=0){label=25;break}else{label=26;break};case 25:_cvError(-24,6768,11784,15536,521);label=77;break;case 26:label=27;break;case 27:HEAP32[$5+184+($i<<2)>>2]=$hdr;if(($i|0)>0){label=28;break}else{label=54;break};case 28:if((HEAP32[$hdr+4>>2]|0)!=(HEAP32[$hdr0+4>>2]|0)){label=29;break}else{label=30;break};case 29:_cvError(-209,6768,11688,15536,530);label=77;break;case 30:if(($i|0)<($1|0)){label=31;break}else{label=42;break};case 31:$108=$6&3;if(($108|0)==0){label=32;break}else if(($108|0)==1){label=35;break}else if(($108|0)==2){label=38;break}else{label=41;break};case 32:if(((HEAP32[$hdr>>2]^HEAP32[$hdr0>>2])&511|0)==0){label=34;break}else{label=33;break};case 33:_cvError(-205,6768,11600,15536,539);label=77;break;case 34:label=41;break;case 35:if(((HEAP32[$hdr>>2]^HEAP32[$hdr0>>2])&504|0)==0){label=37;break}else{label=36;break};case 36:_cvError(-205,6768,11512,15536,544);label=77;break;case 37:label=41;break;case 38:if(((HEAP32[$hdr>>2]^HEAP32[$hdr0>>2])&504|0)==0){label=40;break}else{label=39;break};case 39:_cvError(-205,6768,11392,15536,549);label=77;break;case 40:label=41;break;case 41:label=45;break;case 42:if((HEAP32[$hdr>>2]&510|0)==0){label=44;break}else{label=43;break};case 43:_cvError(-208,6768,11216,15536,556);label=77;break;case 44:label=45;break;case 45:if(($6&4|0)!=0){label=53;break}else{label=46;break};case 46:$j=0;label=47;break;case 47:if(($j|0)<(HEAP32[$hdr+4>>2]|0)){label=48;break}else{label=52;break};case 48:if((HEAP32[$hdr+20+($j<<3)>>2]|0)!=(HEAP32[$hdr0+20+($j<<3)>>2]|0)){label=49;break}else{label=50;break};case 49:_cvError(-209,6768,11088,15536,564);label=77;break;case 50:label=51;break;case 51:$j=$j+1|0;label=47;break;case 52:label=53;break;case 53:label=55;break;case 54:$hdr0=$hdr;label=55;break;case 55:$202=((HEAP32[$hdr>>2]&504)>>3)+1<<(47696>>>((HEAP32[$hdr>>2]&7)<<1>>>0)&3);HEAP32[$step>>2]=$202;HEAP32[$step+4>>2]=($202|0)<0?-1:0;$j=(HEAP32[$hdr+4>>2]|0)-1|0;label=56;break;case 56:if(($j|0)>($dim0|0)){label=57;break}else{label=61;break};case 57:$219=HEAP32[$hdr+20+($j<<3)+4>>2]|0;if((HEAP32[$step>>2]|0)!=($219|0)|(HEAP32[$step+4>>2]|0)!=((($219|0)<0?-1:0)|0)){label=58;break}else{label=59;break};case 58:label=61;break;case 59:$229=HEAP32[$hdr+20+($j<<3)>>2]|0;$232$0=___muldi3(HEAP32[$step>>2]|0,HEAP32[$step+4>>2]|0,$229,($229|0)<0?-1:0)|0;HEAP32[$step>>2]=$232$0;HEAP32[$step+4>>2]=tempRet0;label=60;break;case 60:$j=$j-1|0;label=56;break;case 61:if(($j|0)==($dim0|0)){label=62;break}else{label=64;break};case 62:$241$1=HEAP32[$step+4>>2]|0;$$etemp$10$1=0;if(($241$1|0)>($$etemp$10$1|0)|($241$1|0)==($$etemp$10$1|0)&(HEAP32[$step>>2]|0)>>>0>2147483647>>>0){label=63;break}else{label=64;break};case 63:$j=$j+1|0;label=64;break;case 64:if(($j|0)>($dim0|0)){label=65;break}else{label=66;break};case 65:$dim0=$j;label=66;break;case 66:HEAP32[$5+184+($i<<2)>>2]=$hdr;HEAP32[$5+16+($i<<2)>>2]=HEAP32[$hdr+16>>2];label=67;break;case 67:$i=$i+1|0;label=10;break;case 68:$size=1;$j=(HEAP32[$hdr0+4>>2]|0)-1|0;label=69;break;case 69:if(($j|0)>($dim0|0)){label=70;break}else{label=72;break};case 70:$size=Math_imul($size,HEAP32[$hdr0+20+($j<<3)>>2]|0)|0;label=71;break;case 71:$j=$j-1|0;label=69;break;case 72:$dims=$dim0+1|0;HEAP32[$5+4>>2]=$dims;HEAP32[$5>>2]=$1;__Z6cvSizeii($7,$size,1);$302=$5+8|0;$303=$7;HEAP32[$302>>2]=HEAP32[$303>>2];HEAP32[$302+4>>2]=HEAP32[$303+4>>2];$i=0;label=73;break;case 73:if(($i|0)<($dims|0)){label=74;break}else{label=76;break};case 74:HEAP32[$5+56+($i<<2)>>2]=HEAP32[$hdr0+20+($i<<3)>>2];label=75;break;case 75:$i=$i+1|0;label=73;break;case 76:label=77;break;case 77:STACKTOP=sp;return $dims|0}return 0}function _cvNextNArraySlice($iterator){$iterator=$iterator|0;var $1=0,$i=0,$dims=0,$size=0,$30=0,$41=0,$43=0,$76=0,$80=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$iterator;$size=0;$dims=HEAP32[$1+4>>2]|0;label=2;break;case 2:if(($dims|0)>0){label=3;break}else{label=15;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$1>>2]|0)){label=5;break}else{label=7;break};case 5:$30=$1+16+($i<<2)|0;HEAP32[$30>>2]=(HEAP32[$30>>2]|0)+(HEAP32[(HEAP32[$1+184+($i<<2)>>2]|0)+20+($dims-1<<3)+4>>2]|0);label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:$41=$1+56+($dims-1<<2)|0;$43=(HEAP32[$41>>2]|0)-1|0;HEAP32[$41>>2]=$43;if(($43|0)>0){label=8;break}else{label=9;break};case 8:label=15;break;case 9:$size=HEAP32[(HEAP32[$1+184>>2]|0)+20+($dims-1<<3)>>2]|0;$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$1>>2]|0)){label=11;break}else{label=13;break};case 11:$76=Math_imul($size,HEAP32[(HEAP32[$1+184+($i<<2)>>2]|0)+20+($dims-1<<3)+4>>2]|0)|0;$80=$1+16+($i<<2)|0;HEAP32[$80>>2]=(HEAP32[$80>>2]|0)+(-$76|0);label=12;break;case 12:$i=$i+1|0;label=10;break;case 13:HEAP32[$1+56+($dims-1<<2)>>2]=$size;label=14;break;case 14:$dims=$dims-1|0;label=2;break;case 15:return($dims|0)>0|0}return 0}function __ZL10cvGetMatNDPKvP7CvMatNDPi($arr,$matnd,$coi){$arr=$arr|0;$matnd=$matnd|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$result=0,$mat=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;label=1;while(1)switch(label|0){case 1:$1=$arr;$2=$matnd;$3=$coi;$result=0;if(($3|0)!=0){label=2;break}else{label=3;break};case 2:HEAP32[$3>>2]=0;label=3;break;case 3:if(($2|0)!=0){label=4;break}else{label=5;break};case 4:if(($1|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-27,18328,8032,15536,429);label=25;break;case 6:if(($1|0)!=0){label=7;break}else{label=11;break};case 7:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=8;break}else{label=11;break};case 8:if((HEAP32[$1+16>>2]|0)!=0){label=10;break}else{label=9;break};case 9:_cvError(-27,18328,7992,15536,434);label=25;break;case 10:$result=$1;label=24;break;case 11:$mat=$1;if(($mat|0)!=0){label=12;break}else{label=16;break};case 12:if((HEAP32[$mat>>2]|0)==112){label=13;break}else{label=16;break};case 13:$mat=_cvGetMat($mat,sp|0,$3,0)|0;if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,18328,11432,15536,443);label=25;break;case 15:label=16;break;case 16:if(($mat|0)!=0){label=17;break}else{label=20;break};case 17:if((HEAP32[$mat>>2]&-65536|0)==1111621632){label=18;break}else{label=20;break};case 18:if((HEAP32[$mat+24>>2]|0)>0){label=19;break}else{label=20;break};case 19:if((HEAP32[$mat+20>>2]|0)>0){label=21;break}else{label=20;break};case 20:_cvError(-5,18328,7616,15536,446);label=25;break;case 21:if((HEAP32[$mat+16>>2]|0)!=0){label=23;break}else{label=22;break};case 22:_cvError(-27,18328,7688,15536,449);label=25;break;case 23:HEAP32[$2+16>>2]=HEAP32[$mat+16>>2];HEAP32[$2+8>>2]=0;HEAP32[$2+12>>2]=0;HEAP32[$2>>2]=HEAP32[$mat>>2];HEAP32[$2+4>>2]=2;HEAP32[$2+20>>2]=HEAP32[$mat+20>>2];HEAP32[$2+24>>2]=HEAP32[$mat+4>>2];HEAP32[$2+28>>2]=HEAP32[$mat+24>>2];HEAP32[$2+32>>2]=((HEAP32[$mat>>2]&504)>>3)+1<<(47696>>>((HEAP32[$mat>>2]&7)<<1>>>0)&3);$result=$2;label=24;break;case 24:label=25;break;case 25:STACKTOP=sp;return $result|0}return 0}function _cvCreateSparseMat($dims,$sizes,$type){$dims=$dims|0;$sizes=$sizes|0;$type=$type|0;var $1=0,$2=0,$3=0,$arr=0,$pix_size1=0,$pix_size=0,$i=0,$size=0,$storage=0,$56=0,$84=0,$92=0,$109=0,$124=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$arr=sp|0;$1=$dims;$2=$sizes;$3=$type;HEAP32[$arr>>2]=0;$3=$3&511;$pix_size1=1212424721>>>(($3&7)<<2>>>0)&15;$pix_size=Math_imul($pix_size1,(($3&504)>>3)+1|0)|0;if(($pix_size|0)==0){label=2;break}else{label=3;break};case 2:_cvError(-210,6520,13864,15536,654);label=26;break;case 3:if(($1|0)<=0){label=5;break}else{label=4;break};case 4:if(($1|0)>65536){label=5;break}else{label=6;break};case 5:_cvError(-211,6520,10952,15536,657);label=26;break;case 6:if(($2|0)!=0){label=8;break}else{label=7;break};case 7:_cvError(-27,6520,13504,15536,660);label=26;break;case 8:$i=0;label=9;break;case 9:if(($i|0)<($1|0)){label=10;break}else{label=14;break};case 10:if((HEAP32[$2+($i<<2)>>2]|0)<=0){label=11;break}else{label=12;break};case 11:_cvError(-201,6520,12648,15536,665);label=26;break;case 12:label=13;break;case 13:$i=$i+1|0;label=9;break;case 14:if(0<($1-32|0)){label=15;break}else{label=16;break};case 15:$56=$1-32|0;label=17;break;case 16:$56=0;label=17;break;case 17:HEAP32[$arr>>2]=_cvAlloc(($56<<2)+164|0)|0;if((_cvGetErrStatus()|0)<0){label=18;break}else{label=19;break};case 18:_cvError(-1,6520,11432,15536,668);label=26;break;case 19:HEAP32[HEAP32[$arr>>2]>>2]=1111752704|$3;HEAP32[(HEAP32[$arr>>2]|0)+4>>2]=$1;HEAP32[(HEAP32[$arr>>2]|0)+8>>2]=0;HEAP32[(HEAP32[$arr>>2]|0)+12>>2]=1;_memcpy((HEAP32[$arr>>2]|0)+36|0,$2|0,$1<<2)|0;$84=__Z7cvAlignii(8,$pix_size1)|0;HEAP32[(HEAP32[$arr>>2]|0)+28>>2]=$84;$92=__Z7cvAlignii((HEAP32[(HEAP32[$arr>>2]|0)+28>>2]|0)+$pix_size|0,4)|0;HEAP32[(HEAP32[$arr>>2]|0)+32>>2]=$92;$size=__Z7cvAlignii((HEAP32[(HEAP32[$arr>>2]|0)+32>>2]|0)+($1<<2)|0,8)|0;$storage=_cvCreateMemStorage(4096)|0;if((_cvGetErrStatus()|0)<0){label=20;break}else{label=21;break};case 20:_cvError(-1,6520,11432,15536,680);label=26;break;case 21:$109=_cvCreateSet(0,64,$size,$storage)|0;HEAP32[(HEAP32[$arr>>2]|0)+16>>2]=$109;if((_cvGetErrStatus()|0)<0){label=22;break}else{label=23;break};case 22:_cvError(-1,6520,11432,15536,681);label=26;break;case 23:HEAP32[(HEAP32[$arr>>2]|0)+24>>2]=1024;$size=HEAP32[(HEAP32[$arr>>2]|0)+24>>2]<<2;$124=_cvAlloc($size)|0;HEAP32[(HEAP32[$arr>>2]|0)+20>>2]=$124;if((_cvGetErrStatus()|0)<0){label=24;break}else{label=25;break};case 24:_cvError(-1,6520,11432,15536,686);label=26;break;case 25:_memset(HEAP32[(HEAP32[$arr>>2]|0)+20>>2]|0,0,$size|0);label=26;break;case 26:if((_cvGetErrStatus()|0)<0){label=27;break}else{label=28;break};case 27:_cvReleaseSparseMat($arr);label=28;break;case 28:STACKTOP=sp;return HEAP32[$arr>>2]|0}return 0}function _cvReleaseSparseMat($array){$array=$array|0;var $1=0,$arr=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$array;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-9,6480,28352,15536,707);label=9;break;case 3:if((HEAP32[$1>>2]|0)!=0){label=4;break}else{label=8;break};case 4:$arr=HEAP32[$1>>2]|0;if(($arr|0)!=0){label=5;break}else{label=6;break};case 5:if((HEAP32[$arr>>2]&-65536|0)==1111752704){label=7;break}else{label=6;break};case 6:_cvError(-206,6480,28352,15536,714);label=9;break;case 7:HEAP32[$1>>2]=0;_cvReleaseMemStorage((HEAP32[$arr+16>>2]|0)+44|0);_cvFree_(HEAP32[$arr+20>>2]|0);HEAP32[$arr+20>>2]=0;_cvFree_($arr);$arr=0;label=8;break;case 8:label=9;break;case 9:return}}function _cvCloneSparseMat($src){$src=$src|0;var $1=0,$dst=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$dst=sp|0;$1=$src;HEAP32[$dst>>2]=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=4;break}else{label=3;break};case 3:_cvError(-5,6440,10816,15536,738);label=9;break;case 4:HEAP32[$dst>>2]=_cvCreateSparseMat(HEAP32[$1+4>>2]|0,$1+36|0,HEAP32[$1>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6440,11432,15536,740);label=9;break;case 6:_cvCopy($1,HEAP32[$dst>>2]|0,0);if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6440,11432,15536,741);label=9;break;case 8:label=9;break;case 9:if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvReleaseSparseMat($dst);label=11;break;case 11:STACKTOP=sp;return HEAP32[$dst>>2]|0}return 0}function _cvInitSparseMatIterator($mat,$iterator){$mat=$mat|0;$iterator=$iterator|0;var $1=0,$2=0,$node=0,$idx=0,$43=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$mat;$2=$iterator;$node=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=4;break}else{label=3;break};case 3:_cvError(-5,18344,10704,15536,764);label=13;break;case 4:if(($2|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-27,18344,10648,15536,767);label=13;break;case 6:HEAP32[$2>>2]=$1;HEAP32[$2+4>>2]=0;$idx=0;label=7;break;case 7:if(($idx|0)<(HEAP32[$1+24>>2]|0)){label=8;break}else{label=12;break};case 8:if((HEAP32[(HEAP32[$1+20>>2]|0)+($idx<<2)>>2]|0)!=0){label=9;break}else{label=10;break};case 9:$43=HEAP32[(HEAP32[$1+20>>2]|0)+($idx<<2)>>2]|0;HEAP32[$2+4>>2]=$43;$node=$43;label=12;break;case 10:label=11;break;case 11:$idx=$idx+1|0;label=7;break;case 12:HEAP32[$2+8>>2]=$idx;label=13;break;case 13:return $node|0}return 0}function _cvReleaseData($arr){$arr=$arr|0;var $1=0,$img=0,$ptr=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;if(($1|0)!=0){label=2;break}else{label=5;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=5;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=5;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=7;break}else{label=5;break};case 5:if(($1|0)!=0){label=6;break}else{label=8;break};case 6:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=7;break}else{label=8;break};case 7:_cvDecRefData($1);label=16;break;case 8:if(($1|0)!=0){label=9;break}else{label=14;break};case 9:if((HEAP32[$1>>2]|0)==112){label=10;break}else{label=14;break};case 10:$img=$1;if((HEAP32[7592]|0)!=0){label=12;break}else{label=11;break};case 11:$ptr=HEAP32[$img+108>>2]|0;HEAP32[$img+108>>2]=0;HEAP32[$img+68>>2]=0;_cvFree_($ptr);$ptr=0;label=13;break;case 12:FUNCTION_TABLE_vii[HEAP32[7592]&1023]($img,2);label=13;break;case 13:label=15;break;case 14:_cvError(-5,6248,10280,15536,1171);label=17;break;case 15:label=16;break;case 16:label=17;break;case 17:return}}function _cvPtr2D($arr,$y,$x,$_type){$arr=$arr|0;$y=$y|0;$x=$x|0;$_type=$_type|0;var $1=0,$2=0,$3=0,$4=0,$ptr=0,$mat=0,$type=0,$img=0,$pix_size=0,$width=0,$height=0,$coi=0,$type1=0,$mat2=0,$idx=0,$66=0,$72=0,$146=0,$201=0,$289=0,$297=0,$326=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$idx=sp|0;$1=$arr;$2=$y;$3=$x;$4=$_type;$ptr=0;if(($1|0)!=0){label=2;break}else{label=12;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=12;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=12;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=12;break};case 5:if((HEAP32[$1+16>>2]|0)!=0){label=6;break}else{label=12;break};case 6:$mat=$1;if($2>>>0>=(HEAP32[$mat+20>>2]|0)>>>0){label=8;break}else{label=7;break};case 7:if($3>>>0>=(HEAP32[$mat+24>>2]|0)>>>0){label=8;break}else{label=9;break};case 8:_cvError(-211,6032,8944,15536,2023);label=51;break;case 9:$type=HEAP32[$mat>>2]&511;if(($4|0)!=0){label=10;break}else{label=11;break};case 10:HEAP32[$4>>2]=$type;label=11;break;case 11:$66=HEAP32[$mat+16>>2]|0;$72=$66+(Math_imul($2,HEAP32[$mat+4>>2]|0)|0)|0;$ptr=$72+(Math_imul($3,(($type&504)>>3)+1<<(47696>>>(($type&7)<<1>>>0)&3))|0)|0;label=50;break;case 12:if(($1|0)!=0){label=13;break}else{label=33;break};case 13:if((HEAP32[$1>>2]|0)==112){label=14;break}else{label=33;break};case 14:if((HEAP32[$1+68>>2]|0)!=0){label=15;break}else{label=33;break};case 15:$img=$1;$pix_size=(HEAP32[$img+16>>2]&255)>>3;$ptr=HEAP32[$img+68>>2]|0;if((HEAP32[$img+28>>2]|0)==0){label=16;break}else{label=17;break};case 16:$pix_size=Math_imul($pix_size,HEAP32[$img+8>>2]|0)|0;label=17;break;case 17:if((HEAP32[$img+48>>2]|0)!=0){label=18;break}else{label=23;break};case 18:$width=HEAP32[(HEAP32[$img+48>>2]|0)+12>>2]|0;$height=HEAP32[(HEAP32[$img+48>>2]|0)+16>>2]|0;$146=Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+8>>2]|0,HEAP32[$img+72>>2]|0)|0;$ptr=$ptr+($146+(Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+4>>2]|0,$pix_size)|0))|0;if((HEAP32[$img+28>>2]|0)!=0){label=19;break}else{label=22;break};case 19:$coi=HEAP32[HEAP32[$img+48>>2]>>2]|0;if(($coi|0)!=0){label=21;break}else{label=20;break};case 20:_cvError(-24,6032,8816,15536,2054);label=51;break;case 21:$ptr=$ptr+(Math_imul($coi-1|0,HEAP32[$img+64>>2]|0)|0)|0;label=22;break;case 22:label=24;break;case 23:$width=HEAP32[$img+40>>2]|0;$height=HEAP32[$img+44>>2]|0;label=24;break;case 24:if($2>>>0>=$height>>>0){label=26;break}else{label=25;break};case 25:if($3>>>0>=$width>>>0){label=26;break}else{label=27;break};case 26:_cvError(-211,6032,8944,15536,2066);label=51;break;case 27:$201=Math_imul($2,HEAP32[$img+72>>2]|0)|0;$ptr=$ptr+($201+(Math_imul($3,$pix_size)|0))|0;if(($4|0)!=0){label=28;break}else{label=32;break};case 28:$type1=HEAP8[784+(((HEAP32[$img+16>>2]&255)>>2)+((HEAP32[$img+16>>2]|0)<0))|0]|0;if(($type1|0)<0){label=30;break}else{label=29;break};case 29:if(((HEAP32[$img+8>>2]|0)-1|0)>>>0>3){label=30;break}else{label=31;break};case 30:_cvError(-210,6032,28352,15536,2074);label=51;break;case 31:HEAP32[$4>>2]=$type1+((HEAP32[$img+8>>2]|0)-1<<3);label=32;break;case 32:label=49;break;case 33:if(($1|0)!=0){label=34;break}else{label=43;break};case 34:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=35;break}else{label=43;break};case 35:if((HEAP32[$1+16>>2]|0)!=0){label=36;break}else{label=43;break};case 36:$mat2=$1;if((HEAP32[$mat2+4>>2]|0)!=2){label=39;break}else{label=37;break};case 37:if($2>>>0>=(HEAP32[$mat2+20>>2]|0)>>>0){label=39;break}else{label=38;break};case 38:if($3>>>0>=(HEAP32[$mat2+28>>2]|0)>>>0){label=39;break}else{label=40;break};case 39:_cvError(-211,6032,8944,15536,2086);label=51;break;case 40:$289=HEAP32[$mat2+16>>2]|0;$297=$289+(Math_imul($2,HEAP32[$mat2+24>>2]|0)|0)|0;$ptr=$297+(Math_imul($3,HEAP32[$mat2+32>>2]|0)|0)|0;if(($4|0)!=0){label=41;break}else{label=42;break};case 41:HEAP32[$4>>2]=HEAP32[$mat2>>2]&511;label=42;break;case 42:label=48;break;case 43:if(($1|0)!=0){label=44;break}else{label=46;break};case 44:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=45;break}else{label=46;break};case 45:$326=$idx|0;HEAP32[$326>>2]=$2;HEAP32[$326+4>>2]=$3;$ptr=__ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj($1,$idx|0,$4,1,0)|0;label=47;break;case 46:_cvError(-5,6032,10280,15536,2099);label=51;break;case 47:label=48;break;case 48:label=49;break;case 49:label=50;break;case 50:label=51;break;case 51:STACKTOP=sp;return $ptr|0}return 0}function _cvGetElemType($arr){$arr=$arr|0;var $1=0,$type=0,$img=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;$type=-1;if(($1|0)!=0){label=2;break}else{label=5;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=5;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=5;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=9;break}else{label=5;break};case 5:if(($1|0)!=0){label=6;break}else{label=7;break};case 6:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=9;break}else{label=7;break};case 7:if(($1|0)!=0){label=8;break}else{label=10;break};case 8:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=9;break}else{label=10;break};case 9:$type=HEAP32[$1>>2]&511;label=16;break;case 10:if(($1|0)!=0){label=11;break}else{label=14;break};case 11:if((HEAP32[$1>>2]|0)==112){label=12;break}else{label=14;break};case 12:if((HEAP32[$1+68>>2]|0)!=0){label=13;break}else{label=14;break};case 13:$img=$1;$type=(HEAP8[784+(((HEAP32[$img+16>>2]&255)>>2)+((HEAP32[$img+16>>2]|0)<0))|0]|0)+((HEAP32[$img+8>>2]|0)-1<<3)|0;label=15;break;case 14:_cvError(-5,6216,10280,15536,1279);label=17;break;case 15:label=16;break;case 16:label=17;break;case 17:return $type|0}return 0}function _cvGetDims($arr,$sizes){$arr=$arr|0;$sizes=$sizes|0;var $1=0,$2=0,$dims=0,$mat=0,$img=0,$mat1=0,$i=0,$mat2=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;$2=$sizes;$dims=-1;if(($1|0)!=0){label=2;break}else{label=8;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=8;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=8;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=8;break};case 5:$mat=$1;$dims=2;if(($2|0)!=0){label=6;break}else{label=7;break};case 6:HEAP32[$2>>2]=HEAP32[$mat+20>>2];HEAP32[$2+4>>2]=HEAP32[$mat+24>>2];label=7;break;case 7:label=32;break;case 8:if(($1|0)!=0){label=9;break}else{label=14;break};case 9:if((HEAP32[$1>>2]|0)==112){label=10;break}else{label=14;break};case 10:if((HEAP32[$1+68>>2]|0)!=0){label=11;break}else{label=14;break};case 11:$img=$1;$dims=2;if(($2|0)!=0){label=12;break}else{label=13;break};case 12:HEAP32[$2>>2]=HEAP32[$img+44>>2];HEAP32[$2+4>>2]=HEAP32[$img+40>>2];label=13;break;case 13:label=31;break;case 14:if(($1|0)!=0){label=15;break}else{label=23;break};case 15:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=16;break}else{label=23;break};case 16:$mat1=$1;$dims=HEAP32[$mat1+4>>2]|0;if(($2|0)!=0){label=17;break}else{label=22;break};case 17:$i=0;label=18;break;case 18:if(($i|0)<($dims|0)){label=19;break}else{label=21;break};case 19:HEAP32[$2+($i<<2)>>2]=HEAP32[$mat1+20+($i<<3)>>2];label=20;break;case 20:$i=$i+1|0;label=18;break;case 21:label=22;break;case 22:label=30;break;case 23:if(($1|0)!=0){label=24;break}else{label=28;break};case 24:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=25;break}else{label=28;break};case 25:$mat2=$1;$dims=HEAP32[$mat2+4>>2]|0;if(($2|0)!=0){label=26;break}else{label=27;break};case 26:_memcpy($2|0,$mat2+36|0,$dims<<2)|0;label=27;break;case 27:label=29;break;case 28:_cvError(-5,6200,10280,15536,1340);label=33;break;case 29:label=30;break;case 30:label=31;break;case 31:label=32;break;case 32:label=33;break;case 33:return $dims|0}return 0}function _cvGetSize($agg_result,$arr){$agg_result=$agg_result|0;$arr=$arr|0;var $1=0,$mat=0,$img=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;_memset($agg_result|0,0,8);if(($1|0)!=0){label=2;break}else{label=6;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=6;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=6;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=6;break};case 5:$mat=$1;HEAP32[$agg_result>>2]=HEAP32[$mat+24>>2];HEAP32[$agg_result+4>>2]=HEAP32[$mat+20>>2];label=14;break;case 6:if(($1|0)!=0){label=7;break}else{label=12;break};case 7:if((HEAP32[$1>>2]|0)==112){label=8;break}else{label=12;break};case 8:$img=$1;if((HEAP32[$img+48>>2]|0)!=0){label=9;break}else{label=10;break};case 9:HEAP32[$agg_result>>2]=HEAP32[(HEAP32[$img+48>>2]|0)+12>>2];HEAP32[$agg_result+4>>2]=HEAP32[(HEAP32[$img+48>>2]|0)+16>>2];label=11;break;case 10:HEAP32[$agg_result>>2]=HEAP32[$img+40>>2];HEAP32[$agg_result+4>>2]=HEAP32[$img+44>>2];label=11;break;case 11:label=13;break;case 12:_cvError(-5,6168,9296,15536,1453);label=15;break;case 13:label=14;break;case 14:label=15;break;case 15:return}}function _cvGetMat($array,$mat,$pCOI,$allowND){$array=$array|0;$mat=$mat|0;$pCOI=$pCOI|0;$allowND=$allowND|0;var $2=0,$3=0,$result=0,$src=0,$coi=0,$img=0,$depth=0,$order=0,$type=0,$type1=0,$type2=0,$matnd=0,$i=0,$size1=0,$size2=0,$110=0,$115=0,$119=0,$130=0,$140=0,$157=0,$190=0,$195=0,$199=0,$209=0,$226=0,$341=0,$392=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$mat;$3=$pCOI;$result=0;$src=$array;$coi=0;if(($2|0)!=0){label=2;break}else{label=3;break};case 2:if(($src|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,5824,8032,15536,2780);label=58;break;case 4:if(($src|0)!=0){label=5;break}else{label=11;break};case 5:if((HEAP32[$src>>2]&-65536|0)==1111621632){label=6;break}else{label=11;break};case 6:if((HEAP32[$src+24>>2]|0)>0){label=7;break}else{label=11;break};case 7:if((HEAP32[$src+20>>2]|0)>0){label=8;break}else{label=11;break};case 8:if((HEAP32[$src+16>>2]|0)!=0){label=10;break}else{label=9;break};case 9:_cvError(-27,5824,7992,15536,2785);label=58;break;case 10:$result=$src;label=57;break;case 11:if(($src|0)!=0){label=12;break}else{label=36;break};case 12:if((HEAP32[$src>>2]|0)==112){label=13;break}else{label=36;break};case 13:$img=$src;if((HEAP32[$img+68>>2]|0)==0){label=14;break}else{label=15;break};case 14:_cvError(-27,5824,7960,15536,2795);label=58;break;case 15:$depth=HEAP8[784+(((HEAP32[$img+16>>2]&255)>>2)+((HEAP32[$img+16>>2]|0)<0))|0]|0;if(($depth|0)<0){label=16;break}else{label=17;break};case 16:_cvError(-17,5824,28352,15536,2799);label=58;break;case 17:$order=HEAP32[$img+28>>2]&((HEAP32[$img+8>>2]|0)>1?-1:0);if((HEAP32[$img+48>>2]|0)!=0){label=18;break}else{label=30;break};case 18:if(($order|0)==1){label=19;break}else{label=24;break};case 19:$type=$depth;if((HEAP32[HEAP32[$img+48>>2]>>2]|0)==0){label=20;break}else{label=21;break};case 20:_cvError(-206,5824,7896,15536,2811);label=58;break;case 21:$110=HEAP32[(HEAP32[$img+48>>2]|0)+16>>2]|0;$115=HEAP32[(HEAP32[$img+48>>2]|0)+12>>2]|0;$119=HEAP32[$img+68>>2]|0;$130=$119+(Math_imul((HEAP32[HEAP32[$img+48>>2]>>2]|0)-1|0,HEAP32[$img+64>>2]|0)|0)|0;$140=$130+(Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+8>>2]|0,HEAP32[$img+72>>2]|0)|0)|0;$157=$140+(Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+4>>2]|0,(($type&504)>>3)+1<<(47696>>>(($type&7)<<1>>>0)&3))|0)|0;_cvInitMatHeader($2,$110,$115,$type,$157,HEAP32[$img+72>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=22;break}else{label=23;break};case 22:_cvError(-1,5824,11432,15536,2818);label=58;break;case 23:label=29;break;case 24:$type1=$depth+((HEAP32[$img+8>>2]|0)-1<<3)|0;$coi=HEAP32[HEAP32[$img+48>>2]>>2]|0;if((HEAP32[$img+8>>2]|0)>64){label=25;break}else{label=26;break};case 25:_cvError(-15,5824,7800,15536,2827);label=58;break;case 26:$190=HEAP32[(HEAP32[$img+48>>2]|0)+16>>2]|0;$195=HEAP32[(HEAP32[$img+48>>2]|0)+12>>2]|0;$199=HEAP32[$img+68>>2]|0;$209=$199+(Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+8>>2]|0,HEAP32[$img+72>>2]|0)|0)|0;$226=$209+(Math_imul(HEAP32[(HEAP32[$img+48>>2]|0)+4>>2]|0,(($type1&504)>>3)+1<<(47696>>>(($type1&7)<<1>>>0)&3))|0)|0;_cvInitMatHeader($2,$190,$195,$type1,$226,HEAP32[$img+72>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=27;break}else{label=28;break};case 27:_cvError(-1,5824,11432,15536,2833);label=58;break;case 28:label=29;break;case 29:label=35;break;case 30:$type2=$depth+((HEAP32[$img+8>>2]|0)-1<<3)|0;if(($order|0)!=0){label=31;break}else{label=32;break};case 31:_cvError(-206,5824,7728,15536,2841);label=58;break;case 32:_cvInitMatHeader($2,HEAP32[$img+44>>2]|0,HEAP32[$img+40>>2]|0,$type2,HEAP32[$img+68>>2]|0,HEAP32[$img+72>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=33;break}else{label=34;break};case 33:_cvError(-1,5824,11432,15536,2844);label=58;break;case 34:label=35;break;case 35:$result=$2;label=56;break;case 36:if(($allowND|0)!=0){label=37;break}else{label=54;break};case 37:if(($src|0)!=0){label=38;break}else{label=54;break};case 38:if((HEAP32[$src>>2]&-65536|0)==1111687168){label=39;break}else{label=54;break};case 39:$matnd=$src;$size1=HEAP32[$matnd+20>>2]|0;$size2=1;if((HEAP32[$src+16>>2]|0)!=0){label=41;break}else{label=40;break};case 40:_cvError(-27,5824,7688,15536,2856);label=58;break;case 41:if((HEAP32[$matnd>>2]&16384|0)!=0){label=43;break}else{label=42;break};case 42:_cvError(-5,5824,9824,15536,2859);label=58;break;case 43:if((HEAP32[$matnd+4>>2]|0)>2){label=44;break}else{label=49;break};case 44:$i=1;label=45;break;case 45:if(($i|0)<(HEAP32[$matnd+4>>2]|0)){label=46;break}else{label=48;break};case 46:$size2=Math_imul($size2,HEAP32[$matnd+20+($i<<3)>>2]|0)|0;label=47;break;case 47:$i=$i+1|0;label=45;break;case 48:label=53;break;case 49:if((HEAP32[$matnd+4>>2]|0)==1){label=50;break}else{label=51;break};case 50:$341=1;label=52;break;case 51:$341=HEAP32[$matnd+28>>2]|0;label=52;break;case 52:$size2=$341;label=53;break;case 53:HEAP32[$2+8>>2]=0;HEAP32[$2+12>>2]=0;HEAP32[$2+16>>2]=HEAP32[$matnd+16>>2];HEAP32[$2+20>>2]=$size1;HEAP32[$2+24>>2]=$size2;HEAP32[$2>>2]=HEAP32[$matnd>>2]&511|1111621632|16384;HEAP32[$2+4>>2]=Math_imul($size2,((HEAP32[$matnd>>2]&504)>>3)+1<<(47696>>>((HEAP32[$matnd>>2]&7)<<1>>>0)&3))|0;$392=$2+4|0;HEAP32[$392>>2]=HEAP32[$392>>2]&(($size1|0)>1?-1:0);__ZL12icvCheckHugeP5CvMat($2);$result=$2;label=55;break;case 54:_cvError(-206,5824,7616,15536,2881);label=58;break;case 55:label=56;break;case 56:label=57;break;case 57:label=58;break;case 58:if(($3|0)!=0){label=59;break}else{label=60;break};case 59:HEAP32[$3>>2]=$coi;label=60;break;case 60:return $result|0}return 0}function _cvRawDataToScalar($data,$flags,$scalar){$data=$data|0;$flags=$flags|0;$scalar=$scalar|0;var $1=0,$2=0,$3=0,$cn=0,$17=0,$20=0,$40=0,$60=0,$77=0,$94=0,$111=0,$128=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$data;$2=$flags;$3=$scalar;$cn=(($2&504)>>3)+1|0;if(($cn-1|0)>>>0>=4){label=2;break}else{label=3;break};case 2:_cvError(-211,6096,9072,15536,1787);label=34;break;case 3:_memset($3|0,0,32);$17=$2&7;if(($17|0)==0){label=4;break}else if(($17|0)==1){label=8;break}else if(($17|0)==2){label=12;break}else if(($17|0)==3){label=16;break}else if(($17|0)==4){label=20;break}else if(($17|0)==5){label=24;break}else if(($17|0)==6){label=28;break}else{label=32;break};case 4:label=5;break;case 5:$20=$cn;$cn=$20-1|0;if(($20|0)!=0){label=6;break}else{label=7;break};case 6:HEAPF64[$3+($cn<<3)>>3]=(copyTempFloat(4224+((HEAPU8[$1+$cn|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=5;break;case 7:label=33;break;case 8:label=9;break;case 9:$40=$cn;$cn=$40-1|0;if(($40|0)!=0){label=10;break}else{label=11;break};case 10:HEAPF64[$3+($cn<<3)>>3]=(copyTempFloat(4224+((HEAP8[$1+$cn|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=9;break;case 11:label=33;break;case 12:label=13;break;case 13:$60=$cn;$cn=$60-1|0;if(($60|0)!=0){label=14;break}else{label=15;break};case 14:HEAPF64[$3+($cn<<3)>>3]=+((HEAPU16[$1+($cn<<1)>>1]|0)>>>0);label=13;break;case 15:label=33;break;case 16:label=17;break;case 17:$77=$cn;$cn=$77-1|0;if(($77|0)!=0){label=18;break}else{label=19;break};case 18:HEAPF64[$3+($cn<<3)>>3]=+(HEAP16[$1+($cn<<1)>>1]|0);label=17;break;case 19:label=33;break;case 20:label=21;break;case 21:$94=$cn;$cn=$94-1|0;if(($94|0)!=0){label=22;break}else{label=23;break};case 22:HEAPF64[$3+($cn<<3)>>3]=+(HEAP32[$1+($cn<<2)>>2]|0);label=21;break;case 23:label=33;break;case 24:label=25;break;case 25:$111=$cn;$cn=$111-1|0;if(($111|0)!=0){label=26;break}else{label=27;break};case 26:HEAPF64[$3+($cn<<3)>>3]=+HEAPF32[$1+($cn<<2)>>2];label=25;break;case 27:label=33;break;case 28:label=29;break;case 29:$128=$cn;$cn=$128-1|0;if(($128|0)!=0){label=30;break}else{label=31;break};case 30:HEAPF64[$3+($cn<<3)>>3]=+HEAPF64[$1+($cn<<3)>>3];label=29;break;case 31:label=33;break;case 32:_cvError(-17,6096,28352,15536,1823);label=34;break;case 33:label=34;break;case 34:return}}function __ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj($mat,$idx,$_type,$create_node,$precalc_hashval){$mat=$mat|0;$idx=$idx|0;$_type=$_type|0;$create_node=$create_node|0;$precalc_hashval=$precalc_hashval|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$ptr=0,$i=0,$tabidx=0,$hashval=0,$node=0,$t=0,$newtable=0,$newsize=0,$newrawsize=0,$iterator=0,$next=0,$newidx=0,$_icv_memcpy_i_=0,$_icv_memcpy_i_1=0,$143=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;while(1)switch(label|0){case 1:$iterator=sp|0;$1=$mat;$2=$idx;$3=$_type;$4=$create_node;$5=$precalc_hashval;$ptr=0;$hashval=0;if(($5|0)!=0){label=9;break}else{label=2;break};case 2:$i=0;label=3;break;case 3:if(($i|0)<(HEAP32[$1+4>>2]|0)){label=4;break}else{label=8;break};case 4:$t=HEAP32[$2+($i<<2)>>2]|0;if($t>>>0>=(HEAP32[$1+36+($i<<2)>>2]|0)>>>0){label=5;break}else{label=6;break};case 5:_cvError(-211,18120,14280,15536,809);label=50;break;case 6:$hashval=($hashval*33|0)+$t|0;label=7;break;case 7:$i=$i+1|0;label=3;break;case 8:label=10;break;case 9:$hashval=HEAP32[$5>>2]|0;label=10;break;case 10:$tabidx=$hashval&(HEAP32[$1+24>>2]|0)-1;$hashval=$hashval&2147483647;$node=HEAP32[(HEAP32[$1+20>>2]|0)+($tabidx<<2)>>2]|0;label=11;break;case 11:if(($node|0)!=0){label=12;break}else{label=24;break};case 12:if((HEAP32[$node>>2]|0)==($hashval|0)){label=13;break}else{label=22;break};case 13:$i=0;label=14;break;case 14:if(($i|0)<(HEAP32[$1+4>>2]|0)){label=15;break}else{label=19;break};case 15:if((HEAP32[$2+($i<<2)>>2]|0)!=(HEAP32[$node+(HEAP32[$1+32>>2]|0)+($i<<2)>>2]|0)){label=16;break}else{label=17;break};case 16:label=19;break;case 17:label=18;break;case 18:$i=$i+1|0;label=14;break;case 19:if(($i|0)==(HEAP32[$1+4>>2]|0)){label=20;break}else{label=21;break};case 20:$ptr=$node+(HEAP32[$1+28>>2]|0)|0;label=24;break;case 21:label=22;break;case 22:label=23;break;case 23:$node=HEAP32[$node+4>>2]|0;label=11;break;case 24:if(($ptr|0)!=0){label=47;break}else{label=25;break};case 25:if(($4|0)!=0){label=26;break}else{label=47;break};case 26:if((HEAP32[(HEAP32[$1+16>>2]|0)+60>>2]|0)>=((HEAP32[$1+24>>2]|0)*3|0|0)){label=27;break}else{label=36;break};case 27:if((HEAP32[$1+24>>2]<<1|0)<1024){label=28;break}else{label=29;break};case 28:$143=1024;label=30;break;case 29:$143=HEAP32[$1+24>>2]<<1;label=30;break;case 30:$newsize=$143;$newrawsize=$newsize<<2;$newtable=_cvAlloc($newrawsize)|0;if((_cvGetErrStatus()|0)<0){label=31;break}else{label=32;break};case 31:_cvError(-1,18120,11432,15536,850);label=50;break;case 32:_memset($newtable|0,0,$newrawsize|0);$node=_cvInitSparseMatIterator($1,$iterator)|0;label=33;break;case 33:if(($node|0)!=0){label=34;break}else{label=35;break};case 34:$next=_cvGetNextSparseNode($iterator)|0;$newidx=HEAP32[$node>>2]&$newsize-1;HEAP32[$node+4>>2]=HEAP32[$newtable+($newidx<<2)>>2];HEAP32[$newtable+($newidx<<2)>>2]=$node;$node=$next;label=33;break;case 35:_cvFree_(HEAP32[$1+20>>2]|0);HEAP32[$1+20>>2]=0;HEAP32[$1+20>>2]=$newtable;HEAP32[$1+24>>2]=$newsize;$tabidx=$hashval&$newsize-1;label=36;break;case 36:$node=_cvSetNew(HEAP32[$1+16>>2]|0)|0;HEAP32[$node>>2]=$hashval;HEAP32[$node+4>>2]=HEAP32[(HEAP32[$1+20>>2]|0)+($tabidx<<2)>>2];HEAP32[(HEAP32[$1+20>>2]|0)+($tabidx<<2)>>2]=$node;$_icv_memcpy_i_=0;label=37;break;case 37:if($_icv_memcpy_i_>>>0<(HEAP32[$1+4>>2]|0)>>>0){label=38;break}else{label=40;break};case 38:HEAP32[$node+(HEAP32[$1+32>>2]|0)+($_icv_memcpy_i_<<2)>>2]=HEAP32[$2+($_icv_memcpy_i_<<2)>>2];label=39;break;case 39:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=37;break;case 40:$ptr=$node+(HEAP32[$1+28>>2]|0)|0;if(($4|0)>0){label=41;break}else{label=46;break};case 41:$_icv_memcpy_i_1=0;label=42;break;case 42:if($_icv_memcpy_i_1>>>0<((HEAP32[$1>>2]&504)>>3)+1<<(47696>>>((HEAP32[$1>>2]&7)<<1>>>0)&3)>>>0){label=43;break}else{label=45;break};case 43:HEAP8[$ptr+$_icv_memcpy_i_1|0]=0;label=44;break;case 44:$_icv_memcpy_i_1=$_icv_memcpy_i_1+1|0;label=42;break;case 45:label=46;break;case 46:label=47;break;case 47:if(($3|0)!=0){label=48;break}else{label=49;break};case 48:HEAP32[$3>>2]=HEAP32[$1>>2]&511;label=49;break;case 49:label=50;break;case 50:STACKTOP=sp;return $ptr|0}return 0}function _cvPtrND($arr,$idx,$_type,$create_node,$precalc_hashval){$arr=$arr|0;$idx=$idx|0;$_type=$_type|0;$create_node=$create_node|0;$precalc_hashval=$precalc_hashval|0;var $1=0,$2=0,$3=0,$ptr=0,$mat=0,$i=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$arr;$2=$idx;$3=$_type;$ptr=0;if(($2|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,5992,8632,15536,2161);label=29;break;case 3:if(($1|0)!=0){label=4;break}else{label=6;break};case 4:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=5;break}else{label=6;break};case 5:$ptr=__ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj($1,$2,$3,$create_node,$precalc_hashval)|0;label=28;break;case 6:if(($1|0)!=0){label=7;break}else{label=18;break};case 7:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=8;break}else{label=18;break};case 8:if((HEAP32[$1+16>>2]|0)!=0){label=9;break}else{label=18;break};case 9:$mat=$1;$ptr=HEAP32[$mat+16>>2]|0;$i=0;label=10;break;case 10:if(($i|0)<(HEAP32[$mat+4>>2]|0)){label=11;break}else{label=15;break};case 11:if((HEAP32[$2+($i<<2)>>2]|0)>>>0>=(HEAP32[$mat+20+($i<<3)>>2]|0)>>>0){label=12;break}else{label=13;break};case 12:_cvError(-211,5992,8944,15536,2175);label=29;break;case 13:$ptr=$ptr+(Math_imul(HEAP32[$2+($i<<2)>>2]|0,HEAP32[$mat+20+($i<<3)+4>>2]|0)|0)|0;label=14;break;case 14:$i=$i+1|0;label=10;break;case 15:if(($3|0)!=0){label=16;break}else{label=17;break};case 16:HEAP32[$3>>2]=HEAP32[$mat>>2]&511;label=17;break;case 17:label=27;break;case 18:if(($1|0)!=0){label=19;break}else{label=22;break};case 19:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=20;break}else{label=22;break};case 20:if((HEAP32[$1+24>>2]|0)>0){label=21;break}else{label=22;break};case 21:if((HEAP32[$1+20>>2]|0)>0){label=24;break}else{label=22;break};case 22:if(($1|0)!=0){label=23;break}else{label=25;break};case 23:if((HEAP32[$1>>2]|0)==112){label=24;break}else{label=25;break};case 24:$ptr=_cvPtr2D($1,HEAP32[$2>>2]|0,HEAP32[$2+4>>2]|0,$3)|0;label=26;break;case 25:_cvError(-5,5992,10280,15536,2185);label=29;break;case 26:label=27;break;case 27:label=28;break;case 28:label=29;break;case 29:return $ptr|0}return 0}function _cvGet2D($agg_result,$arr,$y,$x){$agg_result=$agg_result|0;$arr=$arr|0;$y=$y|0;$x=$x|0;var $1=0,$2=0,$3=0,$type=0,$ptr=0,$mat=0,$idx=0,$60=0,$66=0,$96=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;while(1)switch(label|0){case 1:$type=sp|0;$idx=sp+8|0;$1=$arr;$2=$y;$3=$x;_memset($agg_result|0,0,32);HEAP32[$type>>2]=0;if(($1|0)!=0){label=2;break}else{label=10;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{label=10;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{label=10;break};case 4:if((HEAP32[$1+20>>2]|0)>0){label=5;break}else{label=10;break};case 5:if((HEAP32[$1+16>>2]|0)!=0){label=6;break}else{label=10;break};case 6:$mat=$1;if($2>>>0>=(HEAP32[$mat+20>>2]|0)>>>0){label=8;break}else{label=7;break};case 7:if($3>>>0>=(HEAP32[$mat+24>>2]|0)>>>0){label=8;break}else{label=9;break};case 8:_cvError(-211,5920,8944,15536,2253);label=16;break;case 9:HEAP32[$type>>2]=HEAP32[$mat>>2]&511;$60=HEAP32[$mat+16>>2]|0;$66=$60+(Math_imul($2,HEAP32[$mat+4>>2]|0)|0)|0;$ptr=$66+(Math_imul($3,((HEAP32[$type>>2]&504)>>3)+1<<(47696>>>((HEAP32[$type>>2]&7)<<1>>>0)&3))|0)|0;label=15;break;case 10:if(($1|0)!=0){label=11;break}else{label=12;break};case 11:if((HEAP32[$1>>2]&-65536|0)==1111752704){label=13;break}else{label=12;break};case 12:$ptr=_cvPtr2D($1,$2,$3,$type)|0;label=14;break;case 13:$96=$idx|0;HEAP32[$96>>2]=$2;HEAP32[$96+4>>2]=$3;$ptr=__ZL13icvGetNodePtrP11CvSparseMatPKiPiiPj($1,$idx|0,$type,0,0)|0;label=14;break;case 14:label=15;break;case 15:_cvRawDataToScalar($ptr,HEAP32[$type>>2]|0,$agg_result);label=16;break;case 16:STACKTOP=sp;return}}function __ZL16icvGetColorModeliPPcS0_($nchannels,$colorModel,$channelSeq){$nchannels=$nchannels|0;$colorModel=$colorModel|0;$channelSeq=$channelSeq|0;var $1=0,$2=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$nchannels;$2=$colorModel;$3=$channelSeq;$1=$1-1|0;HEAP32[$3>>2]=28352;HEAP32[$2>>2]=28352;if($1>>>0<=3){label=2;break}else{label=3;break};case 2:HEAP32[$2>>2]=HEAP32[17920+($1<<3)>>2];HEAP32[$3>>2]=HEAP32[17924+($1<<3)>>2];label=3;break;case 3:return}}function _cvInitImageHeader($image,$size,$depth,$channels,$origin,$align){$image=$image|0;$size=$size|0;$depth=$depth|0;$channels=$channels|0;$origin=$origin|0;$align=$align|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$result=0,$colorModel=0,$channelSeq=0,$124=0,$139=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$colorModel=sp|0;$channelSeq=sp+8|0;$1=$image;$2=$depth;$3=$channels;$4=$origin;$5=$align;$result=0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-9,7048,15512,15536,3353);label=30;break;case 3:_memset($1|0,0,112);HEAP32[$1>>2]=112;__ZL16icvGetColorModeliPPcS0_($3,$colorModel,$channelSeq);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,7048,11432,15536,3358);label=30;break;case 5:_strncpy($1+20|0,HEAP32[$colorModel>>2]|0,4)|0;_strncpy($1+24|0,HEAP32[$channelSeq>>2]|0,4)|0;if((HEAP32[$size>>2]|0)<0){label=7;break}else{label=6;break};case 6:if((HEAP32[$size+4>>2]|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-25,7048,15448,15536,3363);label=30;break;case 8:if(($2|0)!=1){label=9;break}else{label=16;break};case 9:if(($2|0)!=8){label=10;break}else{label=16;break};case 10:if(($2|0)!=-2147483640){label=11;break}else{label=16;break};case 11:if(($2|0)!=16){label=12;break}else{label=16;break};case 12:if(($2|0)!=-2147483632){label=13;break}else{label=16;break};case 13:if(($2|0)!=-2147483616){label=14;break}else{label=16;break};case 14:if(($2|0)!=32){label=15;break}else{label=16;break};case 15:if(($2|0)!=64){label=17;break}else{label=16;break};case 16:if(($3|0)<0){label=17;break}else{label=18;break};case 17:_cvError(-17,7048,15368,15536,3370);label=30;break;case 18:if(($4|0)!=1){label=19;break}else{label=21;break};case 19:if(($4|0)!=0){label=20;break}else{label=21;break};case 20:_cvError(-20,7048,15272,15536,3372);label=30;break;case 21:if(($5|0)!=4){label=22;break}else{label=24;break};case 22:if(($5|0)!=8){label=23;break}else{label=24;break};case 23:_cvError(-21,7048,15248,15536,3375);label=30;break;case 24:HEAP32[$1+40>>2]=HEAP32[$size>>2];HEAP32[$1+44>>2]=HEAP32[$size+4>>2];if((HEAP32[$1+48>>2]|0)!=0){label=25;break}else{label=26;break};case 25:HEAP32[HEAP32[$1+48>>2]>>2]=0;HEAP32[(HEAP32[$1+48>>2]|0)+8>>2]=0;HEAP32[(HEAP32[$1+48>>2]|0)+4>>2]=0;HEAP32[(HEAP32[$1+48>>2]|0)+12>>2]=HEAP32[$size>>2];HEAP32[(HEAP32[$1+48>>2]|0)+16>>2]=HEAP32[$size+4>>2];label=26;break;case 26:if(($3|0)<1){label=27;break}else{label=28;break};case 27:$124=1;label=29;break;case 28:$124=$3;label=29;break;case 29:HEAP32[$1+8>>2]=$124;HEAP32[$1+16>>2]=$2;HEAP32[$1+36>>2]=$5;$139=Math_imul(HEAP32[$1+40>>2]|0,HEAP32[$1+8>>2]|0)|0;HEAP32[$1+72>>2]=((((Math_imul($139,HEAP32[$1+16>>2]&2147483647)|0)+7|0)>>>0)/8|0)+$5-1&~($5-1);HEAP32[$1+32>>2]=$4;HEAP32[$1+64>>2]=Math_imul(HEAP32[$1+72>>2]|0,HEAP32[$1+44>>2]|0)|0;$result=$1;label=30;break;case 30:STACKTOP=sp;return $result|0}return 0}function _cvCreateImageHeader($size,$depth,$channels){$size=$size|0;$depth=$depth|0;$channels=$channels|0;var $1=0,$2=0,$img=0,$3=0,$colorModel=0,$channelSeq=0,$13=0,$14=0,$15=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$img=sp|0;$3=sp+8|0;$colorModel=sp+16|0;$channelSeq=sp+24|0;$1=$depth;$2=$channels;HEAP32[$img>>2]=0;if((HEAP32[7590]|0)!=0){label=7;break}else{label=2;break};case 2:HEAP32[$img>>2]=_cvAlloc(112)|0;if((_cvGetErrStatus()|0)<0){label=3;break}else{label=4;break};case 3:_cvError(-1,7088,11432,15536,3290);label=9;break;case 4:$13=HEAP32[$img>>2]|0;$14=$3;$15=$size;HEAP32[$14>>2]=HEAP32[$15>>2];HEAP32[$14+4>>2]=HEAP32[$15+4>>2];_cvInitImageHeader($13,$3,$1,$2,0,4)|0;if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,7088,11432,15536,3292);label=9;break;case 6:label=8;break;case 7:__ZL16icvGetColorModeliPPcS0_($2,$colorModel,$channelSeq);HEAP32[$img>>2]=FUNCTION_TABLE_iiiiiiiiiiiiiii[HEAP32[7590]&1023]($2,0,$1,HEAP32[$colorModel>>2]|0,HEAP32[$channelSeq>>2]|0,0,0,4,HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0,0,0,0,0)|0;label=8;break;case 8:label=9;break;case 9:if((_cvGetErrStatus()|0)<0){label=10;break}else{label=12;break};case 10:if((HEAP32[$img>>2]|0)!=0){label=11;break}else{label=12;break};case 11:_cvReleaseImageHeader($img);label=12;break;case 12:STACKTOP=sp;return HEAP32[$img>>2]|0}return 0}function _cvReleaseImageHeader($image){$image=$image|0;var $1=0,$img=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$image;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,7024,28352,15536,3412);label=9;break;case 3:if((HEAP32[$1>>2]|0)!=0){label=4;break}else{label=8;break};case 4:$img=HEAP32[$1>>2]|0;HEAP32[$1>>2]=0;if((HEAP32[7592]|0)!=0){label=6;break}else{label=5;break};case 5:_cvFree_(HEAP32[$img+48>>2]|0);HEAP32[$img+48>>2]=0;_cvFree_($img);$img=0;label=7;break;case 6:FUNCTION_TABLE_vii[HEAP32[7592]&1023]($img,5);label=7;break;case 7:label=8;break;case 8:label=9;break;case 9:return}}function _cvCreateImage($size,$depth,$channels){$size=$size|0;$depth=$depth|0;$channels=$channels|0;var $img=0,$3=0,$4=0,$5=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$img=sp|0;$3=sp+8|0;HEAP32[$img>>2]=0;$4=$3;$5=$size;HEAP32[$4>>2]=HEAP32[$5>>2];HEAP32[$4+4>>2]=HEAP32[$5+4>>2];HEAP32[$img>>2]=_cvCreateImageHeader($3,$depth,$channels)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,7072,11432,15536,3326);label=6;break;case 3:_cvCreateData(HEAP32[$img>>2]|0);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,7072,11432,15536,3328);label=6;break;case 5:label=6;break;case 6:if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvReleaseImage($img);label=8;break;case 8:STACKTOP=sp;return HEAP32[$img>>2]|0}return 0}function _cvReleaseImage($image){$image=$image|0;var $1=0,$img=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$img=sp|0;$1=$image;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,7008,28352,15536,3441);label=6;break;case 3:if((HEAP32[$1>>2]|0)!=0){label=4;break}else{label=5;break};case 4:HEAP32[$img>>2]=HEAP32[$1>>2];HEAP32[$1>>2]=0;_cvReleaseData(HEAP32[$img>>2]|0);_cvReleaseImageHeader($img);label=5;break;case 5:label=6;break;case 6:STACKTOP=sp;return}}function _cvSetImageROI($image,$rect){$image=$image|0;$rect=$rect|0;var $1=0,$42=0,$53=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$rect;$rect=STACKTOP;STACKTOP=STACKTOP+16|0;HEAP32[$rect>>2]=HEAP32[tempParam>>2];HEAP32[$rect+4>>2]=HEAP32[tempParam+4>>2];HEAP32[$rect+8>>2]=HEAP32[tempParam+8>>2];HEAP32[$rect+12>>2]=HEAP32[tempParam+12>>2];label=1;while(1)switch(label|0){case 1:$1=$image;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-9,6992,28352,15536,3464);label=23;break;case 3:if((HEAP32[$rect>>2]|0)>(HEAP32[$1+40>>2]|0)){label=5;break}else{label=4;break};case 4:if((HEAP32[$rect+4>>2]|0)>(HEAP32[$1+44>>2]|0)){label=5;break}else{label=6;break};case 5:_cvError(-25,6992,28352,15536,3467);label=23;break;case 6:if(((HEAP32[$rect>>2]|0)+(HEAP32[$rect+8>>2]|0)|0)<0){label=8;break}else{label=7;break};case 7:if(((HEAP32[$rect+4>>2]|0)+(HEAP32[$rect+12>>2]|0)|0)<0){label=8;break}else{label=9;break};case 8:_cvError(-25,6992,28352,15536,3470);label=23;break;case 9:if((HEAP32[$rect>>2]|0)<0){label=10;break}else{label=11;break};case 10:$42=$rect+8|0;HEAP32[$42>>2]=(HEAP32[$42>>2]|0)+(HEAP32[$rect>>2]|0);HEAP32[$rect>>2]=0;label=11;break;case 11:if((HEAP32[$rect+4>>2]|0)<0){label=12;break}else{label=13;break};case 12:$53=$rect+12|0;HEAP32[$53>>2]=(HEAP32[$53>>2]|0)+(HEAP32[$rect+4>>2]|0);HEAP32[$rect+4>>2]=0;label=13;break;case 13:if(((HEAP32[$rect>>2]|0)+(HEAP32[$rect+8>>2]|0)|0)>(HEAP32[$1+40>>2]|0)){label=14;break}else{label=15;break};case 14:HEAP32[$rect+8>>2]=(HEAP32[$1+40>>2]|0)-(HEAP32[$rect>>2]|0);label=15;break;case 15:if(((HEAP32[$rect+4>>2]|0)+(HEAP32[$rect+12>>2]|0)|0)>(HEAP32[$1+44>>2]|0)){label=16;break}else{label=17;break};case 16:HEAP32[$rect+12>>2]=(HEAP32[$1+44>>2]|0)-(HEAP32[$rect+4>>2]|0);label=17;break;case 17:if((HEAP32[$1+48>>2]|0)!=0){label=18;break}else{label=19;break};case 18:HEAP32[(HEAP32[$1+48>>2]|0)+4>>2]=HEAP32[$rect>>2];HEAP32[(HEAP32[$1+48>>2]|0)+8>>2]=HEAP32[$rect+4>>2];HEAP32[(HEAP32[$1+48>>2]|0)+12>>2]=HEAP32[$rect+8>>2];HEAP32[(HEAP32[$1+48>>2]|0)+16>>2]=HEAP32[$rect+12>>2];label=22;break;case 19:HEAP32[$1+48>>2]=__ZL12icvCreateROIiiiii(0,HEAP32[$rect>>2]|0,HEAP32[$rect+4>>2]|0,HEAP32[$rect+8>>2]|0,HEAP32[$rect+12>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=20;break}else{label=21;break};case 20:_cvError(-1,6992,11432,15536,3499);label=23;break;case 21:label=22;break;case 22:label=23;break;case 23:STACKTOP=sp;return}}function __ZL12icvCreateROIiiiii($coi,$xOffset,$yOffset,$width,$height){$coi=$coi|0;$xOffset=$xOffset|0;$yOffset=$yOffset|0;$width=$width|0;$height=$height|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$roi=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$coi;$2=$xOffset;$3=$yOffset;$4=$width;$5=$height;$roi=0;if((HEAP32[7593]|0)!=0){label=5;break}else{label=2;break};case 2:$roi=_cvAlloc(20)|0;if((_cvGetErrStatus()|0)<0){label=3;break}else{label=4;break};case 3:_cvError(-1,18232,11432,15536,3238);label=7;break;case 4:HEAP32[$roi>>2]=$1;HEAP32[$roi+4>>2]=$2;HEAP32[$roi+8>>2]=$3;HEAP32[$roi+12>>2]=$4;HEAP32[$roi+16>>2]=$5;label=6;break;case 5:$roi=FUNCTION_TABLE_iiiiii[HEAP32[7593]&1023]($1,$2,$3,$4,$5)|0;label=6;break;case 6:label=7;break;case 7:return $roi|0}return 0}function _cvSetImageCOI($image,$coi){$image=$image|0;$coi=$coi|0;var $1=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$image;$2=$coi;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-9,6952,28352,15536,3565);label=14;break;case 3:if($2>>>0>(HEAP32[$1+8>>2]|0)>>>0){label=4;break}else{label=5;break};case 4:_cvError(-24,6952,28352,15536,3568);label=14;break;case 5:if((HEAP32[$1+48>>2]|0)!=0){label=7;break}else{label=6;break};case 6:if(($2|0)!=0){label=7;break}else{label=13;break};case 7:if((HEAP32[$1+48>>2]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP32[HEAP32[$1+48>>2]>>2]=$2;label=12;break;case 9:HEAP32[$1+48>>2]=__ZL12icvCreateROIiiiii($2,0,0,HEAP32[$1+40>>2]|0,HEAP32[$1+44>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,6952,11432,15536,3578);label=14;break;case 11:label=12;break;case 12:label=13;break;case 13:label=14;break;case 14:return}}function _cvGetNextSparseNode($mat_iterator){$mat_iterator=$mat_iterator|0;var $1=0,$2=0,$idx=0,$node=0,$14=0,$19=0,$21=0,$46=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$mat_iterator;if((HEAP32[(HEAP32[$2+4>>2]|0)+4>>2]|0)!=0){label=2;break}else{label=3;break};case 2:$14=HEAP32[(HEAP32[$2+4>>2]|0)+4>>2]|0;HEAP32[$2+4>>2]=$14;$1=$14;label=10;break;case 3:$19=$2+8|0;$21=(HEAP32[$19>>2]|0)+1|0;HEAP32[$19>>2]=$21;$idx=$21;label=4;break;case 4:if(($idx|0)<(HEAP32[(HEAP32[$2>>2]|0)+24>>2]|0)){label=5;break}else{label=9;break};case 5:$node=HEAP32[(HEAP32[(HEAP32[$2>>2]|0)+20>>2]|0)+($idx<<2)>>2]|0;if(($node|0)!=0){label=6;break}else{label=7;break};case 6:HEAP32[$2+8>>2]=$idx;$46=$node;HEAP32[$2+4>>2]=$46;$1=$46;label=10;break;case 7:label=8;break;case 8:$idx=$idx+1|0;label=4;break;case 9:$1=0;label=10;break;case 10:return $1|0}return 0}function __ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;HEAP8[$plane0+$j|0]=HEAP8[$1|0]|0;HEAP8[$plane1+$j|0]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+2|0;label=4;break;case 7:$plane0=$plane0+$4|0;$plane1=$plane1+$4|0;$1=$1+(-(HEAP32[$size>>2]<<1)|0)|0;label=8;break;case 8:$1=$1+$2|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$1+1|0]|0;$t2=HEAP8[$1+2|0]|0;HEAP8[$plane0+$j|0]=HEAP8[$1|0]|0;HEAP8[$plane1+$j|0]=$t1;HEAP8[$plane2+$j|0]=$t2;label=6;break;case 6:$j=$j+1|0;$1=$1+3|0;label=4;break;case 7:$plane0=$plane0+$4|0;$plane1=$plane1+$4|0;$plane2=$plane2+$4|0;$1=$1+(-((HEAP32[$size>>2]|0)*3|0)|0)|0;label=8;break;case 8:$1=$1+$2|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$plane3=HEAP32[$3+12>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1|0]|0;$t1=HEAP8[$1+1|0]|0;HEAP8[$plane0+$j|0]=$t0;HEAP8[$plane1+$j|0]=$t1;$t0=HEAP8[$1+2|0]|0;$t1=HEAP8[$1+3|0]|0;HEAP8[$plane2+$j|0]=$t0;HEAP8[$plane3+$j|0]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+4|0;label=4;break;case 7:$plane0=$plane0+$4|0;$plane1=$plane1+$4|0;$plane2=$plane2+$4|0;$plane3=$plane3+$4|0;$1=$1+(-(HEAP32[$size>>2]<<2)|0)|0;label=8;break;case 8:$1=$1+$2|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$1+2>>1]|0;HEAP16[$plane0+($j<<1)>>1]=HEAP16[$1>>1]|0;HEAP16[$plane1+($j<<1)>>1]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+4|0;label=4;break;case 7:$plane0=$plane0+($4<<1)|0;$plane1=$plane1+($4<<1)|0;$1=$1+(-(HEAP32[$size>>2]<<1)<<1)|0;label=8;break;case 8:$1=$1+($2<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$1+2>>1]|0;$t2=HEAP16[$1+4>>1]|0;HEAP16[$plane0+($j<<1)>>1]=HEAP16[$1>>1]|0;HEAP16[$plane1+($j<<1)>>1]=$t1;HEAP16[$plane2+($j<<1)>>1]=$t2;label=6;break;case 6:$j=$j+1|0;$1=$1+6|0;label=4;break;case 7:$plane0=$plane0+($4<<1)|0;$plane1=$plane1+($4<<1)|0;$plane2=$plane2+($4<<1)|0;$1=$1+(-((HEAP32[$size>>2]|0)*3|0)<<1)|0;label=8;break;case 8:$1=$1+($2<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function _cvCloneImage($src){$src=$src|0;var $1=0,$dst=0,$size=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$src;$dst=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==112){label=4;break}else{label=3;break};case 3:_cvError(-5,6936,15e3,15536,3614);label=14;break;case 4:if((HEAP32[7594]|0)!=0){label=12;break}else{label=5;break};case 5:$dst=_cvAlloc(112)|0;if((_cvGetErrStatus()|0)<0){label=6;break}else{label=7;break};case 6:_cvError(-1,6936,11432,15536,3618);label=14;break;case 7:_memcpy($dst|0,$1|0,112)|0;HEAP32[$dst+108>>2]=0;HEAP32[$dst+68>>2]=0;HEAP32[$dst+48>>2]=0;if((HEAP32[$1+48>>2]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP32[$dst+48>>2]=__ZL12icvCreateROIiiiii(HEAP32[HEAP32[$1+48>>2]>>2]|0,HEAP32[(HEAP32[$1+48>>2]|0)+4>>2]|0,HEAP32[(HEAP32[$1+48>>2]|0)+8>>2]|0,HEAP32[(HEAP32[$1+48>>2]|0)+12>>2]|0,HEAP32[(HEAP32[$1+48>>2]|0)+16>>2]|0)|0;label=9;break;case 9:if((HEAP32[$1+68>>2]|0)!=0){label=10;break}else{label=11;break};case 10:$size=HEAP32[$1+64>>2]|0;_cvCreateData($dst);_memcpy(HEAP32[$dst+68>>2]|0,HEAP32[$1+68>>2]|0,$size)|0;label=11;break;case 11:label=13;break;case 12:$dst=FUNCTION_TABLE_ii[HEAP32[7594]&1023]($1)|0;label=13;break;case 13:label=14;break;case 14:return $dst|0}return 0}function _cvSetNew($set_header){$set_header=$set_header|0;var $1=0,$elem=0,$20=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$elem=sp|0;$1=$set_header;HEAP32[$elem>>2]=HEAP32[$1+56>>2];if((HEAP32[$elem>>2]|0)!=0){label=2;break}else{label=3;break};case 2:HEAP32[$1+56>>2]=HEAP32[(HEAP32[$elem>>2]|0)+4>>2];HEAP32[HEAP32[$elem>>2]>>2]=HEAP32[HEAP32[$elem>>2]>>2]&67108863;$20=$1+60|0;HEAP32[$20>>2]=(HEAP32[$20>>2]|0)+1;label=4;break;case 3:_cvSetAdd($1,0,$elem)|0;label=4;break;case 4:STACKTOP=sp;return HEAP32[$elem>>2]|0}return 0}function __Z16icvCopy_8u_C2P2RPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[218]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z16icvCopy_8u_C3P3RPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[214]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z16icvCopy_8u_C4P4RPKhiPPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[210]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_16s_C2P2RPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[282]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_16s_C3P3RPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[278]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$plane3=HEAP32[$3+12>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$1>>1]|0;$t1=HEAP16[$1+2>>1]|0;HEAP16[$plane0+($j<<1)>>1]=$t0;HEAP16[$plane1+($j<<1)>>1]=$t1;$t0=HEAP16[$1+4>>1]|0;$t1=HEAP16[$1+6>>1]|0;HEAP16[$plane2+($j<<1)>>1]=$t0;HEAP16[$plane3+($j<<1)>>1]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+8|0;label=4;break;case 7:$plane0=$plane0+($4<<1)|0;$plane1=$plane1+($4<<1)|0;$plane2=$plane2+($4<<1)|0;$plane3=$plane3+($4<<1)|0;$1=$1+(-(HEAP32[$size>>2]<<2)<<1)|0;label=8;break;case 8:$1=$1+($2<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$1+4>>2]|0;HEAP32[$plane0+($j<<2)>>2]=HEAP32[$1>>2];HEAP32[$plane1+($j<<2)>>2]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+8|0;label=4;break;case 7:$plane0=$plane0+($4<<2)|0;$plane1=$plane1+($4<<2)|0;$1=$1+(-(HEAP32[$size>>2]<<1)<<2)|0;label=8;break;case 8:$1=$1+($2<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$1+4>>2]|0;$t2=HEAP32[$1+8>>2]|0;HEAP32[$plane0+($j<<2)>>2]=HEAP32[$1>>2];HEAP32[$plane1+($j<<2)>>2]=$t1;HEAP32[$plane2+($j<<2)>>2]=$t2;label=6;break;case 6:$j=$j+1|0;$1=$1+12|0;label=4;break;case 7:$plane0=$plane0+($4<<2)|0;$plane1=$plane1+($4<<2)|0;$plane2=$plane2+($4<<2)|0;$1=$1+(-((HEAP32[$size>>2]|0)*3|0)<<2)|0;label=8;break;case 8:$1=$1+($2<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$plane3=HEAP32[$3+12>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1>>2]|0;$t1=HEAP32[$1+4>>2]|0;HEAP32[$plane0+($j<<2)>>2]=$t0;HEAP32[$plane1+($j<<2)>>2]=$t1;$t0=HEAP32[$1+8>>2]|0;$t1=HEAP32[$1+12>>2]|0;HEAP32[$plane2+($j<<2)>>2]=$t0;HEAP32[$plane3+($j<<2)>>2]=$t1;label=6;break;case 6:$j=$j+1|0;$1=$1+16|0;label=4;break;case 7:$plane0=$plane0+($4<<2)|0;$plane1=$plane1+($4<<2)|0;$plane2=$plane2+($4<<2)|0;$plane3=$plane3+($4<<2)|0;$1=$1+(-(HEAP32[$size>>2]<<2)<<2)|0;label=8;break;case 8:$1=$1+($2<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_64f_C2P2R_fPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,$28=0,$29$1=0,$31=0,$32$1=0,$33$1=0,$36=0,$37$1=0,$40=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$28=$1|0;$29$1=HEAP32[$28+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$28>>2];HEAP32[$t0+4>>2]=$29$1;$31=$1+8|0;$32$1=HEAP32[$31+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$31>>2];HEAP32[$t1+4>>2]=$32$1;$33$1=HEAP32[$t0+4>>2]|0;$36=$plane0+($j<<3)|0;HEAP32[$36>>2]=HEAP32[$t0>>2];HEAP32[$36+4>>2]=$33$1;$37$1=HEAP32[$t1+4>>2]|0;$40=$plane1+($j<<3)|0;HEAP32[$40>>2]=HEAP32[$t1>>2];HEAP32[$40+4>>2]=$37$1;label=6;break;case 6:$j=$j+1|0;$1=$1+16|0;label=4;break;case 7:$plane0=$plane0+($4<<3)|0;$plane1=$plane1+($4<<3)|0;$1=$1+(-(HEAP32[$size>>2]<<1)<<3)|0;label=8;break;case 8:$1=$1+($2<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_64f_C3P3R_fPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t0=0,$t1=0,$t2=0,$19=0,$20=0,$31=0,$32$1=0,$34=0,$35$1=0,$37=0,$38$1=0,$39$1=0,$42=0,$43$1=0,$46=0,$47$1=0,$50=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+24|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$t2=sp+16|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$31=$1|0;$32$1=HEAP32[$31+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$31>>2];HEAP32[$t0+4>>2]=$32$1;$34=$1+8|0;$35$1=HEAP32[$34+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$34>>2];HEAP32[$t1+4>>2]=$35$1;$37=$1+16|0;$38$1=HEAP32[$37+4>>2]|0;HEAP32[$t2>>2]=HEAP32[$37>>2];HEAP32[$t2+4>>2]=$38$1;$39$1=HEAP32[$t0+4>>2]|0;$42=$plane0+($j<<3)|0;HEAP32[$42>>2]=HEAP32[$t0>>2];HEAP32[$42+4>>2]=$39$1;$43$1=HEAP32[$t1+4>>2]|0;$46=$plane1+($j<<3)|0;HEAP32[$46>>2]=HEAP32[$t1>>2];HEAP32[$46+4>>2]=$43$1;$47$1=HEAP32[$t2+4>>2]|0;$50=$plane2+($j<<3)|0;HEAP32[$50>>2]=HEAP32[$t2>>2];HEAP32[$50+4>>2]=$47$1;label=6;break;case 6:$j=$j+1|0;$1=$1+24|0;label=4;break;case 7:$plane0=$plane0+($4<<3)|0;$plane1=$plane1+($4<<3)|0;$plane2=$plane2+($4<<3)|0;$1=$1+(-((HEAP32[$size>>2]|0)*3|0)<<3)|0;label=8;break;case 8:$1=$1+($2<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __Z17icvCopy_16s_C4P4RPKtiPPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[274]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_32f_C2P2RPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[262]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_32f_C3P3RPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[258]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_32f_C4P4RPKiiPPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[254]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_64f_C2P2RPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[242]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_64f_C3P3RPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[240]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __ZL19icvCopy_64f_C4P4R_fPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,$34=0,$35$1=0,$37=0,$38$1=0,$39$1=0,$42=0,$43$1=0,$46=0,$48=0,$49$1=0,$51=0,$52$1=0,$53$1=0,$56=0,$57$1=0,$60=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$3>>2]|0;$plane1=HEAP32[$3+4>>2]|0;$plane2=HEAP32[$3+8>>2]|0;$plane3=HEAP32[$3+12>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$34=$1|0;$35$1=HEAP32[$34+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$34>>2];HEAP32[$t0+4>>2]=$35$1;$37=$1+8|0;$38$1=HEAP32[$37+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$37>>2];HEAP32[$t1+4>>2]=$38$1;$39$1=HEAP32[$t0+4>>2]|0;$42=$plane0+($j<<3)|0;HEAP32[$42>>2]=HEAP32[$t0>>2];HEAP32[$42+4>>2]=$39$1;$43$1=HEAP32[$t1+4>>2]|0;$46=$plane1+($j<<3)|0;HEAP32[$46>>2]=HEAP32[$t1>>2];HEAP32[$46+4>>2]=$43$1;$48=$1+16|0;$49$1=HEAP32[$48+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$48>>2];HEAP32[$t0+4>>2]=$49$1;$51=$1+24|0;$52$1=HEAP32[$51+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$51>>2];HEAP32[$t1+4>>2]=$52$1;$53$1=HEAP32[$t0+4>>2]|0;$56=$plane2+($j<<3)|0;HEAP32[$56>>2]=HEAP32[$t0>>2];HEAP32[$56+4>>2]=$53$1;$57$1=HEAP32[$t1+4>>2]|0;$60=$plane3+($j<<3)|0;HEAP32[$60>>2]=HEAP32[$t1>>2];HEAP32[$60+4>>2]=$57$1;label=6;break;case 6:$j=$j+1|0;$1=$1+32|0;label=4;break;case 7:$plane0=$plane0+($4<<3)|0;$plane1=$plane1+($4<<3)|0;$plane2=$plane2+($4<<3)|0;$plane3=$plane3+($4<<3)|0;$1=$1+(-(HEAP32[$size>>2]<<2)<<3)|0;label=8;break;case 8:$1=$1+($2<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$1=$1+($coi-1)|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1|0]|0;$t1=HEAP8[$1+$5|0]|0;HEAP8[$3+$j|0]=$t0;HEAP8[$3+($j+1)|0]=$t1;$t0=HEAP8[$1+($5<<1)|0]|0;$t1=HEAP8[$1+($5*3|0)|0]|0;HEAP8[$3+($j+2)|0]=$t0;HEAP8[$3+($j+3)|0]=$t1;label=6;break;case 6:$j=$j+4|0;$1=$1+($5<<2)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP8[$3+$j|0]=HEAP8[$1|0]|0;label=10;break;case 10:$j=$j+1|0;$1=$1+$5|0;label=8;break;case 11:$1=$1+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0)|0;label=12;break;case 12:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$1=$1+($coi-1<<1)|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$1>>1]|0;$t1=HEAP16[$1+($5<<1)>>1]|0;HEAP16[$3+($j<<1)>>1]=$t0;HEAP16[$3+($j+1<<1)>>1]=$t1;$t0=HEAP16[$1+($5<<1<<1)>>1]|0;$t1=HEAP16[$1+(($5*3|0)<<1)>>1]|0;HEAP16[$3+($j+2<<1)>>1]=$t0;HEAP16[$3+($j+3<<1)>>1]=$t1;label=6;break;case 6:$j=$j+4|0;$1=$1+($5<<2<<1)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP16[$3+($j<<1)>>1]=HEAP16[$1>>1]|0;label=10;break;case 10:$j=$j+1|0;$1=$1+($5<<1)|0;label=8;break;case 11:$1=$1+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<1)|0;label=12;break;case 12:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$1=$1+($coi-1<<2)|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1>>2]|0;$t1=HEAP32[$1+($5<<2)>>2]|0;HEAP32[$3+($j<<2)>>2]=$t0;HEAP32[$3+($j+1<<2)>>2]=$t1;$t0=HEAP32[$1+($5<<1<<2)>>2]|0;$t1=HEAP32[$1+(($5*3|0)<<2)>>2]|0;HEAP32[$3+($j+2<<2)>>2]=$t0;HEAP32[$3+($j+3<<2)>>2]=$t1;label=6;break;case 6:$j=$j+4|0;$1=$1+($5<<2<<2)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP32[$3+($j<<2)>>2]=HEAP32[$1>>2];label=10;break;case 10:$j=$j+1|0;$1=$1+($5<<2)|0;label=8;break;case 11:$1=$1+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<2)|0;label=12;break;case 12:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __ZL20icvCopy_64f_CnC1CR_fPKxiPxi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,$29=0,$30$1=0,$33=0,$34$1=0,$35$1=0,$38=0,$39$1=0,$43=0,$47=0,$48$1=0,$52=0,$53$1=0,$54$1=0,$58=0,$59$1=0,$63=0,$79=0,$80$1=0,$83=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$1=$1+($coi-1<<3)|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$29=$1|0;$30$1=HEAP32[$29+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$29>>2];HEAP32[$t0+4>>2]=$30$1;$33=$1+($5<<3)|0;$34$1=HEAP32[$33+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$33>>2];HEAP32[$t1+4>>2]=$34$1;$35$1=HEAP32[$t0+4>>2]|0;$38=$3+($j<<3)|0;HEAP32[$38>>2]=HEAP32[$t0>>2];HEAP32[$38+4>>2]=$35$1;$39$1=HEAP32[$t1+4>>2]|0;$43=$3+($j+1<<3)|0;HEAP32[$43>>2]=HEAP32[$t1>>2];HEAP32[$43+4>>2]=$39$1;$47=$1+($5<<1<<3)|0;$48$1=HEAP32[$47+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$47>>2];HEAP32[$t0+4>>2]=$48$1;$52=$1+(($5*3|0)<<3)|0;$53$1=HEAP32[$52+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$52>>2];HEAP32[$t1+4>>2]=$53$1;$54$1=HEAP32[$t0+4>>2]|0;$58=$3+($j+2<<3)|0;HEAP32[$58>>2]=HEAP32[$t0>>2];HEAP32[$58+4>>2]=$54$1;$59$1=HEAP32[$t1+4>>2]|0;$63=$3+($j+3<<3)|0;HEAP32[$63>>2]=HEAP32[$t1>>2];HEAP32[$63+4>>2]=$59$1;label=6;break;case 6:$j=$j+4|0;$1=$1+($5<<2<<3)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:$79=$1|0;$80$1=HEAP32[$79+4>>2]|0;$83=$3+($j<<3)|0;HEAP32[$83>>2]=HEAP32[$79>>2];HEAP32[$83+4>>2]=$80$1;label=10;break;case 10:$j=$j+1|0;$1=$1+($5<<3)|0;label=8;break;case 11:$1=$1+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<3)|0;label=12;break;case 12:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z17icvCopy_64f_C4P4RPKxiPPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[238]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_8u_CnC1CRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[208]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __Z18icvCopy_16s_CnC1CRPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[272]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __Z18icvCopy_32f_CnC1CRPKiiPii6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[252]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __Z18icvCopy_64f_CnC1CRPKxiPxi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[236]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$plane1+$j|0]|0;HEAP8[$3|0]=HEAP8[$plane0+$j|0]|0;HEAP8[$3+1|0]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+2|0;label=4;break;case 7:$plane0=$plane0+$2|0;$plane1=$plane1+$2|0;$3=$3+(-(HEAP32[$size>>2]<<1)|0)|0;label=8;break;case 8:$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP8[$plane1+$j|0]|0;$t2=HEAP8[$plane2+$j|0]|0;HEAP8[$3|0]=HEAP8[$plane0+$j|0]|0;HEAP8[$3+1|0]=$t1;HEAP8[$3+2|0]=$t2;label=6;break;case 6:$j=$j+1|0;$3=$3+3|0;label=4;break;case 7:$plane0=$plane0+$2|0;$plane1=$plane1+$2|0;$plane2=$plane2+$2|0;$3=$3+(-((HEAP32[$size>>2]|0)*3|0)|0)|0;label=8;break;case 8:$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$plane3=HEAP32[$1+12>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$plane0+$j|0]|0;$t1=HEAP8[$plane1+$j|0]|0;HEAP8[$3|0]=$t0;HEAP8[$3+1|0]=$t1;$t0=HEAP8[$plane2+$j|0]|0;$t1=HEAP8[$plane3+$j|0]|0;HEAP8[$3+2|0]=$t0;HEAP8[$3+3|0]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+4|0;label=4;break;case 7:$plane0=$plane0+$2|0;$plane1=$plane1+$2|0;$plane2=$plane2+$2|0;$plane3=$plane3+$2|0;$3=$3+(-(HEAP32[$size>>2]<<2)|0)|0;label=8;break;case 8:$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$plane1+($j<<1)>>1]|0;HEAP16[$3>>1]=HEAP16[$plane0+($j<<1)>>1]|0;HEAP16[$3+2>>1]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+4|0;label=4;break;case 7:$plane0=$plane0+($2<<1)|0;$plane1=$plane1+($2<<1)|0;$3=$3+(-(HEAP32[$size>>2]<<1)<<1)|0;label=8;break;case 8:$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP16[$plane1+($j<<1)>>1]|0;$t2=HEAP16[$plane2+($j<<1)>>1]|0;HEAP16[$3>>1]=HEAP16[$plane0+($j<<1)>>1]|0;HEAP16[$3+2>>1]=$t1;HEAP16[$3+4>>1]=$t2;label=6;break;case 6:$j=$j+1|0;$3=$3+6|0;label=4;break;case 7:$plane0=$plane0+($2<<1)|0;$plane1=$plane1+($2<<1)|0;$plane2=$plane2+($2<<1)|0;$3=$3+(-((HEAP32[$size>>2]|0)*3|0)<<1)|0;label=8;break;case 8:$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$plane3=HEAP32[$1+12>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$plane0+($j<<1)>>1]|0;$t1=HEAP16[$plane1+($j<<1)>>1]|0;HEAP16[$3>>1]=$t0;HEAP16[$3+2>>1]=$t1;$t0=HEAP16[$plane2+($j<<1)>>1]|0;$t1=HEAP16[$plane3+($j<<1)>>1]|0;HEAP16[$3+4>>1]=$t0;HEAP16[$3+6>>1]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+8|0;label=4;break;case 7:$plane0=$plane0+($2<<1)|0;$plane1=$plane1+($2<<1)|0;$plane2=$plane2+($2<<1)|0;$plane3=$plane3+($2<<1)|0;$3=$3+(-(HEAP32[$size>>2]<<2)<<1)|0;label=8;break;case 8:$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$plane1+($j<<2)>>2]|0;HEAP32[$3>>2]=HEAP32[$plane0+($j<<2)>>2];HEAP32[$3+4>>2]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+8|0;label=4;break;case 7:$plane0=$plane0+($2<<2)|0;$plane1=$plane1+($2<<2)|0;$3=$3+(-(HEAP32[$size>>2]<<1)<<2)|0;label=8;break;case 8:$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __Z16icvCopy_8u_P2C2RPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[206]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z16icvCopy_8u_P3C3RPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[204]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z16icvCopy_8u_P4C4RPPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[202]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_16s_P2C2RPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[270]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_16s_P3C3RPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[268]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_16s_P4C4RPPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[266]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t1=0,$t2=0,$19=0,$20=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t1=HEAP32[$plane1+($j<<2)>>2]|0;$t2=HEAP32[$plane2+($j<<2)>>2]|0;HEAP32[$3>>2]=HEAP32[$plane0+($j<<2)>>2];HEAP32[$3+4>>2]=$t1;HEAP32[$3+8>>2]=$t2;label=6;break;case 6:$j=$j+1|0;$3=$3+12|0;label=4;break;case 7:$plane0=$plane0+($2<<2)|0;$plane1=$plane1+($2<<2)|0;$plane2=$plane2+($2<<2)|0;$3=$3+(-((HEAP32[$size>>2]|0)*3|0)<<2)|0;label=8;break;case 8:$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$plane3=HEAP32[$1+12>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$plane0+($j<<2)>>2]|0;$t1=HEAP32[$plane1+($j<<2)>>2]|0;HEAP32[$3>>2]=$t0;HEAP32[$3+4>>2]=$t1;$t0=HEAP32[$plane2+($j<<2)>>2]|0;$t1=HEAP32[$plane3+($j<<2)>>2]|0;HEAP32[$3+8>>2]=$t0;HEAP32[$3+12>>2]=$t1;label=6;break;case 6:$j=$j+1|0;$3=$3+16|0;label=4;break;case 7:$plane0=$plane0+($2<<2)|0;$plane1=$plane1+($2<<2)|0;$plane2=$plane2+($2<<2)|0;$plane3=$plane3+($2<<2)|0;$3=$3+(-(HEAP32[$size>>2]<<2)<<2)|0;label=8;break;case 8:$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_64f_P2C2R_fPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,$29=0,$30$1=0,$33=0,$34$1=0,$35$1=0,$37=0,$38$1=0,$40=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$29=$plane0+($j<<3)|0;$30$1=HEAP32[$29+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$29>>2];HEAP32[$t0+4>>2]=$30$1;$33=$plane1+($j<<3)|0;$34$1=HEAP32[$33+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$33>>2];HEAP32[$t1+4>>2]=$34$1;$35$1=HEAP32[$t0+4>>2]|0;$37=$3|0;HEAP32[$37>>2]=HEAP32[$t0>>2];HEAP32[$37+4>>2]=$35$1;$38$1=HEAP32[$t1+4>>2]|0;$40=$3+8|0;HEAP32[$40>>2]=HEAP32[$t1>>2];HEAP32[$40+4>>2]=$38$1;label=6;break;case 6:$j=$j+1|0;$3=$3+16|0;label=4;break;case 7:$plane0=$plane0+($2<<3)|0;$plane1=$plane1+($2<<3)|0;$3=$3+(-(HEAP32[$size>>2]<<1)<<3)|0;label=8;break;case 8:$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_64f_P3C3R_fPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$j=0,$t0=0,$t1=0,$t2=0,$19=0,$20=0,$32=0,$33$1=0,$36=0,$37$1=0,$40=0,$41$1=0,$42$1=0,$44=0,$45$1=0,$47=0,$48$1=0,$50=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+24|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$t2=sp+16|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$19=$size+4|0;$20=HEAP32[$19>>2]|0;HEAP32[$19>>2]=$20-1;if(($20|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$32=$plane0+($j<<3)|0;$33$1=HEAP32[$32+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$32>>2];HEAP32[$t0+4>>2]=$33$1;$36=$plane1+($j<<3)|0;$37$1=HEAP32[$36+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$36>>2];HEAP32[$t1+4>>2]=$37$1;$40=$plane2+($j<<3)|0;$41$1=HEAP32[$40+4>>2]|0;HEAP32[$t2>>2]=HEAP32[$40>>2];HEAP32[$t2+4>>2]=$41$1;$42$1=HEAP32[$t0+4>>2]|0;$44=$3|0;HEAP32[$44>>2]=HEAP32[$t0>>2];HEAP32[$44+4>>2]=$42$1;$45$1=HEAP32[$t1+4>>2]|0;$47=$3+8|0;HEAP32[$47>>2]=HEAP32[$t1>>2];HEAP32[$47+4>>2]=$45$1;$48$1=HEAP32[$t2+4>>2]|0;$50=$3+16|0;HEAP32[$50>>2]=HEAP32[$t2>>2];HEAP32[$50+4>>2]=$48$1;label=6;break;case 6:$j=$j+1|0;$3=$3+24|0;label=4;break;case 7:$plane0=$plane0+($2<<3)|0;$plane1=$plane1+($2<<3)|0;$plane2=$plane2+($2<<3)|0;$3=$3+(-((HEAP32[$size>>2]|0)*3|0)<<3)|0;label=8;break;case 8:$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_64f_P4C4R_fPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$plane0=0,$plane1=0,$plane2=0,$plane3=0,$j=0,$t0=0,$t1=0,$22=0,$23=0,$35=0,$36$1=0,$39=0,$40$1=0,$41$1=0,$43=0,$44$1=0,$46=0,$49=0,$50$1=0,$53=0,$54$1=0,$55$1=0,$57=0,$58$1=0,$60=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$plane0=HEAP32[$1>>2]|0;$plane1=HEAP32[$1+4>>2]|0;$plane2=HEAP32[$1+8>>2]|0;$plane3=HEAP32[$1+12>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$22=$size+4|0;$23=HEAP32[$22>>2]|0;HEAP32[$22>>2]=$23-1;if(($23|0)!=0){label=3;break}else{label=9;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=7;break};case 5:$35=$plane0+($j<<3)|0;$36$1=HEAP32[$35+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$35>>2];HEAP32[$t0+4>>2]=$36$1;$39=$plane1+($j<<3)|0;$40$1=HEAP32[$39+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$39>>2];HEAP32[$t1+4>>2]=$40$1;$41$1=HEAP32[$t0+4>>2]|0;$43=$3|0;HEAP32[$43>>2]=HEAP32[$t0>>2];HEAP32[$43+4>>2]=$41$1;$44$1=HEAP32[$t1+4>>2]|0;$46=$3+8|0;HEAP32[$46>>2]=HEAP32[$t1>>2];HEAP32[$46+4>>2]=$44$1;$49=$plane2+($j<<3)|0;$50$1=HEAP32[$49+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$49>>2];HEAP32[$t0+4>>2]=$50$1;$53=$plane3+($j<<3)|0;$54$1=HEAP32[$53+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$53>>2];HEAP32[$t1+4>>2]=$54$1;$55$1=HEAP32[$t0+4>>2]|0;$57=$3+16|0;HEAP32[$57>>2]=HEAP32[$t0>>2];HEAP32[$57+4>>2]=$55$1;$58$1=HEAP32[$t1+4>>2]|0;$60=$3+24|0;HEAP32[$60>>2]=HEAP32[$t1>>2];HEAP32[$60+4>>2]=$58$1;label=6;break;case 6:$j=$j+1|0;$3=$3+32|0;label=4;break;case 7:$plane0=$plane0+($2<<3)|0;$plane1=$plane1+($2<<3)|0;$plane2=$plane2+($2<<3)|0;$plane3=$plane3+($2<<3)|0;$3=$3+(-(HEAP32[$size>>2]<<2)<<3)|0;label=8;break;case 8:$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$3=$3+($coi-1)|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1+$j|0]|0;$t1=HEAP8[$1+($j+1)|0]|0;HEAP8[$3|0]=$t0;HEAP8[$3+$5|0]=$t1;$t0=HEAP8[$1+($j+2)|0]|0;$t1=HEAP8[$1+($j+3)|0]|0;HEAP8[$3+($5<<1)|0]=$t0;HEAP8[$3+($5*3|0)|0]=$t1;label=6;break;case 6:$j=$j+4|0;$3=$3+($5<<2)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP8[$3|0]=HEAP8[$1+$j|0]|0;label=10;break;case 10:$j=$j+1|0;$3=$3+$5|0;label=8;break;case 11:$3=$3+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)|0)|0;label=12;break;case 12:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z17icvCopy_32f_P2C2RPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[250]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_32f_P3C3RPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[248]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_32f_P4C4RPPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[246]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_64f_P2C2RPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[234]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_64f_P3C3RPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[232]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_64f_P4C4RPPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[230]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __Z17icvCopy_8u_C1CnCRPKhiPhi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[224]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$3=$3+($coi-1<<1)|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$1+($j<<1)>>1]|0;$t1=HEAP16[$1+($j+1<<1)>>1]|0;HEAP16[$3>>1]=$t0;HEAP16[$3+($5<<1)>>1]=$t1;$t0=HEAP16[$1+($j+2<<1)>>1]|0;$t1=HEAP16[$1+($j+3<<1)>>1]|0;HEAP16[$3+($5<<1<<1)>>1]=$t0;HEAP16[$3+(($5*3|0)<<1)>>1]=$t1;label=6;break;case 6:$j=$j+4|0;$3=$3+($5<<2<<1)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP16[$3>>1]=HEAP16[$1+($j<<1)>>1]|0;label=10;break;case 10:$j=$j+1|0;$3=$3+($5<<1)|0;label=8;break;case 11:$3=$3+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<1)|0;label=12;break;case 12:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$3=$3+($coi-1<<2)|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1+($j<<2)>>2]|0;$t1=HEAP32[$1+($j+1<<2)>>2]|0;HEAP32[$3>>2]=$t0;HEAP32[$3+($5<<2)>>2]=$t1;$t0=HEAP32[$1+($j+2<<2)>>2]|0;$t1=HEAP32[$1+($j+3<<2)>>2]|0;HEAP32[$3+($5<<1<<2)>>2]=$t0;HEAP32[$3+(($5*3|0)<<2)>>2]=$t1;label=6;break;case 6:$j=$j+4|0;$3=$3+($5<<2<<2)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP32[$3>>2]=HEAP32[$1+($j<<2)>>2];label=10;break;case 10:$j=$j+1|0;$3=$3+($5<<2)|0;label=8;break;case 11:$3=$3+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<2)|0;label=12;break;case 12:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __ZL20icvCopy_64f_C1CnCR_fPKxiPxi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$j=0,$t0=0,$t1=0,$16=0,$17=0,$30=0,$31$1=0,$35=0,$36$1=0,$37$1=0,$39=0,$40$1=0,$43=0,$47=0,$48$1=0,$52=0,$53$1=0,$54$1=0,$58=0,$59$1=0,$63=0,$80=0,$81$1=0,$83=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$cn;$3=$3+($coi-1<<3)|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=3;break}else{label=13;break};case 3:$j=0;label=4;break;case 4:if(($j|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$30=$1+($j<<3)|0;$31$1=HEAP32[$30+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$30>>2];HEAP32[$t0+4>>2]=$31$1;$35=$1+($j+1<<3)|0;$36$1=HEAP32[$35+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$35>>2];HEAP32[$t1+4>>2]=$36$1;$37$1=HEAP32[$t0+4>>2]|0;$39=$3|0;HEAP32[$39>>2]=HEAP32[$t0>>2];HEAP32[$39+4>>2]=$37$1;$40$1=HEAP32[$t1+4>>2]|0;$43=$3+($5<<3)|0;HEAP32[$43>>2]=HEAP32[$t1>>2];HEAP32[$43+4>>2]=$40$1;$47=$1+($j+2<<3)|0;$48$1=HEAP32[$47+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$47>>2];HEAP32[$t0+4>>2]=$48$1;$52=$1+($j+3<<3)|0;$53$1=HEAP32[$52+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$52>>2];HEAP32[$t1+4>>2]=$53$1;$54$1=HEAP32[$t0+4>>2]|0;$58=$3+($5<<1<<3)|0;HEAP32[$58>>2]=HEAP32[$t0>>2];HEAP32[$58+4>>2]=$54$1;$59$1=HEAP32[$t1+4>>2]|0;$63=$3+(($5*3|0)<<3)|0;HEAP32[$63>>2]=HEAP32[$t1>>2];HEAP32[$63+4>>2]=$59$1;label=6;break;case 6:$j=$j+4|0;$3=$3+($5<<2<<3)|0;label=4;break;case 7:label=8;break;case 8:if(($j|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:$80=$1+($j<<3)|0;$81$1=HEAP32[$80+4>>2]|0;$83=$3|0;HEAP32[$83>>2]=HEAP32[$80>>2];HEAP32[$83+4>>2]=$81$1;label=10;break;case 10:$j=$j+1|0;$3=$3+($5<<3)|0;label=8;break;case 11:$3=$3+(-(Math_imul(HEAP32[$size>>2]|0,$5)|0)<<3)|0;label=12;break;case 12:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z18icvCopy_16s_C1CnCRPKtiPti6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[286]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __Z18icvCopy_32f_C1CnCRPKiiPii6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[264]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function __Z18icvCopy_64f_C1CnCRPKxiPxi6CvSizeii($src,$srcstep,$dst,$dststep,$size,$cn,$coi){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$cn=$cn|0;$coi=$coi|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[244]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$cn,$coi)|0;STACKTOP=sp;return $17|0}function _cvSplit($srcarr,$dstarr0,$dstarr1,$dstarr2,$dstarr3){$srcarr=$srcarr|0;$dstarr0=$dstarr0|0;$dstarr1=$dstarr1|0;$dstarr2=$dstarr2|0;$dstarr3=$dstarr3|0;var $stub=0,$dst=0,$src=0,$size=0,$dstptr=0,$type=0,$cn=0,$coi=0,$i=0,$nzplanes=0,$nzidx=0,$cont_flag=0,$src_step=0,$dst_step=0,$6=0,$func=0,$ippi_call_result=0,$7=0,$func1=0,$ippi_call_result2=0,$8=0,$178=0,$179=0,$186=0,$207=0,$211=0,$212=0,$237=0,$244=0,$246=0,$247=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+216|0;label=1;while(1)switch(label|0){case 1:$stub=sp|0;$dst=sp+144|0;$size=sp+160|0;$dstptr=sp+168|0;$coi=sp+184|0;$6=sp+192|0;$7=sp+200|0;$8=sp+208|0;$src=$srcarr;_memset($dstptr|0,0,16);HEAP32[$coi>>2]=0;$nzplanes=0;$nzidx=-1;$dst_step=0;if((HEAP32[6972]|0)!=0){label=3;break}else{label=2;break};case 2:__ZL18icvInitSplitRTableP14CvBigFuncTable(23688);__ZL21icvInitSplitRCoiTableP11CvFuncTable(23656);HEAP32[6972]=1;label=3;break;case 3:HEAP32[$dst>>2]=$dstarr0;HEAP32[$dst+4>>2]=$dstarr1;HEAP32[$dst+8>>2]=$dstarr2;HEAP32[$dst+12>>2]=$dstarr3;$src=_cvGetMat($src,$stub+112|0,$coi,0)|0;if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6816,12368,15320,464);label=43;break;case 5:$type=HEAP32[$src>>2]&511;$cn=(($type&504)>>3)+1|0;$cont_flag=HEAP32[$src>>2]|0;if(($cn|0)==1){label=6;break}else{label=7;break};case 6:_cvError(-15,6816,28416,15320,475);label=43;break;case 7:$i=0;label=8;break;case 8:if(($i|0)<4){label=9;break}else{label=26;break};case 9:if((HEAP32[$dst+($i<<2)>>2]|0)!=0){label=10;break}else{label=24;break};case 10:$nzplanes=$nzplanes+1|0;$nzidx=$i;HEAP32[$dst+($i<<2)>>2]=_cvGetMat(HEAP32[$dst+($i<<2)>>2]|0,$stub+($i*28|0)|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-1,6816,12368,15320,483);label=43;break;case 12:if((((HEAP32[HEAP32[$dst+($i<<2)>>2]>>2]&504)>>3)+1|0)!=1){label=13;break}else{label=14;break};case 13:_cvError(-15,6816,28416,15320,485);label=43;break;case 14:if(((HEAP32[HEAP32[$dst+($i<<2)>>2]>>2]^HEAP32[$src>>2])&7|0)==0){label=16;break}else{label=15;break};case 15:_cvError(-205,6816,28416,15320,487);label=43;break;case 16:if((HEAP32[(HEAP32[$dst+($i<<2)>>2]|0)+20>>2]|0)==(HEAP32[$src+20>>2]|0)){label=17;break}else{label=18;break};case 17:if((HEAP32[(HEAP32[$dst+($i<<2)>>2]|0)+24>>2]|0)==(HEAP32[$src+24>>2]|0)){label=19;break}else{label=18;break};case 18:_cvError(-209,6816,28416,15320,489);label=43;break;case 19:if(($nzplanes|0)>($i|0)){label=20;break}else{label=23;break};case 20:if(($i|0)>0){label=21;break}else{label=23;break};case 21:if((HEAP32[(HEAP32[$dst+($i<<2)>>2]|0)+4>>2]|0)!=(HEAP32[(HEAP32[$dst+($i-1<<2)>>2]|0)+4>>2]|0)){label=22;break}else{label=23;break};case 22:_cvError(-13,6816,28416,15320,491);label=43;break;case 23:$dst_step=HEAP32[(HEAP32[$dst+($i<<2)>>2]|0)+4>>2]|0;HEAP32[$dstptr+($nzplanes-1<<2)>>2]=HEAP32[(HEAP32[$dst+($i<<2)>>2]|0)+16>>2];$cont_flag=$cont_flag&HEAP32[HEAP32[$dst+($i<<2)>>2]>>2];label=24;break;case 24:label=25;break;case 25:$i=$i+1|0;label=8;break;case 26:$src_step=HEAP32[$src+4>>2]|0;__Z12cvGetMatSizePK5CvMat($6,$src);$178=$size;$179=$6;HEAP32[$178>>2]=HEAP32[$179>>2];HEAP32[$178+4>>2]=HEAP32[$179+4>>2];if(($cont_flag&16384|0)!=0){label=27;break}else{label=28;break};case 27:$186=$size|0;HEAP32[$186>>2]=Math_imul(HEAP32[$186>>2]|0,HEAP32[$size+4>>2]|0)|0;$dst_step=1073741824;$src_step=1073741824;HEAP32[$size+4>>2]=1;label=28;break;case 28:if(($nzplanes|0)==($cn|0)){label=29;break}else{label=34;break};case 29:$func=HEAP32[23688+($type<<2)>>2]|0;if(($func|0)!=0){label=31;break}else{label=30;break};case 30:_cvError(-210,6816,28416,15320,515);label=43;break;case 31:$207=HEAP32[$src+16>>2]|0;$211=$7;$212=$size;HEAP32[$211>>2]=HEAP32[$212>>2];HEAP32[$211+4>>2]=HEAP32[$212+4>>2];$ippi_call_result=FUNCTION_TABLE_iiiiii[$func&1023]($207,$src_step,$dstptr|0,$dst_step,$7)|0;if(($ippi_call_result|0)<0){label=32;break}else{label=33;break};case 32:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,6816,11344,15320,517);label=43;break;case 33:label=42;break;case 34:if(($nzplanes|0)==1){label=35;break}else{label=40;break};case 35:$func1=HEAP32[23656+(($type&7)<<2)>>2]|0;if(($func1|0)!=0){label=37;break}else{label=36;break};case 36:_cvError(-210,6816,28416,15320,524);label=43;break;case 37:$237=HEAP32[$src+16>>2]|0;$244=HEAP32[(HEAP32[$dst+($nzidx<<2)>>2]|0)+16>>2]|0;$246=$8;$247=$size;HEAP32[$246>>2]=HEAP32[$247>>2];HEAP32[$246+4>>2]=HEAP32[$247+4>>2];$ippi_call_result2=FUNCTION_TABLE_iiiiiiii[$func1&1023]($237,$src_step,$244,$dst_step,$8,$cn,$nzidx+1|0)|0;if(($ippi_call_result2|0)<0){label=38;break}else{label=39;break};case 38:_cvError(_cvErrorFromIppStatus($ippi_call_result2)|0,6816,11344,15320,528);label=43;break;case 39:label=41;break;case 40:_cvError(-5,6816,10528,15320,533);label=43;break;case 41:label=42;break;case 42:label=43;break;case 43:STACKTOP=sp;return}}function __ZL18icvInitSplitRTableP14CvBigFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1+32>>2]=716;HEAP32[$1+64>>2]=786;HEAP32[$1+96>>2]=140;HEAP32[$1+36>>2]=716;HEAP32[$1+68>>2]=786;HEAP32[$1+100>>2]=140;HEAP32[$1+40>>2]=304;HEAP32[$1+72>>2]=536;HEAP32[$1+104>>2]=242;HEAP32[$1+44>>2]=304;HEAP32[$1+76>>2]=536;HEAP32[$1+108>>2]=242;HEAP32[$1+48>>2]=308;HEAP32[$1+80>>2]=426;HEAP32[$1+112>>2]=640;HEAP32[$1+52>>2]=308;HEAP32[$1+84>>2]=426;HEAP32[$1+116>>2]=640;HEAP32[$1+56>>2]=736;HEAP32[$1+88>>2]=54;HEAP32[$1+120>>2]=90;return}function __ZL21icvInitSplitRCoiTableP11CvFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1>>2]=474;HEAP32[$1+4>>2]=474;HEAP32[$1+8>>2]=788;HEAP32[$1+12>>2]=788;HEAP32[$1+16>>2]=462;HEAP32[$1+20>>2]=462;HEAP32[$1+24>>2]=532;return}function __ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1+32>>2]=222;HEAP32[$1+64>>2]=846;HEAP32[$1+96>>2]=68;HEAP32[$1+36>>2]=222;HEAP32[$1+68>>2]=846;HEAP32[$1+100>>2]=68;HEAP32[$1+40>>2]=372;HEAP32[$1+72>>2]=844;HEAP32[$1+104>>2]=112;HEAP32[$1+44>>2]=372;HEAP32[$1+76>>2]=844;HEAP32[$1+108>>2]=112;HEAP32[$1+48>>2]=516;HEAP32[$1+80>>2]=132;HEAP32[$1+112>>2]=642;HEAP32[$1+52>>2]=516;HEAP32[$1+84>>2]=132;HEAP32[$1+116>>2]=642;HEAP32[$1+56>>2]=850;HEAP32[$1+88>>2]=402;HEAP32[$1+120>>2]=328;return}function __ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1>>2]=752;HEAP32[$1+4>>2]=752;HEAP32[$1+8>>2]=550;HEAP32[$1+12>>2]=550;HEAP32[$1+16>>2]=314;HEAP32[$1+20>>2]=314;HEAP32[$1+24>>2]=660;return}function _cvMerge($srcarr0,$srcarr1,$srcarr2,$srcarr3,$dstarr){$srcarr0=$srcarr0|0;$srcarr1=$srcarr1|0;$srcarr2=$srcarr2|0;$srcarr3=$srcarr3|0;$dstarr=$dstarr|0;var $src_step=0,$dst_step=0,$stub=0,$src=0,$dst=0,$size=0,$srcptr=0,$type=0,$cn=0,$coi=0,$i=0,$nzplanes=0,$nzidx=0,$cont_flag=0,$6=0,$func=0,$ippi_call_result=0,$7=0,$func1=0,$ippi_call_result2=0,$8=0,$175=0,$176=0,$186=0,$209=0,$211=0,$212=0,$239=0,$244=0,$246=0,$247=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+216|0;label=1;while(1)switch(label|0){case 1:$stub=sp|0;$src=sp+144|0;$size=sp+160|0;$srcptr=sp+168|0;$coi=sp+184|0;$6=sp+192|0;$7=sp+200|0;$8=sp+208|0;$src_step=0;$dst=$dstarr;_memset($srcptr|0,0,16);HEAP32[$coi>>2]=0;$nzplanes=0;$nzidx=-1;if((HEAP32[6968]|0)!=0){label=3;break}else{label=2;break};case 2:__ZL26icvInitCvtPlaneToPixRTableP14CvBigFuncTable(25776);__ZL29icvInitCvtPlaneToPixRCoiTableP11CvFuncTable(25744);HEAP32[6968]=1;label=3;break;case 3:HEAP32[$src>>2]=$srcarr0;HEAP32[$src+4>>2]=$srcarr1;HEAP32[$src+8>>2]=$srcarr2;HEAP32[$src+12>>2]=$srcarr3;$dst=_cvGetMat($dst,$stub+112|0,$coi,0)|0;if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6136,12368,15320,573);label=43;break;case 5:$type=HEAP32[$dst>>2]&511;$cn=(($type&504)>>3)+1|0;$cont_flag=HEAP32[$dst>>2]|0;if(($cn|0)==1){label=6;break}else{label=7;break};case 6:_cvError(-15,6136,28416,15320,581);label=43;break;case 7:$i=0;label=8;break;case 8:if(($i|0)<4){label=9;break}else{label=26;break};case 9:if((HEAP32[$src+($i<<2)>>2]|0)!=0){label=10;break}else{label=24;break};case 10:$nzplanes=$nzplanes+1|0;$nzidx=$i;HEAP32[$src+($i<<2)>>2]=_cvGetMat(HEAP32[$src+($i<<2)>>2]|0,$stub+($i*28|0)|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-1,6136,12368,15320,589);label=43;break;case 12:if((((HEAP32[HEAP32[$src+($i<<2)>>2]>>2]&504)>>3)+1|0)!=1){label=13;break}else{label=14;break};case 13:_cvError(-15,6136,28416,15320,591);label=43;break;case 14:if(((HEAP32[HEAP32[$src+($i<<2)>>2]>>2]^HEAP32[$dst>>2])&7|0)==0){label=16;break}else{label=15;break};case 15:_cvError(-205,6136,28416,15320,593);label=43;break;case 16:if((HEAP32[(HEAP32[$src+($i<<2)>>2]|0)+20>>2]|0)==(HEAP32[$dst+20>>2]|0)){label=17;break}else{label=18;break};case 17:if((HEAP32[(HEAP32[$src+($i<<2)>>2]|0)+24>>2]|0)==(HEAP32[$dst+24>>2]|0)){label=19;break}else{label=18;break};case 18:_cvError(-209,6136,28416,15320,595);label=43;break;case 19:if(($nzplanes|0)>($i|0)){label=20;break}else{label=23;break};case 20:if(($i|0)>0){label=21;break}else{label=23;break};case 21:if((HEAP32[(HEAP32[$src+($i<<2)>>2]|0)+4>>2]|0)!=(HEAP32[(HEAP32[$src+($i-1<<2)>>2]|0)+4>>2]|0)){label=22;break}else{label=23;break};case 22:_cvError(-13,6136,28416,15320,597);label=43;break;case 23:$src_step=HEAP32[(HEAP32[$src+($i<<2)>>2]|0)+4>>2]|0;HEAP32[$srcptr+($nzplanes-1<<2)>>2]=HEAP32[(HEAP32[$src+($i<<2)>>2]|0)+16>>2];$cont_flag=$cont_flag&HEAP32[HEAP32[$src+($i<<2)>>2]>>2];label=24;break;case 24:label=25;break;case 25:$i=$i+1|0;label=8;break;case 26:__Z12cvGetMatSizePK5CvMat($6,$dst);$175=$size;$176=$6;HEAP32[$175>>2]=HEAP32[$176>>2];HEAP32[$175+4>>2]=HEAP32[$176+4>>2];$dst_step=HEAP32[$dst+4>>2]|0;if(($cont_flag&16384|0)!=0){label=27;break}else{label=28;break};case 27:$186=$size|0;HEAP32[$186>>2]=Math_imul(HEAP32[$186>>2]|0,HEAP32[$size+4>>2]|0)|0;$dst_step=1073741824;$src_step=1073741824;HEAP32[$size+4>>2]=1;label=28;break;case 28:if(($nzplanes|0)==($cn|0)){label=29;break}else{label=34;break};case 29:$func=HEAP32[25776+($type<<2)>>2]|0;if(($func|0)!=0){label=31;break}else{label=30;break};case 30:_cvError(-210,6136,28416,15320,620);label=43;break;case 31:$209=HEAP32[$dst+16>>2]|0;$211=$7;$212=$size;HEAP32[$211>>2]=HEAP32[$212>>2];HEAP32[$211+4>>2]=HEAP32[$212+4>>2];$ippi_call_result=FUNCTION_TABLE_iiiiii[$func&1023]($srcptr|0,$src_step,$209,$dst_step,$7)|0;if(($ippi_call_result|0)<0){label=32;break}else{label=33;break};case 32:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,6136,11344,15320,622);label=43;break;case 33:label=42;break;case 34:if(($nzplanes|0)==1){label=35;break}else{label=40;break};case 35:$func1=HEAP32[25744+(($type&7)<<2)>>2]|0;if(($func1|0)!=0){label=37;break}else{label=36;break};case 36:_cvError(-210,6136,28416,15320,629);label=43;break;case 37:$239=HEAP32[(HEAP32[$src+($nzidx<<2)>>2]|0)+16>>2]|0;$244=HEAP32[$dst+16>>2]|0;$246=$8;$247=$size;HEAP32[$246>>2]=HEAP32[$247>>2];HEAP32[$246+4>>2]=HEAP32[$247+4>>2];$ippi_call_result2=FUNCTION_TABLE_iiiiiiii[$func1&1023]($239,$src_step,$244,$dst_step,$8,$cn,$nzidx+1|0)|0;if(($ippi_call_result2|0)<0){label=38;break}else{label=39;break};case 38:_cvError(_cvErrorFromIppStatus($ippi_call_result2)|0,6136,11344,15320,633);label=43;break;case 39:label=41;break;case 40:_cvError(-5,6136,8376,15320,638);label=43;break;case 41:label=42;break;case 42:label=43;break;case 43:STACKTOP=sp;return}}function __ZL20icvInitCvtToC1RTableP11CvFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1>>2]=162;HEAP32[$1+4>>2]=756;HEAP32[$1+8>>2]=248;HEAP32[$1+12>>2]=648;HEAP32[$1+16>>2]=562;HEAP32[$1+20>>2]=542;HEAP32[$1+24>>2]=252;return}function __ZL25icvInitCvtScaleToC1RTableP11CvFuncTable($tab){$tab=$tab|0;var $1=0;$1=$tab;HEAP32[$1>>2]=720;HEAP32[$1+4>>2]=202;HEAP32[$1+8>>2]=746;HEAP32[$1+12>>2]=646;HEAP32[$1+16>>2]=28;HEAP32[$1+20>>2]=714;HEAP32[$1+24>>2]=290;return}function _cvConvertScale($srcarr,$dstarr,$scale,$shift){$srcarr=$srcarr|0;$dstarr=$dstarr|0;$scale=+$scale;$shift=+$shift;var $3=0.0,$4=0.0,$type=0,$is_nd=0,$src=0,$dst=0,$size=0,$src_step=0,$dst_step=0,$no_scale=0,$coi=0,$coi1=0,$arrs=0,$iterator=0,$dsttype=0,$func=0,$ippi_call_result=0,$5=0,$func2=0,$ippi_call_result3=0,$6=0,$7=0,$func6=0,$ippi_call_result7=0,$8=0,$func8=0,$ippi_call_result9=0,$9=0,$20=0,$141=0,$169=0,$192=0,$195=0,$197=0,$198=0,$225=0,$228=0,$230=0,$231=0,$293=0,$294=0,$317=0,$326=0,$380=0,$382=0,$417=0,$419=0,$457=0,$462=0,$464=0,$465=0,$490=0,$495=0,$497=0,$498=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+912|0;label=1;while(1)switch(label|0){case 1:$size=sp+64|0;$coi=sp+72|0;$coi1=sp+80|0;$arrs=sp+88|0;$iterator=sp+648|0;$5=sp+872|0;$6=sp+880|0;$7=sp+888|0;$8=sp+896|0;$9=sp+904|0;$3=$scale;$4=$shift;$is_nd=0;$src=$srcarr;$dst=$dstarr;if($3==1.0){label=2;break}else{$20=0;label=3;break};case 2:$20=$4==0.0;label=3;break;case 3:$no_scale=$20&1;if(($src|0)!=0){label=4;break}else{label=8;break};case 4:if((HEAP32[$src>>2]&-65536|0)==1111621632){label=5;break}else{label=8;break};case 5:if((HEAP32[$src+24>>2]|0)>0){label=6;break}else{label=8;break};case 6:if((HEAP32[$src+20>>2]|0)>0){label=7;break}else{label=8;break};case 7:if((HEAP32[$src+16>>2]|0)!=0){label=18;break}else{label=8;break};case 8:if(($src|0)!=0){label=9;break}else{label=12;break};case 9:if((HEAP32[$src>>2]&-65536|0)==1111687168){label=10;break}else{label=12;break};case 10:if((HEAP32[$src+16>>2]|0)!=0){label=11;break}else{label=12;break};case 11:$is_nd=1;label=17;break;case 12:HEAP32[$coi>>2]=0;$src=_cvGetMat($src,sp|0,$coi,0)|0;if((_cvGetErrStatus()|0)<0){label=13;break}else{label=14;break};case 13:_cvError(-1,6784,12368,15320,1520);label=96;break;case 14:if((HEAP32[$coi>>2]|0)!=0){label=15;break}else{label=16;break};case 15:_cvError(-24,6784,28416,15320,1523);label=96;break;case 16:label=17;break;case 17:label=18;break;case 18:if(($dst|0)!=0){label=19;break}else{label=23;break};case 19:if((HEAP32[$dst>>2]&-65536|0)==1111621632){label=20;break}else{label=23;break};case 20:if((HEAP32[$dst+24>>2]|0)>0){label=21;break}else{label=23;break};case 21:if((HEAP32[$dst+20>>2]|0)>0){label=22;break}else{label=23;break};case 22:if((HEAP32[$dst+16>>2]|0)!=0){label=33;break}else{label=23;break};case 23:if(($dst|0)!=0){label=24;break}else{label=27;break};case 24:if((HEAP32[$dst>>2]&-65536|0)==1111687168){label=25;break}else{label=27;break};case 25:if((HEAP32[$dst+16>>2]|0)!=0){label=26;break}else{label=27;break};case 26:$is_nd=1;label=32;break;case 27:HEAP32[$coi1>>2]=0;$dst=_cvGetMat($dst,sp+32|0,$coi1,0)|0;if((_cvGetErrStatus()|0)<0){label=28;break}else{label=29;break};case 28:_cvError(-1,6784,12368,15320,1534);label=96;break;case 29:if((HEAP32[$coi1>>2]|0)!=0){label=30;break}else{label=31;break};case 30:_cvError(-24,6784,28416,15320,1537);label=96;break;case 31:label=32;break;case 32:label=33;break;case 33:if(($is_nd|0)!=0){label=34;break}else{label=56;break};case 34:$141=$arrs|0;HEAP32[$141>>2]=$src;HEAP32[$141+4>>2]=$dst;_cvInitNArrayIterator(2,$arrs|0,0,sp+96|0,$iterator,1)|0;if((_cvGetErrStatus()|0)<0){label=35;break}else{label=36;break};case 35:_cvError(-1,6784,12368,15320,1548);label=96;break;case 36:$type=HEAP32[HEAP32[$iterator+184>>2]>>2]|0;$dsttype=HEAP32[HEAP32[$iterator+188>>2]>>2]|0;$169=$iterator+8|0;HEAP32[$169>>2]=Math_imul(HEAP32[$169>>2]|0,(($type&504)>>3)+1|0)|0;if((HEAP32[6970]|0)!=0){label=38;break}else{label=37;break};case 37:__ZL20icvInitCvtToC1RTableP11CvFuncTable(28064);__ZL25icvInitCvtScaleToC1RTableP11CvFuncTable(28032);HEAP32[6970]=1;label=38;break;case 38:if(($no_scale|0)!=0){label=39;break}else{label=47;break};case 39:$func=HEAP32[28064+(($dsttype&7)<<2)>>2]|0;if(($func|0)!=0){label=41;break}else{label=40;break};case 40:_cvError(-210,6784,28416,15320,1565);label=96;break;case 41:label=42;break;case 42:$192=HEAP32[$iterator+16>>2]|0;$195=HEAP32[$iterator+20>>2]|0;$197=$5;$198=$iterator+8|0;HEAP32[$197>>2]=HEAP32[$198>>2];HEAP32[$197+4>>2]=HEAP32[$198+4>>2];$ippi_call_result=FUNCTION_TABLE_iiiiiii[$func&1023]($192,1073741824,$195,1073741824,$5,$type)|0;if(($ippi_call_result|0)<0){label=43;break}else{label=44;break};case 43:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,6784,11344,15320,1571);label=96;break;case 44:label=45;break;case 45:if((_cvNextNArraySlice($iterator)|0)!=0){label=42;break}else{label=46;break};case 46:label=55;break;case 47:$func2=HEAP32[28032+(($dsttype&7)<<2)>>2]|0;if(($func2|0)!=0){label=49;break}else{label=48;break};case 48:_cvError(-210,6784,28416,15320,1580);label=96;break;case 49:label=50;break;case 50:$225=HEAP32[$iterator+16>>2]|0;$228=HEAP32[$iterator+20>>2]|0;$230=$6;$231=$iterator+8|0;HEAP32[$230>>2]=HEAP32[$231>>2];HEAP32[$230+4>>2]=HEAP32[$231+4>>2];$ippi_call_result3=FUNCTION_TABLE_iiiiiiffi[$func2&1023]($225,1073741824,$228,1073741824,$6,$3,$4,$type)|0;if(($ippi_call_result3|0)<0){label=51;break}else{label=52;break};case 51:_cvError(_cvErrorFromIppStatus($ippi_call_result3)|0,6784,11344,15320,1586);label=96;break;case 52:label=53;break;case 53:if((_cvNextNArraySlice($iterator)|0)!=0){label=50;break}else{label=54;break};case 54:label=55;break;case 55:label=96;break;case 56:if(($no_scale|0)!=0){label=57;break}else{label=61;break};case 57:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&511|0)==0){label=58;break}else{label=61;break};case 58:if(($src|0)!=($dst|0)){label=59;break}else{label=60;break};case 59:_cvCopy($src,$dst,0);label=60;break;case 60:label=96;break;case 61:if((HEAP32[$src+20>>2]|0)==(HEAP32[$dst+20>>2]|0)){label=62;break}else{label=63;break};case 62:if((HEAP32[$src+24>>2]|0)==(HEAP32[$dst+24>>2]|0)){label=64;break}else{label=63;break};case 63:_cvError(-209,6784,28416,15320,1601);label=96;break;case 64:__Z12cvGetMatSizePK5CvMat($7,$src);$293=$size;$294=$7;HEAP32[$293>>2]=HEAP32[$294>>2];HEAP32[$293+4>>2]=HEAP32[$294+4>>2];$type=HEAP32[$src>>2]&511;$src_step=HEAP32[$src+4>>2]|0;$dst_step=HEAP32[$dst+4>>2]|0;if((HEAP32[$src>>2]&HEAP32[$dst>>2]&16384|0)!=0){label=65;break}else{label=66;break};case 65:$317=$size|0;HEAP32[$317>>2]=Math_imul(HEAP32[$317>>2]|0,HEAP32[$size+4>>2]|0)|0;$dst_step=1073741824;$src_step=1073741824;HEAP32[$size+4>>2]=1;label=66;break;case 66:$326=$size|0;HEAP32[$326>>2]=Math_imul(HEAP32[$326>>2]|0,(($type&504)>>3)+1|0)|0;if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&511|0)==0){label=67;break}else{label=80;break};case 67:if((HEAP32[$size+4>>2]|0)==1){label=68;break}else{label=80;break};case 68:if((HEAP32[$size>>2]|0)<=10){label=69;break}else{label=80;break};case 69:if(($type&7|0)==5){label=70;break}else{label=74;break};case 70:label=71;break;case 71:HEAPF32[(HEAP32[$dst+16>>2]|0)+((HEAP32[$size>>2]|0)-1<<2)>>2]=+HEAPF32[(HEAP32[$src+16>>2]|0)+((HEAP32[$size>>2]|0)-1<<2)>>2]*$3+$4;label=72;break;case 72:$380=$size|0;$382=(HEAP32[$380>>2]|0)-1|0;HEAP32[$380>>2]=$382;if(($382|0)!=0){label=71;break}else{label=73;break};case 73:label=96;break;case 74:if(($type&7|0)==6){label=75;break}else{label=79;break};case 75:label=76;break;case 76:HEAPF64[(HEAP32[$dst+16>>2]|0)+((HEAP32[$size>>2]|0)-1<<3)>>3]=+HEAPF64[(HEAP32[$src+16>>2]|0)+((HEAP32[$size>>2]|0)-1<<3)>>3]*$3+$4;label=77;break;case 77:$417=$size|0;$419=(HEAP32[$417>>2]|0)-1|0;HEAP32[$417>>2]=$419;if(($419|0)!=0){label=76;break}else{label=78;break};case 78:label=96;break;case 79:label=80;break;case 80:if((HEAP32[6970]|0)!=0){label=82;break}else{label=81;break};case 81:__ZL20icvInitCvtToC1RTableP11CvFuncTable(28064);__ZL25icvInitCvtScaleToC1RTableP11CvFuncTable(28032);HEAP32[6970]=1;label=82;break;case 82:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&504|0)==0){label=84;break}else{label=83;break};case 83:_cvError(-205,6784,28416,15320,1657);label=96;break;case 84:if(($no_scale|0)!=0){label=85;break}else{label=90;break};case 85:$func6=HEAP32[28064+((HEAP32[$dst>>2]&7)<<2)>>2]|0;if(($func6|0)!=0){label=87;break}else{label=86;break};case 86:_cvError(-210,6784,28416,15320,1664);label=96;break;case 87:$457=HEAP32[$src+16>>2]|0;$462=HEAP32[$dst+16>>2]|0;$464=$8;$465=$size;HEAP32[$464>>2]=HEAP32[$465>>2];HEAP32[$464+4>>2]=HEAP32[$465+4>>2];$ippi_call_result7=FUNCTION_TABLE_iiiiiii[$func6&1023]($457,$src_step,$462,$dst_step,$8,$type)|0;if(($ippi_call_result7|0)<0){label=88;break}else{label=89;break};case 88:_cvError(_cvErrorFromIppStatus($ippi_call_result7)|0,6784,11344,15320,1667);label=96;break;case 89:label=95;break;case 90:$func8=HEAP32[28032+((HEAP32[$dst>>2]&7)<<2)>>2]|0;if(($func8|0)!=0){label=92;break}else{label=91;break};case 91:_cvError(-210,6784,28416,15320,1675);label=96;break;case 92:$490=HEAP32[$src+16>>2]|0;$495=HEAP32[$dst+16>>2]|0;$497=$9;$498=$size;HEAP32[$497>>2]=HEAP32[$498>>2];HEAP32[$497+4>>2]=HEAP32[$498+4>>2];$ippi_call_result9=FUNCTION_TABLE_iiiiiiffi[$func8&1023]($490,$src_step,$495,$dst_step,$9,$3,$4,$type)|0;if(($ippi_call_result9|0)<0){label=93;break}else{label=94;break};case 93:_cvError(_cvErrorFromIppStatus($ippi_call_result9)|0,6784,11344,15320,1679);label=96;break;case 94:label=95;break;case 95:label=96;break;case 96:STACKTOP=sp;return}}function __ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$t=0,$9=0,$iscale=0,$ishift=0,$_src=0,$t0=0,$t1=0,$t01=0,$_src2=0,$t03=0,$t14=0,$t05=0,$t6=0,$10=0,$iscale7=0,$ishift8=0,$_src9=0,$t010=0,$t111=0,$t012=0,$_src13=0,$t014=0,$t115=0,$t016=0,$iscale17=0,$_src18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$t023=0,$t124=0,$t025=0,$iscale26=0,$ishift27=0,$_src28=0,$t029=0,$t130=0,$t031=0,$_src32=0,$t033=0,$t134=0,$t035=0,$_src36=0,$t037=0,$t138=0,$t039=0,$_src40=0,$t041=0,$t142=0,$t043=0,$_src44=0,$t045=0,$t146=0,$t047=0,$15=0,$41=0,$57=0,$58=0,$80=0,$81=0,$125=0,$140=0,$180=0,$196=0,$233=0,$255=0,$256=0,$300=0,$315=0,$355=0,$371=0,$408=0,$458=0,$471=0,$472=0,$494=0,$495=0,$539=0,$554=0,$594=0,$610=0,$647=0,$669=0,$670=0,$714=0,$729=0,$769=0,$785=0,$822=0,$858=0,$859=0,$901=0,$916=0,$954=0,$970=0,$1006=0,$1029=0,$1030=0,$1074=0,$1089=0,$1129=0,$1145=0,$1182=0,$1220=0,$1221=0,$1265=0,$1280=0,$1320=0,$1336=0,$1373=0,$1396=0,$1397=0,$1441=0,$1456=0,$1496=0,$1512=0,$1549=0,$1573=0,$1574=0,$1616=0,$1631=0,$1669=0,$1685=0,$1721=0,$1744=0,$1745=0,$1787=0,$1802=0,$1840=0,$1856=0,$1892=0,$1915=0,$1916=0,$1956=0,$1971=0,$2007=0,$2023=0,$2058=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+272|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+256|0;$10=sp+264|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=$5>>>0|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=71;break}else if(($15|0)==2){label=140;break}else if(($15|0)==3){label=199;break}else if(($15|0)==4){label=258;break}else if(($15|0)==5){label=286;break}else if(($15|0)==6){label=314;break}else{label=342;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=11;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=10;break};case 5:$t=__Z7cvRoundd($val)|0;if(($t&-256|0)!=0){label=7;break}else{label=6;break};case 6:$41=$t;label=8;break;case 7:$41=($t|0)>0?255:0;label=8;break;case 8:HEAP8[$lut+$i|0]=$41&255;label=9;break;case 9:$i=$i+1|0;$val=$val+$6;label=4;break;case 10:$57=$9;$58=$size;HEAP32[$57>>2]=HEAP32[$58>>2];HEAP32[$57+4>>2]=HEAP32[$58+4>>2];__Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_($2,$3,$4,$5,$9,$lut|0)|0;label=70;break;case 11:if(+Math_abs(+$6)<=128.0){label=12;break}else{label=41;break};case 12:if(+Math_abs(+$7)<=32767.99998474121){label=13;break}else{label=41;break};case 13:$iscale=__Z7cvRoundd($6*32768.0)|0;$ishift=__Z7cvRoundd($7*32768.0)|0;$_src=$2;$3=$3>>>0|0;label=14;break;case 14:$80=$size+4|0;$81=HEAP32[$80>>2]|0;HEAP32[$80>>2]=$81-1;if(($81|0)!=0){label=15;break}else{label=40;break};case 15:$i=0;label=16;break;case 16:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=17;break}else{label=31;break};case 17:$t0=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+1)|0]|0)|0)+$ishift+16384>>15;if(($t0&-256|0)!=0){label=19;break}else{label=18;break};case 18:$125=$t0;label=20;break;case 19:$125=($t0|0)>0?255:0;label=20;break;case 20:HEAP8[$4+$i|0]=$125&255;if(($t1&-256|0)!=0){label=22;break}else{label=21;break};case 21:$140=$t1;label=23;break;case 22:$140=($t1|0)>0?255:0;label=23;break;case 23:HEAP8[$4+($i+1)|0]=$140&255;$t0=(Math_imul($iscale,HEAPU8[$_src+($i+2)|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+3)|0]|0)|0)+$ishift+16384>>15;if(($t0&-256|0)!=0){label=25;break}else{label=24;break};case 24:$180=$t0;label=26;break;case 25:$180=($t0|0)>0?255:0;label=26;break;case 26:HEAP8[$4+($i+2)|0]=$180&255;if(($t1&-256|0)!=0){label=28;break}else{label=27;break};case 27:$196=$t1;label=29;break;case 28:$196=($t1|0)>0?255:0;label=29;break;case 29:HEAP8[$4+($i+3)|0]=$196&255;label=30;break;case 30:$i=$i+4|0;label=16;break;case 31:label=32;break;case 32:if(($i|0)<(HEAP32[$size>>2]|0)){label=33;break}else{label=38;break};case 33:$t01=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;if(($t01&-256|0)!=0){label=35;break}else{label=34;break};case 34:$233=$t01;label=36;break;case 35:$233=($t01|0)>0?255:0;label=36;break;case 36:HEAP8[$4+$i|0]=$233&255;label=37;break;case 37:$i=$i+1|0;label=32;break;case 38:label=39;break;case 39:$_src=$_src+$3|0;$4=$4+$5|0;label=14;break;case 40:label=69;break;case 41:$_src2=$2;$3=$3>>>0|0;label=42;break;case 42:$255=$size+4|0;$256=HEAP32[$255>>2]|0;HEAP32[$255>>2]=$256-1;if(($256|0)!=0){label=43;break}else{label=68;break};case 43:$i=0;label=44;break;case 44:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=59;break};case 45:$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+1)|0]|0)+$7)|0;if(($t03&-256|0)!=0){label=47;break}else{label=46;break};case 46:$300=$t03;label=48;break;case 47:$300=($t03|0)>0?255:0;label=48;break;case 48:HEAP8[$4+$i|0]=$300&255;if(($t14&-256|0)!=0){label=50;break}else{label=49;break};case 49:$315=$t14;label=51;break;case 50:$315=($t14|0)>0?255:0;label=51;break;case 51:HEAP8[$4+($i+1)|0]=$315&255;$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+2)|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+3)|0]|0)+$7)|0;if(($t03&-256|0)!=0){label=53;break}else{label=52;break};case 52:$355=$t03;label=54;break;case 53:$355=($t03|0)>0?255:0;label=54;break;case 54:HEAP8[$4+($i+2)|0]=$355&255;if(($t14&-256|0)!=0){label=56;break}else{label=55;break};case 55:$371=$t14;label=57;break;case 56:$371=($t14|0)>0?255:0;label=57;break;case 57:HEAP8[$4+($i+3)|0]=$371&255;label=58;break;case 58:$i=$i+4|0;label=44;break;case 59:label=60;break;case 60:if(($i|0)<(HEAP32[$size>>2]|0)){label=61;break}else{label=66;break};case 61:$t05=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;if(($t05&-256|0)!=0){label=63;break}else{label=62;break};case 62:$408=$t05;label=64;break;case 63:$408=($t05|0)>0?255:0;label=64;break;case 64:HEAP8[$4+$i|0]=$408&255;label=65;break;case 65:$i=$i+1|0;label=60;break;case 66:label=67;break;case 67:$_src2=$_src2+$3|0;$4=$4+$5|0;label=42;break;case 68:label=69;break;case 69:label=70;break;case 70:label=343;break;case 71:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=72;break}else{label=80;break};case 72:$i=0;label=73;break;case 73:if(($i|0)<256){label=74;break}else{label=79;break};case 74:$t6=__Z7cvRoundd(+(($i&255)<<24>>24|0)*$6+$7)|0;if(($t6&-256|0)!=0){label=76;break}else{label=75;break};case 75:$458=$t6;label=77;break;case 76:$458=($t6|0)>0?255:0;label=77;break;case 77:HEAP8[$lut+$i|0]=$458&255;label=78;break;case 78:$i=$i+1|0;label=73;break;case 79:$471=$10;$472=$size;HEAP32[$471>>2]=HEAP32[$472>>2];HEAP32[$471+4>>2]=HEAP32[$472+4>>2];__Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_($2,$3,$4,$5,$10,$lut|0)|0;label=139;break;case 80:if(+Math_abs(+$6)<=128.0){label=81;break}else{label=110;break};case 81:if(+Math_abs(+$7)<=32767.99998474121){label=82;break}else{label=110;break};case 82:$iscale7=__Z7cvRoundd($6*32768.0)|0;$ishift8=__Z7cvRoundd($7*32768.0)|0;$_src9=$2;$3=$3>>>0|0;label=83;break;case 83:$494=$size+4|0;$495=HEAP32[$494>>2]|0;HEAP32[$494>>2]=$495-1;if(($495|0)!=0){label=84;break}else{label=109;break};case 84:$i=0;label=85;break;case 85:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=86;break}else{label=100;break};case 86:$t010=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+1)|0]|0)|0)+$ishift8+16384>>15;if(($t010&-256|0)!=0){label=88;break}else{label=87;break};case 87:$539=$t010;label=89;break;case 88:$539=($t010|0)>0?255:0;label=89;break;case 89:HEAP8[$4+$i|0]=$539&255;if(($t111&-256|0)!=0){label=91;break}else{label=90;break};case 90:$554=$t111;label=92;break;case 91:$554=($t111|0)>0?255:0;label=92;break;case 92:HEAP8[$4+($i+1)|0]=$554&255;$t010=(Math_imul($iscale7,HEAP8[$_src9+($i+2)|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+3)|0]|0)|0)+$ishift8+16384>>15;if(($t010&-256|0)!=0){label=94;break}else{label=93;break};case 93:$594=$t010;label=95;break;case 94:$594=($t010|0)>0?255:0;label=95;break;case 95:HEAP8[$4+($i+2)|0]=$594&255;if(($t111&-256|0)!=0){label=97;break}else{label=96;break};case 96:$610=$t111;label=98;break;case 97:$610=($t111|0)>0?255:0;label=98;break;case 98:HEAP8[$4+($i+3)|0]=$610&255;label=99;break;case 99:$i=$i+4|0;label=85;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=107;break};case 102:$t012=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;if(($t012&-256|0)!=0){label=104;break}else{label=103;break};case 103:$647=$t012;label=105;break;case 104:$647=($t012|0)>0?255:0;label=105;break;case 105:HEAP8[$4+$i|0]=$647&255;label=106;break;case 106:$i=$i+1|0;label=101;break;case 107:label=108;break;case 108:$_src9=$_src9+$3|0;$4=$4+$5|0;label=83;break;case 109:label=138;break;case 110:$_src13=$2;$3=$3>>>0|0;label=111;break;case 111:$669=$size+4|0;$670=HEAP32[$669>>2]|0;HEAP32[$669>>2]=$670-1;if(($670|0)!=0){label=112;break}else{label=137;break};case 112:$i=0;label=113;break;case 113:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=114;break}else{label=128;break};case 114:$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+1)|0]|0)+$7)|0;if(($t014&-256|0)!=0){label=116;break}else{label=115;break};case 115:$714=$t014;label=117;break;case 116:$714=($t014|0)>0?255:0;label=117;break;case 117:HEAP8[$4+$i|0]=$714&255;if(($t115&-256|0)!=0){label=119;break}else{label=118;break};case 118:$729=$t115;label=120;break;case 119:$729=($t115|0)>0?255:0;label=120;break;case 120:HEAP8[$4+($i+1)|0]=$729&255;$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+2)|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+3)|0]|0)+$7)|0;if(($t014&-256|0)!=0){label=122;break}else{label=121;break};case 121:$769=$t014;label=123;break;case 122:$769=($t014|0)>0?255:0;label=123;break;case 123:HEAP8[$4+($i+2)|0]=$769&255;if(($t115&-256|0)!=0){label=125;break}else{label=124;break};case 124:$785=$t115;label=126;break;case 125:$785=($t115|0)>0?255:0;label=126;break;case 126:HEAP8[$4+($i+3)|0]=$785&255;label=127;break;case 127:$i=$i+4|0;label=113;break;case 128:label=129;break;case 129:if(($i|0)<(HEAP32[$size>>2]|0)){label=130;break}else{label=135;break};case 130:$t016=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;if(($t016&-256|0)!=0){label=132;break}else{label=131;break};case 131:$822=$t016;label=133;break;case 132:$822=($t016|0)>0?255:0;label=133;break;case 133:HEAP8[$4+$i|0]=$822&255;label=134;break;case 134:$i=$i+1|0;label=129;break;case 135:label=136;break;case 136:$_src13=$_src13+$3|0;$4=$4+$5|0;label=111;break;case 137:label=138;break;case 138:label=139;break;case 139:label=343;break;case 140:if(+Math_abs(+$6)<=1.0){label=141;break}else{label=170;break};case 141:if(+Math_abs(+$7)<2.220446049250313e-16){label=142;break}else{label=170;break};case 142:$iscale17=__Z7cvRoundd($6*32768.0)|0;$_src18=$2;$3=($3>>>0)/2|0;label=143;break;case 143:$858=$size+4|0;$859=HEAP32[$858>>2]|0;HEAP32[$858>>2]=$859-1;if(($859|0)!=0){label=144;break}else{label=169;break};case 144:$i=0;label=145;break;case 145:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+1<<1)>>1]|0)|0)+16384>>15;if(($t019&-256|0)!=0){label=148;break}else{label=147;break};case 147:$901=$t019;label=149;break;case 148:$901=($t019|0)>0?255:0;label=149;break;case 149:HEAP8[$4+$i|0]=$901&255;if(($t120&-256|0)!=0){label=151;break}else{label=150;break};case 150:$916=$t120;label=152;break;case 151:$916=($t120|0)>0?255:0;label=152;break;case 152:HEAP8[$4+($i+1)|0]=$916&255;$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i+2<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+3<<1)>>1]|0)|0)+16384>>15;if(($t019&-256|0)!=0){label=154;break}else{label=153;break};case 153:$954=$t019;label=155;break;case 154:$954=($t019|0)>0?255:0;label=155;break;case 155:HEAP8[$4+($i+2)|0]=$954&255;if(($t120&-256|0)!=0){label=157;break}else{label=156;break};case 156:$970=$t120;label=158;break;case 157:$970=($t120|0)>0?255:0;label=158;break;case 158:HEAP8[$4+($i+3)|0]=$970&255;label=159;break;case 159:$i=$i+4|0;label=145;break;case 160:label=161;break;case 161:if(($i|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t021=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;if(($t021&-256|0)!=0){label=164;break}else{label=163;break};case 163:$1006=$t021;label=165;break;case 164:$1006=($t021|0)>0?255:0;label=165;break;case 165:HEAP8[$4+$i|0]=$1006&255;label=166;break;case 166:$i=$i+1|0;label=161;break;case 167:label=168;break;case 168:$_src18=$_src18+($3<<1)|0;$4=$4+$5|0;label=143;break;case 169:label=198;break;case 170:$_src22=$2;$3=($3>>>0)/2|0;label=171;break;case 171:$1029=$size+4|0;$1030=HEAP32[$1029>>2]|0;HEAP32[$1029>>2]=$1030-1;if(($1030|0)!=0){label=172;break}else{label=197;break};case 172:$i=0;label=173;break;case 173:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=174;break}else{label=188;break};case 174:$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+1<<1)>>1]|0)+$7)|0;if(($t023&-256|0)!=0){label=176;break}else{label=175;break};case 175:$1074=$t023;label=177;break;case 176:$1074=($t023|0)>0?255:0;label=177;break;case 177:HEAP8[$4+$i|0]=$1074&255;if(($t124&-256|0)!=0){label=179;break}else{label=178;break};case 178:$1089=$t124;label=180;break;case 179:$1089=($t124|0)>0?255:0;label=180;break;case 180:HEAP8[$4+($i+1)|0]=$1089&255;$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+2<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+3<<1)>>1]|0)+$7)|0;if(($t023&-256|0)!=0){label=182;break}else{label=181;break};case 181:$1129=$t023;label=183;break;case 182:$1129=($t023|0)>0?255:0;label=183;break;case 183:HEAP8[$4+($i+2)|0]=$1129&255;if(($t124&-256|0)!=0){label=185;break}else{label=184;break};case 184:$1145=$t124;label=186;break;case 185:$1145=($t124|0)>0?255:0;label=186;break;case 186:HEAP8[$4+($i+3)|0]=$1145&255;label=187;break;case 187:$i=$i+4|0;label=173;break;case 188:label=189;break;case 189:if(($i|0)<(HEAP32[$size>>2]|0)){label=190;break}else{label=195;break};case 190:$t025=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;if(($t025&-256|0)!=0){label=192;break}else{label=191;break};case 191:$1182=$t025;label=193;break;case 192:$1182=($t025|0)>0?255:0;label=193;break;case 193:HEAP8[$4+$i|0]=$1182&255;label=194;break;case 194:$i=$i+1|0;label=189;break;case 195:label=196;break;case 196:$_src22=$_src22+($3<<1)|0;$4=$4+$5|0;label=171;break;case 197:label=198;break;case 198:label=343;break;case 199:if(+Math_abs(+$6)<=1.0){label=200;break}else{label=229;break};case 200:if(+Math_abs(+$7)<=32767.99998474121){label=201;break}else{label=229;break};case 201:$iscale26=__Z7cvRoundd($6*32768.0)|0;$ishift27=__Z7cvRoundd($7*32768.0)|0;$_src28=$2;$3=($3>>>0)/2|0;label=202;break;case 202:$1220=$size+4|0;$1221=HEAP32[$1220>>2]|0;HEAP32[$1220>>2]=$1221-1;if(($1221|0)!=0){label=203;break}else{label=228;break};case 203:$i=0;label=204;break;case 204:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=205;break}else{label=219;break};case 205:$t029=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+1<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029&-256|0)!=0){label=207;break}else{label=206;break};case 206:$1265=$t029;label=208;break;case 207:$1265=($t029|0)>0?255:0;label=208;break;case 208:HEAP8[$4+$i|0]=$1265&255;if(($t130&-256|0)!=0){label=210;break}else{label=209;break};case 209:$1280=$t130;label=211;break;case 210:$1280=($t130|0)>0?255:0;label=211;break;case 211:HEAP8[$4+($i+1)|0]=$1280&255;$t029=(Math_imul($iscale26,HEAP16[$_src28+($i+2<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+3<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029&-256|0)!=0){label=213;break}else{label=212;break};case 212:$1320=$t029;label=214;break;case 213:$1320=($t029|0)>0?255:0;label=214;break;case 214:HEAP8[$4+($i+2)|0]=$1320&255;if(($t130&-256|0)!=0){label=216;break}else{label=215;break};case 215:$1336=$t130;label=217;break;case 216:$1336=($t130|0)>0?255:0;label=217;break;case 217:HEAP8[$4+($i+3)|0]=$1336&255;label=218;break;case 218:$i=$i+4|0;label=204;break;case 219:label=220;break;case 220:if(($i|0)<(HEAP32[$size>>2]|0)){label=221;break}else{label=226;break};case 221:$t031=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t031&-256|0)!=0){label=223;break}else{label=222;break};case 222:$1373=$t031;label=224;break;case 223:$1373=($t031|0)>0?255:0;label=224;break;case 224:HEAP8[$4+$i|0]=$1373&255;label=225;break;case 225:$i=$i+1|0;label=220;break;case 226:label=227;break;case 227:$_src28=$_src28+($3<<1)|0;$4=$4+$5|0;label=202;break;case 228:label=257;break;case 229:$_src32=$2;$3=($3>>>0)/2|0;label=230;break;case 230:$1396=$size+4|0;$1397=HEAP32[$1396>>2]|0;HEAP32[$1396>>2]=$1397-1;if(($1397|0)!=0){label=231;break}else{label=256;break};case 231:$i=0;label=232;break;case 232:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=233;break}else{label=247;break};case 233:$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+1<<1)>>1]|0)+$7)|0;if(($t033&-256|0)!=0){label=235;break}else{label=234;break};case 234:$1441=$t033;label=236;break;case 235:$1441=($t033|0)>0?255:0;label=236;break;case 236:HEAP8[$4+$i|0]=$1441&255;if(($t134&-256|0)!=0){label=238;break}else{label=237;break};case 237:$1456=$t134;label=239;break;case 238:$1456=($t134|0)>0?255:0;label=239;break;case 239:HEAP8[$4+($i+1)|0]=$1456&255;$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+2<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+3<<1)>>1]|0)+$7)|0;if(($t033&-256|0)!=0){label=241;break}else{label=240;break};case 240:$1496=$t033;label=242;break;case 241:$1496=($t033|0)>0?255:0;label=242;break;case 242:HEAP8[$4+($i+2)|0]=$1496&255;if(($t134&-256|0)!=0){label=244;break}else{label=243;break};case 243:$1512=$t134;label=245;break;case 244:$1512=($t134|0)>0?255:0;label=245;break;case 245:HEAP8[$4+($i+3)|0]=$1512&255;label=246;break;case 246:$i=$i+4|0;label=232;break;case 247:label=248;break;case 248:if(($i|0)<(HEAP32[$size>>2]|0)){label=249;break}else{label=254;break};case 249:$t035=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;if(($t035&-256|0)!=0){label=251;break}else{label=250;break};case 250:$1549=$t035;label=252;break;case 251:$1549=($t035|0)>0?255:0;label=252;break;case 252:HEAP8[$4+$i|0]=$1549&255;label=253;break;case 253:$i=$i+1|0;label=248;break;case 254:label=255;break;case 255:$_src32=$_src32+($3<<1)|0;$4=$4+$5|0;label=230;break;case 256:label=257;break;case 257:label=343;break;case 258:$_src36=$2;$3=($3>>>0)/4|0;label=259;break;case 259:$1573=$size+4|0;$1574=HEAP32[$1573>>2]|0;HEAP32[$1573>>2]=$1574-1;if(($1574|0)!=0){label=260;break}else{label=285;break};case 260:$i=0;label=261;break;case 261:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=262;break}else{label=276;break};case 262:$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+1<<2)>>2]|0)+$7)|0;if(($t037&-256|0)!=0){label=264;break}else{label=263;break};case 263:$1616=$t037;label=265;break;case 264:$1616=($t037|0)>0?255:0;label=265;break;case 265:HEAP8[$4+$i|0]=$1616&255;if(($t138&-256|0)!=0){label=267;break}else{label=266;break};case 266:$1631=$t138;label=268;break;case 267:$1631=($t138|0)>0?255:0;label=268;break;case 268:HEAP8[$4+($i+1)|0]=$1631&255;$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+2<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+3<<2)>>2]|0)+$7)|0;if(($t037&-256|0)!=0){label=270;break}else{label=269;break};case 269:$1669=$t037;label=271;break;case 270:$1669=($t037|0)>0?255:0;label=271;break;case 271:HEAP8[$4+($i+2)|0]=$1669&255;if(($t138&-256|0)!=0){label=273;break}else{label=272;break};case 272:$1685=$t138;label=274;break;case 273:$1685=($t138|0)>0?255:0;label=274;break;case 274:HEAP8[$4+($i+3)|0]=$1685&255;label=275;break;case 275:$i=$i+4|0;label=261;break;case 276:label=277;break;case 277:if(($i|0)<(HEAP32[$size>>2]|0)){label=278;break}else{label=283;break};case 278:$t039=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;if(($t039&-256|0)!=0){label=280;break}else{label=279;break};case 279:$1721=$t039;label=281;break;case 280:$1721=($t039|0)>0?255:0;label=281;break;case 281:HEAP8[$4+$i|0]=$1721&255;label=282;break;case 282:$i=$i+1|0;label=277;break;case 283:label=284;break;case 284:$_src36=$_src36+($3<<2)|0;$4=$4+$5|0;label=259;break;case 285:label=343;break;case 286:$_src40=$2;$3=($3>>>0)/4|0;label=287;break;case 287:$1744=$size+4|0;$1745=HEAP32[$1744>>2]|0;HEAP32[$1744>>2]=$1745-1;if(($1745|0)!=0){label=288;break}else{label=313;break};case 288:$i=0;label=289;break;case 289:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=290;break}else{label=304;break};case 290:$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+1<<2)>>2]+$7)|0;if(($t041&-256|0)!=0){label=292;break}else{label=291;break};case 291:$1787=$t041;label=293;break;case 292:$1787=($t041|0)>0?255:0;label=293;break;case 293:HEAP8[$4+$i|0]=$1787&255;if(($t142&-256|0)!=0){label=295;break}else{label=294;break};case 294:$1802=$t142;label=296;break;case 295:$1802=($t142|0)>0?255:0;label=296;break;case 296:HEAP8[$4+($i+1)|0]=$1802&255;$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+2<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+3<<2)>>2]+$7)|0;if(($t041&-256|0)!=0){label=298;break}else{label=297;break};case 297:$1840=$t041;label=299;break;case 298:$1840=($t041|0)>0?255:0;label=299;break;case 299:HEAP8[$4+($i+2)|0]=$1840&255;if(($t142&-256|0)!=0){label=301;break}else{label=300;break};case 300:$1856=$t142;label=302;break;case 301:$1856=($t142|0)>0?255:0;label=302;break;case 302:HEAP8[$4+($i+3)|0]=$1856&255;label=303;break;case 303:$i=$i+4|0;label=289;break;case 304:label=305;break;case 305:if(($i|0)<(HEAP32[$size>>2]|0)){label=306;break}else{label=311;break};case 306:$t043=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;if(($t043&-256|0)!=0){label=308;break}else{label=307;break};case 307:$1892=$t043;label=309;break;case 308:$1892=($t043|0)>0?255:0;label=309;break;case 309:HEAP8[$4+$i|0]=$1892&255;label=310;break;case 310:$i=$i+1|0;label=305;break;case 311:label=312;break;case 312:$_src40=$_src40+($3<<2)|0;$4=$4+$5|0;label=287;break;case 313:label=343;break;case 314:$_src44=$2;$3=($3>>>0)/8|0;label=315;break;case 315:$1915=$size+4|0;$1916=HEAP32[$1915>>2]|0;HEAP32[$1915>>2]=$1916-1;if(($1916|0)!=0){label=316;break}else{label=341;break};case 316:$i=0;label=317;break;case 317:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=318;break}else{label=332;break};case 318:$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+1<<3)>>3]+$7)|0;if(($t045&-256|0)!=0){label=320;break}else{label=319;break};case 319:$1956=$t045;label=321;break;case 320:$1956=($t045|0)>0?255:0;label=321;break;case 321:HEAP8[$4+$i|0]=$1956&255;if(($t146&-256|0)!=0){label=323;break}else{label=322;break};case 322:$1971=$t146;label=324;break;case 323:$1971=($t146|0)>0?255:0;label=324;break;case 324:HEAP8[$4+($i+1)|0]=$1971&255;$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+2<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+3<<3)>>3]+$7)|0;if(($t045&-256|0)!=0){label=326;break}else{label=325;break};case 325:$2007=$t045;label=327;break;case 326:$2007=($t045|0)>0?255:0;label=327;break;case 327:HEAP8[$4+($i+2)|0]=$2007&255;if(($t146&-256|0)!=0){label=329;break}else{label=328;break};case 328:$2023=$t146;label=330;break;case 329:$2023=($t146|0)>0?255:0;label=330;break;case 330:HEAP8[$4+($i+3)|0]=$2023&255;label=331;break;case 331:$i=$i+4|0;label=317;break;case 332:label=333;break;case 333:if(($i|0)<(HEAP32[$size>>2]|0)){label=334;break}else{label=339;break};case 334:$t047=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;if(($t047&-256|0)!=0){label=336;break}else{label=335;break};case 335:$2058=$t047;label=337;break;case 336:$2058=($t047|0)>0?255:0;label=337;break;case 337:HEAP8[$4+$i|0]=$2058&255;label=338;break;case 338:$i=$i+1|0;label=333;break;case 339:label=340;break;case 340:$_src44=$_src44+($3<<3)|0;$4=$4+$5|0;label=315;break;case 341:label=343;break;case 342:$1=-12;label=344;break;case 343:$1=0;label=344;break;case 344:STACKTOP=sp;return $1|0}return 0}function __ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$t=0,$9=0,$iscale=0,$ishift=0,$_src=0,$t0=0,$t1=0,$t01=0,$_src2=0,$t03=0,$t14=0,$t05=0,$t6=0,$10=0,$iscale7=0,$ishift8=0,$_src9=0,$t010=0,$t111=0,$t012=0,$_src13=0,$t014=0,$t115=0,$t016=0,$iscale17=0,$_src18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$t023=0,$t124=0,$t025=0,$iscale26=0,$ishift27=0,$_src28=0,$t029=0,$t130=0,$t031=0,$_src32=0,$t033=0,$t134=0,$t035=0,$_src36=0,$t037=0,$t138=0,$t039=0,$_src40=0,$t041=0,$t142=0,$t043=0,$_src44=0,$t045=0,$t146=0,$t047=0,$15=0,$42=0,$58=0,$59=0,$81=0,$82=0,$127=0,$143=0,$184=0,$201=0,$239=0,$261=0,$262=0,$307=0,$323=0,$364=0,$381=0,$419=0,$470=0,$483=0,$484=0,$506=0,$507=0,$552=0,$568=0,$609=0,$626=0,$664=0,$686=0,$687=0,$732=0,$748=0,$789=0,$806=0,$844=0,$880=0,$881=0,$924=0,$940=0,$979=0,$996=0,$1033=0,$1056=0,$1057=0,$1102=0,$1118=0,$1159=0,$1176=0,$1214=0,$1252=0,$1253=0,$1298=0,$1314=0,$1355=0,$1372=0,$1410=0,$1433=0,$1434=0,$1479=0,$1495=0,$1536=0,$1553=0,$1591=0,$1615=0,$1616=0,$1659=0,$1675=0,$1714=0,$1731=0,$1768=0,$1791=0,$1792=0,$1835=0,$1851=0,$1890=0,$1907=0,$1944=0,$1967=0,$1968=0,$2009=0,$2025=0,$2062=0,$2079=0,$2115=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+272|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+256|0;$10=sp+264|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=$5>>>0|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=71;break}else if(($15|0)==2){label=140;break}else if(($15|0)==3){label=199;break}else if(($15|0)==4){label=258;break}else if(($15|0)==5){label=286;break}else if(($15|0)==6){label=314;break}else{label=342;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=11;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=10;break};case 5:$t=__Z7cvRoundd($val)|0;if(($t+128&-256|0)!=0){label=7;break}else{label=6;break};case 6:$42=$t;label=8;break;case 7:$42=($t|0)>0?127:-128;label=8;break;case 8:HEAP8[$lut+$i|0]=$42&255;label=9;break;case 9:$i=$i+1|0;$val=$val+$6;label=4;break;case 10:$58=$9;$59=$size;HEAP32[$58>>2]=HEAP32[$59>>2];HEAP32[$58+4>>2]=HEAP32[$59+4>>2];__Z25icvLUT_Transform8u_8s_C1RPKhiPci6CvSizePKc($2,$3,$4,$5,$9,$lut|0)|0;label=70;break;case 11:if(+Math_abs(+$6)<=128.0){label=12;break}else{label=41;break};case 12:if(+Math_abs(+$7)<=32767.99998474121){label=13;break}else{label=41;break};case 13:$iscale=__Z7cvRoundd($6*32768.0)|0;$ishift=__Z7cvRoundd($7*32768.0)|0;$_src=$2;$3=$3>>>0|0;label=14;break;case 14:$81=$size+4|0;$82=HEAP32[$81>>2]|0;HEAP32[$81>>2]=$82-1;if(($82|0)!=0){label=15;break}else{label=40;break};case 15:$i=0;label=16;break;case 16:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=17;break}else{label=31;break};case 17:$t0=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+1)|0]|0)|0)+$ishift+16384>>15;if(($t0+128&-256|0)!=0){label=19;break}else{label=18;break};case 18:$127=$t0;label=20;break;case 19:$127=($t0|0)>0?127:-128;label=20;break;case 20:HEAP8[$4+$i|0]=$127&255;if(($t1+128&-256|0)!=0){label=22;break}else{label=21;break};case 21:$143=$t1;label=23;break;case 22:$143=($t1|0)>0?127:-128;label=23;break;case 23:HEAP8[$4+($i+1)|0]=$143&255;$t0=(Math_imul($iscale,HEAPU8[$_src+($i+2)|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+3)|0]|0)|0)+$ishift+16384>>15;if(($t0+128&-256|0)!=0){label=25;break}else{label=24;break};case 24:$184=$t0;label=26;break;case 25:$184=($t0|0)>0?127:-128;label=26;break;case 26:HEAP8[$4+($i+2)|0]=$184&255;if(($t1+128&-256|0)!=0){label=28;break}else{label=27;break};case 27:$201=$t1;label=29;break;case 28:$201=($t1|0)>0?127:-128;label=29;break;case 29:HEAP8[$4+($i+3)|0]=$201&255;label=30;break;case 30:$i=$i+4|0;label=16;break;case 31:label=32;break;case 32:if(($i|0)<(HEAP32[$size>>2]|0)){label=33;break}else{label=38;break};case 33:$t01=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;if(($t01+128&-256|0)!=0){label=35;break}else{label=34;break};case 34:$239=$t01;label=36;break;case 35:$239=($t01|0)>0?127:-128;label=36;break;case 36:HEAP8[$4+$i|0]=$239&255;label=37;break;case 37:$i=$i+1|0;label=32;break;case 38:label=39;break;case 39:$_src=$_src+$3|0;$4=$4+$5|0;label=14;break;case 40:label=69;break;case 41:$_src2=$2;$3=$3>>>0|0;label=42;break;case 42:$261=$size+4|0;$262=HEAP32[$261>>2]|0;HEAP32[$261>>2]=$262-1;if(($262|0)!=0){label=43;break}else{label=68;break};case 43:$i=0;label=44;break;case 44:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=59;break};case 45:$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+1)|0]|0)+$7)|0;if(($t03+128&-256|0)!=0){label=47;break}else{label=46;break};case 46:$307=$t03;label=48;break;case 47:$307=($t03|0)>0?127:-128;label=48;break;case 48:HEAP8[$4+$i|0]=$307&255;if(($t14+128&-256|0)!=0){label=50;break}else{label=49;break};case 49:$323=$t14;label=51;break;case 50:$323=($t14|0)>0?127:-128;label=51;break;case 51:HEAP8[$4+($i+1)|0]=$323&255;$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+2)|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+3)|0]|0)+$7)|0;if(($t03+128&-256|0)!=0){label=53;break}else{label=52;break};case 52:$364=$t03;label=54;break;case 53:$364=($t03|0)>0?127:-128;label=54;break;case 54:HEAP8[$4+($i+2)|0]=$364&255;if(($t14+128&-256|0)!=0){label=56;break}else{label=55;break};case 55:$381=$t14;label=57;break;case 56:$381=($t14|0)>0?127:-128;label=57;break;case 57:HEAP8[$4+($i+3)|0]=$381&255;label=58;break;case 58:$i=$i+4|0;label=44;break;case 59:label=60;break;case 60:if(($i|0)<(HEAP32[$size>>2]|0)){label=61;break}else{label=66;break};case 61:$t05=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;if(($t05+128&-256|0)!=0){label=63;break}else{label=62;break};case 62:$419=$t05;label=64;break;case 63:$419=($t05|0)>0?127:-128;label=64;break;case 64:HEAP8[$4+$i|0]=$419&255;label=65;break;case 65:$i=$i+1|0;label=60;break;case 66:label=67;break;case 67:$_src2=$_src2+$3|0;$4=$4+$5|0;label=42;break;case 68:label=69;break;case 69:label=70;break;case 70:label=343;break;case 71:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=72;break}else{label=80;break};case 72:$i=0;label=73;break;case 73:if(($i|0)<256){label=74;break}else{label=79;break};case 74:$t6=__Z7cvRoundd(+(($i&255)<<24>>24|0)*$6+$7)|0;if(($t6+128&-256|0)!=0){label=76;break}else{label=75;break};case 75:$470=$t6;label=77;break;case 76:$470=($t6|0)>0?127:-128;label=77;break;case 77:HEAP8[$lut+$i|0]=$470&255;label=78;break;case 78:$i=$i+1|0;label=73;break;case 79:$483=$10;$484=$size;HEAP32[$483>>2]=HEAP32[$484>>2];HEAP32[$483+4>>2]=HEAP32[$484+4>>2];__Z25icvLUT_Transform8u_8s_C1RPKhiPci6CvSizePKc($2,$3,$4,$5,$10,$lut|0)|0;label=139;break;case 80:if(+Math_abs(+$6)<=128.0){label=81;break}else{label=110;break};case 81:if(+Math_abs(+$7)<=32767.99998474121){label=82;break}else{label=110;break};case 82:$iscale7=__Z7cvRoundd($6*32768.0)|0;$ishift8=__Z7cvRoundd($7*32768.0)|0;$_src9=$2;$3=$3>>>0|0;label=83;break;case 83:$506=$size+4|0;$507=HEAP32[$506>>2]|0;HEAP32[$506>>2]=$507-1;if(($507|0)!=0){label=84;break}else{label=109;break};case 84:$i=0;label=85;break;case 85:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=86;break}else{label=100;break};case 86:$t010=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+1)|0]|0)|0)+$ishift8+16384>>15;if(($t010+128&-256|0)!=0){label=88;break}else{label=87;break};case 87:$552=$t010;label=89;break;case 88:$552=($t010|0)>0?127:-128;label=89;break;case 89:HEAP8[$4+$i|0]=$552&255;if(($t111+128&-256|0)!=0){label=91;break}else{label=90;break};case 90:$568=$t111;label=92;break;case 91:$568=($t111|0)>0?127:-128;label=92;break;case 92:HEAP8[$4+($i+1)|0]=$568&255;$t010=(Math_imul($iscale7,HEAP8[$_src9+($i+2)|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+3)|0]|0)|0)+$ishift8+16384>>15;if(($t010+128&-256|0)!=0){label=94;break}else{label=93;break};case 93:$609=$t010;label=95;break;case 94:$609=($t010|0)>0?127:-128;label=95;break;case 95:HEAP8[$4+($i+2)|0]=$609&255;if(($t111+128&-256|0)!=0){label=97;break}else{label=96;break};case 96:$626=$t111;label=98;break;case 97:$626=($t111|0)>0?127:-128;label=98;break;case 98:HEAP8[$4+($i+3)|0]=$626&255;label=99;break;case 99:$i=$i+4|0;label=85;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=107;break};case 102:$t012=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;if(($t012+128&-256|0)!=0){label=104;break}else{label=103;break};case 103:$664=$t012;label=105;break;case 104:$664=($t012|0)>0?127:-128;label=105;break;case 105:HEAP8[$4+$i|0]=$664&255;label=106;break;case 106:$i=$i+1|0;label=101;break;case 107:label=108;break;case 108:$_src9=$_src9+$3|0;$4=$4+$5|0;label=83;break;case 109:label=138;break;case 110:$_src13=$2;$3=$3>>>0|0;label=111;break;case 111:$686=$size+4|0;$687=HEAP32[$686>>2]|0;HEAP32[$686>>2]=$687-1;if(($687|0)!=0){label=112;break}else{label=137;break};case 112:$i=0;label=113;break;case 113:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=114;break}else{label=128;break};case 114:$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+1)|0]|0)+$7)|0;if(($t014+128&-256|0)!=0){label=116;break}else{label=115;break};case 115:$732=$t014;label=117;break;case 116:$732=($t014|0)>0?127:-128;label=117;break;case 117:HEAP8[$4+$i|0]=$732&255;if(($t115+128&-256|0)!=0){label=119;break}else{label=118;break};case 118:$748=$t115;label=120;break;case 119:$748=($t115|0)>0?127:-128;label=120;break;case 120:HEAP8[$4+($i+1)|0]=$748&255;$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+2)|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+3)|0]|0)+$7)|0;if(($t014+128&-256|0)!=0){label=122;break}else{label=121;break};case 121:$789=$t014;label=123;break;case 122:$789=($t014|0)>0?127:-128;label=123;break;case 123:HEAP8[$4+($i+2)|0]=$789&255;if(($t115+128&-256|0)!=0){label=125;break}else{label=124;break};case 124:$806=$t115;label=126;break;case 125:$806=($t115|0)>0?127:-128;label=126;break;case 126:HEAP8[$4+($i+3)|0]=$806&255;label=127;break;case 127:$i=$i+4|0;label=113;break;case 128:label=129;break;case 129:if(($i|0)<(HEAP32[$size>>2]|0)){label=130;break}else{label=135;break};case 130:$t016=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;if(($t016+128&-256|0)!=0){label=132;break}else{label=131;break};case 131:$844=$t016;label=133;break;case 132:$844=($t016|0)>0?127:-128;label=133;break;case 133:HEAP8[$4+$i|0]=$844&255;label=134;break;case 134:$i=$i+1|0;label=129;break;case 135:label=136;break;case 136:$_src13=$_src13+$3|0;$4=$4+$5|0;label=111;break;case 137:label=138;break;case 138:label=139;break;case 139:label=343;break;case 140:if(+Math_abs(+$6)<=1.0){label=141;break}else{label=170;break};case 141:if(+Math_abs(+$7)<2.220446049250313e-16){label=142;break}else{label=170;break};case 142:$iscale17=__Z7cvRoundd($6*32768.0)|0;$_src18=$2;$3=($3>>>0)/2|0;label=143;break;case 143:$880=$size+4|0;$881=HEAP32[$880>>2]|0;HEAP32[$880>>2]=$881-1;if(($881|0)!=0){label=144;break}else{label=169;break};case 144:$i=0;label=145;break;case 145:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+1<<1)>>1]|0)|0)+16384>>15;if(($t019+128&-256|0)!=0){label=148;break}else{label=147;break};case 147:$924=$t019;label=149;break;case 148:$924=($t019|0)>0?127:-128;label=149;break;case 149:HEAP8[$4+$i|0]=$924&255;if(($t120+128&-256|0)!=0){label=151;break}else{label=150;break};case 150:$940=$t120;label=152;break;case 151:$940=($t120|0)>0?127:-128;label=152;break;case 152:HEAP8[$4+($i+1)|0]=$940&255;$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i+2<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+3<<1)>>1]|0)|0)+16384>>15;if(($t019+128&-256|0)!=0){label=154;break}else{label=153;break};case 153:$979=$t019;label=155;break;case 154:$979=($t019|0)>0?127:-128;label=155;break;case 155:HEAP8[$4+($i+2)|0]=$979&255;if(($t120+128&-256|0)!=0){label=157;break}else{label=156;break};case 156:$996=$t120;label=158;break;case 157:$996=($t120|0)>0?127:-128;label=158;break;case 158:HEAP8[$4+($i+3)|0]=$996&255;label=159;break;case 159:$i=$i+4|0;label=145;break;case 160:label=161;break;case 161:if(($i|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t021=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;if(($t021+128&-256|0)!=0){label=164;break}else{label=163;break};case 163:$1033=$t021;label=165;break;case 164:$1033=($t021|0)>0?127:-128;label=165;break;case 165:HEAP8[$4+$i|0]=$1033&255;label=166;break;case 166:$i=$i+1|0;label=161;break;case 167:label=168;break;case 168:$_src18=$_src18+($3<<1)|0;$4=$4+$5|0;label=143;break;case 169:label=198;break;case 170:$_src22=$2;$3=($3>>>0)/2|0;label=171;break;case 171:$1056=$size+4|0;$1057=HEAP32[$1056>>2]|0;HEAP32[$1056>>2]=$1057-1;if(($1057|0)!=0){label=172;break}else{label=197;break};case 172:$i=0;label=173;break;case 173:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=174;break}else{label=188;break};case 174:$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+1<<1)>>1]|0)+$7)|0;if(($t023+128&-256|0)!=0){label=176;break}else{label=175;break};case 175:$1102=$t023;label=177;break;case 176:$1102=($t023|0)>0?127:-128;label=177;break;case 177:HEAP8[$4+$i|0]=$1102&255;if(($t124+128&-256|0)!=0){label=179;break}else{label=178;break};case 178:$1118=$t124;label=180;break;case 179:$1118=($t124|0)>0?127:-128;label=180;break;case 180:HEAP8[$4+($i+1)|0]=$1118&255;$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+2<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+3<<1)>>1]|0)+$7)|0;if(($t023+128&-256|0)!=0){label=182;break}else{label=181;break};case 181:$1159=$t023;label=183;break;case 182:$1159=($t023|0)>0?127:-128;label=183;break;case 183:HEAP8[$4+($i+2)|0]=$1159&255;if(($t124+128&-256|0)!=0){label=185;break}else{label=184;break};case 184:$1176=$t124;label=186;break;case 185:$1176=($t124|0)>0?127:-128;label=186;break;case 186:HEAP8[$4+($i+3)|0]=$1176&255;label=187;break;case 187:$i=$i+4|0;label=173;break;case 188:label=189;break;case 189:if(($i|0)<(HEAP32[$size>>2]|0)){label=190;break}else{label=195;break};case 190:$t025=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;if(($t025+128&-256|0)!=0){label=192;break}else{label=191;break};case 191:$1214=$t025;label=193;break;case 192:$1214=($t025|0)>0?127:-128;label=193;break;case 193:HEAP8[$4+$i|0]=$1214&255;label=194;break;case 194:$i=$i+1|0;label=189;break;case 195:label=196;break;case 196:$_src22=$_src22+($3<<1)|0;$4=$4+$5|0;label=171;break;case 197:label=198;break;case 198:label=343;break;case 199:if(+Math_abs(+$6)<=1.0){label=200;break}else{label=229;break};case 200:if(+Math_abs(+$7)<=32767.99998474121){label=201;break}else{label=229;break};case 201:$iscale26=__Z7cvRoundd($6*32768.0)|0;$ishift27=__Z7cvRoundd($7*32768.0)|0;$_src28=$2;$3=($3>>>0)/2|0;label=202;break;case 202:$1252=$size+4|0;$1253=HEAP32[$1252>>2]|0;HEAP32[$1252>>2]=$1253-1;if(($1253|0)!=0){label=203;break}else{label=228;break};case 203:$i=0;label=204;break;case 204:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=205;break}else{label=219;break};case 205:$t029=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+1<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029+128&-256|0)!=0){label=207;break}else{label=206;break};case 206:$1298=$t029;label=208;break;case 207:$1298=($t029|0)>0?127:-128;label=208;break;case 208:HEAP8[$4+$i|0]=$1298&255;if(($t130+128&-256|0)!=0){label=210;break}else{label=209;break};case 209:$1314=$t130;label=211;break;case 210:$1314=($t130|0)>0?127:-128;label=211;break;case 211:HEAP8[$4+($i+1)|0]=$1314&255;$t029=(Math_imul($iscale26,HEAP16[$_src28+($i+2<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+3<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029+128&-256|0)!=0){label=213;break}else{label=212;break};case 212:$1355=$t029;label=214;break;case 213:$1355=($t029|0)>0?127:-128;label=214;break;case 214:HEAP8[$4+($i+2)|0]=$1355&255;if(($t130+128&-256|0)!=0){label=216;break}else{label=215;break};case 215:$1372=$t130;label=217;break;case 216:$1372=($t130|0)>0?127:-128;label=217;break;case 217:HEAP8[$4+($i+3)|0]=$1372&255;label=218;break;case 218:$i=$i+4|0;label=204;break;case 219:label=220;break;case 220:if(($i|0)<(HEAP32[$size>>2]|0)){label=221;break}else{label=226;break};case 221:$t031=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t031+128&-256|0)!=0){label=223;break}else{label=222;break};case 222:$1410=$t031;label=224;break;case 223:$1410=($t031|0)>0?127:-128;label=224;break;case 224:HEAP8[$4+$i|0]=$1410&255;label=225;break;case 225:$i=$i+1|0;label=220;break;case 226:label=227;break;case 227:$_src28=$_src28+($3<<1)|0;$4=$4+$5|0;label=202;break;case 228:label=257;break;case 229:$_src32=$2;$3=($3>>>0)/2|0;label=230;break;case 230:$1433=$size+4|0;$1434=HEAP32[$1433>>2]|0;HEAP32[$1433>>2]=$1434-1;if(($1434|0)!=0){label=231;break}else{label=256;break};case 231:$i=0;label=232;break;case 232:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=233;break}else{label=247;break};case 233:$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+1<<1)>>1]|0)+$7)|0;if(($t033+128&-256|0)!=0){label=235;break}else{label=234;break};case 234:$1479=$t033;label=236;break;case 235:$1479=($t033|0)>0?127:-128;label=236;break;case 236:HEAP8[$4+$i|0]=$1479&255;if(($t134+128&-256|0)!=0){label=238;break}else{label=237;break};case 237:$1495=$t134;label=239;break;case 238:$1495=($t134|0)>0?127:-128;label=239;break;case 239:HEAP8[$4+($i+1)|0]=$1495&255;$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+2<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+3<<1)>>1]|0)+$7)|0;if(($t033+128&-256|0)!=0){label=241;break}else{label=240;break};case 240:$1536=$t033;label=242;break;case 241:$1536=($t033|0)>0?127:-128;label=242;break;case 242:HEAP8[$4+($i+2)|0]=$1536&255;if(($t134+128&-256|0)!=0){label=244;break}else{label=243;break};case 243:$1553=$t134;label=245;break;case 244:$1553=($t134|0)>0?127:-128;label=245;break;case 245:HEAP8[$4+($i+3)|0]=$1553&255;label=246;break;case 246:$i=$i+4|0;label=232;break;case 247:label=248;break;case 248:if(($i|0)<(HEAP32[$size>>2]|0)){label=249;break}else{label=254;break};case 249:$t035=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;if(($t035+128&-256|0)!=0){label=251;break}else{label=250;break};case 250:$1591=$t035;label=252;break;case 251:$1591=($t035|0)>0?127:-128;label=252;break;case 252:HEAP8[$4+$i|0]=$1591&255;label=253;break;case 253:$i=$i+1|0;label=248;break;case 254:label=255;break;case 255:$_src32=$_src32+($3<<1)|0;$4=$4+$5|0;label=230;break;case 256:label=257;break;case 257:label=343;break;case 258:$_src36=$2;$3=($3>>>0)/4|0;label=259;break;case 259:$1615=$size+4|0;$1616=HEAP32[$1615>>2]|0;HEAP32[$1615>>2]=$1616-1;if(($1616|0)!=0){label=260;break}else{label=285;break};case 260:$i=0;label=261;break;case 261:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=262;break}else{label=276;break};case 262:$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+1<<2)>>2]|0)+$7)|0;if(($t037+128&-256|0)!=0){label=264;break}else{label=263;break};case 263:$1659=$t037;label=265;break;case 264:$1659=($t037|0)>0?127:-128;label=265;break;case 265:HEAP8[$4+$i|0]=$1659&255;if(($t138+128&-256|0)!=0){label=267;break}else{label=266;break};case 266:$1675=$t138;label=268;break;case 267:$1675=($t138|0)>0?127:-128;label=268;break;case 268:HEAP8[$4+($i+1)|0]=$1675&255;$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+2<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+3<<2)>>2]|0)+$7)|0;if(($t037+128&-256|0)!=0){label=270;break}else{label=269;break};case 269:$1714=$t037;label=271;break;case 270:$1714=($t037|0)>0?127:-128;label=271;break;case 271:HEAP8[$4+($i+2)|0]=$1714&255;if(($t138+128&-256|0)!=0){label=273;break}else{label=272;break};case 272:$1731=$t138;label=274;break;case 273:$1731=($t138|0)>0?127:-128;label=274;break;case 274:HEAP8[$4+($i+3)|0]=$1731&255;label=275;break;case 275:$i=$i+4|0;label=261;break;case 276:label=277;break;case 277:if(($i|0)<(HEAP32[$size>>2]|0)){label=278;break}else{label=283;break};case 278:$t039=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;if(($t039+128&-256|0)!=0){label=280;break}else{label=279;break};case 279:$1768=$t039;label=281;break;case 280:$1768=($t039|0)>0?127:-128;label=281;break;case 281:HEAP8[$4+$i|0]=$1768&255;label=282;break;case 282:$i=$i+1|0;label=277;break;case 283:label=284;break;case 284:$_src36=$_src36+($3<<2)|0;$4=$4+$5|0;label=259;break;case 285:label=343;break;case 286:$_src40=$2;$3=($3>>>0)/4|0;label=287;break;case 287:$1791=$size+4|0;$1792=HEAP32[$1791>>2]|0;HEAP32[$1791>>2]=$1792-1;if(($1792|0)!=0){label=288;break}else{label=313;break};case 288:$i=0;label=289;break;case 289:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=290;break}else{label=304;break};case 290:$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+1<<2)>>2]+$7)|0;if(($t041+128&-256|0)!=0){label=292;break}else{label=291;break};case 291:$1835=$t041;label=293;break;case 292:$1835=($t041|0)>0?127:-128;label=293;break;case 293:HEAP8[$4+$i|0]=$1835&255;if(($t142+128&-256|0)!=0){label=295;break}else{label=294;break};case 294:$1851=$t142;label=296;break;case 295:$1851=($t142|0)>0?127:-128;label=296;break;case 296:HEAP8[$4+($i+1)|0]=$1851&255;$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+2<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+3<<2)>>2]+$7)|0;if(($t041+128&-256|0)!=0){label=298;break}else{label=297;break};case 297:$1890=$t041;label=299;break;case 298:$1890=($t041|0)>0?127:-128;label=299;break;case 299:HEAP8[$4+($i+2)|0]=$1890&255;if(($t142+128&-256|0)!=0){label=301;break}else{label=300;break};case 300:$1907=$t142;label=302;break;case 301:$1907=($t142|0)>0?127:-128;label=302;break;case 302:HEAP8[$4+($i+3)|0]=$1907&255;label=303;break;case 303:$i=$i+4|0;label=289;break;case 304:label=305;break;case 305:if(($i|0)<(HEAP32[$size>>2]|0)){label=306;break}else{label=311;break};case 306:$t043=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;if(($t043+128&-256|0)!=0){label=308;break}else{label=307;break};case 307:$1944=$t043;label=309;break;case 308:$1944=($t043|0)>0?127:-128;label=309;break;case 309:HEAP8[$4+$i|0]=$1944&255;label=310;break;case 310:$i=$i+1|0;label=305;break;case 311:label=312;break;case 312:$_src40=$_src40+($3<<2)|0;$4=$4+$5|0;label=287;break;case 313:label=343;break;case 314:$_src44=$2;$3=($3>>>0)/8|0;label=315;break;case 315:$1967=$size+4|0;$1968=HEAP32[$1967>>2]|0;HEAP32[$1967>>2]=$1968-1;if(($1968|0)!=0){label=316;break}else{label=341;break};case 316:$i=0;label=317;break;case 317:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=318;break}else{label=332;break};case 318:$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+1<<3)>>3]+$7)|0;if(($t045+128&-256|0)!=0){label=320;break}else{label=319;break};case 319:$2009=$t045;label=321;break;case 320:$2009=($t045|0)>0?127:-128;label=321;break;case 321:HEAP8[$4+$i|0]=$2009&255;if(($t146+128&-256|0)!=0){label=323;break}else{label=322;break};case 322:$2025=$t146;label=324;break;case 323:$2025=($t146|0)>0?127:-128;label=324;break;case 324:HEAP8[$4+($i+1)|0]=$2025&255;$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+2<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+3<<3)>>3]+$7)|0;if(($t045+128&-256|0)!=0){label=326;break}else{label=325;break};case 325:$2062=$t045;label=327;break;case 326:$2062=($t045|0)>0?127:-128;label=327;break;case 327:HEAP8[$4+($i+2)|0]=$2062&255;if(($t146+128&-256|0)!=0){label=329;break}else{label=328;break};case 328:$2079=$t146;label=330;break;case 329:$2079=($t146|0)>0?127:-128;label=330;break;case 330:HEAP8[$4+($i+3)|0]=$2079&255;label=331;break;case 331:$i=$i+4|0;label=317;break;case 332:label=333;break;case 333:if(($i|0)<(HEAP32[$size>>2]|0)){label=334;break}else{label=339;break};case 334:$t047=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;if(($t047+128&-256|0)!=0){label=336;break}else{label=335;break};case 335:$2115=$t047;label=337;break;case 336:$2115=($t047|0)>0?127:-128;label=337;break;case 337:HEAP8[$4+$i|0]=$2115&255;label=338;break;case 338:$i=$i+1|0;label=333;break;case 339:label=340;break;case 340:$_src44=$_src44+($3<<3)|0;$4=$4+$5|0;label=315;break;case 341:label=343;break;case 342:$1=-12;label=344;break;case 343:$1=0;label=344;break;case 344:STACKTOP=sp;return $1|0}return 0}function __ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$t=0,$9=0,$iscale=0,$ishift=0,$_src=0,$t0=0,$t1=0,$t01=0,$_src2=0,$t03=0,$t14=0,$t05=0,$t6=0,$10=0,$iscale7=0,$ishift8=0,$_src9=0,$t010=0,$t111=0,$t012=0,$_src13=0,$t014=0,$t115=0,$t016=0,$iscale17=0,$_src18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$t023=0,$t124=0,$t025=0,$iscale26=0,$ishift27=0,$_src28=0,$t029=0,$t130=0,$t031=0,$_src32=0,$t033=0,$t134=0,$t035=0,$_src36=0,$t037=0,$t138=0,$t039=0,$_src40=0,$t041=0,$t142=0,$t043=0,$_src44=0,$t045=0,$t146=0,$t047=0,$15=0,$41=0,$57=0,$58=0,$80=0,$81=0,$125=0,$140=0,$180=0,$196=0,$233=0,$255=0,$256=0,$300=0,$315=0,$355=0,$371=0,$408=0,$458=0,$471=0,$472=0,$494=0,$495=0,$539=0,$554=0,$594=0,$610=0,$647=0,$669=0,$670=0,$714=0,$729=0,$769=0,$785=0,$822=0,$858=0,$859=0,$901=0,$916=0,$954=0,$970=0,$1006=0,$1029=0,$1030=0,$1074=0,$1089=0,$1129=0,$1145=0,$1182=0,$1220=0,$1221=0,$1265=0,$1280=0,$1320=0,$1336=0,$1373=0,$1396=0,$1397=0,$1441=0,$1456=0,$1496=0,$1512=0,$1549=0,$1573=0,$1574=0,$1616=0,$1631=0,$1669=0,$1685=0,$1721=0,$1744=0,$1745=0,$1787=0,$1802=0,$1840=0,$1856=0,$1892=0,$1915=0,$1916=0,$1956=0,$1971=0,$2007=0,$2023=0,$2058=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+528|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+512|0;$10=sp+520|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=($5>>>0)/2|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=71;break}else if(($15|0)==2){label=140;break}else if(($15|0)==3){label=199;break}else if(($15|0)==4){label=258;break}else if(($15|0)==5){label=286;break}else if(($15|0)==6){label=314;break}else{label=342;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=11;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=10;break};case 5:$t=__Z7cvRoundd($val)|0;if(($t&-65536|0)!=0){label=7;break}else{label=6;break};case 6:$41=$t;label=8;break;case 7:$41=($t|0)>0?65535:0;label=8;break;case 8:HEAP16[$lut+($i<<1)>>1]=$41&65535;label=9;break;case 9:$i=$i+1|0;$val=$val+$6;label=4;break;case 10:$57=$9;$58=$size;HEAP32[$57>>2]=HEAP32[$58>>2];HEAP32[$57+4>>2]=HEAP32[$58+4>>2];__Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt($2,$3,$4,$5<<1,$9,$lut|0)|0;label=70;break;case 11:if(+Math_abs(+$6)<=128.0){label=12;break}else{label=41;break};case 12:if(+Math_abs(+$7)<=32767.99998474121){label=13;break}else{label=41;break};case 13:$iscale=__Z7cvRoundd($6*32768.0)|0;$ishift=__Z7cvRoundd($7*32768.0)|0;$_src=$2;$3=$3>>>0|0;label=14;break;case 14:$80=$size+4|0;$81=HEAP32[$80>>2]|0;HEAP32[$80>>2]=$81-1;if(($81|0)!=0){label=15;break}else{label=40;break};case 15:$i=0;label=16;break;case 16:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=17;break}else{label=31;break};case 17:$t0=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+1)|0]|0)|0)+$ishift+16384>>15;if(($t0&-65536|0)!=0){label=19;break}else{label=18;break};case 18:$125=$t0;label=20;break;case 19:$125=($t0|0)>0?65535:0;label=20;break;case 20:HEAP16[$4+($i<<1)>>1]=$125&65535;if(($t1&-65536|0)!=0){label=22;break}else{label=21;break};case 21:$140=$t1;label=23;break;case 22:$140=($t1|0)>0?65535:0;label=23;break;case 23:HEAP16[$4+($i+1<<1)>>1]=$140&65535;$t0=(Math_imul($iscale,HEAPU8[$_src+($i+2)|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+3)|0]|0)|0)+$ishift+16384>>15;if(($t0&-65536|0)!=0){label=25;break}else{label=24;break};case 24:$180=$t0;label=26;break;case 25:$180=($t0|0)>0?65535:0;label=26;break;case 26:HEAP16[$4+($i+2<<1)>>1]=$180&65535;if(($t1&-65536|0)!=0){label=28;break}else{label=27;break};case 27:$196=$t1;label=29;break;case 28:$196=($t1|0)>0?65535:0;label=29;break;case 29:HEAP16[$4+($i+3<<1)>>1]=$196&65535;label=30;break;case 30:$i=$i+4|0;label=16;break;case 31:label=32;break;case 32:if(($i|0)<(HEAP32[$size>>2]|0)){label=33;break}else{label=38;break};case 33:$t01=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;if(($t01&-65536|0)!=0){label=35;break}else{label=34;break};case 34:$233=$t01;label=36;break;case 35:$233=($t01|0)>0?65535:0;label=36;break;case 36:HEAP16[$4+($i<<1)>>1]=$233&65535;label=37;break;case 37:$i=$i+1|0;label=32;break;case 38:label=39;break;case 39:$_src=$_src+$3|0;$4=$4+($5<<1)|0;label=14;break;case 40:label=69;break;case 41:$_src2=$2;$3=$3>>>0|0;label=42;break;case 42:$255=$size+4|0;$256=HEAP32[$255>>2]|0;HEAP32[$255>>2]=$256-1;if(($256|0)!=0){label=43;break}else{label=68;break};case 43:$i=0;label=44;break;case 44:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=59;break};case 45:$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+1)|0]|0)+$7)|0;if(($t03&-65536|0)!=0){label=47;break}else{label=46;break};case 46:$300=$t03;label=48;break;case 47:$300=($t03|0)>0?65535:0;label=48;break;case 48:HEAP16[$4+($i<<1)>>1]=$300&65535;if(($t14&-65536|0)!=0){label=50;break}else{label=49;break};case 49:$315=$t14;label=51;break;case 50:$315=($t14|0)>0?65535:0;label=51;break;case 51:HEAP16[$4+($i+1<<1)>>1]=$315&65535;$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+2)|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+3)|0]|0)+$7)|0;if(($t03&-65536|0)!=0){label=53;break}else{label=52;break};case 52:$355=$t03;label=54;break;case 53:$355=($t03|0)>0?65535:0;label=54;break;case 54:HEAP16[$4+($i+2<<1)>>1]=$355&65535;if(($t14&-65536|0)!=0){label=56;break}else{label=55;break};case 55:$371=$t14;label=57;break;case 56:$371=($t14|0)>0?65535:0;label=57;break;case 57:HEAP16[$4+($i+3<<1)>>1]=$371&65535;label=58;break;case 58:$i=$i+4|0;label=44;break;case 59:label=60;break;case 60:if(($i|0)<(HEAP32[$size>>2]|0)){label=61;break}else{label=66;break};case 61:$t05=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;if(($t05&-65536|0)!=0){label=63;break}else{label=62;break};case 62:$408=$t05;label=64;break;case 63:$408=($t05|0)>0?65535:0;label=64;break;case 64:HEAP16[$4+($i<<1)>>1]=$408&65535;label=65;break;case 65:$i=$i+1|0;label=60;break;case 66:label=67;break;case 67:$_src2=$_src2+$3|0;$4=$4+($5<<1)|0;label=42;break;case 68:label=69;break;case 69:label=70;break;case 70:label=343;break;case 71:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=72;break}else{label=80;break};case 72:$i=0;label=73;break;case 73:if(($i|0)<256){label=74;break}else{label=79;break};case 74:$t6=__Z7cvRoundd(+(($i&255)<<24>>24|0)*$6+$7)|0;if(($t6&-65536|0)!=0){label=76;break}else{label=75;break};case 75:$458=$t6;label=77;break;case 76:$458=($t6|0)>0?65535:0;label=77;break;case 77:HEAP16[$lut+($i<<1)>>1]=$458&65535;label=78;break;case 78:$i=$i+1|0;label=73;break;case 79:$471=$10;$472=$size;HEAP32[$471>>2]=HEAP32[$472>>2];HEAP32[$471+4>>2]=HEAP32[$472+4>>2];__Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt($2,$3,$4,$5<<1,$10,$lut|0)|0;label=139;break;case 80:if(+Math_abs(+$6)<=128.0){label=81;break}else{label=110;break};case 81:if(+Math_abs(+$7)<=32767.99998474121){label=82;break}else{label=110;break};case 82:$iscale7=__Z7cvRoundd($6*32768.0)|0;$ishift8=__Z7cvRoundd($7*32768.0)|0;$_src9=$2;$3=$3>>>0|0;label=83;break;case 83:$494=$size+4|0;$495=HEAP32[$494>>2]|0;HEAP32[$494>>2]=$495-1;if(($495|0)!=0){label=84;break}else{label=109;break};case 84:$i=0;label=85;break;case 85:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=86;break}else{label=100;break};case 86:$t010=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+1)|0]|0)|0)+$ishift8+16384>>15;if(($t010&-65536|0)!=0){label=88;break}else{label=87;break};case 87:$539=$t010;label=89;break;case 88:$539=($t010|0)>0?65535:0;label=89;break;case 89:HEAP16[$4+($i<<1)>>1]=$539&65535;if(($t111&-65536|0)!=0){label=91;break}else{label=90;break};case 90:$554=$t111;label=92;break;case 91:$554=($t111|0)>0?65535:0;label=92;break;case 92:HEAP16[$4+($i+1<<1)>>1]=$554&65535;$t010=(Math_imul($iscale7,HEAP8[$_src9+($i+2)|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+3)|0]|0)|0)+$ishift8+16384>>15;if(($t010&-65536|0)!=0){label=94;break}else{label=93;break};case 93:$594=$t010;label=95;break;case 94:$594=($t010|0)>0?65535:0;label=95;break;case 95:HEAP16[$4+($i+2<<1)>>1]=$594&65535;if(($t111&-65536|0)!=0){label=97;break}else{label=96;break};case 96:$610=$t111;label=98;break;case 97:$610=($t111|0)>0?65535:0;label=98;break;case 98:HEAP16[$4+($i+3<<1)>>1]=$610&65535;label=99;break;case 99:$i=$i+4|0;label=85;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=107;break};case 102:$t012=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;if(($t012&-65536|0)!=0){label=104;break}else{label=103;break};case 103:$647=$t012;label=105;break;case 104:$647=($t012|0)>0?65535:0;label=105;break;case 105:HEAP16[$4+($i<<1)>>1]=$647&65535;label=106;break;case 106:$i=$i+1|0;label=101;break;case 107:label=108;break;case 108:$_src9=$_src9+$3|0;$4=$4+($5<<1)|0;label=83;break;case 109:label=138;break;case 110:$_src13=$2;$3=$3>>>0|0;label=111;break;case 111:$669=$size+4|0;$670=HEAP32[$669>>2]|0;HEAP32[$669>>2]=$670-1;if(($670|0)!=0){label=112;break}else{label=137;break};case 112:$i=0;label=113;break;case 113:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=114;break}else{label=128;break};case 114:$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+1)|0]|0)+$7)|0;if(($t014&-65536|0)!=0){label=116;break}else{label=115;break};case 115:$714=$t014;label=117;break;case 116:$714=($t014|0)>0?65535:0;label=117;break;case 117:HEAP16[$4+($i<<1)>>1]=$714&65535;if(($t115&-65536|0)!=0){label=119;break}else{label=118;break};case 118:$729=$t115;label=120;break;case 119:$729=($t115|0)>0?65535:0;label=120;break;case 120:HEAP16[$4+($i+1<<1)>>1]=$729&65535;$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+2)|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+3)|0]|0)+$7)|0;if(($t014&-65536|0)!=0){label=122;break}else{label=121;break};case 121:$769=$t014;label=123;break;case 122:$769=($t014|0)>0?65535:0;label=123;break;case 123:HEAP16[$4+($i+2<<1)>>1]=$769&65535;if(($t115&-65536|0)!=0){label=125;break}else{label=124;break};case 124:$785=$t115;label=126;break;case 125:$785=($t115|0)>0?65535:0;label=126;break;case 126:HEAP16[$4+($i+3<<1)>>1]=$785&65535;label=127;break;case 127:$i=$i+4|0;label=113;break;case 128:label=129;break;case 129:if(($i|0)<(HEAP32[$size>>2]|0)){label=130;break}else{label=135;break};case 130:$t016=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;if(($t016&-65536|0)!=0){label=132;break}else{label=131;break};case 131:$822=$t016;label=133;break;case 132:$822=($t016|0)>0?65535:0;label=133;break;case 133:HEAP16[$4+($i<<1)>>1]=$822&65535;label=134;break;case 134:$i=$i+1|0;label=129;break;case 135:label=136;break;case 136:$_src13=$_src13+$3|0;$4=$4+($5<<1)|0;label=111;break;case 137:label=138;break;case 138:label=139;break;case 139:label=343;break;case 140:if(+Math_abs(+$6)<=1.0){label=141;break}else{label=170;break};case 141:if(+Math_abs(+$7)<2.220446049250313e-16){label=142;break}else{label=170;break};case 142:$iscale17=__Z7cvRoundd($6*32768.0)|0;$_src18=$2;$3=($3>>>0)/2|0;label=143;break;case 143:$858=$size+4|0;$859=HEAP32[$858>>2]|0;HEAP32[$858>>2]=$859-1;if(($859|0)!=0){label=144;break}else{label=169;break};case 144:$i=0;label=145;break;case 145:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+1<<1)>>1]|0)|0)+16384>>15;if(($t019&-65536|0)!=0){label=148;break}else{label=147;break};case 147:$901=$t019;label=149;break;case 148:$901=($t019|0)>0?65535:0;label=149;break;case 149:HEAP16[$4+($i<<1)>>1]=$901&65535;if(($t120&-65536|0)!=0){label=151;break}else{label=150;break};case 150:$916=$t120;label=152;break;case 151:$916=($t120|0)>0?65535:0;label=152;break;case 152:HEAP16[$4+($i+1<<1)>>1]=$916&65535;$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i+2<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+3<<1)>>1]|0)|0)+16384>>15;if(($t019&-65536|0)!=0){label=154;break}else{label=153;break};case 153:$954=$t019;label=155;break;case 154:$954=($t019|0)>0?65535:0;label=155;break;case 155:HEAP16[$4+($i+2<<1)>>1]=$954&65535;if(($t120&-65536|0)!=0){label=157;break}else{label=156;break};case 156:$970=$t120;label=158;break;case 157:$970=($t120|0)>0?65535:0;label=158;break;case 158:HEAP16[$4+($i+3<<1)>>1]=$970&65535;label=159;break;case 159:$i=$i+4|0;label=145;break;case 160:label=161;break;case 161:if(($i|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t021=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;if(($t021&-65536|0)!=0){label=164;break}else{label=163;break};case 163:$1006=$t021;label=165;break;case 164:$1006=($t021|0)>0?65535:0;label=165;break;case 165:HEAP16[$4+($i<<1)>>1]=$1006&65535;label=166;break;case 166:$i=$i+1|0;label=161;break;case 167:label=168;break;case 168:$_src18=$_src18+($3<<1)|0;$4=$4+($5<<1)|0;label=143;break;case 169:label=198;break;case 170:$_src22=$2;$3=($3>>>0)/2|0;label=171;break;case 171:$1029=$size+4|0;$1030=HEAP32[$1029>>2]|0;HEAP32[$1029>>2]=$1030-1;if(($1030|0)!=0){label=172;break}else{label=197;break};case 172:$i=0;label=173;break;case 173:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=174;break}else{label=188;break};case 174:$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+1<<1)>>1]|0)+$7)|0;if(($t023&-65536|0)!=0){label=176;break}else{label=175;break};case 175:$1074=$t023;label=177;break;case 176:$1074=($t023|0)>0?65535:0;label=177;break;case 177:HEAP16[$4+($i<<1)>>1]=$1074&65535;if(($t124&-65536|0)!=0){label=179;break}else{label=178;break};case 178:$1089=$t124;label=180;break;case 179:$1089=($t124|0)>0?65535:0;label=180;break;case 180:HEAP16[$4+($i+1<<1)>>1]=$1089&65535;$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+2<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+3<<1)>>1]|0)+$7)|0;if(($t023&-65536|0)!=0){label=182;break}else{label=181;break};case 181:$1129=$t023;label=183;break;case 182:$1129=($t023|0)>0?65535:0;label=183;break;case 183:HEAP16[$4+($i+2<<1)>>1]=$1129&65535;if(($t124&-65536|0)!=0){label=185;break}else{label=184;break};case 184:$1145=$t124;label=186;break;case 185:$1145=($t124|0)>0?65535:0;label=186;break;case 186:HEAP16[$4+($i+3<<1)>>1]=$1145&65535;label=187;break;case 187:$i=$i+4|0;label=173;break;case 188:label=189;break;case 189:if(($i|0)<(HEAP32[$size>>2]|0)){label=190;break}else{label=195;break};case 190:$t025=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;if(($t025&-65536|0)!=0){label=192;break}else{label=191;break};case 191:$1182=$t025;label=193;break;case 192:$1182=($t025|0)>0?65535:0;label=193;break;case 193:HEAP16[$4+($i<<1)>>1]=$1182&65535;label=194;break;case 194:$i=$i+1|0;label=189;break;case 195:label=196;break;case 196:$_src22=$_src22+($3<<1)|0;$4=$4+($5<<1)|0;label=171;break;case 197:label=198;break;case 198:label=343;break;case 199:if(+Math_abs(+$6)<=1.0){label=200;break}else{label=229;break};case 200:if(+Math_abs(+$7)<=32767.99998474121){label=201;break}else{label=229;break};case 201:$iscale26=__Z7cvRoundd($6*32768.0)|0;$ishift27=__Z7cvRoundd($7*32768.0)|0;$_src28=$2;$3=($3>>>0)/2|0;label=202;break;case 202:$1220=$size+4|0;$1221=HEAP32[$1220>>2]|0;HEAP32[$1220>>2]=$1221-1;if(($1221|0)!=0){label=203;break}else{label=228;break};case 203:$i=0;label=204;break;case 204:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=205;break}else{label=219;break};case 205:$t029=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+1<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029&-65536|0)!=0){label=207;break}else{label=206;break};case 206:$1265=$t029;label=208;break;case 207:$1265=($t029|0)>0?65535:0;label=208;break;case 208:HEAP16[$4+($i<<1)>>1]=$1265&65535;if(($t130&-65536|0)!=0){label=210;break}else{label=209;break};case 209:$1280=$t130;label=211;break;case 210:$1280=($t130|0)>0?65535:0;label=211;break;case 211:HEAP16[$4+($i+1<<1)>>1]=$1280&65535;$t029=(Math_imul($iscale26,HEAP16[$_src28+($i+2<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+3<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029&-65536|0)!=0){label=213;break}else{label=212;break};case 212:$1320=$t029;label=214;break;case 213:$1320=($t029|0)>0?65535:0;label=214;break;case 214:HEAP16[$4+($i+2<<1)>>1]=$1320&65535;if(($t130&-65536|0)!=0){label=216;break}else{label=215;break};case 215:$1336=$t130;label=217;break;case 216:$1336=($t130|0)>0?65535:0;label=217;break;case 217:HEAP16[$4+($i+3<<1)>>1]=$1336&65535;label=218;break;case 218:$i=$i+4|0;label=204;break;case 219:label=220;break;case 220:if(($i|0)<(HEAP32[$size>>2]|0)){label=221;break}else{label=226;break};case 221:$t031=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t031&-65536|0)!=0){label=223;break}else{label=222;break};case 222:$1373=$t031;label=224;break;case 223:$1373=($t031|0)>0?65535:0;label=224;break;case 224:HEAP16[$4+($i<<1)>>1]=$1373&65535;label=225;break;case 225:$i=$i+1|0;label=220;break;case 226:label=227;break;case 227:$_src28=$_src28+($3<<1)|0;$4=$4+($5<<1)|0;label=202;break;case 228:label=257;break;case 229:$_src32=$2;$3=($3>>>0)/2|0;label=230;break;case 230:$1396=$size+4|0;$1397=HEAP32[$1396>>2]|0;HEAP32[$1396>>2]=$1397-1;if(($1397|0)!=0){label=231;break}else{label=256;break};case 231:$i=0;label=232;break;case 232:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=233;break}else{label=247;break};case 233:$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+1<<1)>>1]|0)+$7)|0;if(($t033&-65536|0)!=0){label=235;break}else{label=234;break};case 234:$1441=$t033;label=236;break;case 235:$1441=($t033|0)>0?65535:0;label=236;break;case 236:HEAP16[$4+($i<<1)>>1]=$1441&65535;if(($t134&-65536|0)!=0){label=238;break}else{label=237;break};case 237:$1456=$t134;label=239;break;case 238:$1456=($t134|0)>0?65535:0;label=239;break;case 239:HEAP16[$4+($i+1<<1)>>1]=$1456&65535;$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+2<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+3<<1)>>1]|0)+$7)|0;if(($t033&-65536|0)!=0){label=241;break}else{label=240;break};case 240:$1496=$t033;label=242;break;case 241:$1496=($t033|0)>0?65535:0;label=242;break;case 242:HEAP16[$4+($i+2<<1)>>1]=$1496&65535;if(($t134&-65536|0)!=0){label=244;break}else{label=243;break};case 243:$1512=$t134;label=245;break;case 244:$1512=($t134|0)>0?65535:0;label=245;break;case 245:HEAP16[$4+($i+3<<1)>>1]=$1512&65535;label=246;break;case 246:$i=$i+4|0;label=232;break;case 247:label=248;break;case 248:if(($i|0)<(HEAP32[$size>>2]|0)){label=249;break}else{label=254;break};case 249:$t035=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;if(($t035&-65536|0)!=0){label=251;break}else{label=250;break};case 250:$1549=$t035;label=252;break;case 251:$1549=($t035|0)>0?65535:0;label=252;break;case 252:HEAP16[$4+($i<<1)>>1]=$1549&65535;label=253;break;case 253:$i=$i+1|0;label=248;break;case 254:label=255;break;case 255:$_src32=$_src32+($3<<1)|0;$4=$4+($5<<1)|0;label=230;break;case 256:label=257;break;case 257:label=343;break;case 258:$_src36=$2;$3=($3>>>0)/4|0;label=259;break;case 259:$1573=$size+4|0;$1574=HEAP32[$1573>>2]|0;HEAP32[$1573>>2]=$1574-1;if(($1574|0)!=0){label=260;break}else{label=285;break};case 260:$i=0;label=261;break;case 261:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=262;break}else{label=276;break};case 262:$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+1<<2)>>2]|0)+$7)|0;if(($t037&-65536|0)!=0){label=264;break}else{label=263;break};case 263:$1616=$t037;label=265;break;case 264:$1616=($t037|0)>0?65535:0;label=265;break;case 265:HEAP16[$4+($i<<1)>>1]=$1616&65535;if(($t138&-65536|0)!=0){label=267;break}else{label=266;break};case 266:$1631=$t138;label=268;break;case 267:$1631=($t138|0)>0?65535:0;label=268;break;case 268:HEAP16[$4+($i+1<<1)>>1]=$1631&65535;$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+2<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+3<<2)>>2]|0)+$7)|0;if(($t037&-65536|0)!=0){label=270;break}else{label=269;break};case 269:$1669=$t037;label=271;break;case 270:$1669=($t037|0)>0?65535:0;label=271;break;case 271:HEAP16[$4+($i+2<<1)>>1]=$1669&65535;if(($t138&-65536|0)!=0){label=273;break}else{label=272;break};case 272:$1685=$t138;label=274;break;case 273:$1685=($t138|0)>0?65535:0;label=274;break;case 274:HEAP16[$4+($i+3<<1)>>1]=$1685&65535;label=275;break;case 275:$i=$i+4|0;label=261;break;case 276:label=277;break;case 277:if(($i|0)<(HEAP32[$size>>2]|0)){label=278;break}else{label=283;break};case 278:$t039=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;if(($t039&-65536|0)!=0){label=280;break}else{label=279;break};case 279:$1721=$t039;label=281;break;case 280:$1721=($t039|0)>0?65535:0;label=281;break;case 281:HEAP16[$4+($i<<1)>>1]=$1721&65535;label=282;break;case 282:$i=$i+1|0;label=277;break;case 283:label=284;break;case 284:$_src36=$_src36+($3<<2)|0;$4=$4+($5<<1)|0;label=259;break;case 285:label=343;break;case 286:$_src40=$2;$3=($3>>>0)/4|0;label=287;break;case 287:$1744=$size+4|0;$1745=HEAP32[$1744>>2]|0;HEAP32[$1744>>2]=$1745-1;if(($1745|0)!=0){label=288;break}else{label=313;break};case 288:$i=0;label=289;break;case 289:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=290;break}else{label=304;break};case 290:$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+1<<2)>>2]+$7)|0;if(($t041&-65536|0)!=0){label=292;break}else{label=291;break};case 291:$1787=$t041;label=293;break;case 292:$1787=($t041|0)>0?65535:0;label=293;break;case 293:HEAP16[$4+($i<<1)>>1]=$1787&65535;if(($t142&-65536|0)!=0){label=295;break}else{label=294;break};case 294:$1802=$t142;label=296;break;case 295:$1802=($t142|0)>0?65535:0;label=296;break;case 296:HEAP16[$4+($i+1<<1)>>1]=$1802&65535;$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+2<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+3<<2)>>2]+$7)|0;if(($t041&-65536|0)!=0){label=298;break}else{label=297;break};case 297:$1840=$t041;label=299;break;case 298:$1840=($t041|0)>0?65535:0;label=299;break;case 299:HEAP16[$4+($i+2<<1)>>1]=$1840&65535;if(($t142&-65536|0)!=0){label=301;break}else{label=300;break};case 300:$1856=$t142;label=302;break;case 301:$1856=($t142|0)>0?65535:0;label=302;break;case 302:HEAP16[$4+($i+3<<1)>>1]=$1856&65535;label=303;break;case 303:$i=$i+4|0;label=289;break;case 304:label=305;break;case 305:if(($i|0)<(HEAP32[$size>>2]|0)){label=306;break}else{label=311;break};case 306:$t043=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;if(($t043&-65536|0)!=0){label=308;break}else{label=307;break};case 307:$1892=$t043;label=309;break;case 308:$1892=($t043|0)>0?65535:0;label=309;break;case 309:HEAP16[$4+($i<<1)>>1]=$1892&65535;label=310;break;case 310:$i=$i+1|0;label=305;break;case 311:label=312;break;case 312:$_src40=$_src40+($3<<2)|0;$4=$4+($5<<1)|0;label=287;break;case 313:label=343;break;case 314:$_src44=$2;$3=($3>>>0)/8|0;label=315;break;case 315:$1915=$size+4|0;$1916=HEAP32[$1915>>2]|0;HEAP32[$1915>>2]=$1916-1;if(($1916|0)!=0){label=316;break}else{label=341;break};case 316:$i=0;label=317;break;case 317:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=318;break}else{label=332;break};case 318:$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+1<<3)>>3]+$7)|0;if(($t045&-65536|0)!=0){label=320;break}else{label=319;break};case 319:$1956=$t045;label=321;break;case 320:$1956=($t045|0)>0?65535:0;label=321;break;case 321:HEAP16[$4+($i<<1)>>1]=$1956&65535;if(($t146&-65536|0)!=0){label=323;break}else{label=322;break};case 322:$1971=$t146;label=324;break;case 323:$1971=($t146|0)>0?65535:0;label=324;break;case 324:HEAP16[$4+($i+1<<1)>>1]=$1971&65535;$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+2<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+3<<3)>>3]+$7)|0;if(($t045&-65536|0)!=0){label=326;break}else{label=325;break};case 325:$2007=$t045;label=327;break;case 326:$2007=($t045|0)>0?65535:0;label=327;break;case 327:HEAP16[$4+($i+2<<1)>>1]=$2007&65535;if(($t146&-65536|0)!=0){label=329;break}else{label=328;break};case 328:$2023=$t146;label=330;break;case 329:$2023=($t146|0)>0?65535:0;label=330;break;case 330:HEAP16[$4+($i+3<<1)>>1]=$2023&65535;label=331;break;case 331:$i=$i+4|0;label=317;break;case 332:label=333;break;case 333:if(($i|0)<(HEAP32[$size>>2]|0)){label=334;break}else{label=339;break};case 334:$t047=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;if(($t047&-65536|0)!=0){label=336;break}else{label=335;break};case 335:$2058=$t047;label=337;break;case 336:$2058=($t047|0)>0?65535:0;label=337;break;case 337:HEAP16[$4+($i<<1)>>1]=$2058&65535;label=338;break;case 338:$i=$i+1|0;label=333;break;case 339:label=340;break;case 340:$_src44=$_src44+($3<<3)|0;$4=$4+($5<<1)|0;label=315;break;case 341:label=343;break;case 342:$1=-12;label=344;break;case 343:$1=0;label=344;break;case 344:STACKTOP=sp;return $1|0}return 0}function __ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$t=0,$9=0,$iscale=0,$ishift=0,$_src=0,$t0=0,$t1=0,$t01=0,$_src2=0,$t03=0,$t14=0,$t05=0,$t6=0,$10=0,$iscale7=0,$ishift8=0,$_src9=0,$t010=0,$t111=0,$t012=0,$_src13=0,$t014=0,$t115=0,$t016=0,$iscale17=0,$_src18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$t023=0,$t124=0,$t025=0,$iscale26=0,$ishift27=0,$_src28=0,$t029=0,$t130=0,$t031=0,$_src32=0,$t033=0,$t134=0,$t035=0,$_src36=0,$t037=0,$t138=0,$t039=0,$_src40=0,$t041=0,$t142=0,$t043=0,$_src44=0,$t045=0,$t146=0,$t047=0,$15=0,$42=0,$58=0,$59=0,$81=0,$82=0,$127=0,$143=0,$184=0,$201=0,$239=0,$261=0,$262=0,$307=0,$323=0,$364=0,$381=0,$419=0,$470=0,$483=0,$484=0,$506=0,$507=0,$552=0,$568=0,$609=0,$626=0,$664=0,$686=0,$687=0,$732=0,$748=0,$789=0,$806=0,$844=0,$880=0,$881=0,$924=0,$940=0,$979=0,$996=0,$1033=0,$1056=0,$1057=0,$1102=0,$1118=0,$1159=0,$1176=0,$1214=0,$1252=0,$1253=0,$1298=0,$1314=0,$1355=0,$1372=0,$1410=0,$1433=0,$1434=0,$1479=0,$1495=0,$1536=0,$1553=0,$1591=0,$1615=0,$1616=0,$1659=0,$1675=0,$1714=0,$1731=0,$1768=0,$1791=0,$1792=0,$1835=0,$1851=0,$1890=0,$1907=0,$1944=0,$1967=0,$1968=0,$2009=0,$2025=0,$2062=0,$2079=0,$2115=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+528|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+512|0;$10=sp+520|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=($5>>>0)/2|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=71;break}else if(($15|0)==2){label=140;break}else if(($15|0)==3){label=199;break}else if(($15|0)==4){label=258;break}else if(($15|0)==5){label=286;break}else if(($15|0)==6){label=314;break}else{label=342;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=11;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=10;break};case 5:$t=__Z7cvRoundd($val)|0;if(($t+32768&-65536|0)!=0){label=7;break}else{label=6;break};case 6:$42=$t;label=8;break;case 7:$42=($t|0)>0?32767:-32768;label=8;break;case 8:HEAP16[$lut+($i<<1)>>1]=$42&65535;label=9;break;case 9:$i=$i+1|0;$val=$val+$6;label=4;break;case 10:$58=$9;$59=$size;HEAP32[$58>>2]=HEAP32[$59>>2];HEAP32[$58+4>>2]=HEAP32[$59+4>>2];__Z26icvLUT_Transform8u_16s_C1RPKhiPsi6CvSizePKs($2,$3,$4,$5<<1,$9,$lut|0)|0;label=70;break;case 11:if(+Math_abs(+$6)<=128.0){label=12;break}else{label=41;break};case 12:if(+Math_abs(+$7)<=32767.99998474121){label=13;break}else{label=41;break};case 13:$iscale=__Z7cvRoundd($6*32768.0)|0;$ishift=__Z7cvRoundd($7*32768.0)|0;$_src=$2;$3=$3>>>0|0;label=14;break;case 14:$81=$size+4|0;$82=HEAP32[$81>>2]|0;HEAP32[$81>>2]=$82-1;if(($82|0)!=0){label=15;break}else{label=40;break};case 15:$i=0;label=16;break;case 16:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=17;break}else{label=31;break};case 17:$t0=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+1)|0]|0)|0)+$ishift+16384>>15;if(($t0+32768&-65536|0)!=0){label=19;break}else{label=18;break};case 18:$127=$t0;label=20;break;case 19:$127=($t0|0)>0?32767:-32768;label=20;break;case 20:HEAP16[$4+($i<<1)>>1]=$127&65535;if(($t1+32768&-65536|0)!=0){label=22;break}else{label=21;break};case 21:$143=$t1;label=23;break;case 22:$143=($t1|0)>0?32767:-32768;label=23;break;case 23:HEAP16[$4+($i+1<<1)>>1]=$143&65535;$t0=(Math_imul($iscale,HEAPU8[$_src+($i+2)|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+3)|0]|0)|0)+$ishift+16384>>15;if(($t0+32768&-65536|0)!=0){label=25;break}else{label=24;break};case 24:$184=$t0;label=26;break;case 25:$184=($t0|0)>0?32767:-32768;label=26;break;case 26:HEAP16[$4+($i+2<<1)>>1]=$184&65535;if(($t1+32768&-65536|0)!=0){label=28;break}else{label=27;break};case 27:$201=$t1;label=29;break;case 28:$201=($t1|0)>0?32767:-32768;label=29;break;case 29:HEAP16[$4+($i+3<<1)>>1]=$201&65535;label=30;break;case 30:$i=$i+4|0;label=16;break;case 31:label=32;break;case 32:if(($i|0)<(HEAP32[$size>>2]|0)){label=33;break}else{label=38;break};case 33:$t01=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;if(($t01+32768&-65536|0)!=0){label=35;break}else{label=34;break};case 34:$239=$t01;label=36;break;case 35:$239=($t01|0)>0?32767:-32768;label=36;break;case 36:HEAP16[$4+($i<<1)>>1]=$239&65535;label=37;break;case 37:$i=$i+1|0;label=32;break;case 38:label=39;break;case 39:$_src=$_src+$3|0;$4=$4+($5<<1)|0;label=14;break;case 40:label=69;break;case 41:$_src2=$2;$3=$3>>>0|0;label=42;break;case 42:$261=$size+4|0;$262=HEAP32[$261>>2]|0;HEAP32[$261>>2]=$262-1;if(($262|0)!=0){label=43;break}else{label=68;break};case 43:$i=0;label=44;break;case 44:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=59;break};case 45:$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+1)|0]|0)+$7)|0;if(($t03+32768&-65536|0)!=0){label=47;break}else{label=46;break};case 46:$307=$t03;label=48;break;case 47:$307=($t03|0)>0?32767:-32768;label=48;break;case 48:HEAP16[$4+($i<<1)>>1]=$307&65535;if(($t14+32768&-65536|0)!=0){label=50;break}else{label=49;break};case 49:$323=$t14;label=51;break;case 50:$323=($t14|0)>0?32767:-32768;label=51;break;case 51:HEAP16[$4+($i+1<<1)>>1]=$323&65535;$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+2)|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+3)|0]|0)+$7)|0;if(($t03+32768&-65536|0)!=0){label=53;break}else{label=52;break};case 52:$364=$t03;label=54;break;case 53:$364=($t03|0)>0?32767:-32768;label=54;break;case 54:HEAP16[$4+($i+2<<1)>>1]=$364&65535;if(($t14+32768&-65536|0)!=0){label=56;break}else{label=55;break};case 55:$381=$t14;label=57;break;case 56:$381=($t14|0)>0?32767:-32768;label=57;break;case 57:HEAP16[$4+($i+3<<1)>>1]=$381&65535;label=58;break;case 58:$i=$i+4|0;label=44;break;case 59:label=60;break;case 60:if(($i|0)<(HEAP32[$size>>2]|0)){label=61;break}else{label=66;break};case 61:$t05=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;if(($t05+32768&-65536|0)!=0){label=63;break}else{label=62;break};case 62:$419=$t05;label=64;break;case 63:$419=($t05|0)>0?32767:-32768;label=64;break;case 64:HEAP16[$4+($i<<1)>>1]=$419&65535;label=65;break;case 65:$i=$i+1|0;label=60;break;case 66:label=67;break;case 67:$_src2=$_src2+$3|0;$4=$4+($5<<1)|0;label=42;break;case 68:label=69;break;case 69:label=70;break;case 70:label=343;break;case 71:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=72;break}else{label=80;break};case 72:$i=0;label=73;break;case 73:if(($i|0)<256){label=74;break}else{label=79;break};case 74:$t6=__Z7cvRoundd(+(($i&255)<<24>>24|0)*$6+$7)|0;if(($t6+32768&-65536|0)!=0){label=76;break}else{label=75;break};case 75:$470=$t6;label=77;break;case 76:$470=($t6|0)>0?32767:-32768;label=77;break;case 77:HEAP16[$lut+($i<<1)>>1]=$470&65535;label=78;break;case 78:$i=$i+1|0;label=73;break;case 79:$483=$10;$484=$size;HEAP32[$483>>2]=HEAP32[$484>>2];HEAP32[$483+4>>2]=HEAP32[$484+4>>2];__Z26icvLUT_Transform8u_16s_C1RPKhiPsi6CvSizePKs($2,$3,$4,$5<<1,$10,$lut|0)|0;label=139;break;case 80:if(+Math_abs(+$6)<=128.0){label=81;break}else{label=110;break};case 81:if(+Math_abs(+$7)<=32767.99998474121){label=82;break}else{label=110;break};case 82:$iscale7=__Z7cvRoundd($6*32768.0)|0;$ishift8=__Z7cvRoundd($7*32768.0)|0;$_src9=$2;$3=$3>>>0|0;label=83;break;case 83:$506=$size+4|0;$507=HEAP32[$506>>2]|0;HEAP32[$506>>2]=$507-1;if(($507|0)!=0){label=84;break}else{label=109;break};case 84:$i=0;label=85;break;case 85:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=86;break}else{label=100;break};case 86:$t010=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+1)|0]|0)|0)+$ishift8+16384>>15;if(($t010+32768&-65536|0)!=0){label=88;break}else{label=87;break};case 87:$552=$t010;label=89;break;case 88:$552=($t010|0)>0?32767:-32768;label=89;break;case 89:HEAP16[$4+($i<<1)>>1]=$552&65535;if(($t111+32768&-65536|0)!=0){label=91;break}else{label=90;break};case 90:$568=$t111;label=92;break;case 91:$568=($t111|0)>0?32767:-32768;label=92;break;case 92:HEAP16[$4+($i+1<<1)>>1]=$568&65535;$t010=(Math_imul($iscale7,HEAP8[$_src9+($i+2)|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+3)|0]|0)|0)+$ishift8+16384>>15;if(($t010+32768&-65536|0)!=0){label=94;break}else{label=93;break};case 93:$609=$t010;label=95;break;case 94:$609=($t010|0)>0?32767:-32768;label=95;break;case 95:HEAP16[$4+($i+2<<1)>>1]=$609&65535;if(($t111+32768&-65536|0)!=0){label=97;break}else{label=96;break};case 96:$626=$t111;label=98;break;case 97:$626=($t111|0)>0?32767:-32768;label=98;break;case 98:HEAP16[$4+($i+3<<1)>>1]=$626&65535;label=99;break;case 99:$i=$i+4|0;label=85;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=107;break};case 102:$t012=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;if(($t012+32768&-65536|0)!=0){label=104;break}else{label=103;break};case 103:$664=$t012;label=105;break;case 104:$664=($t012|0)>0?32767:-32768;label=105;break;case 105:HEAP16[$4+($i<<1)>>1]=$664&65535;label=106;break;case 106:$i=$i+1|0;label=101;break;case 107:label=108;break;case 108:$_src9=$_src9+$3|0;$4=$4+($5<<1)|0;label=83;break;case 109:label=138;break;case 110:$_src13=$2;$3=$3>>>0|0;label=111;break;case 111:$686=$size+4|0;$687=HEAP32[$686>>2]|0;HEAP32[$686>>2]=$687-1;if(($687|0)!=0){label=112;break}else{label=137;break};case 112:$i=0;label=113;break;case 113:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=114;break}else{label=128;break};case 114:$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+1)|0]|0)+$7)|0;if(($t014+32768&-65536|0)!=0){label=116;break}else{label=115;break};case 115:$732=$t014;label=117;break;case 116:$732=($t014|0)>0?32767:-32768;label=117;break;case 117:HEAP16[$4+($i<<1)>>1]=$732&65535;if(($t115+32768&-65536|0)!=0){label=119;break}else{label=118;break};case 118:$748=$t115;label=120;break;case 119:$748=($t115|0)>0?32767:-32768;label=120;break;case 120:HEAP16[$4+($i+1<<1)>>1]=$748&65535;$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+2)|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+3)|0]|0)+$7)|0;if(($t014+32768&-65536|0)!=0){label=122;break}else{label=121;break};case 121:$789=$t014;label=123;break;case 122:$789=($t014|0)>0?32767:-32768;label=123;break;case 123:HEAP16[$4+($i+2<<1)>>1]=$789&65535;if(($t115+32768&-65536|0)!=0){label=125;break}else{label=124;break};case 124:$806=$t115;label=126;break;case 125:$806=($t115|0)>0?32767:-32768;label=126;break;case 126:HEAP16[$4+($i+3<<1)>>1]=$806&65535;label=127;break;case 127:$i=$i+4|0;label=113;break;case 128:label=129;break;case 129:if(($i|0)<(HEAP32[$size>>2]|0)){label=130;break}else{label=135;break};case 130:$t016=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;if(($t016+32768&-65536|0)!=0){label=132;break}else{label=131;break};case 131:$844=$t016;label=133;break;case 132:$844=($t016|0)>0?32767:-32768;label=133;break;case 133:HEAP16[$4+($i<<1)>>1]=$844&65535;label=134;break;case 134:$i=$i+1|0;label=129;break;case 135:label=136;break;case 136:$_src13=$_src13+$3|0;$4=$4+($5<<1)|0;label=111;break;case 137:label=138;break;case 138:label=139;break;case 139:label=343;break;case 140:if(+Math_abs(+$6)<=1.0){label=141;break}else{label=170;break};case 141:if(+Math_abs(+$7)<2.220446049250313e-16){label=142;break}else{label=170;break};case 142:$iscale17=__Z7cvRoundd($6*32768.0)|0;$_src18=$2;$3=($3>>>0)/2|0;label=143;break;case 143:$880=$size+4|0;$881=HEAP32[$880>>2]|0;HEAP32[$880>>2]=$881-1;if(($881|0)!=0){label=144;break}else{label=169;break};case 144:$i=0;label=145;break;case 145:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+1<<1)>>1]|0)|0)+16384>>15;if(($t019+32768&-65536|0)!=0){label=148;break}else{label=147;break};case 147:$924=$t019;label=149;break;case 148:$924=($t019|0)>0?32767:-32768;label=149;break;case 149:HEAP16[$4+($i<<1)>>1]=$924&65535;if(($t120+32768&-65536|0)!=0){label=151;break}else{label=150;break};case 150:$940=$t120;label=152;break;case 151:$940=($t120|0)>0?32767:-32768;label=152;break;case 152:HEAP16[$4+($i+1<<1)>>1]=$940&65535;$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i+2<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+3<<1)>>1]|0)|0)+16384>>15;if(($t019+32768&-65536|0)!=0){label=154;break}else{label=153;break};case 153:$979=$t019;label=155;break;case 154:$979=($t019|0)>0?32767:-32768;label=155;break;case 155:HEAP16[$4+($i+2<<1)>>1]=$979&65535;if(($t120+32768&-65536|0)!=0){label=157;break}else{label=156;break};case 156:$996=$t120;label=158;break;case 157:$996=($t120|0)>0?32767:-32768;label=158;break;case 158:HEAP16[$4+($i+3<<1)>>1]=$996&65535;label=159;break;case 159:$i=$i+4|0;label=145;break;case 160:label=161;break;case 161:if(($i|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t021=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;if(($t021+32768&-65536|0)!=0){label=164;break}else{label=163;break};case 163:$1033=$t021;label=165;break;case 164:$1033=($t021|0)>0?32767:-32768;label=165;break;case 165:HEAP16[$4+($i<<1)>>1]=$1033&65535;label=166;break;case 166:$i=$i+1|0;label=161;break;case 167:label=168;break;case 168:$_src18=$_src18+($3<<1)|0;$4=$4+($5<<1)|0;label=143;break;case 169:label=198;break;case 170:$_src22=$2;$3=($3>>>0)/2|0;label=171;break;case 171:$1056=$size+4|0;$1057=HEAP32[$1056>>2]|0;HEAP32[$1056>>2]=$1057-1;if(($1057|0)!=0){label=172;break}else{label=197;break};case 172:$i=0;label=173;break;case 173:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=174;break}else{label=188;break};case 174:$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+1<<1)>>1]|0)+$7)|0;if(($t023+32768&-65536|0)!=0){label=176;break}else{label=175;break};case 175:$1102=$t023;label=177;break;case 176:$1102=($t023|0)>0?32767:-32768;label=177;break;case 177:HEAP16[$4+($i<<1)>>1]=$1102&65535;if(($t124+32768&-65536|0)!=0){label=179;break}else{label=178;break};case 178:$1118=$t124;label=180;break;case 179:$1118=($t124|0)>0?32767:-32768;label=180;break;case 180:HEAP16[$4+($i+1<<1)>>1]=$1118&65535;$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+2<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+3<<1)>>1]|0)+$7)|0;if(($t023+32768&-65536|0)!=0){label=182;break}else{label=181;break};case 181:$1159=$t023;label=183;break;case 182:$1159=($t023|0)>0?32767:-32768;label=183;break;case 183:HEAP16[$4+($i+2<<1)>>1]=$1159&65535;if(($t124+32768&-65536|0)!=0){label=185;break}else{label=184;break};case 184:$1176=$t124;label=186;break;case 185:$1176=($t124|0)>0?32767:-32768;label=186;break;case 186:HEAP16[$4+($i+3<<1)>>1]=$1176&65535;label=187;break;case 187:$i=$i+4|0;label=173;break;case 188:label=189;break;case 189:if(($i|0)<(HEAP32[$size>>2]|0)){label=190;break}else{label=195;break};case 190:$t025=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;if(($t025+32768&-65536|0)!=0){label=192;break}else{label=191;break};case 191:$1214=$t025;label=193;break;case 192:$1214=($t025|0)>0?32767:-32768;label=193;break;case 193:HEAP16[$4+($i<<1)>>1]=$1214&65535;label=194;break;case 194:$i=$i+1|0;label=189;break;case 195:label=196;break;case 196:$_src22=$_src22+($3<<1)|0;$4=$4+($5<<1)|0;label=171;break;case 197:label=198;break;case 198:label=343;break;case 199:if(+Math_abs(+$6)<=1.0){label=200;break}else{label=229;break};case 200:if(+Math_abs(+$7)<=32767.99998474121){label=201;break}else{label=229;break};case 201:$iscale26=__Z7cvRoundd($6*32768.0)|0;$ishift27=__Z7cvRoundd($7*32768.0)|0;$_src28=$2;$3=($3>>>0)/2|0;label=202;break;case 202:$1252=$size+4|0;$1253=HEAP32[$1252>>2]|0;HEAP32[$1252>>2]=$1253-1;if(($1253|0)!=0){label=203;break}else{label=228;break};case 203:$i=0;label=204;break;case 204:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=205;break}else{label=219;break};case 205:$t029=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+1<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029+32768&-65536|0)!=0){label=207;break}else{label=206;break};case 206:$1298=$t029;label=208;break;case 207:$1298=($t029|0)>0?32767:-32768;label=208;break;case 208:HEAP16[$4+($i<<1)>>1]=$1298&65535;if(($t130+32768&-65536|0)!=0){label=210;break}else{label=209;break};case 209:$1314=$t130;label=211;break;case 210:$1314=($t130|0)>0?32767:-32768;label=211;break;case 211:HEAP16[$4+($i+1<<1)>>1]=$1314&65535;$t029=(Math_imul($iscale26,HEAP16[$_src28+($i+2<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+3<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t029+32768&-65536|0)!=0){label=213;break}else{label=212;break};case 212:$1355=$t029;label=214;break;case 213:$1355=($t029|0)>0?32767:-32768;label=214;break;case 214:HEAP16[$4+($i+2<<1)>>1]=$1355&65535;if(($t130+32768&-65536|0)!=0){label=216;break}else{label=215;break};case 215:$1372=$t130;label=217;break;case 216:$1372=($t130|0)>0?32767:-32768;label=217;break;case 217:HEAP16[$4+($i+3<<1)>>1]=$1372&65535;label=218;break;case 218:$i=$i+4|0;label=204;break;case 219:label=220;break;case 220:if(($i|0)<(HEAP32[$size>>2]|0)){label=221;break}else{label=226;break};case 221:$t031=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;if(($t031+32768&-65536|0)!=0){label=223;break}else{label=222;break};case 222:$1410=$t031;label=224;break;case 223:$1410=($t031|0)>0?32767:-32768;label=224;break;case 224:HEAP16[$4+($i<<1)>>1]=$1410&65535;label=225;break;case 225:$i=$i+1|0;label=220;break;case 226:label=227;break;case 227:$_src28=$_src28+($3<<1)|0;$4=$4+($5<<1)|0;label=202;break;case 228:label=257;break;case 229:$_src32=$2;$3=($3>>>0)/2|0;label=230;break;case 230:$1433=$size+4|0;$1434=HEAP32[$1433>>2]|0;HEAP32[$1433>>2]=$1434-1;if(($1434|0)!=0){label=231;break}else{label=256;break};case 231:$i=0;label=232;break;case 232:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=233;break}else{label=247;break};case 233:$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+1<<1)>>1]|0)+$7)|0;if(($t033+32768&-65536|0)!=0){label=235;break}else{label=234;break};case 234:$1479=$t033;label=236;break;case 235:$1479=($t033|0)>0?32767:-32768;label=236;break;case 236:HEAP16[$4+($i<<1)>>1]=$1479&65535;if(($t134+32768&-65536|0)!=0){label=238;break}else{label=237;break};case 237:$1495=$t134;label=239;break;case 238:$1495=($t134|0)>0?32767:-32768;label=239;break;case 239:HEAP16[$4+($i+1<<1)>>1]=$1495&65535;$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+2<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+3<<1)>>1]|0)+$7)|0;if(($t033+32768&-65536|0)!=0){label=241;break}else{label=240;break};case 240:$1536=$t033;label=242;break;case 241:$1536=($t033|0)>0?32767:-32768;label=242;break;case 242:HEAP16[$4+($i+2<<1)>>1]=$1536&65535;if(($t134+32768&-65536|0)!=0){label=244;break}else{label=243;break};case 243:$1553=$t134;label=245;break;case 244:$1553=($t134|0)>0?32767:-32768;label=245;break;case 245:HEAP16[$4+($i+3<<1)>>1]=$1553&65535;label=246;break;case 246:$i=$i+4|0;label=232;break;case 247:label=248;break;case 248:if(($i|0)<(HEAP32[$size>>2]|0)){label=249;break}else{label=254;break};case 249:$t035=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;if(($t035+32768&-65536|0)!=0){label=251;break}else{label=250;break};case 250:$1591=$t035;label=252;break;case 251:$1591=($t035|0)>0?32767:-32768;label=252;break;case 252:HEAP16[$4+($i<<1)>>1]=$1591&65535;label=253;break;case 253:$i=$i+1|0;label=248;break;case 254:label=255;break;case 255:$_src32=$_src32+($3<<1)|0;$4=$4+($5<<1)|0;label=230;break;case 256:label=257;break;case 257:label=343;break;case 258:$_src36=$2;$3=($3>>>0)/4|0;label=259;break;case 259:$1615=$size+4|0;$1616=HEAP32[$1615>>2]|0;HEAP32[$1615>>2]=$1616-1;if(($1616|0)!=0){label=260;break}else{label=285;break};case 260:$i=0;label=261;break;case 261:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=262;break}else{label=276;break};case 262:$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+1<<2)>>2]|0)+$7)|0;if(($t037+32768&-65536|0)!=0){label=264;break}else{label=263;break};case 263:$1659=$t037;label=265;break;case 264:$1659=($t037|0)>0?32767:-32768;label=265;break;case 265:HEAP16[$4+($i<<1)>>1]=$1659&65535;if(($t138+32768&-65536|0)!=0){label=267;break}else{label=266;break};case 266:$1675=$t138;label=268;break;case 267:$1675=($t138|0)>0?32767:-32768;label=268;break;case 268:HEAP16[$4+($i+1<<1)>>1]=$1675&65535;$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+2<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+3<<2)>>2]|0)+$7)|0;if(($t037+32768&-65536|0)!=0){label=270;break}else{label=269;break};case 269:$1714=$t037;label=271;break;case 270:$1714=($t037|0)>0?32767:-32768;label=271;break;case 271:HEAP16[$4+($i+2<<1)>>1]=$1714&65535;if(($t138+32768&-65536|0)!=0){label=273;break}else{label=272;break};case 272:$1731=$t138;label=274;break;case 273:$1731=($t138|0)>0?32767:-32768;label=274;break;case 274:HEAP16[$4+($i+3<<1)>>1]=$1731&65535;label=275;break;case 275:$i=$i+4|0;label=261;break;case 276:label=277;break;case 277:if(($i|0)<(HEAP32[$size>>2]|0)){label=278;break}else{label=283;break};case 278:$t039=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;if(($t039+32768&-65536|0)!=0){label=280;break}else{label=279;break};case 279:$1768=$t039;label=281;break;case 280:$1768=($t039|0)>0?32767:-32768;label=281;break;case 281:HEAP16[$4+($i<<1)>>1]=$1768&65535;label=282;break;case 282:$i=$i+1|0;label=277;break;case 283:label=284;break;case 284:$_src36=$_src36+($3<<2)|0;$4=$4+($5<<1)|0;label=259;break;case 285:label=343;break;case 286:$_src40=$2;$3=($3>>>0)/4|0;label=287;break;case 287:$1791=$size+4|0;$1792=HEAP32[$1791>>2]|0;HEAP32[$1791>>2]=$1792-1;if(($1792|0)!=0){label=288;break}else{label=313;break};case 288:$i=0;label=289;break;case 289:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=290;break}else{label=304;break};case 290:$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+1<<2)>>2]+$7)|0;if(($t041+32768&-65536|0)!=0){label=292;break}else{label=291;break};case 291:$1835=$t041;label=293;break;case 292:$1835=($t041|0)>0?32767:-32768;label=293;break;case 293:HEAP16[$4+($i<<1)>>1]=$1835&65535;if(($t142+32768&-65536|0)!=0){label=295;break}else{label=294;break};case 294:$1851=$t142;label=296;break;case 295:$1851=($t142|0)>0?32767:-32768;label=296;break;case 296:HEAP16[$4+($i+1<<1)>>1]=$1851&65535;$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+2<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+3<<2)>>2]+$7)|0;if(($t041+32768&-65536|0)!=0){label=298;break}else{label=297;break};case 297:$1890=$t041;label=299;break;case 298:$1890=($t041|0)>0?32767:-32768;label=299;break;case 299:HEAP16[$4+($i+2<<1)>>1]=$1890&65535;if(($t142+32768&-65536|0)!=0){label=301;break}else{label=300;break};case 300:$1907=$t142;label=302;break;case 301:$1907=($t142|0)>0?32767:-32768;label=302;break;case 302:HEAP16[$4+($i+3<<1)>>1]=$1907&65535;label=303;break;case 303:$i=$i+4|0;label=289;break;case 304:label=305;break;case 305:if(($i|0)<(HEAP32[$size>>2]|0)){label=306;break}else{label=311;break};case 306:$t043=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;if(($t043+32768&-65536|0)!=0){label=308;break}else{label=307;break};case 307:$1944=$t043;label=309;break;case 308:$1944=($t043|0)>0?32767:-32768;label=309;break;case 309:HEAP16[$4+($i<<1)>>1]=$1944&65535;label=310;break;case 310:$i=$i+1|0;label=305;break;case 311:label=312;break;case 312:$_src40=$_src40+($3<<2)|0;$4=$4+($5<<1)|0;label=287;break;case 313:label=343;break;case 314:$_src44=$2;$3=($3>>>0)/8|0;label=315;break;case 315:$1967=$size+4|0;$1968=HEAP32[$1967>>2]|0;HEAP32[$1967>>2]=$1968-1;if(($1968|0)!=0){label=316;break}else{label=341;break};case 316:$i=0;label=317;break;case 317:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=318;break}else{label=332;break};case 318:$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+1<<3)>>3]+$7)|0;if(($t045+32768&-65536|0)!=0){label=320;break}else{label=319;break};case 319:$2009=$t045;label=321;break;case 320:$2009=($t045|0)>0?32767:-32768;label=321;break;case 321:HEAP16[$4+($i<<1)>>1]=$2009&65535;if(($t146+32768&-65536|0)!=0){label=323;break}else{label=322;break};case 322:$2025=$t146;label=324;break;case 323:$2025=($t146|0)>0?32767:-32768;label=324;break;case 324:HEAP16[$4+($i+1<<1)>>1]=$2025&65535;$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+2<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+3<<3)>>3]+$7)|0;if(($t045+32768&-65536|0)!=0){label=326;break}else{label=325;break};case 325:$2062=$t045;label=327;break;case 326:$2062=($t045|0)>0?32767:-32768;label=327;break;case 327:HEAP16[$4+($i+2<<1)>>1]=$2062&65535;if(($t146+32768&-65536|0)!=0){label=329;break}else{label=328;break};case 328:$2079=$t146;label=330;break;case 329:$2079=($t146|0)>0?32767:-32768;label=330;break;case 330:HEAP16[$4+($i+3<<1)>>1]=$2079&65535;label=331;break;case 331:$i=$i+4|0;label=317;break;case 332:label=333;break;case 333:if(($i|0)<(HEAP32[$size>>2]|0)){label=334;break}else{label=339;break};case 334:$t047=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;if(($t047+32768&-65536|0)!=0){label=336;break}else{label=335;break};case 335:$2115=$t047;label=337;break;case 336:$2115=($t047|0)>0?32767:-32768;label=337;break;case 337:HEAP16[$4+($i<<1)>>1]=$2115&65535;label=338;break;case 338:$i=$i+1|0;label=333;break;case 339:label=340;break;case 340:$_src44=$_src44+($3<<3)|0;$4=$4+($5<<1)|0;label=315;break;case 341:label=343;break;case 342:$1=-12;label=344;break;case 343:$1=0;label=344;break;case 344:STACKTOP=sp;return $1|0}return 0}function __ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$9=0,$iscale=0,$ishift=0,$_src=0,$t0=0,$t1=0,$_src2=0,$t03=0,$t14=0,$10=0,$iscale7=0,$ishift8=0,$_src9=0,$t010=0,$t111=0,$_src13=0,$t014=0,$t115=0,$iscale17=0,$_src18=0,$t019=0,$t120=0,$_src22=0,$t023=0,$t124=0,$iscale26=0,$ishift27=0,$_src28=0,$t029=0,$t130=0,$_src32=0,$t033=0,$t134=0,$_src36=0,$t037=0,$t138=0,$_src40=0,$t041=0,$t142=0,$_src44=0,$t045=0,$t146=0,$15=0,$46=0,$47=0,$69=0,$70=0,$189=0,$190=0,$339=0,$340=0,$362=0,$363=0,$482=0,$483=0,$616=0,$617=0,$732=0,$733=0,$868=0,$869=0,$989=0,$990=0,$1111=0,$1112=0,$1227=0,$1228=0,$1343=0,$1344=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1040|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+1024|0;$10=sp+1032|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=($5>>>0)/4|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=38;break}else if(($15|0)==2){label=74;break}else if(($15|0)==3){label=103;break}else if(($15|0)==4){label=132;break}else if(($15|0)==5){label=145;break}else if(($15|0)==6){label=158;break}else{label=171;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=8;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=7;break};case 5:HEAP32[$lut+($i<<2)>>2]=__Z7cvRoundd($val)|0;label=6;break;case 6:$i=$i+1|0;$val=$val+$6;label=4;break;case 7:$46=$9;$47=$size;HEAP32[$46>>2]=HEAP32[$47>>2];HEAP32[$46+4>>2]=HEAP32[$47+4>>2];__Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi($2,$3,$4,$5<<2,$9,$lut|0)|0;label=37;break;case 8:if(+Math_abs(+$6)<=128.0){label=9;break}else{label=23;break};case 9:if(+Math_abs(+$7)<=32767.99998474121){label=10;break}else{label=23;break};case 10:$iscale=__Z7cvRoundd($6*32768.0)|0;$ishift=__Z7cvRoundd($7*32768.0)|0;$_src=$2;$3=$3>>>0|0;label=11;break;case 11:$69=$size+4|0;$70=HEAP32[$69>>2]|0;HEAP32[$69>>2]=$70-1;if(($70|0)!=0){label=12;break}else{label=22;break};case 12:$i=0;label=13;break;case 13:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=14;break}else{label=16;break};case 14:$t0=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+1)|0]|0)|0)+$ishift+16384>>15;HEAP32[$4+($i<<2)>>2]=$t0;HEAP32[$4+($i+1<<2)>>2]=$t1;$t0=(Math_imul($iscale,HEAPU8[$_src+($i+2)|0]|0)|0)+$ishift+16384>>15;$t1=(Math_imul($iscale,HEAPU8[$_src+($i+3)|0]|0)|0)+$ishift+16384>>15;HEAP32[$4+($i+2<<2)>>2]=$t0;HEAP32[$4+($i+3<<2)>>2]=$t1;label=15;break;case 15:$i=$i+4|0;label=13;break;case 16:label=17;break;case 17:if(($i|0)<(HEAP32[$size>>2]|0)){label=18;break}else{label=20;break};case 18:HEAP32[$4+($i<<2)>>2]=(Math_imul($iscale,HEAPU8[$_src+$i|0]|0)|0)+$ishift+16384>>15;label=19;break;case 19:$i=$i+1|0;label=17;break;case 20:label=21;break;case 21:$_src=$_src+$3|0;$4=$4+($5<<2)|0;label=11;break;case 22:label=36;break;case 23:$_src2=$2;$3=$3>>>0|0;label=24;break;case 24:$189=$size+4|0;$190=HEAP32[$189>>2]|0;HEAP32[$189>>2]=$190-1;if(($190|0)!=0){label=25;break}else{label=35;break};case 25:$i=0;label=26;break;case 26:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=27;break}else{label=29;break};case 27:$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+1)|0]|0)+$7)|0;HEAP32[$4+($i<<2)>>2]=$t03;HEAP32[$4+($i+1<<2)>>2]=$t14;$t03=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+2)|0]|0)+$7)|0;$t14=__Z7cvRoundd($6*+(HEAPU8[$_src2+($i+3)|0]|0)+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t03;HEAP32[$4+($i+3<<2)>>2]=$t14;label=28;break;case 28:$i=$i+4|0;label=26;break;case 29:label=30;break;case 30:if(($i|0)<(HEAP32[$size>>2]|0)){label=31;break}else{label=33;break};case 31:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+(HEAPU8[$_src2+$i|0]|0)+$7)|0;label=32;break;case 32:$i=$i+1|0;label=30;break;case 33:label=34;break;case 34:$_src2=$_src2+$3|0;$4=$4+($5<<2)|0;label=24;break;case 35:label=36;break;case 36:label=37;break;case 37:label=172;break;case 38:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=39;break}else{label=44;break};case 39:$i=0;label=40;break;case 40:if(($i|0)<256){label=41;break}else{label=43;break};case 41:HEAP32[$lut+($i<<2)>>2]=__Z7cvRoundd(+(($i&255)<<24>>24|0)*$6+$7)|0;label=42;break;case 42:$i=$i+1|0;label=40;break;case 43:$339=$10;$340=$size;HEAP32[$339>>2]=HEAP32[$340>>2];HEAP32[$339+4>>2]=HEAP32[$340+4>>2];__Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi($2,$3,$4,$5<<2,$10,$lut|0)|0;label=73;break;case 44:if(+Math_abs(+$6)<=128.0){label=45;break}else{label=59;break};case 45:if(+Math_abs(+$7)<=32767.99998474121){label=46;break}else{label=59;break};case 46:$iscale7=__Z7cvRoundd($6*32768.0)|0;$ishift8=__Z7cvRoundd($7*32768.0)|0;$_src9=$2;$3=$3>>>0|0;label=47;break;case 47:$362=$size+4|0;$363=HEAP32[$362>>2]|0;HEAP32[$362>>2]=$363-1;if(($363|0)!=0){label=48;break}else{label=58;break};case 48:$i=0;label=49;break;case 49:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=50;break}else{label=52;break};case 50:$t010=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+1)|0]|0)|0)+$ishift8+16384>>15;HEAP32[$4+($i<<2)>>2]=$t010;HEAP32[$4+($i+1<<2)>>2]=$t111;$t010=(Math_imul($iscale7,HEAP8[$_src9+($i+2)|0]|0)|0)+$ishift8+16384>>15;$t111=(Math_imul($iscale7,HEAP8[$_src9+($i+3)|0]|0)|0)+$ishift8+16384>>15;HEAP32[$4+($i+2<<2)>>2]=$t010;HEAP32[$4+($i+3<<2)>>2]=$t111;label=51;break;case 51:$i=$i+4|0;label=49;break;case 52:label=53;break;case 53:if(($i|0)<(HEAP32[$size>>2]|0)){label=54;break}else{label=56;break};case 54:HEAP32[$4+($i<<2)>>2]=(Math_imul($iscale7,HEAP8[$_src9+$i|0]|0)|0)+$ishift8+16384>>15;label=55;break;case 55:$i=$i+1|0;label=53;break;case 56:label=57;break;case 57:$_src9=$_src9+$3|0;$4=$4+($5<<2)|0;label=47;break;case 58:label=72;break;case 59:$_src13=$2;$3=$3>>>0|0;label=60;break;case 60:$482=$size+4|0;$483=HEAP32[$482>>2]|0;HEAP32[$482>>2]=$483-1;if(($483|0)!=0){label=61;break}else{label=71;break};case 61:$i=0;label=62;break;case 62:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=63;break}else{label=65;break};case 63:$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+1)|0]|0)+$7)|0;HEAP32[$4+($i<<2)>>2]=$t014;HEAP32[$4+($i+1<<2)>>2]=$t115;$t014=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+2)|0]|0)+$7)|0;$t115=__Z7cvRoundd($6*+(HEAP8[$_src13+($i+3)|0]|0)+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t014;HEAP32[$4+($i+3<<2)>>2]=$t115;label=64;break;case 64:$i=$i+4|0;label=62;break;case 65:label=66;break;case 66:if(($i|0)<(HEAP32[$size>>2]|0)){label=67;break}else{label=69;break};case 67:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+(HEAP8[$_src13+$i|0]|0)+$7)|0;label=68;break;case 68:$i=$i+1|0;label=66;break;case 69:label=70;break;case 70:$_src13=$_src13+$3|0;$4=$4+($5<<2)|0;label=60;break;case 71:label=72;break;case 72:label=73;break;case 73:label=172;break;case 74:if(+Math_abs(+$6)<=1.0){label=75;break}else{label=89;break};case 75:if(+Math_abs(+$7)<2.220446049250313e-16){label=76;break}else{label=89;break};case 76:$iscale17=__Z7cvRoundd($6*32768.0)|0;$_src18=$2;$3=($3>>>0)/2|0;label=77;break;case 77:$616=$size+4|0;$617=HEAP32[$616>>2]|0;HEAP32[$616>>2]=$617-1;if(($617|0)!=0){label=78;break}else{label=88;break};case 78:$i=0;label=79;break;case 79:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=80;break}else{label=82;break};case 80:$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+1<<1)>>1]|0)|0)+16384>>15;HEAP32[$4+($i<<2)>>2]=$t019;HEAP32[$4+($i+1<<2)>>2]=$t120;$t019=(Math_imul($iscale17,HEAPU16[$_src18+($i+2<<1)>>1]|0)|0)+16384>>15;$t120=(Math_imul($iscale17,HEAPU16[$_src18+($i+3<<1)>>1]|0)|0)+16384>>15;HEAP32[$4+($i+2<<2)>>2]=$t019;HEAP32[$4+($i+3<<2)>>2]=$t120;label=81;break;case 81:$i=$i+4|0;label=79;break;case 82:label=83;break;case 83:if(($i|0)<(HEAP32[$size>>2]|0)){label=84;break}else{label=86;break};case 84:HEAP32[$4+($i<<2)>>2]=(Math_imul($iscale17,HEAPU16[$_src18+($i<<1)>>1]|0)|0)+16384>>15;label=85;break;case 85:$i=$i+1|0;label=83;break;case 86:label=87;break;case 87:$_src18=$_src18+($3<<1)|0;$4=$4+($5<<2)|0;label=77;break;case 88:label=102;break;case 89:$_src22=$2;$3=($3>>>0)/2|0;label=90;break;case 90:$732=$size+4|0;$733=HEAP32[$732>>2]|0;HEAP32[$732>>2]=$733-1;if(($733|0)!=0){label=91;break}else{label=101;break};case 91:$i=0;label=92;break;case 92:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=93;break}else{label=95;break};case 93:$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+1<<1)>>1]|0)+$7)|0;HEAP32[$4+($i<<2)>>2]=$t023;HEAP32[$4+($i+1<<2)>>2]=$t124;$t023=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+2<<1)>>1]|0)+$7)|0;$t124=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i+3<<1)>>1]|0)+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t023;HEAP32[$4+($i+3<<2)>>2]=$t124;label=94;break;case 94:$i=$i+4|0;label=92;break;case 95:label=96;break;case 96:if(($i|0)<(HEAP32[$size>>2]|0)){label=97;break}else{label=99;break};case 97:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+(HEAPU16[$_src22+($i<<1)>>1]|0)+$7)|0;label=98;break;case 98:$i=$i+1|0;label=96;break;case 99:label=100;break;case 100:$_src22=$_src22+($3<<1)|0;$4=$4+($5<<2)|0;label=90;break;case 101:label=102;break;case 102:label=172;break;case 103:if(+Math_abs(+$6)<=1.0){label=104;break}else{label=118;break};case 104:if(+Math_abs(+$7)<=32767.99998474121){label=105;break}else{label=118;break};case 105:$iscale26=__Z7cvRoundd($6*32768.0)|0;$ishift27=__Z7cvRoundd($7*32768.0)|0;$_src28=$2;$3=($3>>>0)/2|0;label=106;break;case 106:$868=$size+4|0;$869=HEAP32[$868>>2]|0;HEAP32[$868>>2]=$869-1;if(($869|0)!=0){label=107;break}else{label=117;break};case 107:$i=0;label=108;break;case 108:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=109;break}else{label=111;break};case 109:$t029=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+1<<1)>>1]|0)|0)+$ishift27+16384>>15;HEAP32[$4+($i<<2)>>2]=$t029;HEAP32[$4+($i+1<<2)>>2]=$t130;$t029=(Math_imul($iscale26,HEAP16[$_src28+($i+2<<1)>>1]|0)|0)+$ishift27+16384>>15;$t130=(Math_imul($iscale26,HEAP16[$_src28+($i+3<<1)>>1]|0)|0)+$ishift27+16384>>15;HEAP32[$4+($i+2<<2)>>2]=$t029;HEAP32[$4+($i+3<<2)>>2]=$t130;label=110;break;case 110:$i=$i+4|0;label=108;break;case 111:label=112;break;case 112:if(($i|0)<(HEAP32[$size>>2]|0)){label=113;break}else{label=115;break};case 113:HEAP32[$4+($i<<2)>>2]=(Math_imul($iscale26,HEAP16[$_src28+($i<<1)>>1]|0)|0)+$ishift27+16384>>15;label=114;break;case 114:$i=$i+1|0;label=112;break;case 115:label=116;break;case 116:$_src28=$_src28+($3<<1)|0;$4=$4+($5<<2)|0;label=106;break;case 117:label=131;break;case 118:$_src32=$2;$3=($3>>>0)/2|0;label=119;break;case 119:$989=$size+4|0;$990=HEAP32[$989>>2]|0;HEAP32[$989>>2]=$990-1;if(($990|0)!=0){label=120;break}else{label=130;break};case 120:$i=0;label=121;break;case 121:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=122;break}else{label=124;break};case 122:$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+1<<1)>>1]|0)+$7)|0;HEAP32[$4+($i<<2)>>2]=$t033;HEAP32[$4+($i+1<<2)>>2]=$t134;$t033=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+2<<1)>>1]|0)+$7)|0;$t134=__Z7cvRoundd($6*+(HEAP16[$_src32+($i+3<<1)>>1]|0)+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t033;HEAP32[$4+($i+3<<2)>>2]=$t134;label=123;break;case 123:$i=$i+4|0;label=121;break;case 124:label=125;break;case 125:if(($i|0)<(HEAP32[$size>>2]|0)){label=126;break}else{label=128;break};case 126:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+(HEAP16[$_src32+($i<<1)>>1]|0)+$7)|0;label=127;break;case 127:$i=$i+1|0;label=125;break;case 128:label=129;break;case 129:$_src32=$_src32+($3<<1)|0;$4=$4+($5<<2)|0;label=119;break;case 130:label=131;break;case 131:label=172;break;case 132:$_src36=$2;$3=($3>>>0)/4|0;label=133;break;case 133:$1111=$size+4|0;$1112=HEAP32[$1111>>2]|0;HEAP32[$1111>>2]=$1112-1;if(($1112|0)!=0){label=134;break}else{label=144;break};case 134:$i=0;label=135;break;case 135:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=136;break}else{label=138;break};case 136:$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+1<<2)>>2]|0)+$7)|0;HEAP32[$4+($i<<2)>>2]=$t037;HEAP32[$4+($i+1<<2)>>2]=$t138;$t037=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+2<<2)>>2]|0)+$7)|0;$t138=__Z7cvRoundd($6*+(HEAP32[$_src36+($i+3<<2)>>2]|0)+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t037;HEAP32[$4+($i+3<<2)>>2]=$t138;label=137;break;case 137:$i=$i+4|0;label=135;break;case 138:label=139;break;case 139:if(($i|0)<(HEAP32[$size>>2]|0)){label=140;break}else{label=142;break};case 140:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+(HEAP32[$_src36+($i<<2)>>2]|0)+$7)|0;label=141;break;case 141:$i=$i+1|0;label=139;break;case 142:label=143;break;case 143:$_src36=$_src36+($3<<2)|0;$4=$4+($5<<2)|0;label=133;break;case 144:label=172;break;case 145:$_src40=$2;$3=($3>>>0)/4|0;label=146;break;case 146:$1227=$size+4|0;$1228=HEAP32[$1227>>2]|0;HEAP32[$1227>>2]=$1228-1;if(($1228|0)!=0){label=147;break}else{label=157;break};case 147:$i=0;label=148;break;case 148:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=149;break}else{label=151;break};case 149:$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+1<<2)>>2]+$7)|0;HEAP32[$4+($i<<2)>>2]=$t041;HEAP32[$4+($i+1<<2)>>2]=$t142;$t041=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+2<<2)>>2]+$7)|0;$t142=__Z7cvRoundd($6*+HEAPF32[$_src40+($i+3<<2)>>2]+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t041;HEAP32[$4+($i+3<<2)>>2]=$t142;label=150;break;case 150:$i=$i+4|0;label=148;break;case 151:label=152;break;case 152:if(($i|0)<(HEAP32[$size>>2]|0)){label=153;break}else{label=155;break};case 153:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+HEAPF32[$_src40+($i<<2)>>2]+$7)|0;label=154;break;case 154:$i=$i+1|0;label=152;break;case 155:label=156;break;case 156:$_src40=$_src40+($3<<2)|0;$4=$4+($5<<2)|0;label=146;break;case 157:label=172;break;case 158:$_src44=$2;$3=($3>>>0)/8|0;label=159;break;case 159:$1343=$size+4|0;$1344=HEAP32[$1343>>2]|0;HEAP32[$1343>>2]=$1344-1;if(($1344|0)!=0){label=160;break}else{label=170;break};case 160:$i=0;label=161;break;case 161:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=162;break}else{label=164;break};case 162:$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+1<<3)>>3]+$7)|0;HEAP32[$4+($i<<2)>>2]=$t045;HEAP32[$4+($i+1<<2)>>2]=$t146;$t045=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+2<<3)>>3]+$7)|0;$t146=__Z7cvRoundd($6*+HEAPF64[$_src44+($i+3<<3)>>3]+$7)|0;HEAP32[$4+($i+2<<2)>>2]=$t045;HEAP32[$4+($i+3<<2)>>2]=$t146;label=163;break;case 163:$i=$i+4|0;label=161;break;case 164:label=165;break;case 165:if(($i|0)<(HEAP32[$size>>2]|0)){label=166;break}else{label=168;break};case 166:HEAP32[$4+($i<<2)>>2]=__Z7cvRoundd($6*+HEAPF64[$_src44+($i<<3)>>3]+$7)|0;label=167;break;case 167:$i=$i+1|0;label=165;break;case 168:label=169;break;case 169:$_src44=$_src44+($3<<3)|0;$4=$4+($5<<2)|0;label=159;break;case 170:label=172;break;case 171:$1=-12;label=173;break;case 172:$1=0;label=173;break;case 173:STACKTOP=sp;return $1|0}return 0}function __ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$9=0,$_src=0,$t0=0.0,$t1=0.0,$10=0,$_src2=0,$t03=0.0,$t14=0.0,$_src6=0,$t07=0.0,$t18=0.0,$_src10=0,$t011=0.0,$t112=0.0,$_src14=0,$t015=0.0,$t116=0.0,$_src18=0,$t019=0.0,$t120=0.0,$_src22=0,$t023=0.0,$t124=0.0,$15=0,$45=0,$46=0,$54=0,$55=0,$202=0,$203=0,$211=0,$212=0,$333=0,$334=0,$454=0,$455=0,$575=0,$576=0,$691=0,$692=0,$807=0,$808=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1040|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+1024|0;$10=sp+1032|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=($5>>>0)/4|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=22;break}else if(($15|0)==2){label=42;break}else if(($15|0)==3){label=55;break}else if(($15|0)==4){label=68;break}else if(($15|0)==5){label=81;break}else if(($15|0)==6){label=94;break}else{label=107;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=8;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=7;break};case 5:HEAPF32[$lut+($i<<2)>>2]=$val;label=6;break;case 6:$i=$i+1|0;$val=$val+$6;label=4;break;case 7:$45=$9;$46=$size;HEAP32[$45>>2]=HEAP32[$46>>2];HEAP32[$45+4>>2]=HEAP32[$46+4>>2];__Z26icvLUT_Transform8u_32f_C1RPKhiPfi6CvSizePKf($2,$3,$4,$5<<2,$9,$lut|0)|0;label=21;break;case 8:$_src=$2;$3=$3>>>0|0;label=9;break;case 9:$54=$size+4|0;$55=HEAP32[$54>>2]|0;HEAP32[$54>>2]=$55-1;if(($55|0)!=0){label=10;break}else{label=20;break};case 10:$i=0;label=11;break;case 11:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=12;break}else{label=14;break};case 12:$t0=$6*+(HEAPU8[$_src+$i|0]|0)+$7;$t1=$6*+(HEAPU8[$_src+($i+1)|0]|0)+$7;HEAPF32[$4+($i<<2)>>2]=$t0;HEAPF32[$4+($i+1<<2)>>2]=$t1;$t0=$6*+(HEAPU8[$_src+($i+2)|0]|0)+$7;$t1=$6*+(HEAPU8[$_src+($i+3)|0]|0)+$7;HEAPF32[$4+($i+2<<2)>>2]=$t0;HEAPF32[$4+($i+3<<2)>>2]=$t1;label=13;break;case 13:$i=$i+4|0;label=11;break;case 14:label=15;break;case 15:if(($i|0)<(HEAP32[$size>>2]|0)){label=16;break}else{label=18;break};case 16:HEAPF32[$4+($i<<2)>>2]=$6*+(HEAPU8[$_src+$i|0]|0)+$7;label=17;break;case 17:$i=$i+1|0;label=15;break;case 18:label=19;break;case 19:$_src=$_src+$3|0;$4=$4+($5<<2)|0;label=9;break;case 20:label=21;break;case 21:label=108;break;case 22:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=23;break}else{label=28;break};case 23:$i=0;label=24;break;case 24:if(($i|0)<256){label=25;break}else{label=27;break};case 25:HEAPF32[$lut+($i<<2)>>2]=+(($i&255)<<24>>24|0)*$6+$7;label=26;break;case 26:$i=$i+1|0;label=24;break;case 27:$202=$10;$203=$size;HEAP32[$202>>2]=HEAP32[$203>>2];HEAP32[$202+4>>2]=HEAP32[$203+4>>2];__Z26icvLUT_Transform8u_32f_C1RPKhiPfi6CvSizePKf($2,$3,$4,$5<<2,$10,$lut|0)|0;label=41;break;case 28:$_src2=$2;$3=$3>>>0|0;label=29;break;case 29:$211=$size+4|0;$212=HEAP32[$211>>2]|0;HEAP32[$211>>2]=$212-1;if(($212|0)!=0){label=30;break}else{label=40;break};case 30:$i=0;label=31;break;case 31:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=32;break}else{label=34;break};case 32:$t03=$6*+(HEAP8[$_src2+$i|0]|0)+$7;$t14=$6*+(HEAP8[$_src2+($i+1)|0]|0)+$7;HEAPF32[$4+($i<<2)>>2]=$t03;HEAPF32[$4+($i+1<<2)>>2]=$t14;$t03=$6*+(HEAP8[$_src2+($i+2)|0]|0)+$7;$t14=$6*+(HEAP8[$_src2+($i+3)|0]|0)+$7;HEAPF32[$4+($i+2<<2)>>2]=$t03;HEAPF32[$4+($i+3<<2)>>2]=$t14;label=33;break;case 33:$i=$i+4|0;label=31;break;case 34:label=35;break;case 35:if(($i|0)<(HEAP32[$size>>2]|0)){label=36;break}else{label=38;break};case 36:HEAPF32[$4+($i<<2)>>2]=$6*+(HEAP8[$_src2+$i|0]|0)+$7;label=37;break;case 37:$i=$i+1|0;label=35;break;case 38:label=39;break;case 39:$_src2=$_src2+$3|0;$4=$4+($5<<2)|0;label=29;break;case 40:label=41;break;case 41:label=108;break;case 42:$_src6=$2;$3=($3>>>0)/2|0;label=43;break;case 43:$333=$size+4|0;$334=HEAP32[$333>>2]|0;HEAP32[$333>>2]=$334-1;if(($334|0)!=0){label=44;break}else{label=54;break};case 44:$i=0;label=45;break;case 45:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=46;break}else{label=48;break};case 46:$t07=$6*+(HEAPU16[$_src6+($i<<1)>>1]|0)+$7;$t18=$6*+(HEAPU16[$_src6+($i+1<<1)>>1]|0)+$7;HEAPF32[$4+($i<<2)>>2]=$t07;HEAPF32[$4+($i+1<<2)>>2]=$t18;$t07=$6*+(HEAPU16[$_src6+($i+2<<1)>>1]|0)+$7;$t18=$6*+(HEAPU16[$_src6+($i+3<<1)>>1]|0)+$7;HEAPF32[$4+($i+2<<2)>>2]=$t07;HEAPF32[$4+($i+3<<2)>>2]=$t18;label=47;break;case 47:$i=$i+4|0;label=45;break;case 48:label=49;break;case 49:if(($i|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=52;break};case 50:HEAPF32[$4+($i<<2)>>2]=$6*+(HEAPU16[$_src6+($i<<1)>>1]|0)+$7;label=51;break;case 51:$i=$i+1|0;label=49;break;case 52:label=53;break;case 53:$_src6=$_src6+($3<<1)|0;$4=$4+($5<<2)|0;label=43;break;case 54:label=108;break;case 55:$_src10=$2;$3=($3>>>0)/2|0;label=56;break;case 56:$454=$size+4|0;$455=HEAP32[$454>>2]|0;HEAP32[$454>>2]=$455-1;if(($455|0)!=0){label=57;break}else{label=67;break};case 57:$i=0;label=58;break;case 58:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=59;break}else{label=61;break};case 59:$t011=$6*+(HEAP16[$_src10+($i<<1)>>1]|0)+$7;$t112=$6*+(HEAP16[$_src10+($i+1<<1)>>1]|0)+$7;HEAPF32[$4+($i<<2)>>2]=$t011;HEAPF32[$4+($i+1<<2)>>2]=$t112;$t011=$6*+(HEAP16[$_src10+($i+2<<1)>>1]|0)+$7;$t112=$6*+(HEAP16[$_src10+($i+3<<1)>>1]|0)+$7;HEAPF32[$4+($i+2<<2)>>2]=$t011;HEAPF32[$4+($i+3<<2)>>2]=$t112;label=60;break;case 60:$i=$i+4|0;label=58;break;case 61:label=62;break;case 62:if(($i|0)<(HEAP32[$size>>2]|0)){label=63;break}else{label=65;break};case 63:HEAPF32[$4+($i<<2)>>2]=$6*+(HEAP16[$_src10+($i<<1)>>1]|0)+$7;label=64;break;case 64:$i=$i+1|0;label=62;break;case 65:label=66;break;case 66:$_src10=$_src10+($3<<1)|0;$4=$4+($5<<2)|0;label=56;break;case 67:label=108;break;case 68:$_src14=$2;$3=($3>>>0)/4|0;label=69;break;case 69:$575=$size+4|0;$576=HEAP32[$575>>2]|0;HEAP32[$575>>2]=$576-1;if(($576|0)!=0){label=70;break}else{label=80;break};case 70:$i=0;label=71;break;case 71:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=72;break}else{label=74;break};case 72:$t015=$6*+(HEAP32[$_src14+($i<<2)>>2]|0)+$7;$t116=$6*+(HEAP32[$_src14+($i+1<<2)>>2]|0)+$7;HEAPF32[$4+($i<<2)>>2]=$t015;HEAPF32[$4+($i+1<<2)>>2]=$t116;$t015=$6*+(HEAP32[$_src14+($i+2<<2)>>2]|0)+$7;$t116=$6*+(HEAP32[$_src14+($i+3<<2)>>2]|0)+$7;HEAPF32[$4+($i+2<<2)>>2]=$t015;HEAPF32[$4+($i+3<<2)>>2]=$t116;label=73;break;case 73:$i=$i+4|0;label=71;break;case 74:label=75;break;case 75:if(($i|0)<(HEAP32[$size>>2]|0)){label=76;break}else{label=78;break};case 76:HEAPF32[$4+($i<<2)>>2]=$6*+(HEAP32[$_src14+($i<<2)>>2]|0)+$7;label=77;break;case 77:$i=$i+1|0;label=75;break;case 78:label=79;break;case 79:$_src14=$_src14+($3<<2)|0;$4=$4+($5<<2)|0;label=69;break;case 80:label=108;break;case 81:$_src18=$2;$3=($3>>>0)/4|0;label=82;break;case 82:$691=$size+4|0;$692=HEAP32[$691>>2]|0;HEAP32[$691>>2]=$692-1;if(($692|0)!=0){label=83;break}else{label=93;break};case 83:$i=0;label=84;break;case 84:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=85;break}else{label=87;break};case 85:$t019=$6*+HEAPF32[$_src18+($i<<2)>>2]+$7;$t120=$6*+HEAPF32[$_src18+($i+1<<2)>>2]+$7;HEAPF32[$4+($i<<2)>>2]=$t019;HEAPF32[$4+($i+1<<2)>>2]=$t120;$t019=$6*+HEAPF32[$_src18+($i+2<<2)>>2]+$7;$t120=$6*+HEAPF32[$_src18+($i+3<<2)>>2]+$7;HEAPF32[$4+($i+2<<2)>>2]=$t019;HEAPF32[$4+($i+3<<2)>>2]=$t120;label=86;break;case 86:$i=$i+4|0;label=84;break;case 87:label=88;break;case 88:if(($i|0)<(HEAP32[$size>>2]|0)){label=89;break}else{label=91;break};case 89:HEAPF32[$4+($i<<2)>>2]=$6*+HEAPF32[$_src18+($i<<2)>>2]+$7;label=90;break;case 90:$i=$i+1|0;label=88;break;case 91:label=92;break;case 92:$_src18=$_src18+($3<<2)|0;$4=$4+($5<<2)|0;label=82;break;case 93:label=108;break;case 94:$_src22=$2;$3=($3>>>0)/8|0;label=95;break;case 95:$807=$size+4|0;$808=HEAP32[$807>>2]|0;HEAP32[$807>>2]=$808-1;if(($808|0)!=0){label=96;break}else{label=106;break};case 96:$i=0;label=97;break;case 97:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=98;break}else{label=100;break};case 98:$t023=$6*+HEAPF64[$_src22+($i<<3)>>3]+$7;$t124=$6*+HEAPF64[$_src22+($i+1<<3)>>3]+$7;HEAPF32[$4+($i<<2)>>2]=$t023;HEAPF32[$4+($i+1<<2)>>2]=$t124;$t023=$6*+HEAPF64[$_src22+($i+2<<3)>>3]+$7;$t124=$6*+HEAPF64[$_src22+($i+3<<3)>>3]+$7;HEAPF32[$4+($i+2<<2)>>2]=$t023;HEAPF32[$4+($i+3<<2)>>2]=$t124;label=99;break;case 99:$i=$i+4|0;label=97;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=104;break};case 102:HEAPF32[$4+($i<<2)>>2]=$6*+HEAPF64[$_src22+($i<<3)>>3]+$7;label=103;break;case 103:$i=$i+1|0;label=101;break;case 104:label=105;break;case 105:$_src22=$_src22+($3<<3)|0;$4=$4+($5<<2)|0;label=95;break;case 106:label=108;break;case 107:$1=-12;label=109;break;case 108:$1=0;label=109;break;case 109:STACKTOP=sp;return $1|0}return 0}function __ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi($src,$srcstep,$dst,$dststep,$size,$scale,$shift,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$scale=+$scale;$shift=+$shift;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$6=0.0,$7=0.0,$i=0,$lut=0,$val=0.0,$9=0,$_src=0,$t0=0.0,$t1=0.0,$10=0,$_src2=0,$t03=0.0,$t14=0.0,$_src6=0,$t07=0.0,$t18=0.0,$_src10=0,$t011=0.0,$t112=0.0,$_src14=0,$t015=0.0,$t116=0.0,$_src18=0,$t019=0.0,$t120=0.0,$_src22=0,$t023=0.0,$t124=0.0,$15=0,$44=0,$45=0,$53=0,$54=0,$195=0,$196=0,$204=0,$205=0,$321=0,$322=0,$437=0,$438=0,$553=0,$554=0,$664=0,$665=0,$775=0,$776=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+2064|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$lut=sp|0;$9=sp+2048|0;$10=sp+2056|0;$2=$src;$3=$srcstep;$4=$dst;$5=$dststep;$6=$scale;$7=$shift;$5=($5>>>0)/8|0;$15=$param&7;if(($15|0)==0){label=2;break}else if(($15|0)==1){label=22;break}else if(($15|0)==2){label=42;break}else if(($15|0)==3){label=55;break}else if(($15|0)==4){label=68;break}else if(($15|0)==5){label=81;break}else if(($15|0)==6){label=94;break}else{label=107;break};case 2:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=3;break}else{label=8;break};case 3:$val=$7;$i=0;label=4;break;case 4:if(($i|0)<256){label=5;break}else{label=7;break};case 5:HEAPF64[$lut+($i<<3)>>3]=$val;label=6;break;case 6:$i=$i+1|0;$val=$val+$6;label=4;break;case 7:$44=$9;$45=$size;HEAP32[$44>>2]=HEAP32[$45>>2];HEAP32[$44+4>>2]=HEAP32[$45+4>>2];__Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd($2,$3,$4,$5<<3,$9,$lut|0)|0;label=21;break;case 8:$_src=$2;$3=$3>>>0|0;label=9;break;case 9:$53=$size+4|0;$54=HEAP32[$53>>2]|0;HEAP32[$53>>2]=$54-1;if(($54|0)!=0){label=10;break}else{label=20;break};case 10:$i=0;label=11;break;case 11:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=12;break}else{label=14;break};case 12:$t0=$6*+(HEAPU8[$_src+$i|0]|0)+$7;$t1=$6*+(HEAPU8[$_src+($i+1)|0]|0)+$7;HEAPF64[$4+($i<<3)>>3]=$t0;HEAPF64[$4+($i+1<<3)>>3]=$t1;$t0=$6*+(HEAPU8[$_src+($i+2)|0]|0)+$7;$t1=$6*+(HEAPU8[$_src+($i+3)|0]|0)+$7;HEAPF64[$4+($i+2<<3)>>3]=$t0;HEAPF64[$4+($i+3<<3)>>3]=$t1;label=13;break;case 13:$i=$i+4|0;label=11;break;case 14:label=15;break;case 15:if(($i|0)<(HEAP32[$size>>2]|0)){label=16;break}else{label=18;break};case 16:HEAPF64[$4+($i<<3)>>3]=$6*+(HEAPU8[$_src+$i|0]|0)+$7;label=17;break;case 17:$i=$i+1|0;label=15;break;case 18:label=19;break;case 19:$_src=$_src+$3|0;$4=$4+($5<<3)|0;label=9;break;case 20:label=21;break;case 21:label=108;break;case 22:if((Math_imul(HEAP32[$size>>2]|0,HEAP32[$size+4>>2]|0)|0)>=256){label=23;break}else{label=28;break};case 23:$i=0;label=24;break;case 24:if(($i|0)<256){label=25;break}else{label=27;break};case 25:HEAPF64[$lut+($i<<3)>>3]=+(($i&255)<<24>>24|0)*$6+$7;label=26;break;case 26:$i=$i+1|0;label=24;break;case 27:$195=$10;$196=$size;HEAP32[$195>>2]=HEAP32[$196>>2];HEAP32[$195+4>>2]=HEAP32[$196+4>>2];__Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd($2,$3,$4,$5<<3,$10,$lut|0)|0;label=41;break;case 28:$_src2=$2;$3=$3>>>0|0;label=29;break;case 29:$204=$size+4|0;$205=HEAP32[$204>>2]|0;HEAP32[$204>>2]=$205-1;if(($205|0)!=0){label=30;break}else{label=40;break};case 30:$i=0;label=31;break;case 31:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=32;break}else{label=34;break};case 32:$t03=$6*+(HEAP8[$_src2+$i|0]|0)+$7;$t14=$6*+(HEAP8[$_src2+($i+1)|0]|0)+$7;HEAPF64[$4+($i<<3)>>3]=$t03;HEAPF64[$4+($i+1<<3)>>3]=$t14;$t03=$6*+(HEAP8[$_src2+($i+2)|0]|0)+$7;$t14=$6*+(HEAP8[$_src2+($i+3)|0]|0)+$7;HEAPF64[$4+($i+2<<3)>>3]=$t03;HEAPF64[$4+($i+3<<3)>>3]=$t14;label=33;break;case 33:$i=$i+4|0;label=31;break;case 34:label=35;break;case 35:if(($i|0)<(HEAP32[$size>>2]|0)){label=36;break}else{label=38;break};case 36:HEAPF64[$4+($i<<3)>>3]=$6*+(HEAP8[$_src2+$i|0]|0)+$7;label=37;break;case 37:$i=$i+1|0;label=35;break;case 38:label=39;break;case 39:$_src2=$_src2+$3|0;$4=$4+($5<<3)|0;label=29;break;case 40:label=41;break;case 41:label=108;break;case 42:$_src6=$2;$3=($3>>>0)/2|0;label=43;break;case 43:$321=$size+4|0;$322=HEAP32[$321>>2]|0;HEAP32[$321>>2]=$322-1;if(($322|0)!=0){label=44;break}else{label=54;break};case 44:$i=0;label=45;break;case 45:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=46;break}else{label=48;break};case 46:$t07=$6*+(HEAPU16[$_src6+($i<<1)>>1]|0)+$7;$t18=$6*+(HEAPU16[$_src6+($i+1<<1)>>1]|0)+$7;HEAPF64[$4+($i<<3)>>3]=$t07;HEAPF64[$4+($i+1<<3)>>3]=$t18;$t07=$6*+(HEAPU16[$_src6+($i+2<<1)>>1]|0)+$7;$t18=$6*+(HEAPU16[$_src6+($i+3<<1)>>1]|0)+$7;HEAPF64[$4+($i+2<<3)>>3]=$t07;HEAPF64[$4+($i+3<<3)>>3]=$t18;label=47;break;case 47:$i=$i+4|0;label=45;break;case 48:label=49;break;case 49:if(($i|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=52;break};case 50:HEAPF64[$4+($i<<3)>>3]=$6*+(HEAPU16[$_src6+($i<<1)>>1]|0)+$7;label=51;break;case 51:$i=$i+1|0;label=49;break;case 52:label=53;break;case 53:$_src6=$_src6+($3<<1)|0;$4=$4+($5<<3)|0;label=43;break;case 54:label=108;break;case 55:$_src10=$2;$3=($3>>>0)/2|0;label=56;break;case 56:$437=$size+4|0;$438=HEAP32[$437>>2]|0;HEAP32[$437>>2]=$438-1;if(($438|0)!=0){label=57;break}else{label=67;break};case 57:$i=0;label=58;break;case 58:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=59;break}else{label=61;break};case 59:$t011=$6*+(HEAP16[$_src10+($i<<1)>>1]|0)+$7;$t112=$6*+(HEAP16[$_src10+($i+1<<1)>>1]|0)+$7;HEAPF64[$4+($i<<3)>>3]=$t011;HEAPF64[$4+($i+1<<3)>>3]=$t112;$t011=$6*+(HEAP16[$_src10+($i+2<<1)>>1]|0)+$7;$t112=$6*+(HEAP16[$_src10+($i+3<<1)>>1]|0)+$7;HEAPF64[$4+($i+2<<3)>>3]=$t011;HEAPF64[$4+($i+3<<3)>>3]=$t112;label=60;break;case 60:$i=$i+4|0;label=58;break;case 61:label=62;break;case 62:if(($i|0)<(HEAP32[$size>>2]|0)){label=63;break}else{label=65;break};case 63:HEAPF64[$4+($i<<3)>>3]=$6*+(HEAP16[$_src10+($i<<1)>>1]|0)+$7;label=64;break;case 64:$i=$i+1|0;label=62;break;case 65:label=66;break;case 66:$_src10=$_src10+($3<<1)|0;$4=$4+($5<<3)|0;label=56;break;case 67:label=108;break;case 68:$_src14=$2;$3=($3>>>0)/4|0;label=69;break;case 69:$553=$size+4|0;$554=HEAP32[$553>>2]|0;HEAP32[$553>>2]=$554-1;if(($554|0)!=0){label=70;break}else{label=80;break};case 70:$i=0;label=71;break;case 71:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=72;break}else{label=74;break};case 72:$t015=$6*+(HEAP32[$_src14+($i<<2)>>2]|0)+$7;$t116=$6*+(HEAP32[$_src14+($i+1<<2)>>2]|0)+$7;HEAPF64[$4+($i<<3)>>3]=$t015;HEAPF64[$4+($i+1<<3)>>3]=$t116;$t015=$6*+(HEAP32[$_src14+($i+2<<2)>>2]|0)+$7;$t116=$6*+(HEAP32[$_src14+($i+3<<2)>>2]|0)+$7;HEAPF64[$4+($i+2<<3)>>3]=$t015;HEAPF64[$4+($i+3<<3)>>3]=$t116;label=73;break;case 73:$i=$i+4|0;label=71;break;case 74:label=75;break;case 75:if(($i|0)<(HEAP32[$size>>2]|0)){label=76;break}else{label=78;break};case 76:HEAPF64[$4+($i<<3)>>3]=$6*+(HEAP32[$_src14+($i<<2)>>2]|0)+$7;label=77;break;case 77:$i=$i+1|0;label=75;break;case 78:label=79;break;case 79:$_src14=$_src14+($3<<2)|0;$4=$4+($5<<3)|0;label=69;break;case 80:label=108;break;case 81:$_src18=$2;$3=($3>>>0)/4|0;label=82;break;case 82:$664=$size+4|0;$665=HEAP32[$664>>2]|0;HEAP32[$664>>2]=$665-1;if(($665|0)!=0){label=83;break}else{label=93;break};case 83:$i=0;label=84;break;case 84:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=85;break}else{label=87;break};case 85:$t019=$6*+HEAPF32[$_src18+($i<<2)>>2]+$7;$t120=$6*+HEAPF32[$_src18+($i+1<<2)>>2]+$7;HEAPF64[$4+($i<<3)>>3]=$t019;HEAPF64[$4+($i+1<<3)>>3]=$t120;$t019=$6*+HEAPF32[$_src18+($i+2<<2)>>2]+$7;$t120=$6*+HEAPF32[$_src18+($i+3<<2)>>2]+$7;HEAPF64[$4+($i+2<<3)>>3]=$t019;HEAPF64[$4+($i+3<<3)>>3]=$t120;label=86;break;case 86:$i=$i+4|0;label=84;break;case 87:label=88;break;case 88:if(($i|0)<(HEAP32[$size>>2]|0)){label=89;break}else{label=91;break};case 89:HEAPF64[$4+($i<<3)>>3]=$6*+HEAPF32[$_src18+($i<<2)>>2]+$7;label=90;break;case 90:$i=$i+1|0;label=88;break;case 91:label=92;break;case 92:$_src18=$_src18+($3<<2)|0;$4=$4+($5<<3)|0;label=82;break;case 93:label=108;break;case 94:$_src22=$2;$3=($3>>>0)/8|0;label=95;break;case 95:$775=$size+4|0;$776=HEAP32[$775>>2]|0;HEAP32[$775>>2]=$776-1;if(($776|0)!=0){label=96;break}else{label=106;break};case 96:$i=0;label=97;break;case 97:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=98;break}else{label=100;break};case 98:$t023=$6*+HEAPF64[$_src22+($i<<3)>>3]+$7;$t124=$6*+HEAPF64[$_src22+($i+1<<3)>>3]+$7;HEAPF64[$4+($i<<3)>>3]=$t023;HEAPF64[$4+($i+1<<3)>>3]=$t124;$t023=$6*+HEAPF64[$_src22+($i+2<<3)>>3]+$7;$t124=$6*+HEAPF64[$_src22+($i+3<<3)>>3]+$7;HEAPF64[$4+($i+2<<3)>>3]=$t023;HEAPF64[$4+($i+3<<3)>>3]=$t124;label=99;break;case 99:$i=$i+4|0;label=97;break;case 100:label=101;break;case 101:if(($i|0)<(HEAP32[$size>>2]|0)){label=102;break}else{label=104;break};case 102:HEAPF64[$4+($i<<3)>>3]=$6*+HEAPF64[$_src22+($i<<3)>>3]+$7;label=103;break;case 103:$i=$i+1|0;label=101;break;case 104:label=105;break;case 105:$_src22=$_src22+($3<<3)|0;$4=$4+($5<<3)|0;label=95;break;case 106:label=108;break;case 107:$1=-12;label=109;break;case 108:$1=0;label=109;break;case 109:STACKTOP=sp;return $1|0}return 0}function __Z26icvLUT_Transform8u_32f_C1RPKhiPfi6CvSizePKf($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $6=0,$12=0,$13=0,$16=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$6=sp|0;$12=$6;$13=$size;HEAP32[$12>>2]=HEAP32[$13>>2];HEAP32[$12+4>>2]=HEAP32[$13+4>>2];$16=__Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi($src,$srcstep,$dst,$dststep,$6,$lut)|0;STACKTOP=sp;return $16|0}function __Z26icvLUT_Transform8u_16s_C1RPKhiPsi6CvSizePKs($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $6=0,$11=0,$12=0,$14=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$6=sp|0;$11=$6;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$14=__Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt($src,$srcstep,$dst,$dststep,$6,$lut)|0;STACKTOP=sp;return $14|0}function __Z25icvLUT_Transform8u_8s_C1RPKhiPci6CvSizePKc($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $6=0,$11=0,$12=0,$14=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$6=sp|0;$11=$6;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$14=__Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_($src,$srcstep,$dst,$dststep,$6,$lut)|0;STACKTOP=sp;return $14|0}function __ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0,$t1=0,$t01=0,$_src2=0,$i3=0,$t04=0,$t15=0,$t06=0,$_src7=0,$i8=0,$t09=0,$t110=0,$t011=0,$_src12=0,$i13=0,$t014=0,$t115=0,$t016=0,$_src17=0,$i18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$i23=0,$t024=0,$t125=0,$t026=0,$10=0,$16=0,$17=0,$49=0,$64=0,$92=0,$108=0,$139=0,$162=0,$163=0,$195=0,$210=0,$238=0,$254=0,$285=0,$308=0,$309=0,$341=0,$356=0,$384=0,$400=0,$431=0,$454=0,$455=0,$485=0,$500=0,$526=0,$542=0,$572=0,$595=0,$596=0,$630=0,$645=0,$675=0,$691=0,$723=0,$746=0,$747=0,$779=0,$794=0,$822=0,$838=0,$869=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=$4>>>0|0;$10=$param&7;if(($10|0)==1){label=2;break}else if(($10|0)==2){label=30;break}else if(($10|0)==3){label=58;break}else if(($10|0)==4){label=86;break}else if(($10|0)==5){label=114;break}else if(($10|0)==6){label=142;break}else{label=170;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=29;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=20;break};case 6:$t0=HEAP8[$_src+$i|0]|0;$t1=HEAP8[$_src+($i+1)|0]|0;if(($t0&-256|0)!=0){label=8;break}else{label=7;break};case 7:$49=$t0;label=9;break;case 8:$49=($t0|0)>0?255:0;label=9;break;case 9:HEAP8[$3+$i|0]=$49&255;if(($t1&-256|0)!=0){label=11;break}else{label=10;break};case 10:$64=$t1;label=12;break;case 11:$64=($t1|0)>0?255:0;label=12;break;case 12:HEAP8[$3+($i+1)|0]=$64&255;$t0=HEAP8[$_src+($i+2)|0]|0;$t1=HEAP8[$_src+($i+3)|0]|0;if(($t0&-256|0)!=0){label=14;break}else{label=13;break};case 13:$92=$t0;label=15;break;case 14:$92=($t0|0)>0?255:0;label=15;break;case 15:HEAP8[$3+($i+2)|0]=$92&255;if(($t1&-256|0)!=0){label=17;break}else{label=16;break};case 16:$108=$t1;label=18;break;case 17:$108=($t1|0)>0?255:0;label=18;break;case 18:HEAP8[$3+($i+3)|0]=$108&255;label=19;break;case 19:$i=$i+4|0;label=5;break;case 20:label=21;break;case 21:if(($i|0)<(HEAP32[$size>>2]|0)){label=22;break}else{label=27;break};case 22:$t01=HEAP8[$_src+$i|0]|0;if(($t01&-256|0)!=0){label=24;break}else{label=23;break};case 23:$139=$t01;label=25;break;case 24:$139=($t01|0)>0?255:0;label=25;break;case 25:HEAP8[$3+$i|0]=$139&255;label=26;break;case 26:$i=$i+1|0;label=21;break;case 27:label=28;break;case 28:$_src=$_src+$2|0;$3=$3+$4|0;label=3;break;case 29:label=170;break;case 30:$_src2=$1;$2=($2>>>0)/2|0;label=31;break;case 31:$162=$size+4|0;$163=HEAP32[$162>>2]|0;HEAP32[$162>>2]=$163-1;if(($163|0)!=0){label=32;break}else{label=57;break};case 32:$i3=0;label=33;break;case 33:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=34;break}else{label=48;break};case 34:$t04=HEAPU16[$_src2+($i3<<1)>>1]|0;$t15=HEAPU16[$_src2+($i3+1<<1)>>1]|0;if(($t04&-256|0)!=0){label=36;break}else{label=35;break};case 35:$195=$t04;label=37;break;case 36:$195=($t04|0)>0?255:0;label=37;break;case 37:HEAP8[$3+$i3|0]=$195&255;if(($t15&-256|0)!=0){label=39;break}else{label=38;break};case 38:$210=$t15;label=40;break;case 39:$210=($t15|0)>0?255:0;label=40;break;case 40:HEAP8[$3+($i3+1)|0]=$210&255;$t04=HEAPU16[$_src2+($i3+2<<1)>>1]|0;$t15=HEAPU16[$_src2+($i3+3<<1)>>1]|0;if(($t04&-256|0)!=0){label=42;break}else{label=41;break};case 41:$238=$t04;label=43;break;case 42:$238=($t04|0)>0?255:0;label=43;break;case 43:HEAP8[$3+($i3+2)|0]=$238&255;if(($t15&-256|0)!=0){label=45;break}else{label=44;break};case 44:$254=$t15;label=46;break;case 45:$254=($t15|0)>0?255:0;label=46;break;case 46:HEAP8[$3+($i3+3)|0]=$254&255;label=47;break;case 47:$i3=$i3+4|0;label=33;break;case 48:label=49;break;case 49:if(($i3|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=55;break};case 50:$t06=HEAPU16[$_src2+($i3<<1)>>1]|0;if(($t06&-256|0)!=0){label=52;break}else{label=51;break};case 51:$285=$t06;label=53;break;case 52:$285=($t06|0)>0?255:0;label=53;break;case 53:HEAP8[$3+$i3|0]=$285&255;label=54;break;case 54:$i3=$i3+1|0;label=49;break;case 55:label=56;break;case 56:$_src2=$_src2+($2<<1)|0;$3=$3+$4|0;label=31;break;case 57:label=170;break;case 58:$_src7=$1;$2=($2>>>0)/2|0;label=59;break;case 59:$308=$size+4|0;$309=HEAP32[$308>>2]|0;HEAP32[$308>>2]=$309-1;if(($309|0)!=0){label=60;break}else{label=85;break};case 60:$i8=0;label=61;break;case 61:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=62;break}else{label=76;break};case 62:$t09=HEAP16[$_src7+($i8<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+1<<1)>>1]|0;if(($t09&-256|0)!=0){label=64;break}else{label=63;break};case 63:$341=$t09;label=65;break;case 64:$341=($t09|0)>0?255:0;label=65;break;case 65:HEAP8[$3+$i8|0]=$341&255;if(($t110&-256|0)!=0){label=67;break}else{label=66;break};case 66:$356=$t110;label=68;break;case 67:$356=($t110|0)>0?255:0;label=68;break;case 68:HEAP8[$3+($i8+1)|0]=$356&255;$t09=HEAP16[$_src7+($i8+2<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+3<<1)>>1]|0;if(($t09&-256|0)!=0){label=70;break}else{label=69;break};case 69:$384=$t09;label=71;break;case 70:$384=($t09|0)>0?255:0;label=71;break;case 71:HEAP8[$3+($i8+2)|0]=$384&255;if(($t110&-256|0)!=0){label=73;break}else{label=72;break};case 72:$400=$t110;label=74;break;case 73:$400=($t110|0)>0?255:0;label=74;break;case 74:HEAP8[$3+($i8+3)|0]=$400&255;label=75;break;case 75:$i8=$i8+4|0;label=61;break;case 76:label=77;break;case 77:if(($i8|0)<(HEAP32[$size>>2]|0)){label=78;break}else{label=83;break};case 78:$t011=HEAP16[$_src7+($i8<<1)>>1]|0;if(($t011&-256|0)!=0){label=80;break}else{label=79;break};case 79:$431=$t011;label=81;break;case 80:$431=($t011|0)>0?255:0;label=81;break;case 81:HEAP8[$3+$i8|0]=$431&255;label=82;break;case 82:$i8=$i8+1|0;label=77;break;case 83:label=84;break;case 84:$_src7=$_src7+($2<<1)|0;$3=$3+$4|0;label=59;break;case 85:label=170;break;case 86:$_src12=$1;$2=($2>>>0)/4|0;label=87;break;case 87:$454=$size+4|0;$455=HEAP32[$454>>2]|0;HEAP32[$454>>2]=$455-1;if(($455|0)!=0){label=88;break}else{label=113;break};case 88:$i13=0;label=89;break;case 89:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=90;break}else{label=104;break};case 90:$t014=HEAP32[$_src12+($i13<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+1<<2)>>2]|0;if(($t014&-256|0)!=0){label=92;break}else{label=91;break};case 91:$485=$t014;label=93;break;case 92:$485=($t014|0)>0?255:0;label=93;break;case 93:HEAP8[$3+$i13|0]=$485&255;if(($t115&-256|0)!=0){label=95;break}else{label=94;break};case 94:$500=$t115;label=96;break;case 95:$500=($t115|0)>0?255:0;label=96;break;case 96:HEAP8[$3+($i13+1)|0]=$500&255;$t014=HEAP32[$_src12+($i13+2<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+3<<2)>>2]|0;if(($t014&-256|0)!=0){label=98;break}else{label=97;break};case 97:$526=$t014;label=99;break;case 98:$526=($t014|0)>0?255:0;label=99;break;case 99:HEAP8[$3+($i13+2)|0]=$526&255;if(($t115&-256|0)!=0){label=101;break}else{label=100;break};case 100:$542=$t115;label=102;break;case 101:$542=($t115|0)>0?255:0;label=102;break;case 102:HEAP8[$3+($i13+3)|0]=$542&255;label=103;break;case 103:$i13=$i13+4|0;label=89;break;case 104:label=105;break;case 105:if(($i13|0)<(HEAP32[$size>>2]|0)){label=106;break}else{label=111;break};case 106:$t016=HEAP32[$_src12+($i13<<2)>>2]|0;if(($t016&-256|0)!=0){label=108;break}else{label=107;break};case 107:$572=$t016;label=109;break;case 108:$572=($t016|0)>0?255:0;label=109;break;case 109:HEAP8[$3+$i13|0]=$572&255;label=110;break;case 110:$i13=$i13+1|0;label=105;break;case 111:label=112;break;case 112:$_src12=$_src12+($2<<2)|0;$3=$3+$4|0;label=87;break;case 113:label=170;break;case 114:$_src17=$1;$2=($2>>>0)/4|0;label=115;break;case 115:$595=$size+4|0;$596=HEAP32[$595>>2]|0;HEAP32[$595>>2]=$596-1;if(($596|0)!=0){label=116;break}else{label=141;break};case 116:$i18=0;label=117;break;case 117:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=118;break}else{label=132;break};case 118:$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+1<<2)>>2])|0;if(($t019&-256|0)!=0){label=120;break}else{label=119;break};case 119:$630=$t019;label=121;break;case 120:$630=($t019|0)>0?255:0;label=121;break;case 121:HEAP8[$3+$i18|0]=$630&255;if(($t120&-256|0)!=0){label=123;break}else{label=122;break};case 122:$645=$t120;label=124;break;case 123:$645=($t120|0)>0?255:0;label=124;break;case 124:HEAP8[$3+($i18+1)|0]=$645&255;$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18+2<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+3<<2)>>2])|0;if(($t019&-256|0)!=0){label=126;break}else{label=125;break};case 125:$675=$t019;label=127;break;case 126:$675=($t019|0)>0?255:0;label=127;break;case 127:HEAP8[$3+($i18+2)|0]=$675&255;if(($t120&-256|0)!=0){label=129;break}else{label=128;break};case 128:$691=$t120;label=130;break;case 129:$691=($t120|0)>0?255:0;label=130;break;case 130:HEAP8[$3+($i18+3)|0]=$691&255;label=131;break;case 131:$i18=$i18+4|0;label=117;break;case 132:label=133;break;case 133:if(($i18|0)<(HEAP32[$size>>2]|0)){label=134;break}else{label=139;break};case 134:$t021=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;if(($t021&-256|0)!=0){label=136;break}else{label=135;break};case 135:$723=$t021;label=137;break;case 136:$723=($t021|0)>0?255:0;label=137;break;case 137:HEAP8[$3+$i18|0]=$723&255;label=138;break;case 138:$i18=$i18+1|0;label=133;break;case 139:label=140;break;case 140:$_src17=$_src17+($2<<2)|0;$3=$3+$4|0;label=115;break;case 141:label=170;break;case 142:$_src22=$1;$2=($2>>>0)/8|0;label=143;break;case 143:$746=$size+4|0;$747=HEAP32[$746>>2]|0;HEAP32[$746>>2]=$747-1;if(($747|0)!=0){label=144;break}else{label=169;break};case 144:$i23=0;label=145;break;case 145:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+1<<3)>>3])|0;if(($t024&-256|0)!=0){label=148;break}else{label=147;break};case 147:$779=$t024;label=149;break;case 148:$779=($t024|0)>0?255:0;label=149;break;case 149:HEAP8[$3+$i23|0]=$779&255;if(($t125&-256|0)!=0){label=151;break}else{label=150;break};case 150:$794=$t125;label=152;break;case 151:$794=($t125|0)>0?255:0;label=152;break;case 152:HEAP8[$3+($i23+1)|0]=$794&255;$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23+2<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+3<<3)>>3])|0;if(($t024&-256|0)!=0){label=154;break}else{label=153;break};case 153:$822=$t024;label=155;break;case 154:$822=($t024|0)>0?255:0;label=155;break;case 155:HEAP8[$3+($i23+2)|0]=$822&255;if(($t125&-256|0)!=0){label=157;break}else{label=156;break};case 156:$838=$t125;label=158;break;case 157:$838=($t125|0)>0?255:0;label=158;break;case 158:HEAP8[$3+($i23+3)|0]=$838&255;label=159;break;case 159:$i23=$i23+4|0;label=145;break;case 160:label=161;break;case 161:if(($i23|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t026=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;if(($t026&-256|0)!=0){label=164;break}else{label=163;break};case 163:$869=$t026;label=165;break;case 164:$869=($t026|0)>0?255:0;label=165;break;case 165:HEAP8[$3+$i23|0]=$869&255;label=166;break;case 166:$i23=$i23+1|0;label=161;break;case 167:label=168;break;case 168:$_src22=$_src22+($2<<3)|0;$3=$3+$4|0;label=143;break;case 169:label=170;break;case 170:STACKTOP=sp;return 0}return 0}function __ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0,$t1=0,$t01=0,$_src2=0,$i3=0,$t04=0,$t15=0,$t06=0,$_src7=0,$i8=0,$t09=0,$t110=0,$t011=0,$_src12=0,$i13=0,$t014=0,$t115=0,$t016=0,$_src17=0,$i18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$i23=0,$t024=0,$t125=0,$t026=0,$10=0,$16=0,$17=0,$50=0,$66=0,$95=0,$112=0,$144=0,$167=0,$168=0,$201=0,$217=0,$246=0,$263=0,$295=0,$318=0,$319=0,$352=0,$368=0,$397=0,$414=0,$446=0,$469=0,$470=0,$501=0,$517=0,$544=0,$561=0,$592=0,$615=0,$616=0,$651=0,$667=0,$698=0,$715=0,$748=0,$771=0,$772=0,$805=0,$821=0,$850=0,$867=0,$899=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=$4>>>0|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==2){label=30;break}else if(($10|0)==3){label=58;break}else if(($10|0)==4){label=86;break}else if(($10|0)==5){label=114;break}else if(($10|0)==6){label=142;break}else{label=170;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=29;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=20;break};case 6:$t0=HEAPU8[$_src+$i|0]|0;$t1=HEAPU8[$_src+($i+1)|0]|0;if(($t0+128&-256|0)!=0){label=8;break}else{label=7;break};case 7:$50=$t0;label=9;break;case 8:$50=($t0|0)>0?127:-128;label=9;break;case 9:HEAP8[$3+$i|0]=$50&255;if(($t1+128&-256|0)!=0){label=11;break}else{label=10;break};case 10:$66=$t1;label=12;break;case 11:$66=($t1|0)>0?127:-128;label=12;break;case 12:HEAP8[$3+($i+1)|0]=$66&255;$t0=HEAPU8[$_src+($i+2)|0]|0;$t1=HEAPU8[$_src+($i+3)|0]|0;if(($t0+128&-256|0)!=0){label=14;break}else{label=13;break};case 13:$95=$t0;label=15;break;case 14:$95=($t0|0)>0?127:-128;label=15;break;case 15:HEAP8[$3+($i+2)|0]=$95&255;if(($t1+128&-256|0)!=0){label=17;break}else{label=16;break};case 16:$112=$t1;label=18;break;case 17:$112=($t1|0)>0?127:-128;label=18;break;case 18:HEAP8[$3+($i+3)|0]=$112&255;label=19;break;case 19:$i=$i+4|0;label=5;break;case 20:label=21;break;case 21:if(($i|0)<(HEAP32[$size>>2]|0)){label=22;break}else{label=27;break};case 22:$t01=HEAPU8[$_src+$i|0]|0;if(($t01+128&-256|0)!=0){label=24;break}else{label=23;break};case 23:$144=$t01;label=25;break;case 24:$144=($t01|0)>0?127:-128;label=25;break;case 25:HEAP8[$3+$i|0]=$144&255;label=26;break;case 26:$i=$i+1|0;label=21;break;case 27:label=28;break;case 28:$_src=$_src+$2|0;$3=$3+$4|0;label=3;break;case 29:label=170;break;case 30:$_src2=$1;$2=($2>>>0)/2|0;label=31;break;case 31:$167=$size+4|0;$168=HEAP32[$167>>2]|0;HEAP32[$167>>2]=$168-1;if(($168|0)!=0){label=32;break}else{label=57;break};case 32:$i3=0;label=33;break;case 33:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=34;break}else{label=48;break};case 34:$t04=HEAPU16[$_src2+($i3<<1)>>1]|0;$t15=HEAPU16[$_src2+($i3+1<<1)>>1]|0;if(($t04+128&-256|0)!=0){label=36;break}else{label=35;break};case 35:$201=$t04;label=37;break;case 36:$201=($t04|0)>0?127:-128;label=37;break;case 37:HEAP8[$3+$i3|0]=$201&255;if(($t15+128&-256|0)!=0){label=39;break}else{label=38;break};case 38:$217=$t15;label=40;break;case 39:$217=($t15|0)>0?127:-128;label=40;break;case 40:HEAP8[$3+($i3+1)|0]=$217&255;$t04=HEAPU16[$_src2+($i3+2<<1)>>1]|0;$t15=HEAPU16[$_src2+($i3+3<<1)>>1]|0;if(($t04+128&-256|0)!=0){label=42;break}else{label=41;break};case 41:$246=$t04;label=43;break;case 42:$246=($t04|0)>0?127:-128;label=43;break;case 43:HEAP8[$3+($i3+2)|0]=$246&255;if(($t15+128&-256|0)!=0){label=45;break}else{label=44;break};case 44:$263=$t15;label=46;break;case 45:$263=($t15|0)>0?127:-128;label=46;break;case 46:HEAP8[$3+($i3+3)|0]=$263&255;label=47;break;case 47:$i3=$i3+4|0;label=33;break;case 48:label=49;break;case 49:if(($i3|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=55;break};case 50:$t06=HEAPU16[$_src2+($i3<<1)>>1]|0;if(($t06+128&-256|0)!=0){label=52;break}else{label=51;break};case 51:$295=$t06;label=53;break;case 52:$295=($t06|0)>0?127:-128;label=53;break;case 53:HEAP8[$3+$i3|0]=$295&255;label=54;break;case 54:$i3=$i3+1|0;label=49;break;case 55:label=56;break;case 56:$_src2=$_src2+($2<<1)|0;$3=$3+$4|0;label=31;break;case 57:label=170;break;case 58:$_src7=$1;$2=($2>>>0)/2|0;label=59;break;case 59:$318=$size+4|0;$319=HEAP32[$318>>2]|0;HEAP32[$318>>2]=$319-1;if(($319|0)!=0){label=60;break}else{label=85;break};case 60:$i8=0;label=61;break;case 61:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=62;break}else{label=76;break};case 62:$t09=HEAP16[$_src7+($i8<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+1<<1)>>1]|0;if(($t09+128&-256|0)!=0){label=64;break}else{label=63;break};case 63:$352=$t09;label=65;break;case 64:$352=($t09|0)>0?127:-128;label=65;break;case 65:HEAP8[$3+$i8|0]=$352&255;if(($t110+128&-256|0)!=0){label=67;break}else{label=66;break};case 66:$368=$t110;label=68;break;case 67:$368=($t110|0)>0?127:-128;label=68;break;case 68:HEAP8[$3+($i8+1)|0]=$368&255;$t09=HEAP16[$_src7+($i8+2<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+3<<1)>>1]|0;if(($t09+128&-256|0)!=0){label=70;break}else{label=69;break};case 69:$397=$t09;label=71;break;case 70:$397=($t09|0)>0?127:-128;label=71;break;case 71:HEAP8[$3+($i8+2)|0]=$397&255;if(($t110+128&-256|0)!=0){label=73;break}else{label=72;break};case 72:$414=$t110;label=74;break;case 73:$414=($t110|0)>0?127:-128;label=74;break;case 74:HEAP8[$3+($i8+3)|0]=$414&255;label=75;break;case 75:$i8=$i8+4|0;label=61;break;case 76:label=77;break;case 77:if(($i8|0)<(HEAP32[$size>>2]|0)){label=78;break}else{label=83;break};case 78:$t011=HEAP16[$_src7+($i8<<1)>>1]|0;if(($t011+128&-256|0)!=0){label=80;break}else{label=79;break};case 79:$446=$t011;label=81;break;case 80:$446=($t011|0)>0?127:-128;label=81;break;case 81:HEAP8[$3+$i8|0]=$446&255;label=82;break;case 82:$i8=$i8+1|0;label=77;break;case 83:label=84;break;case 84:$_src7=$_src7+($2<<1)|0;$3=$3+$4|0;label=59;break;case 85:label=170;break;case 86:$_src12=$1;$2=($2>>>0)/4|0;label=87;break;case 87:$469=$size+4|0;$470=HEAP32[$469>>2]|0;HEAP32[$469>>2]=$470-1;if(($470|0)!=0){label=88;break}else{label=113;break};case 88:$i13=0;label=89;break;case 89:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=90;break}else{label=104;break};case 90:$t014=HEAP32[$_src12+($i13<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+1<<2)>>2]|0;if(($t014+128&-256|0)!=0){label=92;break}else{label=91;break};case 91:$501=$t014;label=93;break;case 92:$501=($t014|0)>0?127:-128;label=93;break;case 93:HEAP8[$3+$i13|0]=$501&255;if(($t115+128&-256|0)!=0){label=95;break}else{label=94;break};case 94:$517=$t115;label=96;break;case 95:$517=($t115|0)>0?127:-128;label=96;break;case 96:HEAP8[$3+($i13+1)|0]=$517&255;$t014=HEAP32[$_src12+($i13+2<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+3<<2)>>2]|0;if(($t014+128&-256|0)!=0){label=98;break}else{label=97;break};case 97:$544=$t014;label=99;break;case 98:$544=($t014|0)>0?127:-128;label=99;break;case 99:HEAP8[$3+($i13+2)|0]=$544&255;if(($t115+128&-256|0)!=0){label=101;break}else{label=100;break};case 100:$561=$t115;label=102;break;case 101:$561=($t115|0)>0?127:-128;label=102;break;case 102:HEAP8[$3+($i13+3)|0]=$561&255;label=103;break;case 103:$i13=$i13+4|0;label=89;break;case 104:label=105;break;case 105:if(($i13|0)<(HEAP32[$size>>2]|0)){label=106;break}else{label=111;break};case 106:$t016=HEAP32[$_src12+($i13<<2)>>2]|0;if(($t016+128&-256|0)!=0){label=108;break}else{label=107;break};case 107:$592=$t016;label=109;break;case 108:$592=($t016|0)>0?127:-128;label=109;break;case 109:HEAP8[$3+$i13|0]=$592&255;label=110;break;case 110:$i13=$i13+1|0;label=105;break;case 111:label=112;break;case 112:$_src12=$_src12+($2<<2)|0;$3=$3+$4|0;label=87;break;case 113:label=170;break;case 114:$_src17=$1;$2=($2>>>0)/4|0;label=115;break;case 115:$615=$size+4|0;$616=HEAP32[$615>>2]|0;HEAP32[$615>>2]=$616-1;if(($616|0)!=0){label=116;break}else{label=141;break};case 116:$i18=0;label=117;break;case 117:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=118;break}else{label=132;break};case 118:$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+1<<2)>>2])|0;if(($t019+128&-256|0)!=0){label=120;break}else{label=119;break};case 119:$651=$t019;label=121;break;case 120:$651=($t019|0)>0?127:-128;label=121;break;case 121:HEAP8[$3+$i18|0]=$651&255;if(($t120+128&-256|0)!=0){label=123;break}else{label=122;break};case 122:$667=$t120;label=124;break;case 123:$667=($t120|0)>0?127:-128;label=124;break;case 124:HEAP8[$3+($i18+1)|0]=$667&255;$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18+2<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+3<<2)>>2])|0;if(($t019+128&-256|0)!=0){label=126;break}else{label=125;break};case 125:$698=$t019;label=127;break;case 126:$698=($t019|0)>0?127:-128;label=127;break;case 127:HEAP8[$3+($i18+2)|0]=$698&255;if(($t120+128&-256|0)!=0){label=129;break}else{label=128;break};case 128:$715=$t120;label=130;break;case 129:$715=($t120|0)>0?127:-128;label=130;break;case 130:HEAP8[$3+($i18+3)|0]=$715&255;label=131;break;case 131:$i18=$i18+4|0;label=117;break;case 132:label=133;break;case 133:if(($i18|0)<(HEAP32[$size>>2]|0)){label=134;break}else{label=139;break};case 134:$t021=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;if(($t021+128&-256|0)!=0){label=136;break}else{label=135;break};case 135:$748=$t021;label=137;break;case 136:$748=($t021|0)>0?127:-128;label=137;break;case 137:HEAP8[$3+$i18|0]=$748&255;label=138;break;case 138:$i18=$i18+1|0;label=133;break;case 139:label=140;break;case 140:$_src17=$_src17+($2<<2)|0;$3=$3+$4|0;label=115;break;case 141:label=170;break;case 142:$_src22=$1;$2=($2>>>0)/8|0;label=143;break;case 143:$771=$size+4|0;$772=HEAP32[$771>>2]|0;HEAP32[$771>>2]=$772-1;if(($772|0)!=0){label=144;break}else{label=169;break};case 144:$i23=0;label=145;break;case 145:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+1<<3)>>3])|0;if(($t024+128&-256|0)!=0){label=148;break}else{label=147;break};case 147:$805=$t024;label=149;break;case 148:$805=($t024|0)>0?127:-128;label=149;break;case 149:HEAP8[$3+$i23|0]=$805&255;if(($t125+128&-256|0)!=0){label=151;break}else{label=150;break};case 150:$821=$t125;label=152;break;case 151:$821=($t125|0)>0?127:-128;label=152;break;case 152:HEAP8[$3+($i23+1)|0]=$821&255;$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23+2<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+3<<3)>>3])|0;if(($t024+128&-256|0)!=0){label=154;break}else{label=153;break};case 153:$850=$t024;label=155;break;case 154:$850=($t024|0)>0?127:-128;label=155;break;case 155:HEAP8[$3+($i23+2)|0]=$850&255;if(($t125+128&-256|0)!=0){label=157;break}else{label=156;break};case 156:$867=$t125;label=158;break;case 157:$867=($t125|0)>0?127:-128;label=158;break;case 158:HEAP8[$3+($i23+3)|0]=$867&255;label=159;break;case 159:$i23=$i23+4|0;label=145;break;case 160:label=161;break;case 161:if(($i23|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t026=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;if(($t026+128&-256|0)!=0){label=164;break}else{label=163;break};case 163:$899=$t026;label=165;break;case 164:$899=($t026|0)>0?127:-128;label=165;break;case 165:HEAP8[$3+$i23|0]=$899&255;label=166;break;case 166:$i23=$i23+1|0;label=161;break;case 167:label=168;break;case 168:$_src22=$_src22+($2<<3)|0;$3=$3+$4|0;label=143;break;case 169:label=170;break;case 170:STACKTOP=sp;return 0}return 0}function __ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0,$t1=0,$t01=0,$_src2=0,$i3=0,$t04=0,$t15=0,$t06=0,$_src7=0,$i8=0,$t09=0,$t110=0,$t011=0,$_src12=0,$i13=0,$t014=0,$t115=0,$t016=0,$_src17=0,$i18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$i23=0,$t024=0,$t125=0,$t026=0,$10=0,$16=0,$17=0,$49=0,$64=0,$92=0,$108=0,$139=0,$161=0,$162=0,$194=0,$209=0,$237=0,$253=0,$284=0,$307=0,$308=0,$340=0,$355=0,$383=0,$399=0,$430=0,$453=0,$454=0,$484=0,$499=0,$525=0,$541=0,$571=0,$594=0,$595=0,$629=0,$644=0,$674=0,$690=0,$722=0,$745=0,$746=0,$778=0,$793=0,$821=0,$837=0,$868=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=($4>>>0)/2|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==1){label=30;break}else if(($10|0)==3){label=58;break}else if(($10|0)==4){label=86;break}else if(($10|0)==5){label=114;break}else if(($10|0)==6){label=142;break}else{label=170;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=29;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=20;break};case 6:$t0=HEAPU8[$_src+$i|0]|0;$t1=HEAPU8[$_src+($i+1)|0]|0;if(($t0&-65536|0)!=0){label=8;break}else{label=7;break};case 7:$49=$t0;label=9;break;case 8:$49=($t0|0)>0?65535:0;label=9;break;case 9:HEAP16[$3+($i<<1)>>1]=$49&65535;if(($t1&-65536|0)!=0){label=11;break}else{label=10;break};case 10:$64=$t1;label=12;break;case 11:$64=($t1|0)>0?65535:0;label=12;break;case 12:HEAP16[$3+($i+1<<1)>>1]=$64&65535;$t0=HEAPU8[$_src+($i+2)|0]|0;$t1=HEAPU8[$_src+($i+3)|0]|0;if(($t0&-65536|0)!=0){label=14;break}else{label=13;break};case 13:$92=$t0;label=15;break;case 14:$92=($t0|0)>0?65535:0;label=15;break;case 15:HEAP16[$3+($i+2<<1)>>1]=$92&65535;if(($t1&-65536|0)!=0){label=17;break}else{label=16;break};case 16:$108=$t1;label=18;break;case 17:$108=($t1|0)>0?65535:0;label=18;break;case 18:HEAP16[$3+($i+3<<1)>>1]=$108&65535;label=19;break;case 19:$i=$i+4|0;label=5;break;case 20:label=21;break;case 21:if(($i|0)<(HEAP32[$size>>2]|0)){label=22;break}else{label=27;break};case 22:$t01=HEAPU8[$_src+$i|0]|0;if(($t01&-65536|0)!=0){label=24;break}else{label=23;break};case 23:$139=$t01;label=25;break;case 24:$139=($t01|0)>0?65535:0;label=25;break;case 25:HEAP16[$3+($i<<1)>>1]=$139&65535;label=26;break;case 26:$i=$i+1|0;label=21;break;case 27:label=28;break;case 28:$_src=$_src+$2|0;$3=$3+($4<<1)|0;label=3;break;case 29:label=170;break;case 30:$_src2=$1;$2=$2>>>0|0;label=31;break;case 31:$161=$size+4|0;$162=HEAP32[$161>>2]|0;HEAP32[$161>>2]=$162-1;if(($162|0)!=0){label=32;break}else{label=57;break};case 32:$i3=0;label=33;break;case 33:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=34;break}else{label=48;break};case 34:$t04=HEAP8[$_src2+$i3|0]|0;$t15=HEAP8[$_src2+($i3+1)|0]|0;if(($t04&-65536|0)!=0){label=36;break}else{label=35;break};case 35:$194=$t04;label=37;break;case 36:$194=($t04|0)>0?65535:0;label=37;break;case 37:HEAP16[$3+($i3<<1)>>1]=$194&65535;if(($t15&-65536|0)!=0){label=39;break}else{label=38;break};case 38:$209=$t15;label=40;break;case 39:$209=($t15|0)>0?65535:0;label=40;break;case 40:HEAP16[$3+($i3+1<<1)>>1]=$209&65535;$t04=HEAP8[$_src2+($i3+2)|0]|0;$t15=HEAP8[$_src2+($i3+3)|0]|0;if(($t04&-65536|0)!=0){label=42;break}else{label=41;break};case 41:$237=$t04;label=43;break;case 42:$237=($t04|0)>0?65535:0;label=43;break;case 43:HEAP16[$3+($i3+2<<1)>>1]=$237&65535;if(($t15&-65536|0)!=0){label=45;break}else{label=44;break};case 44:$253=$t15;label=46;break;case 45:$253=($t15|0)>0?65535:0;label=46;break;case 46:HEAP16[$3+($i3+3<<1)>>1]=$253&65535;label=47;break;case 47:$i3=$i3+4|0;label=33;break;case 48:label=49;break;case 49:if(($i3|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=55;break};case 50:$t06=HEAP8[$_src2+$i3|0]|0;if(($t06&-65536|0)!=0){label=52;break}else{label=51;break};case 51:$284=$t06;label=53;break;case 52:$284=($t06|0)>0?65535:0;label=53;break;case 53:HEAP16[$3+($i3<<1)>>1]=$284&65535;label=54;break;case 54:$i3=$i3+1|0;label=49;break;case 55:label=56;break;case 56:$_src2=$_src2+$2|0;$3=$3+($4<<1)|0;label=31;break;case 57:label=170;break;case 58:$_src7=$1;$2=($2>>>0)/2|0;label=59;break;case 59:$307=$size+4|0;$308=HEAP32[$307>>2]|0;HEAP32[$307>>2]=$308-1;if(($308|0)!=0){label=60;break}else{label=85;break};case 60:$i8=0;label=61;break;case 61:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=62;break}else{label=76;break};case 62:$t09=HEAP16[$_src7+($i8<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+1<<1)>>1]|0;if(($t09&-65536|0)!=0){label=64;break}else{label=63;break};case 63:$340=$t09;label=65;break;case 64:$340=($t09|0)>0?65535:0;label=65;break;case 65:HEAP16[$3+($i8<<1)>>1]=$340&65535;if(($t110&-65536|0)!=0){label=67;break}else{label=66;break};case 66:$355=$t110;label=68;break;case 67:$355=($t110|0)>0?65535:0;label=68;break;case 68:HEAP16[$3+($i8+1<<1)>>1]=$355&65535;$t09=HEAP16[$_src7+($i8+2<<1)>>1]|0;$t110=HEAP16[$_src7+($i8+3<<1)>>1]|0;if(($t09&-65536|0)!=0){label=70;break}else{label=69;break};case 69:$383=$t09;label=71;break;case 70:$383=($t09|0)>0?65535:0;label=71;break;case 71:HEAP16[$3+($i8+2<<1)>>1]=$383&65535;if(($t110&-65536|0)!=0){label=73;break}else{label=72;break};case 72:$399=$t110;label=74;break;case 73:$399=($t110|0)>0?65535:0;label=74;break;case 74:HEAP16[$3+($i8+3<<1)>>1]=$399&65535;label=75;break;case 75:$i8=$i8+4|0;label=61;break;case 76:label=77;break;case 77:if(($i8|0)<(HEAP32[$size>>2]|0)){label=78;break}else{label=83;break};case 78:$t011=HEAP16[$_src7+($i8<<1)>>1]|0;if(($t011&-65536|0)!=0){label=80;break}else{label=79;break};case 79:$430=$t011;label=81;break;case 80:$430=($t011|0)>0?65535:0;label=81;break;case 81:HEAP16[$3+($i8<<1)>>1]=$430&65535;label=82;break;case 82:$i8=$i8+1|0;label=77;break;case 83:label=84;break;case 84:$_src7=$_src7+($2<<1)|0;$3=$3+($4<<1)|0;label=59;break;case 85:label=170;break;case 86:$_src12=$1;$2=($2>>>0)/4|0;label=87;break;case 87:$453=$size+4|0;$454=HEAP32[$453>>2]|0;HEAP32[$453>>2]=$454-1;if(($454|0)!=0){label=88;break}else{label=113;break};case 88:$i13=0;label=89;break;case 89:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=90;break}else{label=104;break};case 90:$t014=HEAP32[$_src12+($i13<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+1<<2)>>2]|0;if(($t014&-65536|0)!=0){label=92;break}else{label=91;break};case 91:$484=$t014;label=93;break;case 92:$484=($t014|0)>0?65535:0;label=93;break;case 93:HEAP16[$3+($i13<<1)>>1]=$484&65535;if(($t115&-65536|0)!=0){label=95;break}else{label=94;break};case 94:$499=$t115;label=96;break;case 95:$499=($t115|0)>0?65535:0;label=96;break;case 96:HEAP16[$3+($i13+1<<1)>>1]=$499&65535;$t014=HEAP32[$_src12+($i13+2<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+3<<2)>>2]|0;if(($t014&-65536|0)!=0){label=98;break}else{label=97;break};case 97:$525=$t014;label=99;break;case 98:$525=($t014|0)>0?65535:0;label=99;break;case 99:HEAP16[$3+($i13+2<<1)>>1]=$525&65535;if(($t115&-65536|0)!=0){label=101;break}else{label=100;break};case 100:$541=$t115;label=102;break;case 101:$541=($t115|0)>0?65535:0;label=102;break;case 102:HEAP16[$3+($i13+3<<1)>>1]=$541&65535;label=103;break;case 103:$i13=$i13+4|0;label=89;break;case 104:label=105;break;case 105:if(($i13|0)<(HEAP32[$size>>2]|0)){label=106;break}else{label=111;break};case 106:$t016=HEAP32[$_src12+($i13<<2)>>2]|0;if(($t016&-65536|0)!=0){label=108;break}else{label=107;break};case 107:$571=$t016;label=109;break;case 108:$571=($t016|0)>0?65535:0;label=109;break;case 109:HEAP16[$3+($i13<<1)>>1]=$571&65535;label=110;break;case 110:$i13=$i13+1|0;label=105;break;case 111:label=112;break;case 112:$_src12=$_src12+($2<<2)|0;$3=$3+($4<<1)|0;label=87;break;case 113:label=170;break;case 114:$_src17=$1;$2=($2>>>0)/4|0;label=115;break;case 115:$594=$size+4|0;$595=HEAP32[$594>>2]|0;HEAP32[$594>>2]=$595-1;if(($595|0)!=0){label=116;break}else{label=141;break};case 116:$i18=0;label=117;break;case 117:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=118;break}else{label=132;break};case 118:$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+1<<2)>>2])|0;if(($t019&-65536|0)!=0){label=120;break}else{label=119;break};case 119:$629=$t019;label=121;break;case 120:$629=($t019|0)>0?65535:0;label=121;break;case 121:HEAP16[$3+($i18<<1)>>1]=$629&65535;if(($t120&-65536|0)!=0){label=123;break}else{label=122;break};case 122:$644=$t120;label=124;break;case 123:$644=($t120|0)>0?65535:0;label=124;break;case 124:HEAP16[$3+($i18+1<<1)>>1]=$644&65535;$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18+2<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+3<<2)>>2])|0;if(($t019&-65536|0)!=0){label=126;break}else{label=125;break};case 125:$674=$t019;label=127;break;case 126:$674=($t019|0)>0?65535:0;label=127;break;case 127:HEAP16[$3+($i18+2<<1)>>1]=$674&65535;if(($t120&-65536|0)!=0){label=129;break}else{label=128;break};case 128:$690=$t120;label=130;break;case 129:$690=($t120|0)>0?65535:0;label=130;break;case 130:HEAP16[$3+($i18+3<<1)>>1]=$690&65535;label=131;break;case 131:$i18=$i18+4|0;label=117;break;case 132:label=133;break;case 133:if(($i18|0)<(HEAP32[$size>>2]|0)){label=134;break}else{label=139;break};case 134:$t021=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;if(($t021&-65536|0)!=0){label=136;break}else{label=135;break};case 135:$722=$t021;label=137;break;case 136:$722=($t021|0)>0?65535:0;label=137;break;case 137:HEAP16[$3+($i18<<1)>>1]=$722&65535;label=138;break;case 138:$i18=$i18+1|0;label=133;break;case 139:label=140;break;case 140:$_src17=$_src17+($2<<2)|0;$3=$3+($4<<1)|0;label=115;break;case 141:label=170;break;case 142:$_src22=$1;$2=($2>>>0)/8|0;label=143;break;case 143:$745=$size+4|0;$746=HEAP32[$745>>2]|0;HEAP32[$745>>2]=$746-1;if(($746|0)!=0){label=144;break}else{label=169;break};case 144:$i23=0;label=145;break;case 145:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+1<<3)>>3])|0;if(($t024&-65536|0)!=0){label=148;break}else{label=147;break};case 147:$778=$t024;label=149;break;case 148:$778=($t024|0)>0?65535:0;label=149;break;case 149:HEAP16[$3+($i23<<1)>>1]=$778&65535;if(($t125&-65536|0)!=0){label=151;break}else{label=150;break};case 150:$793=$t125;label=152;break;case 151:$793=($t125|0)>0?65535:0;label=152;break;case 152:HEAP16[$3+($i23+1<<1)>>1]=$793&65535;$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23+2<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+3<<3)>>3])|0;if(($t024&-65536|0)!=0){label=154;break}else{label=153;break};case 153:$821=$t024;label=155;break;case 154:$821=($t024|0)>0?65535:0;label=155;break;case 155:HEAP16[$3+($i23+2<<1)>>1]=$821&65535;if(($t125&-65536|0)!=0){label=157;break}else{label=156;break};case 156:$837=$t125;label=158;break;case 157:$837=($t125|0)>0?65535:0;label=158;break;case 158:HEAP16[$3+($i23+3<<1)>>1]=$837&65535;label=159;break;case 159:$i23=$i23+4|0;label=145;break;case 160:label=161;break;case 161:if(($i23|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t026=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;if(($t026&-65536|0)!=0){label=164;break}else{label=163;break};case 163:$868=$t026;label=165;break;case 164:$868=($t026|0)>0?65535:0;label=165;break;case 165:HEAP16[$3+($i23<<1)>>1]=$868&65535;label=166;break;case 166:$i23=$i23+1|0;label=161;break;case 167:label=168;break;case 168:$_src22=$_src22+($2<<3)|0;$3=$3+($4<<1)|0;label=143;break;case 169:label=170;break;case 170:STACKTOP=sp;return 0}return 0}function __ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0,$t1=0,$t01=0,$_src2=0,$i3=0,$t04=0,$t15=0,$t06=0,$_src7=0,$i8=0,$t09=0,$t110=0,$t011=0,$_src12=0,$i13=0,$t014=0,$t115=0,$t016=0,$_src17=0,$i18=0,$t019=0,$t120=0,$t021=0,$_src22=0,$i23=0,$t024=0,$t125=0,$t026=0,$10=0,$16=0,$17=0,$50=0,$66=0,$95=0,$112=0,$144=0,$166=0,$167=0,$200=0,$216=0,$245=0,$262=0,$294=0,$317=0,$318=0,$351=0,$367=0,$396=0,$413=0,$445=0,$468=0,$469=0,$500=0,$516=0,$543=0,$560=0,$591=0,$614=0,$615=0,$650=0,$666=0,$697=0,$714=0,$747=0,$770=0,$771=0,$804=0,$820=0,$849=0,$866=0,$898=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=($4>>>0)/2|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==1){label=30;break}else if(($10|0)==2){label=58;break}else if(($10|0)==4){label=86;break}else if(($10|0)==5){label=114;break}else if(($10|0)==6){label=142;break}else{label=170;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=29;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=20;break};case 6:$t0=HEAPU8[$_src+$i|0]|0;$t1=HEAPU8[$_src+($i+1)|0]|0;if(($t0+32768&-65536|0)!=0){label=8;break}else{label=7;break};case 7:$50=$t0;label=9;break;case 8:$50=($t0|0)>0?32767:-32768;label=9;break;case 9:HEAP16[$3+($i<<1)>>1]=$50&65535;if(($t1+32768&-65536|0)!=0){label=11;break}else{label=10;break};case 10:$66=$t1;label=12;break;case 11:$66=($t1|0)>0?32767:-32768;label=12;break;case 12:HEAP16[$3+($i+1<<1)>>1]=$66&65535;$t0=HEAPU8[$_src+($i+2)|0]|0;$t1=HEAPU8[$_src+($i+3)|0]|0;if(($t0+32768&-65536|0)!=0){label=14;break}else{label=13;break};case 13:$95=$t0;label=15;break;case 14:$95=($t0|0)>0?32767:-32768;label=15;break;case 15:HEAP16[$3+($i+2<<1)>>1]=$95&65535;if(($t1+32768&-65536|0)!=0){label=17;break}else{label=16;break};case 16:$112=$t1;label=18;break;case 17:$112=($t1|0)>0?32767:-32768;label=18;break;case 18:HEAP16[$3+($i+3<<1)>>1]=$112&65535;label=19;break;case 19:$i=$i+4|0;label=5;break;case 20:label=21;break;case 21:if(($i|0)<(HEAP32[$size>>2]|0)){label=22;break}else{label=27;break};case 22:$t01=HEAPU8[$_src+$i|0]|0;if(($t01+32768&-65536|0)!=0){label=24;break}else{label=23;break};case 23:$144=$t01;label=25;break;case 24:$144=($t01|0)>0?32767:-32768;label=25;break;case 25:HEAP16[$3+($i<<1)>>1]=$144&65535;label=26;break;case 26:$i=$i+1|0;label=21;break;case 27:label=28;break;case 28:$_src=$_src+$2|0;$3=$3+($4<<1)|0;label=3;break;case 29:label=170;break;case 30:$_src2=$1;$2=$2>>>0|0;label=31;break;case 31:$166=$size+4|0;$167=HEAP32[$166>>2]|0;HEAP32[$166>>2]=$167-1;if(($167|0)!=0){label=32;break}else{label=57;break};case 32:$i3=0;label=33;break;case 33:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=34;break}else{label=48;break};case 34:$t04=HEAP8[$_src2+$i3|0]|0;$t15=HEAP8[$_src2+($i3+1)|0]|0;if(($t04+32768&-65536|0)!=0){label=36;break}else{label=35;break};case 35:$200=$t04;label=37;break;case 36:$200=($t04|0)>0?32767:-32768;label=37;break;case 37:HEAP16[$3+($i3<<1)>>1]=$200&65535;if(($t15+32768&-65536|0)!=0){label=39;break}else{label=38;break};case 38:$216=$t15;label=40;break;case 39:$216=($t15|0)>0?32767:-32768;label=40;break;case 40:HEAP16[$3+($i3+1<<1)>>1]=$216&65535;$t04=HEAP8[$_src2+($i3+2)|0]|0;$t15=HEAP8[$_src2+($i3+3)|0]|0;if(($t04+32768&-65536|0)!=0){label=42;break}else{label=41;break};case 41:$245=$t04;label=43;break;case 42:$245=($t04|0)>0?32767:-32768;label=43;break;case 43:HEAP16[$3+($i3+2<<1)>>1]=$245&65535;if(($t15+32768&-65536|0)!=0){label=45;break}else{label=44;break};case 44:$262=$t15;label=46;break;case 45:$262=($t15|0)>0?32767:-32768;label=46;break;case 46:HEAP16[$3+($i3+3<<1)>>1]=$262&65535;label=47;break;case 47:$i3=$i3+4|0;label=33;break;case 48:label=49;break;case 49:if(($i3|0)<(HEAP32[$size>>2]|0)){label=50;break}else{label=55;break};case 50:$t06=HEAP8[$_src2+$i3|0]|0;if(($t06+32768&-65536|0)!=0){label=52;break}else{label=51;break};case 51:$294=$t06;label=53;break;case 52:$294=($t06|0)>0?32767:-32768;label=53;break;case 53:HEAP16[$3+($i3<<1)>>1]=$294&65535;label=54;break;case 54:$i3=$i3+1|0;label=49;break;case 55:label=56;break;case 56:$_src2=$_src2+$2|0;$3=$3+($4<<1)|0;label=31;break;case 57:label=170;break;case 58:$_src7=$1;$2=($2>>>0)/2|0;label=59;break;case 59:$317=$size+4|0;$318=HEAP32[$317>>2]|0;HEAP32[$317>>2]=$318-1;if(($318|0)!=0){label=60;break}else{label=85;break};case 60:$i8=0;label=61;break;case 61:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=62;break}else{label=76;break};case 62:$t09=HEAPU16[$_src7+($i8<<1)>>1]|0;$t110=HEAPU16[$_src7+($i8+1<<1)>>1]|0;if(($t09+32768&-65536|0)!=0){label=64;break}else{label=63;break};case 63:$351=$t09;label=65;break;case 64:$351=($t09|0)>0?32767:-32768;label=65;break;case 65:HEAP16[$3+($i8<<1)>>1]=$351&65535;if(($t110+32768&-65536|0)!=0){label=67;break}else{label=66;break};case 66:$367=$t110;label=68;break;case 67:$367=($t110|0)>0?32767:-32768;label=68;break;case 68:HEAP16[$3+($i8+1<<1)>>1]=$367&65535;$t09=HEAPU16[$_src7+($i8+2<<1)>>1]|0;$t110=HEAPU16[$_src7+($i8+3<<1)>>1]|0;if(($t09+32768&-65536|0)!=0){label=70;break}else{label=69;break};case 69:$396=$t09;label=71;break;case 70:$396=($t09|0)>0?32767:-32768;label=71;break;case 71:HEAP16[$3+($i8+2<<1)>>1]=$396&65535;if(($t110+32768&-65536|0)!=0){label=73;break}else{label=72;break};case 72:$413=$t110;label=74;break;case 73:$413=($t110|0)>0?32767:-32768;label=74;break;case 74:HEAP16[$3+($i8+3<<1)>>1]=$413&65535;label=75;break;case 75:$i8=$i8+4|0;label=61;break;case 76:label=77;break;case 77:if(($i8|0)<(HEAP32[$size>>2]|0)){label=78;break}else{label=83;break};case 78:$t011=HEAPU16[$_src7+($i8<<1)>>1]|0;if(($t011+32768&-65536|0)!=0){label=80;break}else{label=79;break};case 79:$445=$t011;label=81;break;case 80:$445=($t011|0)>0?32767:-32768;label=81;break;case 81:HEAP16[$3+($i8<<1)>>1]=$445&65535;label=82;break;case 82:$i8=$i8+1|0;label=77;break;case 83:label=84;break;case 84:$_src7=$_src7+($2<<1)|0;$3=$3+($4<<1)|0;label=59;break;case 85:label=170;break;case 86:$_src12=$1;$2=($2>>>0)/4|0;label=87;break;case 87:$468=$size+4|0;$469=HEAP32[$468>>2]|0;HEAP32[$468>>2]=$469-1;if(($469|0)!=0){label=88;break}else{label=113;break};case 88:$i13=0;label=89;break;case 89:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=90;break}else{label=104;break};case 90:$t014=HEAP32[$_src12+($i13<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+1<<2)>>2]|0;if(($t014+32768&-65536|0)!=0){label=92;break}else{label=91;break};case 91:$500=$t014;label=93;break;case 92:$500=($t014|0)>0?32767:-32768;label=93;break;case 93:HEAP16[$3+($i13<<1)>>1]=$500&65535;if(($t115+32768&-65536|0)!=0){label=95;break}else{label=94;break};case 94:$516=$t115;label=96;break;case 95:$516=($t115|0)>0?32767:-32768;label=96;break;case 96:HEAP16[$3+($i13+1<<1)>>1]=$516&65535;$t014=HEAP32[$_src12+($i13+2<<2)>>2]|0;$t115=HEAP32[$_src12+($i13+3<<2)>>2]|0;if(($t014+32768&-65536|0)!=0){label=98;break}else{label=97;break};case 97:$543=$t014;label=99;break;case 98:$543=($t014|0)>0?32767:-32768;label=99;break;case 99:HEAP16[$3+($i13+2<<1)>>1]=$543&65535;if(($t115+32768&-65536|0)!=0){label=101;break}else{label=100;break};case 100:$560=$t115;label=102;break;case 101:$560=($t115|0)>0?32767:-32768;label=102;break;case 102:HEAP16[$3+($i13+3<<1)>>1]=$560&65535;label=103;break;case 103:$i13=$i13+4|0;label=89;break;case 104:label=105;break;case 105:if(($i13|0)<(HEAP32[$size>>2]|0)){label=106;break}else{label=111;break};case 106:$t016=HEAP32[$_src12+($i13<<2)>>2]|0;if(($t016+32768&-65536|0)!=0){label=108;break}else{label=107;break};case 107:$591=$t016;label=109;break;case 108:$591=($t016|0)>0?32767:-32768;label=109;break;case 109:HEAP16[$3+($i13<<1)>>1]=$591&65535;label=110;break;case 110:$i13=$i13+1|0;label=105;break;case 111:label=112;break;case 112:$_src12=$_src12+($2<<2)|0;$3=$3+($4<<1)|0;label=87;break;case 113:label=170;break;case 114:$_src17=$1;$2=($2>>>0)/4|0;label=115;break;case 115:$614=$size+4|0;$615=HEAP32[$614>>2]|0;HEAP32[$614>>2]=$615-1;if(($615|0)!=0){label=116;break}else{label=141;break};case 116:$i18=0;label=117;break;case 117:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=118;break}else{label=132;break};case 118:$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+1<<2)>>2])|0;if(($t019+32768&-65536|0)!=0){label=120;break}else{label=119;break};case 119:$650=$t019;label=121;break;case 120:$650=($t019|0)>0?32767:-32768;label=121;break;case 121:HEAP16[$3+($i18<<1)>>1]=$650&65535;if(($t120+32768&-65536|0)!=0){label=123;break}else{label=122;break};case 122:$666=$t120;label=124;break;case 123:$666=($t120|0)>0?32767:-32768;label=124;break;case 124:HEAP16[$3+($i18+1<<1)>>1]=$666&65535;$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18+2<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+3<<2)>>2])|0;if(($t019+32768&-65536|0)!=0){label=126;break}else{label=125;break};case 125:$697=$t019;label=127;break;case 126:$697=($t019|0)>0?32767:-32768;label=127;break;case 127:HEAP16[$3+($i18+2<<1)>>1]=$697&65535;if(($t120+32768&-65536|0)!=0){label=129;break}else{label=128;break};case 128:$714=$t120;label=130;break;case 129:$714=($t120|0)>0?32767:-32768;label=130;break;case 130:HEAP16[$3+($i18+3<<1)>>1]=$714&65535;label=131;break;case 131:$i18=$i18+4|0;label=117;break;case 132:label=133;break;case 133:if(($i18|0)<(HEAP32[$size>>2]|0)){label=134;break}else{label=139;break};case 134:$t021=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;if(($t021+32768&-65536|0)!=0){label=136;break}else{label=135;break};case 135:$747=$t021;label=137;break;case 136:$747=($t021|0)>0?32767:-32768;label=137;break;case 137:HEAP16[$3+($i18<<1)>>1]=$747&65535;label=138;break;case 138:$i18=$i18+1|0;label=133;break;case 139:label=140;break;case 140:$_src17=$_src17+($2<<2)|0;$3=$3+($4<<1)|0;label=115;break;case 141:label=170;break;case 142:$_src22=$1;$2=($2>>>0)/8|0;label=143;break;case 143:$770=$size+4|0;$771=HEAP32[$770>>2]|0;HEAP32[$770>>2]=$771-1;if(($771|0)!=0){label=144;break}else{label=169;break};case 144:$i23=0;label=145;break;case 145:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=146;break}else{label=160;break};case 146:$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+1<<3)>>3])|0;if(($t024+32768&-65536|0)!=0){label=148;break}else{label=147;break};case 147:$804=$t024;label=149;break;case 148:$804=($t024|0)>0?32767:-32768;label=149;break;case 149:HEAP16[$3+($i23<<1)>>1]=$804&65535;if(($t125+32768&-65536|0)!=0){label=151;break}else{label=150;break};case 150:$820=$t125;label=152;break;case 151:$820=($t125|0)>0?32767:-32768;label=152;break;case 152:HEAP16[$3+($i23+1<<1)>>1]=$820&65535;$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23+2<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+3<<3)>>3])|0;if(($t024+32768&-65536|0)!=0){label=154;break}else{label=153;break};case 153:$849=$t024;label=155;break;case 154:$849=($t024|0)>0?32767:-32768;label=155;break;case 155:HEAP16[$3+($i23+2<<1)>>1]=$849&65535;if(($t125+32768&-65536|0)!=0){label=157;break}else{label=156;break};case 156:$866=$t125;label=158;break;case 157:$866=($t125|0)>0?32767:-32768;label=158;break;case 158:HEAP16[$3+($i23+3<<1)>>1]=$866&65535;label=159;break;case 159:$i23=$i23+4|0;label=145;break;case 160:label=161;break;case 161:if(($i23|0)<(HEAP32[$size>>2]|0)){label=162;break}else{label=167;break};case 162:$t026=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;if(($t026+32768&-65536|0)!=0){label=164;break}else{label=163;break};case 163:$898=$t026;label=165;break;case 164:$898=($t026|0)>0?32767:-32768;label=165;break;case 165:HEAP16[$3+($i23<<1)>>1]=$898&65535;label=166;break;case 166:$i23=$i23+1|0;label=161;break;case 167:label=168;break;case 168:$_src22=$_src22+($2<<3)|0;$3=$3+($4<<1)|0;label=143;break;case 169:label=170;break;case 170:STACKTOP=sp;return 0}return 0}function __ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0,$t1=0,$_src2=0,$i3=0,$t04=0,$t15=0,$_src7=0,$i8=0,$t09=0,$t110=0,$_src12=0,$i13=0,$t014=0,$t115=0,$_src17=0,$i18=0,$t019=0,$t120=0,$_src22=0,$i23=0,$t024=0,$t125=0,$10=0,$16=0,$17=0,$106=0,$107=0,$197=0,$198=0,$288=0,$289=0,$379=0,$380=0,$475=0,$476=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=($4>>>0)/4|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==1){label=15;break}else if(($10|0)==2){label=28;break}else if(($10|0)==3){label=41;break}else if(($10|0)==5){label=54;break}else if(($10|0)==6){label=67;break}else{label=80;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=14;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=8;break};case 6:$t0=HEAPU8[$_src+$i|0]|0;$t1=HEAPU8[$_src+($i+1)|0]|0;HEAP32[$3+($i<<2)>>2]=$t0;HEAP32[$3+($i+1<<2)>>2]=$t1;$t0=HEAPU8[$_src+($i+2)|0]|0;$t1=HEAPU8[$_src+($i+3)|0]|0;HEAP32[$3+($i+2<<2)>>2]=$t0;HEAP32[$3+($i+3<<2)>>2]=$t1;label=7;break;case 7:$i=$i+4|0;label=5;break;case 8:label=9;break;case 9:if(($i|0)<(HEAP32[$size>>2]|0)){label=10;break}else{label=12;break};case 10:HEAP32[$3+($i<<2)>>2]=HEAPU8[$_src+$i|0]|0;label=11;break;case 11:$i=$i+1|0;label=9;break;case 12:label=13;break;case 13:$_src=$_src+$2|0;$3=$3+($4<<2)|0;label=3;break;case 14:label=80;break;case 15:$_src2=$1;$2=$2>>>0|0;label=16;break;case 16:$106=$size+4|0;$107=HEAP32[$106>>2]|0;HEAP32[$106>>2]=$107-1;if(($107|0)!=0){label=17;break}else{label=27;break};case 17:$i3=0;label=18;break;case 18:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=19;break}else{label=21;break};case 19:$t04=HEAP8[$_src2+$i3|0]|0;$t15=HEAP8[$_src2+($i3+1)|0]|0;HEAP32[$3+($i3<<2)>>2]=$t04;HEAP32[$3+($i3+1<<2)>>2]=$t15;$t04=HEAP8[$_src2+($i3+2)|0]|0;$t15=HEAP8[$_src2+($i3+3)|0]|0;HEAP32[$3+($i3+2<<2)>>2]=$t04;HEAP32[$3+($i3+3<<2)>>2]=$t15;label=20;break;case 20:$i3=$i3+4|0;label=18;break;case 21:label=22;break;case 22:if(($i3|0)<(HEAP32[$size>>2]|0)){label=23;break}else{label=25;break};case 23:HEAP32[$3+($i3<<2)>>2]=HEAP8[$_src2+$i3|0]|0;label=24;break;case 24:$i3=$i3+1|0;label=22;break;case 25:label=26;break;case 26:$_src2=$_src2+$2|0;$3=$3+($4<<2)|0;label=16;break;case 27:label=80;break;case 28:$_src7=$1;$2=($2>>>0)/2|0;label=29;break;case 29:$197=$size+4|0;$198=HEAP32[$197>>2]|0;HEAP32[$197>>2]=$198-1;if(($198|0)!=0){label=30;break}else{label=40;break};case 30:$i8=0;label=31;break;case 31:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=32;break}else{label=34;break};case 32:$t09=HEAPU16[$_src7+($i8<<1)>>1]|0;$t110=HEAPU16[$_src7+($i8+1<<1)>>1]|0;HEAP32[$3+($i8<<2)>>2]=$t09;HEAP32[$3+($i8+1<<2)>>2]=$t110;$t09=HEAPU16[$_src7+($i8+2<<1)>>1]|0;$t110=HEAPU16[$_src7+($i8+3<<1)>>1]|0;HEAP32[$3+($i8+2<<2)>>2]=$t09;HEAP32[$3+($i8+3<<2)>>2]=$t110;label=33;break;case 33:$i8=$i8+4|0;label=31;break;case 34:label=35;break;case 35:if(($i8|0)<(HEAP32[$size>>2]|0)){label=36;break}else{label=38;break};case 36:HEAP32[$3+($i8<<2)>>2]=HEAPU16[$_src7+($i8<<1)>>1]|0;label=37;break;case 37:$i8=$i8+1|0;label=35;break;case 38:label=39;break;case 39:$_src7=$_src7+($2<<1)|0;$3=$3+($4<<2)|0;label=29;break;case 40:label=80;break;case 41:$_src12=$1;$2=($2>>>0)/2|0;label=42;break;case 42:$288=$size+4|0;$289=HEAP32[$288>>2]|0;HEAP32[$288>>2]=$289-1;if(($289|0)!=0){label=43;break}else{label=53;break};case 43:$i13=0;label=44;break;case 44:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=47;break};case 45:$t014=HEAP16[$_src12+($i13<<1)>>1]|0;$t115=HEAP16[$_src12+($i13+1<<1)>>1]|0;HEAP32[$3+($i13<<2)>>2]=$t014;HEAP32[$3+($i13+1<<2)>>2]=$t115;$t014=HEAP16[$_src12+($i13+2<<1)>>1]|0;$t115=HEAP16[$_src12+($i13+3<<1)>>1]|0;HEAP32[$3+($i13+2<<2)>>2]=$t014;HEAP32[$3+($i13+3<<2)>>2]=$t115;label=46;break;case 46:$i13=$i13+4|0;label=44;break;case 47:label=48;break;case 48:if(($i13|0)<(HEAP32[$size>>2]|0)){label=49;break}else{label=51;break};case 49:HEAP32[$3+($i13<<2)>>2]=HEAP16[$_src12+($i13<<1)>>1]|0;label=50;break;case 50:$i13=$i13+1|0;label=48;break;case 51:label=52;break;case 52:$_src12=$_src12+($2<<1)|0;$3=$3+($4<<2)|0;label=42;break;case 53:label=80;break;case 54:$_src17=$1;$2=($2>>>0)/4|0;label=55;break;case 55:$379=$size+4|0;$380=HEAP32[$379>>2]|0;HEAP32[$379>>2]=$380-1;if(($380|0)!=0){label=56;break}else{label=66;break};case 56:$i18=0;label=57;break;case 57:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=58;break}else{label=60;break};case 58:$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+1<<2)>>2])|0;HEAP32[$3+($i18<<2)>>2]=$t019;HEAP32[$3+($i18+1<<2)>>2]=$t120;$t019=__Z7cvRoundd(+HEAPF32[$_src17+($i18+2<<2)>>2])|0;$t120=__Z7cvRoundd(+HEAPF32[$_src17+($i18+3<<2)>>2])|0;HEAP32[$3+($i18+2<<2)>>2]=$t019;HEAP32[$3+($i18+3<<2)>>2]=$t120;label=59;break;case 59:$i18=$i18+4|0;label=57;break;case 60:label=61;break;case 61:if(($i18|0)<(HEAP32[$size>>2]|0)){label=62;break}else{label=64;break};case 62:HEAP32[$3+($i18<<2)>>2]=__Z7cvRoundd(+HEAPF32[$_src17+($i18<<2)>>2])|0;label=63;break;case 63:$i18=$i18+1|0;label=61;break;case 64:label=65;break;case 65:$_src17=$_src17+($2<<2)|0;$3=$3+($4<<2)|0;label=55;break;case 66:label=80;break;case 67:$_src22=$1;$2=($2>>>0)/8|0;label=68;break;case 68:$475=$size+4|0;$476=HEAP32[$475>>2]|0;HEAP32[$475>>2]=$476-1;if(($476|0)!=0){label=69;break}else{label=79;break};case 69:$i23=0;label=70;break;case 70:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=71;break}else{label=73;break};case 71:$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+1<<3)>>3])|0;HEAP32[$3+($i23<<2)>>2]=$t024;HEAP32[$3+($i23+1<<2)>>2]=$t125;$t024=__Z7cvRoundd(+HEAPF64[$_src22+($i23+2<<3)>>3])|0;$t125=__Z7cvRoundd(+HEAPF64[$_src22+($i23+3<<3)>>3])|0;HEAP32[$3+($i23+2<<2)>>2]=$t024;HEAP32[$3+($i23+3<<2)>>2]=$t125;label=72;break;case 72:$i23=$i23+4|0;label=70;break;case 73:label=74;break;case 74:if(($i23|0)<(HEAP32[$size>>2]|0)){label=75;break}else{label=77;break};case 75:HEAP32[$3+($i23<<2)>>2]=__Z7cvRoundd(+HEAPF64[$_src22+($i23<<3)>>3])|0;label=76;break;case 76:$i23=$i23+1|0;label=74;break;case 77:label=78;break;case 78:$_src22=$_src22+($2<<3)|0;$3=$3+($4<<2)|0;label=68;break;case 79:label=80;break;case 80:STACKTOP=sp;return 0}return 0}function __ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0.0,$t1=0.0,$_src2=0,$i3=0,$t04=0.0,$t15=0.0,$_src7=0,$i8=0,$t09=0.0,$t110=0.0,$_src12=0,$i13=0,$t014=0.0,$t115=0.0,$_src17=0,$i18=0,$t019=0.0,$t120=0.0,$_src22=0,$i23=0,$t024=0.0,$t125=0.0,$10=0,$16=0,$17=0,$121=0,$122=0,$227=0,$228=0,$318=0,$319=0,$409=0,$410=0,$500=0,$501=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=($4>>>0)/4|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==1){label=15;break}else if(($10|0)==2){label=28;break}else if(($10|0)==3){label=41;break}else if(($10|0)==4){label=54;break}else if(($10|0)==6){label=67;break}else{label=80;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=14;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=8;break};case 6:$t0=(copyTempFloat(4224+((HEAPU8[$_src+$i|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t1=(copyTempFloat(4224+((HEAPU8[$_src+($i+1)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF32[$3+($i<<2)>>2]=$t0;HEAPF32[$3+($i+1<<2)>>2]=$t1;$t0=(copyTempFloat(4224+((HEAPU8[$_src+($i+2)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t1=(copyTempFloat(4224+((HEAPU8[$_src+($i+3)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF32[$3+($i+2<<2)>>2]=$t0;HEAPF32[$3+($i+3<<2)>>2]=$t1;label=7;break;case 7:$i=$i+4|0;label=5;break;case 8:label=9;break;case 9:if(($i|0)<(HEAP32[$size>>2]|0)){label=10;break}else{label=12;break};case 10:HEAPF32[$3+($i<<2)>>2]=(copyTempFloat(4224+((HEAPU8[$_src+$i|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=11;break;case 11:$i=$i+1|0;label=9;break;case 12:label=13;break;case 13:$_src=$_src+$2|0;$3=$3+($4<<2)|0;label=3;break;case 14:label=80;break;case 15:$_src2=$1;$2=$2>>>0|0;label=16;break;case 16:$121=$size+4|0;$122=HEAP32[$121>>2]|0;HEAP32[$121>>2]=$122-1;if(($122|0)!=0){label=17;break}else{label=27;break};case 17:$i3=0;label=18;break;case 18:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=19;break}else{label=21;break};case 19:$t04=(copyTempFloat(4224+((HEAP8[$_src2+$i3|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t15=(copyTempFloat(4224+((HEAP8[$_src2+($i3+1)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF32[$3+($i3<<2)>>2]=$t04;HEAPF32[$3+($i3+1<<2)>>2]=$t15;$t04=(copyTempFloat(4224+((HEAP8[$_src2+($i3+2)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t15=(copyTempFloat(4224+((HEAP8[$_src2+($i3+3)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF32[$3+($i3+2<<2)>>2]=$t04;HEAPF32[$3+($i3+3<<2)>>2]=$t15;label=20;break;case 20:$i3=$i3+4|0;label=18;break;case 21:label=22;break;case 22:if(($i3|0)<(HEAP32[$size>>2]|0)){label=23;break}else{label=25;break};case 23:HEAPF32[$3+($i3<<2)>>2]=(copyTempFloat(4224+((HEAP8[$_src2+$i3|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=24;break;case 24:$i3=$i3+1|0;label=22;break;case 25:label=26;break;case 26:$_src2=$_src2+$2|0;$3=$3+($4<<2)|0;label=16;break;case 27:label=80;break;case 28:$_src7=$1;$2=($2>>>0)/2|0;label=29;break;case 29:$227=$size+4|0;$228=HEAP32[$227>>2]|0;HEAP32[$227>>2]=$228-1;if(($228|0)!=0){label=30;break}else{label=40;break};case 30:$i8=0;label=31;break;case 31:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=32;break}else{label=34;break};case 32:$t09=+((HEAPU16[$_src7+($i8<<1)>>1]|0)>>>0);$t110=+((HEAPU16[$_src7+($i8+1<<1)>>1]|0)>>>0);HEAPF32[$3+($i8<<2)>>2]=$t09;HEAPF32[$3+($i8+1<<2)>>2]=$t110;$t09=+((HEAPU16[$_src7+($i8+2<<1)>>1]|0)>>>0);$t110=+((HEAPU16[$_src7+($i8+3<<1)>>1]|0)>>>0);HEAPF32[$3+($i8+2<<2)>>2]=$t09;HEAPF32[$3+($i8+3<<2)>>2]=$t110;label=33;break;case 33:$i8=$i8+4|0;label=31;break;case 34:label=35;break;case 35:if(($i8|0)<(HEAP32[$size>>2]|0)){label=36;break}else{label=38;break};case 36:HEAPF32[$3+($i8<<2)>>2]=+((HEAPU16[$_src7+($i8<<1)>>1]|0)>>>0);label=37;break;case 37:$i8=$i8+1|0;label=35;break;case 38:label=39;break;case 39:$_src7=$_src7+($2<<1)|0;$3=$3+($4<<2)|0;label=29;break;case 40:label=80;break;case 41:$_src12=$1;$2=($2>>>0)/2|0;label=42;break;case 42:$318=$size+4|0;$319=HEAP32[$318>>2]|0;HEAP32[$318>>2]=$319-1;if(($319|0)!=0){label=43;break}else{label=53;break};case 43:$i13=0;label=44;break;case 44:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=47;break};case 45:$t014=+(HEAP16[$_src12+($i13<<1)>>1]|0);$t115=+(HEAP16[$_src12+($i13+1<<1)>>1]|0);HEAPF32[$3+($i13<<2)>>2]=$t014;HEAPF32[$3+($i13+1<<2)>>2]=$t115;$t014=+(HEAP16[$_src12+($i13+2<<1)>>1]|0);$t115=+(HEAP16[$_src12+($i13+3<<1)>>1]|0);HEAPF32[$3+($i13+2<<2)>>2]=$t014;HEAPF32[$3+($i13+3<<2)>>2]=$t115;label=46;break;case 46:$i13=$i13+4|0;label=44;break;case 47:label=48;break;case 48:if(($i13|0)<(HEAP32[$size>>2]|0)){label=49;break}else{label=51;break};case 49:HEAPF32[$3+($i13<<2)>>2]=+(HEAP16[$_src12+($i13<<1)>>1]|0);label=50;break;case 50:$i13=$i13+1|0;label=48;break;case 51:label=52;break;case 52:$_src12=$_src12+($2<<1)|0;$3=$3+($4<<2)|0;label=42;break;case 53:label=80;break;case 54:$_src17=$1;$2=($2>>>0)/4|0;label=55;break;case 55:$409=$size+4|0;$410=HEAP32[$409>>2]|0;HEAP32[$409>>2]=$410-1;if(($410|0)!=0){label=56;break}else{label=66;break};case 56:$i18=0;label=57;break;case 57:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=58;break}else{label=60;break};case 58:$t019=+(HEAP32[$_src17+($i18<<2)>>2]|0);$t120=+(HEAP32[$_src17+($i18+1<<2)>>2]|0);HEAPF32[$3+($i18<<2)>>2]=$t019;HEAPF32[$3+($i18+1<<2)>>2]=$t120;$t019=+(HEAP32[$_src17+($i18+2<<2)>>2]|0);$t120=+(HEAP32[$_src17+($i18+3<<2)>>2]|0);HEAPF32[$3+($i18+2<<2)>>2]=$t019;HEAPF32[$3+($i18+3<<2)>>2]=$t120;label=59;break;case 59:$i18=$i18+4|0;label=57;break;case 60:label=61;break;case 61:if(($i18|0)<(HEAP32[$size>>2]|0)){label=62;break}else{label=64;break};case 62:HEAPF32[$3+($i18<<2)>>2]=+(HEAP32[$_src17+($i18<<2)>>2]|0);label=63;break;case 63:$i18=$i18+1|0;label=61;break;case 64:label=65;break;case 65:$_src17=$_src17+($2<<2)|0;$3=$3+($4<<2)|0;label=55;break;case 66:label=80;break;case 67:$_src22=$1;$2=($2>>>0)/8|0;label=68;break;case 68:$500=$size+4|0;$501=HEAP32[$500>>2]|0;HEAP32[$500>>2]=$501-1;if(($501|0)!=0){label=69;break}else{label=79;break};case 69:$i23=0;label=70;break;case 70:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=71;break}else{label=73;break};case 71:$t024=+HEAPF64[$_src22+($i23<<3)>>3];$t125=+HEAPF64[$_src22+($i23+1<<3)>>3];HEAPF32[$3+($i23<<2)>>2]=$t024;HEAPF32[$3+($i23+1<<2)>>2]=$t125;$t024=+HEAPF64[$_src22+($i23+2<<3)>>3];$t125=+HEAPF64[$_src22+($i23+3<<3)>>3];HEAPF32[$3+($i23+2<<2)>>2]=$t024;HEAPF32[$3+($i23+3<<2)>>2]=$t125;label=72;break;case 72:$i23=$i23+4|0;label=70;break;case 73:label=74;break;case 74:if(($i23|0)<(HEAP32[$size>>2]|0)){label=75;break}else{label=77;break};case 75:HEAPF32[$3+($i23<<2)>>2]=+HEAPF64[$_src22+($i23<<3)>>3];label=76;break;case 76:$i23=$i23+1|0;label=74;break;case 77:label=78;break;case 78:$_src22=$_src22+($2<<3)|0;$3=$3+($4<<2)|0;label=68;break;case 79:label=80;break;case 80:STACKTOP=sp;return 0}return 0}function __ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei($src,$srcstep,$dst,$dststep,$size,$param){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$param=$param|0;var $1=0,$2=0,$3=0,$4=0,$_src=0,$i=0,$t0=0.0,$t1=0.0,$_src2=0,$i3=0,$t04=0.0,$t15=0.0,$_src7=0,$i8=0,$t09=0.0,$t110=0.0,$_src12=0,$i13=0,$t014=0.0,$t115=0.0,$_src17=0,$i18=0,$t019=0.0,$t120=0.0,$_src22=0,$i23=0,$t024=0.0,$t125=0.0,$10=0,$16=0,$17=0,$126=0,$127=0,$237=0,$238=0,$328=0,$329=0,$419=0,$420=0,$510=0,$511=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$4=($4>>>0)/8|0;$10=$param&7;if(($10|0)==0){label=2;break}else if(($10|0)==1){label=15;break}else if(($10|0)==2){label=28;break}else if(($10|0)==3){label=41;break}else if(($10|0)==4){label=54;break}else if(($10|0)==5){label=67;break}else{label=80;break};case 2:$_src=$1;$2=$2>>>0|0;label=3;break;case 3:$16=$size+4|0;$17=HEAP32[$16>>2]|0;HEAP32[$16>>2]=$17-1;if(($17|0)!=0){label=4;break}else{label=14;break};case 4:$i=0;label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=6;break}else{label=8;break};case 6:$t0=(copyTempFloat(4224+((HEAPU8[$_src+$i|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t1=(copyTempFloat(4224+((HEAPU8[$_src+($i+1)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF64[$3+($i<<3)>>3]=$t0;HEAPF64[$3+($i+1<<3)>>3]=$t1;$t0=(copyTempFloat(4224+((HEAPU8[$_src+($i+2)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t1=(copyTempFloat(4224+((HEAPU8[$_src+($i+3)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF64[$3+($i+2<<3)>>3]=$t0;HEAPF64[$3+($i+3<<3)>>3]=$t1;label=7;break;case 7:$i=$i+4|0;label=5;break;case 8:label=9;break;case 9:if(($i|0)<(HEAP32[$size>>2]|0)){label=10;break}else{label=12;break};case 10:HEAPF64[$3+($i<<3)>>3]=(copyTempFloat(4224+((HEAPU8[$_src+$i|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=11;break;case 11:$i=$i+1|0;label=9;break;case 12:label=13;break;case 13:$_src=$_src+$2|0;$3=$3+($4<<3)|0;label=3;break;case 14:label=80;break;case 15:$_src2=$1;$2=$2>>>0|0;label=16;break;case 16:$126=$size+4|0;$127=HEAP32[$126>>2]|0;HEAP32[$126>>2]=$127-1;if(($127|0)!=0){label=17;break}else{label=27;break};case 17:$i3=0;label=18;break;case 18:if(($i3|0)<=((HEAP32[$size>>2]|0)-4|0)){label=19;break}else{label=21;break};case 19:$t04=(copyTempFloat(4224+((HEAP8[$_src2+$i3|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t15=(copyTempFloat(4224+((HEAP8[$_src2+($i3+1)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF64[$3+($i3<<3)>>3]=$t04;HEAPF64[$3+($i3+1<<3)>>3]=$t15;$t04=(copyTempFloat(4224+((HEAP8[$_src2+($i3+2)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);$t15=(copyTempFloat(4224+((HEAP8[$_src2+($i3+3)|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);HEAPF64[$3+($i3+2<<3)>>3]=$t04;HEAPF64[$3+($i3+3<<3)>>3]=$t15;label=20;break;case 20:$i3=$i3+4|0;label=18;break;case 21:label=22;break;case 22:if(($i3|0)<(HEAP32[$size>>2]|0)){label=23;break}else{label=25;break};case 23:HEAPF64[$3+($i3<<3)>>3]=(copyTempFloat(4224+((HEAP8[$_src2+$i3|0]|0)+128<<2)|0),+HEAPF32[tempDoublePtr>>2]);label=24;break;case 24:$i3=$i3+1|0;label=22;break;case 25:label=26;break;case 26:$_src2=$_src2+$2|0;$3=$3+($4<<3)|0;label=16;break;case 27:label=80;break;case 28:$_src7=$1;$2=($2>>>0)/2|0;label=29;break;case 29:$237=$size+4|0;$238=HEAP32[$237>>2]|0;HEAP32[$237>>2]=$238-1;if(($238|0)!=0){label=30;break}else{label=40;break};case 30:$i8=0;label=31;break;case 31:if(($i8|0)<=((HEAP32[$size>>2]|0)-4|0)){label=32;break}else{label=34;break};case 32:$t09=+((HEAPU16[$_src7+($i8<<1)>>1]|0)>>>0);$t110=+((HEAPU16[$_src7+($i8+1<<1)>>1]|0)>>>0);HEAPF64[$3+($i8<<3)>>3]=$t09;HEAPF64[$3+($i8+1<<3)>>3]=$t110;$t09=+((HEAPU16[$_src7+($i8+2<<1)>>1]|0)>>>0);$t110=+((HEAPU16[$_src7+($i8+3<<1)>>1]|0)>>>0);HEAPF64[$3+($i8+2<<3)>>3]=$t09;HEAPF64[$3+($i8+3<<3)>>3]=$t110;label=33;break;case 33:$i8=$i8+4|0;label=31;break;case 34:label=35;break;case 35:if(($i8|0)<(HEAP32[$size>>2]|0)){label=36;break}else{label=38;break};case 36:HEAPF64[$3+($i8<<3)>>3]=+((HEAPU16[$_src7+($i8<<1)>>1]|0)>>>0);label=37;break;case 37:$i8=$i8+1|0;label=35;break;case 38:label=39;break;case 39:$_src7=$_src7+($2<<1)|0;$3=$3+($4<<3)|0;label=29;break;case 40:label=80;break;case 41:$_src12=$1;$2=($2>>>0)/2|0;label=42;break;case 42:$328=$size+4|0;$329=HEAP32[$328>>2]|0;HEAP32[$328>>2]=$329-1;if(($329|0)!=0){label=43;break}else{label=53;break};case 43:$i13=0;label=44;break;case 44:if(($i13|0)<=((HEAP32[$size>>2]|0)-4|0)){label=45;break}else{label=47;break};case 45:$t014=+(HEAP16[$_src12+($i13<<1)>>1]|0);$t115=+(HEAP16[$_src12+($i13+1<<1)>>1]|0);HEAPF64[$3+($i13<<3)>>3]=$t014;HEAPF64[$3+($i13+1<<3)>>3]=$t115;$t014=+(HEAP16[$_src12+($i13+2<<1)>>1]|0);$t115=+(HEAP16[$_src12+($i13+3<<1)>>1]|0);HEAPF64[$3+($i13+2<<3)>>3]=$t014;HEAPF64[$3+($i13+3<<3)>>3]=$t115;label=46;break;case 46:$i13=$i13+4|0;label=44;break;case 47:label=48;break;case 48:if(($i13|0)<(HEAP32[$size>>2]|0)){label=49;break}else{label=51;break};case 49:HEAPF64[$3+($i13<<3)>>3]=+(HEAP16[$_src12+($i13<<1)>>1]|0);label=50;break;case 50:$i13=$i13+1|0;label=48;break;case 51:label=52;break;case 52:$_src12=$_src12+($2<<1)|0;$3=$3+($4<<3)|0;label=42;break;case 53:label=80;break;case 54:$_src17=$1;$2=($2>>>0)/4|0;label=55;break;case 55:$419=$size+4|0;$420=HEAP32[$419>>2]|0;HEAP32[$419>>2]=$420-1;if(($420|0)!=0){label=56;break}else{label=66;break};case 56:$i18=0;label=57;break;case 57:if(($i18|0)<=((HEAP32[$size>>2]|0)-4|0)){label=58;break}else{label=60;break};case 58:$t019=+(HEAP32[$_src17+($i18<<2)>>2]|0);$t120=+(HEAP32[$_src17+($i18+1<<2)>>2]|0);HEAPF64[$3+($i18<<3)>>3]=$t019;HEAPF64[$3+($i18+1<<3)>>3]=$t120;$t019=+(HEAP32[$_src17+($i18+2<<2)>>2]|0);$t120=+(HEAP32[$_src17+($i18+3<<2)>>2]|0);HEAPF64[$3+($i18+2<<3)>>3]=$t019;HEAPF64[$3+($i18+3<<3)>>3]=$t120;label=59;break;case 59:$i18=$i18+4|0;label=57;break;case 60:label=61;break;case 61:if(($i18|0)<(HEAP32[$size>>2]|0)){label=62;break}else{label=64;break};case 62:HEAPF64[$3+($i18<<3)>>3]=+(HEAP32[$_src17+($i18<<2)>>2]|0);label=63;break;case 63:$i18=$i18+1|0;label=61;break;case 64:label=65;break;case 65:$_src17=$_src17+($2<<2)|0;$3=$3+($4<<3)|0;label=55;break;case 66:label=80;break;case 67:$_src22=$1;$2=($2>>>0)/4|0;label=68;break;case 68:$510=$size+4|0;$511=HEAP32[$510>>2]|0;HEAP32[$510>>2]=$511-1;if(($511|0)!=0){label=69;break}else{label=79;break};case 69:$i23=0;label=70;break;case 70:if(($i23|0)<=((HEAP32[$size>>2]|0)-4|0)){label=71;break}else{label=73;break};case 71:$t024=+HEAPF32[$_src22+($i23<<2)>>2];$t125=+HEAPF32[$_src22+($i23+1<<2)>>2];HEAPF64[$3+($i23<<3)>>3]=$t024;HEAPF64[$3+($i23+1<<3)>>3]=$t125;$t024=+HEAPF32[$_src22+($i23+2<<2)>>2];$t125=+HEAPF32[$_src22+($i23+3<<2)>>2];HEAPF64[$3+($i23+2<<3)>>3]=$t024;HEAPF64[$3+($i23+3<<3)>>3]=$t125;label=72;break;case 72:$i23=$i23+4|0;label=70;break;case 73:label=74;break;case 74:if(($i23|0)<(HEAP32[$size>>2]|0)){label=75;break}else{label=77;break};case 75:HEAPF64[$3+($i23<<3)>>3]=+HEAPF32[$_src22+($i23<<2)>>2];label=76;break;case 76:$i23=$i23+1|0;label=74;break;case 77:label=78;break;case 78:$_src22=$_src22+($2<<2)|0;$3=$3+($4<<3)|0;label=68;break;case 79:label=80;break;case 80:STACKTOP=sp;return 0}return 0}function __ZL16icvCopy_8u_C1R_fPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$3=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;label=2;break;case 2:$6=$size+4|0;$7=HEAP32[$6>>2]|0;HEAP32[$6>>2]=$7-1;if(($7|0)!=0){label=3;break}else{label=5;break};case 3:_memcpy($3|0,$1|0,HEAP32[$size>>2]|0)|0;label=4;break;case 4:$1=$1+$srcstep|0;$3=$3+$dststep|0;label=2;break;case 5:STACKTOP=sp;return 0}return 0}function __Z14icvCopy_8u_C1RPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $5=0,$6=0,$11=0,$12=0,$13=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$5=sp|0;$6=HEAP32[220]|0;$11=$5;$12=$size;HEAP32[$11>>2]=HEAP32[$12>>2];HEAP32[$11+4>>2]=HEAP32[$12+4>>2];$13=FUNCTION_TABLE_iiiiii[$6&1023]($src,$srcstep,$dst,$dststep,$5)|0;STACKTOP=sp;return $13|0}function __ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=19;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-2|0)){label=5;break}else{label=11;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:HEAP8[$3+$i|0]=HEAP8[$1+$i|0]|0;label=7;break;case 7:if((HEAP8[$5+($i+1)|0]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP8[$3+($i+1)|0]=HEAP8[$1+($i+1)|0]|0;label=9;break;case 9:label=10;break;case 10:$i=$i+2|0;label=4;break;case 11:label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=17;break};case 13:if((HEAP8[$5+$i|0]|0)!=0){label=14;break}else{label=15;break};case 14:HEAP8[$3+$i|0]=HEAP8[$1+$i|0]|0;label=15;break;case 15:label=16;break;case 16:$i=$i+1|0;label=12;break;case 17:label=18;break;case 18:$1=$1+$2|0;$3=$3+$4|0;$5=$5+$maskstep|0;label=2;break;case 19:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=19;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-2|0)){label=5;break}else{label=11;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:HEAP16[$3+($i<<1)>>1]=HEAP16[$1+($i<<1)>>1]|0;label=7;break;case 7:if((HEAP8[$5+($i+1)|0]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP16[$3+($i+1<<1)>>1]=HEAP16[$1+($i+1<<1)>>1]|0;label=9;break;case 9:label=10;break;case 10:$i=$i+2|0;label=4;break;case 11:label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=17;break};case 13:if((HEAP8[$5+$i|0]|0)!=0){label=14;break}else{label=15;break};case 14:HEAP16[$3+($i<<1)>>1]=HEAP16[$1+($i<<1)>>1]|0;label=15;break;case 15:label=16;break;case 16:$i=$i+1|0;label=12;break;case 17:label=18;break;case 18:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;$5=$5+$maskstep|0;label=2;break;case 19:STACKTOP=sp;return 0}return 0}function __ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$t1=HEAP8[$1+(($i*3|0)+1)|0]|0;$t2=HEAP8[$1+(($i*3|0)+2)|0]|0;HEAP8[$3+($i*3|0)|0]=HEAP8[$1+($i*3|0)|0]|0;HEAP8[$3+(($i*3|0)+1)|0]=$t1;HEAP8[$3+(($i*3|0)+2)|0]=$t2;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+$2|0;$3=$3+$4|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}
function __ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=19;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-2|0)){label=5;break}else{label=11;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:HEAP32[$3+($i<<2)>>2]=HEAP32[$1+($i<<2)>>2];label=7;break;case 7:if((HEAP8[$5+($i+1)|0]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP32[$3+($i+1<<2)>>2]=HEAP32[$1+($i+1<<2)>>2];label=9;break;case 9:label=10;break;case 10:$i=$i+2|0;label=4;break;case 11:label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=17;break};case 13:if((HEAP8[$5+$i|0]|0)!=0){label=14;break}else{label=15;break};case 14:HEAP32[$3+($i<<2)>>2]=HEAP32[$1+($i<<2)>>2];label=15;break;case 15:label=16;break;case 16:$i=$i+1|0;label=12;break;case 17:label=18;break;case 18:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;$5=$5+$maskstep|0;label=2;break;case 19:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$t1=HEAP16[$1+(($i*3|0)+1<<1)>>1]|0;$t2=HEAP16[$1+(($i*3|0)+2<<1)>>1]|0;HEAP16[$3+(($i*3|0)<<1)>>1]=HEAP16[$1+(($i*3|0)<<1)>>1]|0;HEAP16[$3+(($i*3|0)+1<<1)>>1]=$t1;HEAP16[$3+(($i*3|0)+2<<1)>>1]=$t2;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_16s_C4MR_fPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$12=0,$13=0,$32=0,$33$1=0,$36=0,$48=0,$49$1=0,$53=0,$73=0,$74$1=0,$77=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=19;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-2|0)){label=5;break}else{label=11;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$32=$1+($i<<3)|0;$33$1=HEAP32[$32+4>>2]|0;$36=$3+($i<<3)|0;HEAP32[$36>>2]=HEAP32[$32>>2];HEAP32[$36+4>>2]=$33$1;label=7;break;case 7:if((HEAP8[$5+($i+1)|0]|0)!=0){label=8;break}else{label=9;break};case 8:$48=$1+($i+1<<3)|0;$49$1=HEAP32[$48+4>>2]|0;$53=$3+($i+1<<3)|0;HEAP32[$53>>2]=HEAP32[$48>>2];HEAP32[$53+4>>2]=$49$1;label=9;break;case 9:label=10;break;case 10:$i=$i+2|0;label=4;break;case 11:label=12;break;case 12:if(($i|0)<(HEAP32[$size>>2]|0)){label=13;break}else{label=17;break};case 13:if((HEAP8[$5+$i|0]|0)!=0){label=14;break}else{label=15;break};case 14:$73=$1+($i<<3)|0;$74$1=HEAP32[$73+4>>2]|0;$77=$3+($i<<3)|0;HEAP32[$77>>2]=HEAP32[$73>>2];HEAP32[$77+4>>2]=$74$1;label=15;break;case 15:label=16;break;case 16:$i=$i+1|0;label=12;break;case 17:label=18;break;case 18:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;$5=$5+$maskstep|0;label=2;break;case 19:STACKTOP=sp;return 0}return 0}function __Z15icvCopy_8u_C1MRPKhiPhi6CvSizeS0_i($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[222]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_16s_C1MRPKtiPti6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[284]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z15icvCopy_8u_C3MRPKhiPhi6CvSizeS0_i($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[216]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z15icvCopy_8u_C4MRPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[212]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_16s_C3MRPKtiPti6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[280]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t1=0,$t2=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$t1=HEAP32[$1+(($i*3|0)+1<<2)>>2]|0;$t2=HEAP32[$1+(($i*3|0)+2<<2)>>2]|0;HEAP32[$3+(($i*3|0)<<2)>>2]=HEAP32[$1+(($i*3|0)<<2)>>2];HEAP32[$3+(($i*3|0)+1<<2)>>2]=$t1;HEAP32[$3+(($i*3|0)+2<<2)>>2]=$t2;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$t0=HEAP32[$1+($i<<2<<2)>>2]|0;$t1=HEAP32[$1+(($i<<2)+1<<2)>>2]|0;HEAP32[$3+($i<<2<<2)>>2]=$t0;HEAP32[$3+(($i<<2)+1<<2)>>2]=$t1;$t0=HEAP32[$1+(($i<<2)+2<<2)>>2]|0;$t1=HEAP32[$1+(($i<<2)+3<<2)>>2]|0;HEAP32[$3+(($i<<2)+2<<2)>>2]=$t0;HEAP32[$3+(($i<<2)+3<<2)>>2]=$t1;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_64s_C3MR_fPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$t2=0,$12=0,$13=0,$32=0,$33$1=0,$38=0,$39$1=0,$44=0,$45$1=0,$46$1=0,$50=0,$51$1=0,$56=0,$57$1=0,$62=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+24|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$t2=sp+16|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$32=$1+(($i*3|0)<<3)|0;$33$1=HEAP32[$32+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$32>>2];HEAP32[$t0+4>>2]=$33$1;$38=$1+(($i*3|0)+1<<3)|0;$39$1=HEAP32[$38+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$38>>2];HEAP32[$t1+4>>2]=$39$1;$44=$1+(($i*3|0)+2<<3)|0;$45$1=HEAP32[$44+4>>2]|0;HEAP32[$t2>>2]=HEAP32[$44>>2];HEAP32[$t2+4>>2]=$45$1;$46$1=HEAP32[$t0+4>>2]|0;$50=$3+(($i*3|0)<<3)|0;HEAP32[$50>>2]=HEAP32[$t0>>2];HEAP32[$50+4>>2]=$46$1;$51$1=HEAP32[$t1+4>>2]|0;$56=$3+(($i*3|0)+1<<3)|0;HEAP32[$56>>2]=HEAP32[$t1>>2];HEAP32[$56+4>>2]=$51$1;$57$1=HEAP32[$t2+4>>2]|0;$62=$3+(($i*3|0)+2<<3)|0;HEAP32[$62>>2]=HEAP32[$t2>>2];HEAP32[$62+4>>2]=$57$1;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL18icvCopy_64s_C4MR_fPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$12=0,$13=0,$32=0,$33$1=0,$38=0,$39$1=0,$40$1=0,$44=0,$45$1=0,$50=0,$55=0,$56$1=0,$61=0,$62$1=0,$63$1=0,$68=0,$69$1=0,$74=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$5=$mask;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=11;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(HEAP32[$size>>2]|0)){label=5;break}else{label=9;break};case 5:if((HEAP8[$5+$i|0]|0)!=0){label=6;break}else{label=7;break};case 6:$32=$1+($i<<2<<3)|0;$33$1=HEAP32[$32+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$32>>2];HEAP32[$t0+4>>2]=$33$1;$38=$1+(($i<<2)+1<<3)|0;$39$1=HEAP32[$38+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$38>>2];HEAP32[$t1+4>>2]=$39$1;$40$1=HEAP32[$t0+4>>2]|0;$44=$3+($i<<2<<3)|0;HEAP32[$44>>2]=HEAP32[$t0>>2];HEAP32[$44+4>>2]=$40$1;$45$1=HEAP32[$t1+4>>2]|0;$50=$3+(($i<<2)+1<<3)|0;HEAP32[$50>>2]=HEAP32[$t1>>2];HEAP32[$50+4>>2]=$45$1;$55=$1+(($i<<2)+2<<3)|0;$56$1=HEAP32[$55+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$55>>2];HEAP32[$t0+4>>2]=$56$1;$61=$1+(($i<<2)+3<<3)|0;$62$1=HEAP32[$61+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$61>>2];HEAP32[$t1+4>>2]=$62$1;$63$1=HEAP32[$t0+4>>2]|0;$68=$3+(($i<<2)+2<<3)|0;HEAP32[$68>>2]=HEAP32[$t0>>2];HEAP32[$68+4>>2]=$63$1;$69$1=HEAP32[$t1+4>>2]|0;$74=$3+(($i<<2)+3<<3)|0;HEAP32[$74>>2]=HEAP32[$t1>>2];HEAP32[$74+4>>2]=$69$1;label=7;break;case 7:label=8;break;case 8:$i=$i+1|0;label=4;break;case 9:label=10;break;case 10:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;$5=$5+$maskstep|0;label=2;break;case 11:STACKTOP=sp;return 0}return 0}function __ZL18icvInitCopyMRTableP13CvBtFuncTable($table){$table=$table|0;var $1=0;$1=$table;HEAP32[$1+4>>2]=336;HEAP32[$1+8>>2]=250;HEAP32[$1+12>>2]=244;HEAP32[$1+16>>2]=800;HEAP32[$1+24>>2]=578;HEAP32[$1+32>>2]=610;HEAP32[$1+48>>2]=404;HEAP32[$1+64>>2]=196;HEAP32[$1+96>>2]=466;HEAP32[$1+128>>2]=654;return}function __Z16icvCopy_16s_C4MRPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[276]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_32f_C3MRPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[260]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_32f_C4MRPKiiPii6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[256]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_64s_C3MRPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[228]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z16icvCopy_64s_C4MRPKxiPxi6CvSizePKhi($src,$srcstep,$dst,$dststep,$size,$mask,$maskstep){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$mask=$mask|0;$maskstep=$maskstep|0;var $7=0,$8=0,$13=0,$14=0,$17=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];$7=sp|0;$8=HEAP32[226]|0;$13=$7;$14=$size;HEAP32[$13>>2]=HEAP32[$14>>2];HEAP32[$13+4>>2]=HEAP32[$14+4>>2];$17=FUNCTION_TABLE_iiiiiiii[$8&1023]($src,$srcstep,$dst,$dststep,$7,$mask,$maskstep)|0;STACKTOP=sp;return $17|0}function __Z18icvGetCopyMaskFunci($elem_size){$elem_size=$elem_size|0;var label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[7262]|0)!=0){label=3;break}else{label=2;break};case 2:__ZL18icvInitCopyMRTableP13CvBtFuncTable(28912);HEAP32[7262]=1;label=3;break;case 3:return HEAP32[28912+($elem_size<<2)>>2]|0}return 0}function _cvCopy($srcarr,$dstarr,$maskarr){$srcarr=$srcarr|0;$dstarr=$dstarr|0;$maskarr=$maskarr|0;var $3=0,$pix_size=0,$src=0,$dst=0,$size=0,$src1=0,$dst1=0,$iterator=0,$node=0,$node_copy=0,$tabidx=0,$_icv_memcpy_i_=0,$_icv_memcpy_len_=0,$_icv_memcpy_dst_=0,$_icv_memcpy_src_=0,$arrs=0,$iterator1=0,$4=0,$func=0,$5=0,$coi1=0,$coi2=0,$planes=0,$planes2=0,$6=0,$src_step=0,$dst_step=0,$7=0,$func3=0,$mask=0,$src_step4=0,$dst_step5=0,$mask_step=0,$ippi_call_result=0,$8=0,$288=0,$325=0,$351=0,$354=0,$356=0,$357=0,$375=0,$378=0,$380=0,$381=0,$499=0,$500=0,$525=0,$553=0,$586=0,$591=0,$593=0,$594=0,$690=0,$703=0,$708=0,$710=0,$711=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1272|0;label=1;while(1)switch(label|0){case 1:$size=sp+64|0;$iterator=sp+72|0;$arrs=sp+88|0;$iterator1=sp+928|0;$4=sp+1152|0;$5=sp+1160|0;$coi1=sp+1168|0;$coi2=sp+1176|0;$planes=sp+1184|0;$planes2=sp+1200|0;$6=sp+1216|0;$7=sp+1224|0;$8=sp+1264|0;$3=$maskarr;$src=$srcarr;$dst=$dstarr;if(($src|0)!=0){label=2;break}else{label=11;break};case 2:if((HEAP32[$src>>2]&-65536|0)==1111621632){label=3;break}else{label=11;break};case 3:if((HEAP32[$src+24>>2]|0)>0){label=4;break}else{label=11;break};case 4:if((HEAP32[$src+20>>2]|0)>0){label=5;break}else{label=11;break};case 5:if((HEAP32[$src+16>>2]|0)!=0){label=6;break}else{label=11;break};case 6:if(($dst|0)!=0){label=7;break}else{label=11;break};case 7:if((HEAP32[$dst>>2]&-65536|0)==1111621632){label=8;break}else{label=11;break};case 8:if((HEAP32[$dst+24>>2]|0)>0){label=9;break}else{label=11;break};case 9:if((HEAP32[$dst+20>>2]|0)>0){label=10;break}else{label=11;break};case 10:if((HEAP32[$dst+16>>2]|0)!=0){label=83;break}else{label=11;break};case 11:if(($src|0)!=0){label=12;break}else{label=37;break};case 12:if((HEAP32[$src>>2]&-65536|0)==1111752704){label=13;break}else{label=37;break};case 13:if(($dst|0)!=0){label=14;break}else{label=37;break};case 14:if((HEAP32[$dst>>2]&-65536|0)==1111752704){label=15;break}else{label=37;break};case 15:$src1=$src;$dst1=$dst;HEAP32[$dst1+4>>2]=HEAP32[$src1+4>>2];_memcpy($dst1+36|0,$src1+36|0,HEAP32[$src1+4>>2]<<2)|0;HEAP32[$dst1+28>>2]=HEAP32[$src1+28>>2];HEAP32[$dst1+32>>2]=HEAP32[$src1+32>>2];_cvClearSet(HEAP32[$dst1+16>>2]|0);if((HEAP32[(HEAP32[$src1+16>>2]|0)+60>>2]|0)>=((HEAP32[$dst1+24>>2]|0)*3|0|0)){label=16;break}else{label=21;break};case 16:_cvFree_(HEAP32[$dst1+20>>2]|0);HEAP32[$dst1+20>>2]=0;if((_cvGetErrStatus()|0)<0){label=17;break}else{label=18;break};case 17:_cvError(-1,6760,12096,15192,317);label=119;break;case 18:HEAP32[$dst1+24>>2]=HEAP32[$src1+24>>2];HEAP32[$dst1+20>>2]=_cvAlloc(HEAP32[$dst1+24>>2]<<2)|0;if((_cvGetErrStatus()|0)<0){label=19;break}else{label=20;break};case 19:_cvError(-1,6760,12096,15192,320);label=119;break;case 20:label=21;break;case 21:_memset(HEAP32[$dst1+20>>2]|0,0,HEAP32[$dst1+24>>2]<<2|0);$node=_cvInitSparseMatIterator($src1,$iterator)|0;label=22;break;case 22:if(($node|0)!=0){label=23;break}else{label=36;break};case 23:$node_copy=_cvSetNew(HEAP32[$dst1+16>>2]|0)|0;$tabidx=HEAP32[$node>>2]&(HEAP32[$dst1+24>>2]|0)-1;$_icv_memcpy_len_=HEAP32[(HEAP32[$dst1+16>>2]|0)+28>>2]|0;$_icv_memcpy_dst_=$node_copy;$_icv_memcpy_src_=$node;if(($_icv_memcpy_len_&3|0)==0){label=24;break}else{label=29;break};case 24:$_icv_memcpy_i_=0;label=25;break;case 25:if($_icv_memcpy_i_>>>0<$_icv_memcpy_len_>>>0){label=26;break}else{label=28;break};case 26:HEAP32[$_icv_memcpy_dst_+$_icv_memcpy_i_>>2]=HEAP32[$_icv_memcpy_src_+$_icv_memcpy_i_>>2];label=27;break;case 27:$_icv_memcpy_i_=$_icv_memcpy_i_+4|0;label=25;break;case 28:label=34;break;case 29:$_icv_memcpy_i_=0;label=30;break;case 30:if($_icv_memcpy_i_>>>0<$_icv_memcpy_len_>>>0){label=31;break}else{label=33;break};case 31:HEAP8[$_icv_memcpy_dst_+$_icv_memcpy_i_|0]=HEAP8[$_icv_memcpy_src_+$_icv_memcpy_i_|0]|0;label=32;break;case 32:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=30;break;case 33:label=34;break;case 34:HEAP32[$node_copy+4>>2]=HEAP32[(HEAP32[$dst1+20>>2]|0)+($tabidx<<2)>>2];HEAP32[(HEAP32[$dst1+20>>2]|0)+($tabidx<<2)>>2]=$node_copy;label=35;break;case 35:$node=_cvGetNextSparseNode($iterator)|0;label=22;break;case 36:label=119;break;case 37:if(($src|0)!=0){label=38;break}else{label=40;break};case 38:if((HEAP32[$src>>2]&-65536|0)==1111687168){label=39;break}else{label=40;break};case 39:if((HEAP32[$src+16>>2]|0)!=0){label=43;break}else{label=40;break};case 40:if(($dst|0)!=0){label=41;break}else{label=63;break};case 41:if((HEAP32[$dst>>2]&-65536|0)==1111687168){label=42;break}else{label=63;break};case 42:if((HEAP32[$dst+16>>2]|0)!=0){label=43;break}else{label=63;break};case 43:$288=$arrs|0;HEAP32[$288>>2]=$src;HEAP32[$288+4>>2]=$dst;_cvInitNArrayIterator(2,$arrs|0,$3,sp+96|0,$iterator1,0)|0;if((_cvGetErrStatus()|0)<0){label=44;break}else{label=45;break};case 44:_cvError(-1,6760,12096,15192,342);label=119;break;case 45:$pix_size=((HEAP32[HEAP32[$iterator1+184>>2]>>2]&504)>>3)+1<<(47696>>>((HEAP32[HEAP32[$iterator1+184>>2]>>2]&7)<<1>>>0)&3);if(($3|0)!=0){label=56;break}else{label=46;break};case 46:$325=$iterator1+8|0;HEAP32[$325>>2]=Math_imul(HEAP32[$325>>2]|0,$pix_size)|0;if((HEAP32[$iterator1+8>>2]|0)<=80){label=47;break}else{label=51;break};case 47:label=48;break;case 48:_memcpy(HEAP32[$iterator1+20>>2]|0,HEAP32[$iterator1+16>>2]|0,HEAP32[$iterator1+8>>2]|0)|0;label=49;break;case 49:if((_cvNextNArraySlice($iterator1)|0)!=0){label=48;break}else{label=50;break};case 50:label=55;break;case 51:label=52;break;case 52:$351=HEAP32[$iterator1+16>>2]|0;$354=HEAP32[$iterator1+20>>2]|0;$356=$4;$357=$iterator1+8|0;HEAP32[$356>>2]=HEAP32[$357>>2];HEAP32[$356+4>>2]=HEAP32[$357+4>>2];__Z14icvCopy_8u_C1RPKhiPhi6CvSize($351,1073741824,$354,1073741824,$4)|0;label=53;break;case 53:if((_cvNextNArraySlice($iterator1)|0)!=0){label=52;break}else{label=54;break};case 54:label=55;break;case 55:label=62;break;case 56:$func=__Z18icvGetCopyMaskFunci($pix_size)|0;if(($func|0)!=0){label=58;break}else{label=57;break};case 57:_cvError(-210,6760,28408,15192,370);label=119;break;case 58:label=59;break;case 59:$375=HEAP32[$iterator1+16>>2]|0;$378=HEAP32[$iterator1+20>>2]|0;$380=$5;$381=$iterator1+8|0;HEAP32[$380>>2]=HEAP32[$381>>2];HEAP32[$380+4>>2]=HEAP32[$381+4>>2];FUNCTION_TABLE_iiiiiiii[$func&1023]($375,1073741824,$378,1073741824,$5,HEAP32[$iterator1+24>>2]|0,1073741824)|0;label=60;break;case 60:if((_cvNextNArraySlice($iterator1)|0)!=0){label=59;break}else{label=61;break};case 61:label=62;break;case 62:label=119;break;case 63:HEAP32[$coi1>>2]=0;HEAP32[$coi2>>2]=0;$src=_cvGetMat($src,sp|0,$coi1,0)|0;if((_cvGetErrStatus()|0)<0){label=64;break}else{label=65;break};case 64:_cvError(-1,6760,12096,15192,386);label=119;break;case 65:$dst=_cvGetMat($dst,sp+32|0,$coi2,0)|0;if((_cvGetErrStatus()|0)<0){label=66;break}else{label=67;break};case 66:_cvError(-1,6760,12096,15192,387);label=119;break;case 67:if((HEAP32[$coi1>>2]|0)!=0){label=68;break}else{label=73;break};case 68:_memset($planes|0,0,16);if(($3|0)!=0){label=69;break}else{label=70;break};case 69:_cvError(-5,6760,11272,15192,394);label=119;break;case 70:HEAP32[$planes+((HEAP32[$coi1>>2]|0)-1<<2)>>2]=$dst;_cvSplit($src,HEAP32[$planes>>2]|0,HEAP32[$planes+4>>2]|0,HEAP32[$planes+8>>2]|0,HEAP32[$planes+12>>2]|0);if((_cvGetErrStatus()|0)<0){label=71;break}else{label=72;break};case 71:_cvError(-1,6760,12096,15192,397);label=119;break;case 72:label=119;break;case 73:if((HEAP32[$coi2>>2]|0)!=0){label=74;break}else{label=79;break};case 74:_memset($planes2|0,0,16);if(($3|0)!=0){label=75;break}else{label=76;break};case 75:_cvError(-5,6760,11272,15192,405);label=119;break;case 76:HEAP32[$planes2+((HEAP32[$coi2>>2]|0)-1<<2)>>2]=$src;_cvMerge(HEAP32[$planes2>>2]|0,HEAP32[$planes2+4>>2]|0,HEAP32[$planes2+8>>2]|0,HEAP32[$planes2+12>>2]|0,$dst);if((_cvGetErrStatus()|0)<0){label=77;break}else{label=78;break};case 77:_cvError(-1,6760,12096,15192,408);label=119;break;case 78:label=119;break;case 79:label=80;break;case 80:label=81;break;case 81:label=82;break;case 82:label=83;break;case 83:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&511|0)==0){label=85;break}else{label=84;break};case 84:_cvError(-205,6760,28408,15192,415);label=119;break;case 85:if((HEAP32[$src+20>>2]|0)==(HEAP32[$dst+20>>2]|0)){label=86;break}else{label=87;break};case 86:if((HEAP32[$src+24>>2]|0)==(HEAP32[$dst+24>>2]|0)){label=88;break}else{label=87;break};case 87:_cvError(-209,6760,28408,15192,418);label=119;break;case 88:__Z12cvGetMatSizePK5CvMat($6,$src);$499=$size;$500=$6;HEAP32[$499>>2]=HEAP32[$500>>2];HEAP32[$499+4>>2]=HEAP32[$500+4>>2];$pix_size=((HEAP32[$src>>2]&504)>>3)+1<<(47696>>>((HEAP32[$src>>2]&7)<<1>>>0)&3);if(($3|0)!=0){label=98;break}else{label=89;break};case 89:$src_step=HEAP32[$src+4>>2]|0;$dst_step=HEAP32[$dst+4>>2]|0;$525=$size|0;HEAP32[$525>>2]=Math_imul(HEAP32[$525>>2]|0,$pix_size)|0;if((HEAP32[$src>>2]&HEAP32[$dst>>2]&16384|0)!=0){label=90;break}else{label=95;break};case 90:if(($src_step|0)==($dst_step|0)){label=91;break}else{label=95;break};case 91:if(($src_step|0)==(Math_imul(HEAP32[$src+24>>2]|0,$pix_size)|0)){label=92;break}else{label=95;break};case 92:$553=$size|0;HEAP32[$553>>2]=Math_imul(HEAP32[$553>>2]|0,HEAP32[$size+4>>2]|0)|0;if((HEAP32[$size>>2]|0)<=800){label=93;break}else{label=94;break};case 93:_memcpy(HEAP32[$dst+16>>2]|0,HEAP32[$src+16>>2]|0,HEAP32[$size>>2]|0)|0;label=119;break;case 94:HEAP32[$size+4>>2]=1;$dst_step=1073741824;$src_step=1073741824;label=95;break;case 95:if((HEAP32[$src+16>>2]|0)!=(HEAP32[$dst+16>>2]|0)){label=96;break}else{label=97;break};case 96:$586=HEAP32[$src+16>>2]|0;$591=HEAP32[$dst+16>>2]|0;$593=$7;$594=$size;HEAP32[$593>>2]=HEAP32[$594>>2];HEAP32[$593+4>>2]=HEAP32[$594+4>>2];__Z14icvCopy_8u_C1RPKhiPhi6CvSize($586,$src_step,$591,$dst_step,$7)|0;label=97;break;case 97:label=118;break;case 98:$func3=__Z18icvGetCopyMaskFunci($pix_size)|0;$mask=$3;$src_step4=HEAP32[$src+4>>2]|0;$dst_step5=HEAP32[$dst+4>>2]|0;if(($mask|0)!=0){label=99;break}else{label=103;break};case 99:if((HEAP32[$mask>>2]&-65536|0)==1111621632){label=100;break}else{label=103;break};case 100:if((HEAP32[$mask+24>>2]|0)>0){label=101;break}else{label=103;break};case 101:if((HEAP32[$mask+20>>2]|0)>0){label=102;break}else{label=103;break};case 102:if((HEAP32[$mask+16>>2]|0)!=0){label=106;break}else{label=103;break};case 103:$mask=_cvGetMat($mask,sp+1232|0,0,0)|0;if((_cvGetErrStatus()|0)<0){label=104;break}else{label=105;break};case 104:_cvError(-1,6760,12096,15192,455);label=119;break;case 105:label=106;break;case 106:if((HEAP32[$mask>>2]&510|0)==0){label=108;break}else{label=107;break};case 107:_cvError(-208,6760,28408,15192,457);label=119;break;case 108:if((HEAP32[$src+20>>2]|0)==(HEAP32[$mask+20>>2]|0)){label=109;break}else{label=110;break};case 109:if((HEAP32[$src+24>>2]|0)==(HEAP32[$mask+24>>2]|0)){label=111;break}else{label=110;break};case 110:_cvError(-209,6760,28408,15192,460);label=119;break;case 111:$mask_step=HEAP32[$mask+4>>2]|0;if((HEAP32[$src>>2]&HEAP32[$dst>>2]&HEAP32[$mask>>2]&16384|0)!=0){label=112;break}else{label=113;break};case 112:$690=$size|0;HEAP32[$690>>2]=Math_imul(HEAP32[$690>>2]|0,HEAP32[$size+4>>2]|0)|0;HEAP32[$size+4>>2]=1;$mask_step=1073741824;$dst_step5=1073741824;$src_step4=1073741824;label=113;break;case 113:if(($func3|0)!=0){label=115;break}else{label=114;break};case 114:_cvError(-210,6760,28408,15192,472);label=119;break;case 115:$703=HEAP32[$src+16>>2]|0;$708=HEAP32[$dst+16>>2]|0;$710=$8;$711=$size;HEAP32[$710>>2]=HEAP32[$711>>2];HEAP32[$710+4>>2]=HEAP32[$711+4>>2];$ippi_call_result=FUNCTION_TABLE_iiiiiiii[$func3&1023]($703,$src_step4,$708,$dst_step5,$8,HEAP32[$mask+16>>2]|0,$mask_step)|0;if(($ippi_call_result|0)<0){label=116;break}else{label=117;break};case 116:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,6760,10504,15192,475);label=119;break;case 117:label=118;break;case 118:label=119;break;case 119:STACKTOP=sp;return}}function __ZL21icvInitFlipHorzRTableP13CvBtFuncTable($table){$table=$table|0;var $1=0;$1=$table;HEAP32[$1+4>>2]=620;HEAP32[$1+8>>2]=568;HEAP32[$1+12>>2]=824;HEAP32[$1+16>>2]=734;HEAP32[$1+24>>2]=4;HEAP32[$1+32>>2]=200;HEAP32[$1+48>>2]=702;HEAP32[$1+64>>2]=810;HEAP32[$1+96>>2]=502;HEAP32[$1+128>>2]=268;return}function __ZL18icvFlipVert_8u_C1RPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$y=0,$i=0,$src1=0,$dst1=0,$t0=0,$t1=0,$t01=0,$t03=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$src1=$1+(Math_imul((HEAP32[$size+4>>2]|0)-1|0,$2)|0)|0;$dst1=$3+(Math_imul((HEAP32[$size+4>>2]|0)-1|0,$4)|0)|0;$y=0;label=2;break;case 2:if(($y|0)<(((HEAP32[$size+4>>2]|0)+1|0)/2|0|0)){label=3;break}else{label=19;break};case 3:$i=0;if(((($1|$3|$src1|$dst1)>>>0)%4|0|0)==0){label=4;break}else{label=13;break};case 4:label=5;break;case 5:if(($i|0)<=((HEAP32[$size>>2]|0)-16|0)){label=6;break}else{label=8;break};case 6:$t0=HEAP32[$1+$i>>2]|0;$t1=HEAP32[$src1+$i>>2]|0;HEAP32[$3+$i>>2]=$t1;HEAP32[$dst1+$i>>2]=$t0;$t0=HEAP32[$1+$i+4>>2]|0;$t1=HEAP32[$src1+$i+4>>2]|0;HEAP32[$3+$i+4>>2]=$t1;HEAP32[$dst1+$i+4>>2]=$t0;$t0=HEAP32[$1+$i+8>>2]|0;$t1=HEAP32[$src1+$i+8>>2]|0;HEAP32[$3+$i+8>>2]=$t1;HEAP32[$dst1+$i+8>>2]=$t0;$t0=HEAP32[$1+$i+12>>2]|0;$t1=HEAP32[$src1+$i+12>>2]|0;HEAP32[$3+$i+12>>2]=$t1;HEAP32[$dst1+$i+12>>2]=$t0;label=7;break;case 7:$i=$i+16|0;label=5;break;case 8:label=9;break;case 9:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=10;break}else{label=12;break};case 10:$t01=HEAP32[$1+$i>>2]|0;HEAP32[$3+$i>>2]=HEAP32[$src1+$i>>2];HEAP32[$dst1+$i>>2]=$t01;label=11;break;case 11:$i=$i+4|0;label=9;break;case 12:label=13;break;case 13:label=14;break;case 14:if(($i|0)<(HEAP32[$size>>2]|0)){label=15;break}else{label=17;break};case 15:$t03=HEAP8[$1+$i|0]|0;HEAP8[$3+$i|0]=HEAP8[$src1+$i|0]|0;HEAP8[$dst1+$i|0]=$t03;label=16;break;case 16:$i=$i+1|0;label=14;break;case 17:label=18;break;case 18:$y=$y+1|0;$1=$1+$2|0;$src1=$src1+(-$2|0)|0;$3=$3+$4|0;$dst1=$dst1+(-$4|0)|0;label=2;break;case 19:STACKTOP=sp;return 0}return 0}function __ZL18icvFlipHorz_8u_C1RPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1+$i|0]|0;HEAP8[$3+$i|0]=HEAP8[$1+($len-$i-1)|0]|0;HEAP8[$3+($len-$i-1)|0]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL18icvFlipHorz_8u_C2RPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$1+($i<<1)>>1]|0;HEAP16[$3+($i<<1)>>1]=HEAP16[$1+($len-$i-1<<1)>>1]|0;HEAP16[$3+($len-$i-1<<1)>>1]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function _cvFlip($srcarr,$dstarr,$flip_mode){$srcarr=$srcarr|0;$dstarr=$dstarr|0;$flip_mode=$flip_mode|0;var $3=0,$src=0,$dst=0,$size=0,$func=0,$pix_size=0,$coi=0,$coi1=0,$4=0,$ippi_call_result=0,$5=0,$inplace=0,$dst_data=0,$dst_step=0,$ippi_call_result2=0,$6=0,$ippi_call_result3=0,$7=0,$133=0,$134=0,$153=0,$159=0,$162=0,$166=0,$169=0,$170=0,$171=0,$227=0,$230=0,$233=0,$234=0,$249=0,$255=0,$258=0,$262=0,$265=0,$266=0,$267=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+120|0;label=1;while(1)switch(label|0){case 1:$size=sp+64|0;$coi=sp+72|0;$coi1=sp+80|0;$4=sp+88|0;$5=sp+96|0;$6=sp+104|0;$7=sp+112|0;$3=$flip_mode;$src=$srcarr;$dst=$dstarr;$func=0;if((HEAP32[6966]|0)!=0){label=3;break}else{label=2;break};case 2:__ZL21icvInitFlipHorzRTableP13CvBtFuncTable(23488);HEAP32[6966]=1;label=3;break;case 3:if(($src|0)!=0){label=4;break}else{label=8;break};case 4:if((HEAP32[$src>>2]&-65536|0)==1111621632){label=5;break}else{label=8;break};case 5:if((HEAP32[$src+24>>2]|0)>0){label=6;break}else{label=8;break};case 6:if((HEAP32[$src+20>>2]|0)>0){label=7;break}else{label=8;break};case 7:if((HEAP32[$src+16>>2]|0)!=0){label=13;break}else{label=8;break};case 8:HEAP32[$coi>>2]=0;$src=_cvGetMat($src,sp|0,$coi,0)|0;if((_cvGetErrStatus()|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-1,5800,12096,15192,926);label=49;break;case 10:if((HEAP32[$coi>>2]|0)!=0){label=11;break}else{label=12;break};case 11:_cvError(-24,5800,8328,15192,928);label=49;break;case 12:label=13;break;case 13:if(($dst|0)!=0){label=15;break}else{label=14;break};case 14:$dst=$src;label=26;break;case 15:if(($dst|0)!=0){label=16;break}else{label=20;break};case 16:if((HEAP32[$dst>>2]&-65536|0)==1111621632){label=17;break}else{label=20;break};case 17:if((HEAP32[$dst+24>>2]|0)>0){label=18;break}else{label=20;break};case 18:if((HEAP32[$dst+20>>2]|0)>0){label=19;break}else{label=20;break};case 19:if((HEAP32[$dst+16>>2]|0)!=0){label=25;break}else{label=20;break};case 20:HEAP32[$coi1>>2]=0;$dst=_cvGetMat($dst,sp+32|0,$coi1,0)|0;if((_cvGetErrStatus()|0)<0){label=21;break}else{label=22;break};case 21:_cvError(-1,5800,12096,15192,936);label=49;break;case 22:if((HEAP32[$coi1>>2]|0)!=0){label=23;break}else{label=24;break};case 23:_cvError(-24,5800,8328,15192,938);label=49;break;case 24:label=25;break;case 25:label=26;break;case 26:if(((HEAP32[$src>>2]^HEAP32[$dst>>2])&511|0)==0){label=28;break}else{label=27;break};case 27:_cvError(-205,5800,28408,15192,942);label=49;break;case 28:if((HEAP32[$src+20>>2]|0)==(HEAP32[$dst+20>>2]|0)){label=29;break}else{label=30;break};case 29:if((HEAP32[$src+24>>2]|0)==(HEAP32[$dst+24>>2]|0)){label=31;break}else{label=30;break};case 30:_cvError(-209,5800,28408,15192,945);label=49;break;case 31:__Z12cvGetMatSizePK5CvMat($4,$src);$133=$size;$134=$4;HEAP32[$133>>2]=HEAP32[$134>>2];HEAP32[$133+4>>2]=HEAP32[$134+4>>2];$pix_size=((HEAP32[$src>>2]&504)>>3)+1<<(47696>>>((HEAP32[$src>>2]&7)<<1>>>0)&3);if(($3|0)==0){label=32;break}else{label=35;break};case 32:$153=$size|0;HEAP32[$153>>2]=Math_imul(HEAP32[$153>>2]|0,$pix_size)|0;$159=HEAP32[$src+16>>2]|0;$162=HEAP32[$src+4>>2]|0;$166=HEAP32[$dst+16>>2]|0;$169=HEAP32[$dst+4>>2]|0;$170=$5;$171=$size;HEAP32[$170>>2]=HEAP32[$171>>2];HEAP32[$170+4>>2]=HEAP32[$171+4>>2];$ippi_call_result=__ZL18icvFlipVert_8u_C1RPKhiPhi6CvSize($159,$162,$166,$169,$5)|0;if(($ippi_call_result|0)<0){label=33;break}else{label=34;break};case 33:_cvError(_cvErrorFromIppStatus($ippi_call_result)|0,5800,10504,15192,955);label=49;break;case 34:label=48;break;case 35:$inplace=(HEAP32[$src+16>>2]|0)==(HEAP32[$dst+16>>2]|0)|0;$dst_data=HEAP32[$dst+16>>2]|0;$dst_step=HEAP32[$dst+4>>2]|0;$func=HEAP32[23488+($pix_size<<2)>>2]|0;if(($func|0)!=0){label=37;break}else{label=36;break};case 36:_cvError(-210,5800,28408,15192,966);label=49;break;case 37:if(($3|0)<0){label=38;break}else{label=40;break};case 38:if(($inplace|0)!=0){label=40;break}else{label=39;break};case 39:$dst_data=$dst_data+(Math_imul($dst_step,(HEAP32[$dst+20>>2]|0)-1|0)|0)|0;$dst_step=-$dst_step|0;label=40;break;case 40:$227=HEAP32[$src+16>>2]|0;$230=HEAP32[$src+4>>2]|0;$233=$6;$234=$size;HEAP32[$233>>2]=HEAP32[$234>>2];HEAP32[$233+4>>2]=HEAP32[$234+4>>2];$ippi_call_result2=FUNCTION_TABLE_iiiiii[$func&1023]($227,$230,$dst_data,$dst_step,$6)|0;if(($ippi_call_result2|0)<0){label=41;break}else{label=42;break};case 41:_cvError(_cvErrorFromIppStatus($ippi_call_result2)|0,5800,10504,15192,974);label=49;break;case 42:if(($3|0)<0){label=43;break}else{label=47;break};case 43:if(($inplace|0)!=0){label=44;break}else{label=47;break};case 44:$249=$size|0;HEAP32[$249>>2]=Math_imul(HEAP32[$249>>2]|0,$pix_size)|0;$255=HEAP32[$dst+16>>2]|0;$258=HEAP32[$dst+4>>2]|0;$262=HEAP32[$dst+16>>2]|0;$265=HEAP32[$dst+4>>2]|0;$266=$7;$267=$size;HEAP32[$266>>2]=HEAP32[$267>>2];HEAP32[$266+4>>2]=HEAP32[$267+4>>2];$ippi_call_result3=__ZL18icvFlipVert_8u_C1RPKhiPhi6CvSize($255,$258,$262,$265,$7)|0;if(($ippi_call_result3|0)<0){label=45;break}else{label=46;break};case 45:_cvError(_cvErrorFromIppStatus($ippi_call_result3)|0,5800,10504,15192,980);label=49;break;case 46:label=47;break;case 47:label=48;break;case 48:label=49;break;case 49:STACKTOP=sp;return}}function __ZL18icvFlipHorz_8u_C3RPKhiPhi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=$2>>>0|0;$4=$4>>>0|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$1+($i*3|0)|0]|0;$t1=HEAP8[$1+((($len-$i|0)*3|0)-3)|0]|0;HEAP8[$3+($i*3|0)|0]=$t1;HEAP8[$3+((($len-$i|0)*3|0)-3)|0]=$t0;$t0=HEAP8[$1+(($i*3|0)+1)|0]|0;$t1=HEAP8[$1+((($len-$i|0)*3|0)-2)|0]|0;HEAP8[$3+(($i*3|0)+1)|0]=$t1;HEAP8[$3+((($len-$i|0)*3|0)-2)|0]=$t0;$t0=HEAP8[$1+(($i*3|0)+2)|0]|0;$t1=HEAP8[$1+((($len-$i|0)*3|0)-1)|0]|0;HEAP8[$3+(($i*3|0)+2)|0]=$t1;HEAP8[$3+((($len-$i|0)*3|0)-1)|0]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+$2|0;$3=$3+$4|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_16u_C2RPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1+($i<<2)>>2]|0;HEAP32[$3+($i<<2)>>2]=HEAP32[$1+($len-$i-1<<2)>>2];HEAP32[$3+($len-$i-1<<2)>>2]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_16u_C3RPKtiPti6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/2|0;$4=($4>>>0)/2|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$1+(($i*3|0)<<1)>>1]|0;$t1=HEAP16[$1+((($len-$i|0)*3|0)-3<<1)>>1]|0;HEAP16[$3+(($i*3|0)<<1)>>1]=$t1;HEAP16[$3+((($len-$i|0)*3|0)-3<<1)>>1]=$t0;$t0=HEAP16[$1+(($i*3|0)+1<<1)>>1]|0;$t1=HEAP16[$1+((($len-$i|0)*3|0)-2<<1)>>1]|0;HEAP16[$3+(($i*3|0)+1<<1)>>1]=$t1;HEAP16[$3+((($len-$i|0)*3|0)-2<<1)>>1]=$t0;$t0=HEAP16[$1+(($i*3|0)+2<<1)>>1]|0;$t1=HEAP16[$1+((($len-$i|0)*3|0)-1<<1)>>1]|0;HEAP16[$3+(($i*3|0)+2<<1)>>1]=$t1;HEAP16[$3+((($len-$i|0)*3|0)-1<<1)>>1]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<1)|0;$3=$3+($4<<1)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_32s_C2RPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,$26=0,$27$1=0,$33=0,$34$1=0,$35$1=0,$38=0,$39$1=0,$45=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$26=$1+($i<<3)|0;$27$1=HEAP32[$26+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$26>>2];HEAP32[$t0+4>>2]=$27$1;$33=$1+($len-$i-1<<3)|0;$34$1=HEAP32[$33+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$33>>2];HEAP32[$t1+4>>2]=$34$1;$35$1=HEAP32[$t1+4>>2]|0;$38=$3+($i<<3)|0;HEAP32[$38>>2]=HEAP32[$t1>>2];HEAP32[$38+4>>2]=$35$1;$39$1=HEAP32[$t0+4>>2]|0;$45=$3+($len-$i-1<<3)|0;HEAP32[$45>>2]=HEAP32[$t0>>2];HEAP32[$45+4>>2]=$39$1;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_32s_C3RPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1+(($i*3|0)<<2)>>2]|0;$t1=HEAP32[$1+((($len-$i|0)*3|0)-3<<2)>>2]|0;HEAP32[$3+(($i*3|0)<<2)>>2]=$t1;HEAP32[$3+((($len-$i|0)*3|0)-3<<2)>>2]=$t0;$t0=HEAP32[$1+(($i*3|0)+1<<2)>>2]|0;$t1=HEAP32[$1+((($len-$i|0)*3|0)-2<<2)>>2]|0;HEAP32[$3+(($i*3|0)+1<<2)>>2]=$t1;HEAP32[$3+((($len-$i|0)*3|0)-2<<2)>>2]=$t0;$t0=HEAP32[$1+(($i*3|0)+2<<2)>>2]|0;$t1=HEAP32[$1+((($len-$i|0)*3|0)-1<<2)>>2]|0;HEAP32[$3+(($i*3|0)+2<<2)>>2]=$t1;HEAP32[$3+((($len-$i|0)*3|0)-1<<2)>>2]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_64s_C2RPKiiPii6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/4|0;$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$1+($i<<2<<2)>>2]|0;$t1=HEAP32[$1+(($len-$i<<2)-4<<2)>>2]|0;HEAP32[$3+($i<<2<<2)>>2]=$t1;HEAP32[$3+(($len-$i<<2)-4<<2)>>2]=$t0;$t0=HEAP32[$1+(($i<<2)+1<<2)>>2]|0;$t1=HEAP32[$1+(($len-$i<<2)-3<<2)>>2]|0;HEAP32[$3+(($i<<2)+1<<2)>>2]=$t1;HEAP32[$3+(($len-$i<<2)-3<<2)>>2]=$t0;$t0=HEAP32[$1+(($i<<2)+2<<2)>>2]|0;$t1=HEAP32[$1+(($len-$i<<2)-2<<2)>>2]|0;HEAP32[$3+(($i<<2)+2<<2)>>2]=$t1;HEAP32[$3+(($len-$i<<2)-2<<2)>>2]=$t0;$t0=HEAP32[$1+(($i<<2)+3<<2)>>2]|0;$t1=HEAP32[$1+(($len-$i<<2)-1<<2)>>2]|0;HEAP32[$3+(($i<<2)+3<<2)>>2]=$t1;HEAP32[$3+(($len-$i<<2)-1<<2)>>2]=$t0;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<2)|0;$3=$3+($4<<2)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __Z11cvAlignLeftii($size,$align){$size=$size|0;$align=$align|0;return $size&-$align|0}function __ZL19icvFlipHorz_64s_C3RPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,$27=0,$28$1=0,$35=0,$36$1=0,$37$1=0,$41=0,$42$1=0,$49=0,$54=0,$55$1=0,$62=0,$63$1=0,$64$1=0,$69=0,$70$1=0,$77=0,$82=0,$83$1=0,$90=0,$91$1=0,$92$1=0,$97=0,$98$1=0,$105=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$27=$1+(($i*3|0)<<3)|0;$28$1=HEAP32[$27+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$27>>2];HEAP32[$t0+4>>2]=$28$1;$35=$1+((($len-$i|0)*3|0)-3<<3)|0;$36$1=HEAP32[$35+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$35>>2];HEAP32[$t1+4>>2]=$36$1;$37$1=HEAP32[$t1+4>>2]|0;$41=$3+(($i*3|0)<<3)|0;HEAP32[$41>>2]=HEAP32[$t1>>2];HEAP32[$41+4>>2]=$37$1;$42$1=HEAP32[$t0+4>>2]|0;$49=$3+((($len-$i|0)*3|0)-3<<3)|0;HEAP32[$49>>2]=HEAP32[$t0>>2];HEAP32[$49+4>>2]=$42$1;$54=$1+(($i*3|0)+1<<3)|0;$55$1=HEAP32[$54+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$54>>2];HEAP32[$t0+4>>2]=$55$1;$62=$1+((($len-$i|0)*3|0)-2<<3)|0;$63$1=HEAP32[$62+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$62>>2];HEAP32[$t1+4>>2]=$63$1;$64$1=HEAP32[$t1+4>>2]|0;$69=$3+(($i*3|0)+1<<3)|0;HEAP32[$69>>2]=HEAP32[$t1>>2];HEAP32[$69+4>>2]=$64$1;$70$1=HEAP32[$t0+4>>2]|0;$77=$3+((($len-$i|0)*3|0)-2<<3)|0;HEAP32[$77>>2]=HEAP32[$t0>>2];HEAP32[$77+4>>2]=$70$1;$82=$1+(($i*3|0)+2<<3)|0;$83$1=HEAP32[$82+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$82>>2];HEAP32[$t0+4>>2]=$83$1;$90=$1+((($len-$i|0)*3|0)-1<<3)|0;$91$1=HEAP32[$90+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$90>>2];HEAP32[$t1+4>>2]=$91$1;$92$1=HEAP32[$t1+4>>2]|0;$97=$3+(($i*3|0)+2<<3)|0;HEAP32[$97>>2]=HEAP32[$t1>>2];HEAP32[$97+4>>2]=$92$1;$98$1=HEAP32[$t0+4>>2]|0;$105=$3+((($len-$i|0)*3|0)-1<<3)|0;HEAP32[$105>>2]=HEAP32[$t0>>2];HEAP32[$105+4>>2]=$98$1;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function __ZL19icvFlipHorz_64s_C4RPKxiPxi6CvSize($src,$srcstep,$dst,$dststep,$size){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$len=0,$t0=0,$t1=0,$12=0,$13=0,$27=0,$28$1=0,$35=0,$36$1=0,$37$1=0,$41=0,$42$1=0,$49=0,$54=0,$55$1=0,$62=0,$63$1=0,$64$1=0,$69=0,$70$1=0,$77=0,$82=0,$83$1=0,$90=0,$91$1=0,$92$1=0,$97=0,$98$1=0,$105=0,$110=0,$111$1=0,$118=0,$119$1=0,$120$1=0,$125=0,$126$1=0,$133=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$t0=sp|0;$t1=sp+8|0;$1=$src;$2=$srcstep;$3=$dst;$4=$dststep;$len=HEAP32[$size>>2]|0;$2=($2>>>0)/8|0;$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=9;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<(($len+1|0)/2|0|0)){label=5;break}else{label=7;break};case 5:$27=$1+($i<<2<<3)|0;$28$1=HEAP32[$27+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$27>>2];HEAP32[$t0+4>>2]=$28$1;$35=$1+(($len-$i<<2)-4<<3)|0;$36$1=HEAP32[$35+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$35>>2];HEAP32[$t1+4>>2]=$36$1;$37$1=HEAP32[$t1+4>>2]|0;$41=$3+($i<<2<<3)|0;HEAP32[$41>>2]=HEAP32[$t1>>2];HEAP32[$41+4>>2]=$37$1;$42$1=HEAP32[$t0+4>>2]|0;$49=$3+(($len-$i<<2)-4<<3)|0;HEAP32[$49>>2]=HEAP32[$t0>>2];HEAP32[$49+4>>2]=$42$1;$54=$1+(($i<<2)+1<<3)|0;$55$1=HEAP32[$54+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$54>>2];HEAP32[$t0+4>>2]=$55$1;$62=$1+(($len-$i<<2)-3<<3)|0;$63$1=HEAP32[$62+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$62>>2];HEAP32[$t1+4>>2]=$63$1;$64$1=HEAP32[$t1+4>>2]|0;$69=$3+(($i<<2)+1<<3)|0;HEAP32[$69>>2]=HEAP32[$t1>>2];HEAP32[$69+4>>2]=$64$1;$70$1=HEAP32[$t0+4>>2]|0;$77=$3+(($len-$i<<2)-3<<3)|0;HEAP32[$77>>2]=HEAP32[$t0>>2];HEAP32[$77+4>>2]=$70$1;$82=$1+(($i<<2)+2<<3)|0;$83$1=HEAP32[$82+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$82>>2];HEAP32[$t0+4>>2]=$83$1;$90=$1+(($len-$i<<2)-2<<3)|0;$91$1=HEAP32[$90+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$90>>2];HEAP32[$t1+4>>2]=$91$1;$92$1=HEAP32[$t1+4>>2]|0;$97=$3+(($i<<2)+2<<3)|0;HEAP32[$97>>2]=HEAP32[$t1>>2];HEAP32[$97+4>>2]=$92$1;$98$1=HEAP32[$t0+4>>2]|0;$105=$3+(($len-$i<<2)-2<<3)|0;HEAP32[$105>>2]=HEAP32[$t0>>2];HEAP32[$105+4>>2]=$98$1;$110=$1+(($i<<2)+3<<3)|0;$111$1=HEAP32[$110+4>>2]|0;HEAP32[$t0>>2]=HEAP32[$110>>2];HEAP32[$t0+4>>2]=$111$1;$118=$1+(($len-$i<<2)-1<<3)|0;$119$1=HEAP32[$118+4>>2]|0;HEAP32[$t1>>2]=HEAP32[$118>>2];HEAP32[$t1+4>>2]=$119$1;$120$1=HEAP32[$t1+4>>2]|0;$125=$3+(($i<<2)+3<<3)|0;HEAP32[$125>>2]=HEAP32[$t1>>2];HEAP32[$125+4>>2]=$120$1;$126$1=HEAP32[$t0+4>>2]|0;$133=$3+(($len-$i<<2)-1<<3)|0;HEAP32[$133>>2]=HEAP32[$t0>>2];HEAP32[$133+4>>2]=$126$1;label=6;break;case 6:$i=$i+1|0;label=4;break;case 7:label=8;break;case 8:$1=$1+($2<<3)|0;$3=$3+($4<<3)|0;label=2;break;case 9:STACKTOP=sp;return 0}return 0}function _cvCreateMemStorage($block_size){$block_size=$block_size|0;var $storage=0,label=0;label=1;while(1)switch(label|0){case 1:$storage=0;$storage=_cvAlloc(24)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,6736,11992,15152,116);label=6;break;case 3:__ZL17icvInitMemStorageP12CvMemStoragei($storage,$block_size);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,6736,11992,15152,117);label=6;break;case 5:label=6;break;case 6:if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvFree_($storage);$storage=0;label=8;break;case 8:return $storage|0}return 0}function __ZL17icvInitMemStorageP12CvMemStoragei($storage,$block_size){$storage=$storage|0;$block_size=$block_size|0;var $1=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;$2=$block_size;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,17840,28392,15152,90);label=6;break;case 3:if(($2|0)<=0){label=4;break}else{label=5;break};case 4:$2=65408;label=5;break;case 5:$2=__Z7cvAlignii($2,8)|0;_memset($1|0,0,24);HEAP32[$1>>2]=1116274688;HEAP32[$1+16>>2]=$2;label=6;break;case 6:return}}function _cvReleaseMemStorage($storage){$storage=$storage|0;var $1=0,$st=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6288,28392,15152,216);label=8;break;case 3:$st=HEAP32[$1>>2]|0;HEAP32[$1>>2]=0;if(($st|0)!=0){label=4;break}else{label=7;break};case 4:__ZL20icvDestroyMemStorageP12CvMemStorage($st);if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6288,11992,15152,223);label=8;break;case 6:_cvFree_($st);$st=0;label=7;break;case 7:label=8;break;case 8:return}}function __ZL20icvDestroyMemStorageP12CvMemStorage($storage){$storage=$storage|0;var $1=0,$k=0,$block=0,$dst_top=0,$temp=0,$55=0,$59=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;$k=0;$dst_top=0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,16632,28392,15152,166);label=18;break;case 3:if((HEAP32[$1+12>>2]|0)!=0){label=4;break}else{label=5;break};case 4:$dst_top=HEAP32[(HEAP32[$1+12>>2]|0)+8>>2]|0;label=5;break;case 5:$block=HEAP32[$1+4>>2]|0;label=6;break;case 6:if(($block|0)!=0){label=7;break}else{label=17;break};case 7:$temp=$block;$block=HEAP32[$block+4>>2]|0;if((HEAP32[$1+12>>2]|0)!=0){label=8;break}else{label=14;break};case 8:if(($dst_top|0)!=0){label=9;break}else{label=12;break};case 9:HEAP32[$temp>>2]=$dst_top;HEAP32[$temp+4>>2]=HEAP32[$dst_top+4>>2];if((HEAP32[$temp+4>>2]|0)!=0){label=10;break}else{label=11;break};case 10:HEAP32[HEAP32[$temp+4>>2]>>2]=$temp;label=11;break;case 11:$55=$temp;HEAP32[$dst_top+4>>2]=$55;$dst_top=$55;label=13;break;case 12:$59=$temp;HEAP32[(HEAP32[$1+12>>2]|0)+8>>2]=$59;HEAP32[(HEAP32[$1+12>>2]|0)+4>>2]=$59;$dst_top=$59;HEAP32[$temp+4>>2]=0;HEAP32[$temp>>2]=0;HEAP32[$1+20>>2]=(HEAP32[$1+16>>2]|0)-8;label=13;break;case 13:label=15;break;case 14:_cvFree_($temp);$temp=0;label=15;break;case 15:label=16;break;case 16:$k=$k+1|0;label=6;break;case 17:HEAP32[$1+4>>2]=0;HEAP32[$1+8>>2]=0;HEAP32[$1+20>>2]=0;label=18;break;case 18:return}}function _cvSaveMemStoragePos($storage,$pos){$storage=$storage|0;$pos=$pos|0;var $1=0,$2=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;$2=$pos;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if(($2|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,6056,28392,15152,330);label=5;break;case 4:HEAP32[$2>>2]=HEAP32[$1+8>>2];HEAP32[$2+4>>2]=HEAP32[$1+20>>2];label=5;break;case 5:return}}function _cvRestoreMemStoragePos($storage,$pos){$storage=$storage|0;$pos=$pos|0;var $1=0,$2=0,$50=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;$2=$pos;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if(($2|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,5896,28392,15152,348);label=12;break;case 4:if((HEAP32[$2+4>>2]|0)>(HEAP32[$1+16>>2]|0)){label=5;break}else{label=6;break};case 5:_cvError(-201,5896,28392,15152,350);label=12;break;case 6:HEAP32[$1+8>>2]=HEAP32[$2>>2];HEAP32[$1+20>>2]=HEAP32[$2+4>>2];if((HEAP32[$1+8>>2]|0)!=0){label=11;break}else{label=7;break};case 7:HEAP32[$1+8>>2]=HEAP32[$1+4>>2];if((HEAP32[$1+8>>2]|0)!=0){label=8;break}else{label=9;break};case 8:$50=(HEAP32[$1+16>>2]|0)-8|0;label=10;break;case 9:$50=0;label=10;break;case 10:HEAP32[$1+20>>2]=$50;label=11;break;case 11:label=12;break;case 12:return}}function _cvMemStorageAlloc($storage,$size){$storage=$storage|0;$size=$size|0;var $1=0,$2=0,$ptr=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$storage;$2=$size;$ptr=0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,5840,7584,15152,394);label=12;break;case 3:if($2>>>0>2147483647){label=4;break}else{label=5;break};case 4:_cvError(-211,5840,15928,15152,397);label=12;break;case 5:if((HEAP32[$1+20>>2]|0)>>>0<$2>>>0){label=6;break}else{label=11;break};case 6:if((__Z11cvAlignLeftii((HEAP32[$1+16>>2]|0)-8|0,8)|0)>>>0<$2>>>0){label=7;break}else{label=8;break};case 7:_cvError(-211,5840,15720,15152,405);label=12;break;case 8:__ZL17icvGoNextMemBlockP12CvMemStorage($1);if((_cvGetErrStatus()|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-1,5840,11992,15152,407);label=12;break;case 10:label=11;break;case 11:$ptr=(HEAP32[$1+8>>2]|0)+(HEAP32[$1+16>>2]|0)+(-(HEAP32[$1+20>>2]|0)|0)|0;HEAP32[$1+20>>2]=__Z11cvAlignLeftii((HEAP32[$1+20>>2]|0)-$2|0,8)|0;label=12;break;case 12:return $ptr|0}return 0}function _cvGetSeqElem($seq,$index){$seq=$seq|0;$index=$index|0;var $1=0,$2=0,$3=0,$block=0,$total=0,$17=0,$27=0,$49=0,$80=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$seq;$3=$index;$total=HEAP32[$2+24>>2]|0;if($3>>>0>=$total>>>0){label=2;break}else{label=11;break};case 2:if(($3|0)<0){label=3;break}else{label=4;break};case 3:$17=$total;label=5;break;case 4:$17=0;label=5;break;case 5:$3=$3+$17|0;if(($3|0)>=($total|0)){label=6;break}else{label=7;break};case 6:$27=$total;label=8;break;case 7:$27=0;label=8;break;case 8:$3=$3-$27|0;if($3>>>0>=$total>>>0){label=9;break}else{label=10;break};case 9:$1=0;label=21;break;case 10:label=11;break;case 11:$block=HEAP32[$2+52>>2]|0;if(($3+$3|0)<=($total|0)){label=12;break}else{label=16;break};case 12:label=13;break;case 13:$49=HEAP32[$block+12>>2]|0;if(($3|0)>=($49|0)){label=14;break}else{label=15;break};case 14:$block=HEAP32[$block+4>>2]|0;$3=$3-$49|0;label=13;break;case 15:label=20;break;case 16:label=17;break;case 17:$block=HEAP32[$block>>2]|0;$total=$total-(HEAP32[$block+12>>2]|0)|0;label=18;break;case 18:if(($3|0)<($total|0)){label=17;break}else{label=19;break};case 19:$3=$3-$total|0;label=20;break;case 20:$80=HEAP32[$block+16>>2]|0;$1=$80+(Math_imul($3,HEAP32[$2+28>>2]|0)|0)|0;label=21;break;case 21:return $1|0}return 0}function _cvSliceLength($slice,$seq){$slice=$slice|0;$seq=$seq|0;var $total=0,$length=0,$18=0,$27=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$slice;$slice=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$slice>>2]=HEAP32[tempParam>>2];HEAP32[$slice+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$total=HEAP32[$seq+24>>2]|0;$length=(HEAP32[$slice+4>>2]|0)-(HEAP32[$slice>>2]|0)|0;if(($length|0)!=0){label=2;break}else{label=7;break};case 2:if((HEAP32[$slice>>2]|0)<0){label=3;break}else{label=4;break};case 3:$18=$slice|0;HEAP32[$18>>2]=(HEAP32[$18>>2]|0)+$total;label=4;break;case 4:if((HEAP32[$slice+4>>2]|0)<=0){label=5;break}else{label=6;break};case 5:$27=$slice+4|0;HEAP32[$27>>2]=(HEAP32[$27>>2]|0)+$total;label=6;break;case 6:$length=(HEAP32[$slice+4>>2]|0)-(HEAP32[$slice>>2]|0)|0;label=7;break;case 7:if(($length|0)<0){label=8;break}else{label=9;break};case 8:$length=$length+$total|0;label=12;break;case 9:if(($length|0)>($total|0)){label=10;break}else{label=11;break};case 10:$length=$total;label=11;break;case 11:label=12;break;case 12:STACKTOP=sp;return $length|0}return 0}function __ZL17icvGoNextMemBlockP12CvMemStorage($storage){$storage=$storage|0;var $1=0,$block=0,$parent=0,$parent_pos=0,$99=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$parent_pos=sp|0;$1=$storage;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,17864,28392,15152,266);label=24;break;case 3:if((HEAP32[$1+8>>2]|0)!=0){label=4;break}else{label=5;break};case 4:if((HEAP32[(HEAP32[$1+8>>2]|0)+4>>2]|0)!=0){label=21;break}else{label=5;break};case 5:if((HEAP32[$1+12>>2]|0)!=0){label=9;break}else{label=6;break};case 6:$block=_cvAlloc(HEAP32[$1+16>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,17864,11992,15152,274);label=24;break;case 8:label=17;break;case 9:$parent=HEAP32[$1+12>>2]|0;_cvSaveMemStoragePos($parent,$parent_pos);__ZL17icvGoNextMemBlockP12CvMemStorage($parent);if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,17864,11992,15152,282);label=24;break;case 11:$block=HEAP32[$parent+8>>2]|0;_cvRestoreMemStoragePos($parent,$parent_pos);if(($block|0)==(HEAP32[$parent+8>>2]|0)){label=12;break}else{label=13;break};case 12:HEAP32[$parent+4>>2]=0;HEAP32[$parent+8>>2]=0;HEAP32[$parent+20>>2]=0;label=16;break;case 13:HEAP32[(HEAP32[$parent+8>>2]|0)+4>>2]=HEAP32[$block+4>>2];if((HEAP32[$block+4>>2]|0)!=0){label=14;break}else{label=15;break};case 14:HEAP32[HEAP32[$block+4>>2]>>2]=HEAP32[$parent+8>>2];label=15;break;case 15:label=16;break;case 16:label=17;break;case 17:HEAP32[$block+4>>2]=0;HEAP32[$block>>2]=HEAP32[$1+8>>2];if((HEAP32[$1+8>>2]|0)!=0){label=18;break}else{label=19;break};case 18:HEAP32[(HEAP32[$1+8>>2]|0)+4>>2]=$block;label=20;break;case 19:$99=$block;HEAP32[$1+4>>2]=$99;HEAP32[$1+8>>2]=$99;label=20;break;case 20:label=21;break;case 21:if((HEAP32[(HEAP32[$1+8>>2]|0)+4>>2]|0)!=0){label=22;break}else{label=23;break};case 22:HEAP32[$1+8>>2]=HEAP32[(HEAP32[$1+8>>2]|0)+4>>2];label=23;break;case 23:HEAP32[$1+20>>2]=(HEAP32[$1+16>>2]|0)-8;label=24;break;case 24:STACKTOP=sp;return}}function _cvCreateSeq($seq_flags,$header_size,$elem_size,$storage){$seq_flags=$seq_flags|0;$header_size=$header_size|0;$elem_size=$elem_size|0;$storage=$storage|0;var $1=0,$2=0,$3=0,$4=0,$seq=0,$elemtype=0,$typesize=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq_flags;$2=$header_size;$3=$elem_size;$4=$storage;$seq=0;if(($4|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6920,28392,15152,454);label=15;break;case 3:if(($2|0)<56){label=5;break}else{label=4;break};case 4:if(($3|0)<=0){label=5;break}else{label=6;break};case 5:_cvError(-201,6920,28392,15152,456);label=15;break;case 6:$seq=_cvMemStorageAlloc($4,$2)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6920,11992,15152,459);label=15;break;case 8:_memset($seq|0,0,$2|0);HEAP32[$seq+4>>2]=$2;HEAP32[$seq>>2]=$1&65535|1117323264;$elemtype=$1&511;$typesize=(($elemtype&504)>>3)+1<<(47696>>>(($elemtype&7)<<1>>>0)&3);if(($elemtype|0)!=0){label=9;break}else{label=12;break};case 9:if(($typesize|0)!=0){label=10;break}else{label=12;break};case 10:if(($typesize|0)!=($3|0)){label=11;break}else{label=12;break};case 11:_cvError(-201,6920,14312,15152,472);label=15;break;case 12:HEAP32[$seq+28>>2]=$3;HEAP32[$seq+44>>2]=$4;_cvSetSeqBlockSize($seq,1024/($3|0)|0);if((_cvGetErrStatus()|0)<0){label=13;break}else{label=14;break};case 13:_cvError(-1,6920,11992,15152,477);label=15;break;case 14:label=15;break;case 15:return $seq|0}return 0}function _cvSetSeqBlockSize($seq,$delta_elements){$seq=$seq|0;$delta_elements=$delta_elements|0;var $1=0,$2=0,$elem_size=0,$useful_block_size=0,$38=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$2=$delta_elements;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1+44>>2]|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,6896,28392,15152,498);label=16;break;case 4:if(($2|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-211,6896,28392,15152,500);label=16;break;case 6:$useful_block_size=__Z11cvAlignLeftii((HEAP32[(HEAP32[$1+44>>2]|0)+16>>2]|0)-8-20|0,8)|0;$elem_size=HEAP32[$1+28>>2]|0;if(($2|0)==0){label=7;break}else{label=11;break};case 7:$2=1024/($elem_size|0)|0;if(($2|0)<1){label=8;break}else{label=9;break};case 8:$38=1;label=10;break;case 9:$38=$2;label=10;break;case 10:$2=$38;label=11;break;case 11:if((Math_imul($2,$elem_size)|0)>($useful_block_size|0)){label=12;break}else{label=15;break};case 12:$2=($useful_block_size|0)/($elem_size|0)|0;if(($2|0)==0){label=13;break}else{label=14;break};case 13:_cvError(-211,6896,13384,15152,516);label=16;break;case 14:label=15;break;case 15:HEAP32[$1+40>>2]=$2;label=16;break;case 16:return}}function _cvStartReadSeq($seq,$reader,$reverse){$seq=$seq|0;$reader=$reader|0;$reverse=$reverse|0;var $1=0,$2=0,$first_block=0,$last_block=0,$temp=0,$46=0,$96=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$2=$reader;if(($2|0)!=0){label=2;break}else{label=3;break};case 2:HEAP32[$2+4>>2]=0;HEAP32[$2+8>>2]=0;HEAP32[$2+16>>2]=0;HEAP32[$2+20>>2]=0;HEAP32[$2+12>>2]=0;label=3;break;case 3:if(($1|0)!=0){label=4;break}else{label=5;break};case 4:if(($2|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-27,6696,28392,15152,1104);label=13;break;case 6:HEAP32[$2>>2]=32;HEAP32[$2+4>>2]=$1;$first_block=HEAP32[$1+52>>2]|0;if(($first_block|0)!=0){label=7;break}else{label=11;break};case 7:$last_block=HEAP32[$first_block>>2]|0;HEAP32[$2+12>>2]=HEAP32[$first_block+16>>2];$46=HEAP32[$last_block+16>>2]|0;HEAP32[$2+28>>2]=$46+(Math_imul((HEAP32[$last_block+12>>2]|0)-1|0,HEAP32[$1+28>>2]|0)|0);HEAP32[$2+24>>2]=HEAP32[(HEAP32[$1+52>>2]|0)+8>>2];if(($reverse|0)!=0){label=8;break}else{label=9;break};case 8:$temp=HEAP32[$2+12>>2]|0;HEAP32[$2+12>>2]=HEAP32[$2+28>>2];HEAP32[$2+28>>2]=$temp;HEAP32[$2+8>>2]=$last_block;label=10;break;case 9:HEAP32[$2+8>>2]=$first_block;label=10;break;case 10:HEAP32[$2+16>>2]=HEAP32[(HEAP32[$2+8>>2]|0)+16>>2];$96=HEAP32[$2+16>>2]|0;HEAP32[$2+20>>2]=$96+(Math_imul(HEAP32[(HEAP32[$2+8>>2]|0)+12>>2]|0,HEAP32[$1+28>>2]|0)|0);label=12;break;case 11:HEAP32[$2+24>>2]=0;HEAP32[$2+8>>2]=0;HEAP32[$2+20>>2]=0;HEAP32[$2+16>>2]=0;HEAP32[$2+28>>2]=0;HEAP32[$2+12>>2]=0;label=12;break;case 12:label=13;break;case 13:return}}function _cvSetSeqReaderPos($reader,$index,$is_relative){$reader=$reader|0;$index=$index|0;$is_relative=$is_relative|0;var $1=0,$2=0,$block=0,$elem_size=0,$count=0,$total=0,$ptr=0,$61=0,$81=0,$106=0,$129=0,$173=0,$178=0,$183=0,$220=0,$230=0,$236=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$reader;$2=$index;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1+4>>2]|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,6624,28392,15152,1218);label=39;break;case 4:$total=HEAP32[(HEAP32[$1+4>>2]|0)+24>>2]|0;$elem_size=HEAP32[(HEAP32[$1+4>>2]|0)+28>>2]|0;if(($is_relative|0)!=0){label=28;break}else{label=5;break};case 5:if(($2|0)<0){label=6;break}else{label=9;break};case 6:if(($2|0)<(-$total|0)){label=7;break}else{label=8;break};case 7:_cvError(-211,6624,28392,15152,1228);label=39;break;case 8:$2=$2+$total|0;label=14;break;case 9:if(($2|0)>=($total|0)){label=10;break}else{label=13;break};case 10:$2=$2-$total|0;if(($2|0)>=($total|0)){label=11;break}else{label=12;break};case 11:_cvError(-211,6624,28392,15152,1235);label=39;break;case 12:label=13;break;case 13:label=14;break;case 14:$block=HEAP32[(HEAP32[$1+4>>2]|0)+52>>2]|0;$61=HEAP32[$block+12>>2]|0;$count=$61;if(($2|0)>=($61|0)){label=15;break}else{label=25;break};case 15:if(($2+$2|0)<=($total|0)){label=16;break}else{label=20;break};case 16:label=17;break;case 17:$block=HEAP32[$block+4>>2]|0;$2=$2-$count|0;label=18;break;case 18:$81=HEAP32[$block+12>>2]|0;$count=$81;if(($2|0)>=($81|0)){label=17;break}else{label=19;break};case 19:label=24;break;case 20:label=21;break;case 21:$block=HEAP32[$block>>2]|0;$total=$total-(HEAP32[$block+12>>2]|0)|0;label=22;break;case 22:if(($2|0)<($total|0)){label=21;break}else{label=23;break};case 23:$2=$2-$total|0;label=24;break;case 24:label=25;break;case 25:$106=HEAP32[$block+16>>2]|0;HEAP32[$1+12>>2]=$106+(Math_imul($2,$elem_size)|0);if((HEAP32[$1+8>>2]|0)!=($block|0)){label=26;break}else{label=27;break};case 26:HEAP32[$1+8>>2]=$block;HEAP32[$1+16>>2]=HEAP32[$block+16>>2];$129=HEAP32[$block+16>>2]|0;HEAP32[$1+20>>2]=$129+(Math_imul(HEAP32[$block+12>>2]|0,$elem_size)|0);label=27;break;case 27:label=38;break;case 28:$ptr=HEAP32[$1+12>>2]|0;$2=Math_imul($2,$elem_size)|0;$block=HEAP32[$1+8>>2]|0;if(($2|0)>0){label=29;break}else{label=33;break};case 29:label=30;break;case 30:if(($ptr+$2|0)>>>0>=(HEAP32[$1+20>>2]|0)>>>0){label=31;break}else{label=32;break};case 31:$2=$2-((HEAP32[$1+20>>2]|0)-$ptr)|0;$173=HEAP32[$block+4>>2]|0;$block=$173;HEAP32[$1+8>>2]=$173;$178=HEAP32[$block+16>>2]|0;$ptr=$178;HEAP32[$1+16>>2]=$178;$183=HEAP32[$block+16>>2]|0;HEAP32[$1+20>>2]=$183+(Math_imul(HEAP32[$block+12>>2]|0,$elem_size)|0);label=30;break;case 32:HEAP32[$1+12>>2]=$ptr+$2;label=37;break;case 33:label=34;break;case 34:if(($ptr+$2|0)>>>0<(HEAP32[$1+16>>2]|0)>>>0){label=35;break}else{label=36;break};case 35:$2=$2+($ptr-(HEAP32[$1+16>>2]|0))|0;$220=HEAP32[$block>>2]|0;$block=$220;HEAP32[$1+8>>2]=$220;HEAP32[$1+16>>2]=HEAP32[$block+16>>2];$230=HEAP32[$block+16>>2]|0;$236=$230+(Math_imul(HEAP32[$block+12>>2]|0,$elem_size)|0)|0;$ptr=$236;HEAP32[$1+20>>2]=$236;label=34;break;case 36:HEAP32[$1+12>>2]=$ptr+$2;label=37;break;case 37:label=38;break;case 38:label=39;break;case 39:return}}function __ZL10icvGrowSeqP5CvSeqi($seq,$in_front_of){$seq=$seq|0;$in_front_of=$in_front_of|0;var $1=0,$2=0,$block=0,$elem_size=0,$delta_elems=0,$storage=0,$delta=0,$delta1=0,$small_block_size=0,$delta2=0,$84=0,$107=0,$124=0,$126=0,$138=0,$140=0,$149=0,$199=0,$217=0,$263=0,$278=0,$293=0,$304=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$2=$in_front_of;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,18312,28392,15152,748);label=44;break;case 3:$block=HEAP32[$1+48>>2]|0;if(($block|0)!=0){label=26;break}else{label=4;break};case 4:$elem_size=HEAP32[$1+28>>2]|0;$delta_elems=HEAP32[$1+40>>2]|0;$storage=HEAP32[$1+44>>2]|0;if((HEAP32[$1+24>>2]|0)>=($delta_elems<<2|0)){label=5;break}else{label=6;break};case 5:_cvSetSeqBlockSize($1,$delta_elems<<1);label=6;break;case 6:if(($storage|0)!=0){label=8;break}else{label=7;break};case 7:_cvError(-27,18312,7464,15152,761);label=44;break;case 8:if(((HEAP32[$storage+8>>2]|0)+(HEAP32[$storage+16>>2]|0)+(-(HEAP32[$storage+20>>2]|0)|0)-(HEAP32[$1+32>>2]|0)|0)>>>0<8){label=9;break}else{label=12;break};case 9:if((HEAP32[$storage+20>>2]|0)>=(HEAP32[$1+28>>2]|0)){label=10;break}else{label=12;break};case 10:if(($2|0)!=0){label=12;break}else{label=11;break};case 11:$delta=(HEAP32[$storage+20>>2]|0)/($elem_size|0)|0;$delta=Math_imul(($delta|0)>($delta_elems|0)?$delta_elems:$delta,$elem_size)|0;$84=$1+32|0;HEAP32[$84>>2]=(HEAP32[$84>>2]|0)+$delta;HEAP32[$storage+20>>2]=__Z11cvAlignLeftii((HEAP32[$storage+8>>2]|0)+(HEAP32[$storage+16>>2]|0)-(HEAP32[$1+32>>2]|0)|0,8)|0;label=44;break;case 12:$107=Math_imul($elem_size,$delta_elems)|0;$delta1=$107+(__Z7cvAlignii(20,8)|0)|0;if((HEAP32[$storage+20>>2]|0)<($delta1|0)){label=13;break}else{label=22;break};case 13:if(1<(($delta_elems|0)/3|0|0)){label=14;break}else{label=15;break};case 14:$124=($delta_elems|0)/3|0;label=16;break;case 15:$124=1;label=16;break;case 16:$126=Math_imul($124,$elem_size)|0;$small_block_size=$126+(__Z7cvAlignii(20,8)|0)|0;if((HEAP32[$storage+20>>2]|0)>=($small_block_size+8|0)){label=17;break}else{label=18;break};case 17:$138=HEAP32[$storage+20>>2]|0;$140=$138-(__Z7cvAlignii(20,8)|0)|0;$delta1=($140|0)/(HEAP32[$1+28>>2]|0)|0;$149=Math_imul($delta1,HEAP32[$1+28>>2]|0)|0;$delta1=$149+(__Z7cvAlignii(20,8)|0)|0;label=21;break;case 18:__ZL17icvGoNextMemBlockP12CvMemStorage($storage);if((_cvGetErrStatus()|0)<0){label=19;break}else{label=20;break};case 19:_cvError(-1,18312,11992,15152,794);label=44;break;case 20:label=21;break;case 21:label=22;break;case 22:$block=_cvMemStorageAlloc($storage,$delta1)|0;if((_cvGetErrStatus()|0)<0){label=23;break}else{label=24;break};case 23:_cvError(-1,18312,11992,15152,799);label=44;break;case 24:HEAP32[$block+16>>2]=__Z10cvAlignPtrPKvi($block+20|0,8)|0;HEAP32[$block+12>>2]=$delta1-(__Z7cvAlignii(20,8)|0);HEAP32[$block+4>>2]=0;HEAP32[$block>>2]=0;label=25;break;case 25:label=27;break;case 26:HEAP32[$1+48>>2]=HEAP32[$block+4>>2];label=27;break;case 27:if((HEAP32[$1+52>>2]|0)!=0){label=29;break}else{label=28;break};case 28:HEAP32[$1+52>>2]=$block;$199=$block;HEAP32[$block+4>>2]=$199;HEAP32[$block>>2]=$199;label=30;break;case 29:HEAP32[$block>>2]=HEAP32[HEAP32[$1+52>>2]>>2];HEAP32[$block+4>>2]=HEAP32[$1+52>>2];$217=$block;HEAP32[HEAP32[$block+4>>2]>>2]=$217;HEAP32[(HEAP32[$block>>2]|0)+4>>2]=$217;label=30;break;case 30:if(($2|0)!=0){label=35;break}else{label=31;break};case 31:HEAP32[$1+36>>2]=HEAP32[$block+16>>2];HEAP32[$1+32>>2]=(HEAP32[$block+16>>2]|0)+(HEAP32[$block+12>>2]|0);if(($block|0)==(HEAP32[$block>>2]|0)){label=32;break}else{label=33;break};case 32:$263=0;label=34;break;case 33:$263=(HEAP32[(HEAP32[$block>>2]|0)+8>>2]|0)+(HEAP32[(HEAP32[$block>>2]|0)+12>>2]|0)|0;label=34;break;case 34:HEAP32[$block+8>>2]=$263;label=43;break;case 35:$delta2=(HEAP32[$block+12>>2]|0)/(HEAP32[$1+28>>2]|0)|0;$278=$block+16|0;HEAP32[$278>>2]=(HEAP32[$278>>2]|0)+(HEAP32[$block+12>>2]|0);if(($block|0)!=(HEAP32[$block>>2]|0)){label=36;break}else{label=37;break};case 36:HEAP32[$1+52>>2]=$block;label=38;break;case 37:$293=HEAP32[$block+16>>2]|0;HEAP32[$1+36>>2]=$293;HEAP32[$1+32>>2]=$293;label=38;break;case 38:HEAP32[$block+8>>2]=0;label=39;break;case 39:$304=$block+8|0;HEAP32[$304>>2]=(HEAP32[$304>>2]|0)+$delta2;$block=HEAP32[$block+4>>2]|0;if(($block|0)==(HEAP32[$1+52>>2]|0)){label=40;break}else{label=41;break};case 40:label=42;break;case 41:label=39;break;case 42:label=43;break;case 43:HEAP32[$block+12>>2]=0;label=44;break;case 44:return}}function _cvChangeSeqBlock($_reader,$direction){$_reader=$_reader|0;$direction=$direction|0;var $reader=0,$38=0,$64=0,label=0;label=1;while(1)switch(label|0){case 1:$reader=$_reader;if(($reader|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6672,28392,15152,1158);label=7;break;case 3:if(($direction|0)>0){label=4;break}else{label=5;break};case 4:HEAP32[$reader+8>>2]=HEAP32[(HEAP32[$reader+8>>2]|0)+4>>2];HEAP32[$reader+12>>2]=HEAP32[(HEAP32[$reader+8>>2]|0)+16>>2];label=6;break;case 5:HEAP32[$reader+8>>2]=HEAP32[HEAP32[$reader+8>>2]>>2];$38=HEAP32[(HEAP32[$reader+8>>2]|0)+16>>2]|0;HEAP32[$reader+12>>2]=$38+(Math_imul((HEAP32[(HEAP32[$reader+8>>2]|0)+12>>2]|0)-1|0,HEAP32[(HEAP32[$reader+4>>2]|0)+28>>2]|0)|0);label=6;break;case 6:HEAP32[$reader+16>>2]=HEAP32[(HEAP32[$reader+8>>2]|0)+16>>2];$64=HEAP32[$reader+16>>2]|0;HEAP32[$reader+20>>2]=$64+(Math_imul(HEAP32[(HEAP32[$reader+8>>2]|0)+12>>2]|0,HEAP32[(HEAP32[$reader+4>>2]|0)+28>>2]|0)|0);label=7;break;case 7:return}}function __ZL15icvFreeSeqBlockP5CvSeqi($seq,$in_front_of){$seq=$seq|0;$in_front_of=$in_front_of|0;var $1=0,$block=0,$delta=0,$20=0,$71=0,$81=0,$101=0,$108=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$block=HEAP32[$1+52>>2]|0;if(($block|0)==(HEAP32[$block>>2]|0)){label=2;break}else{label=3;break};case 2:$20=(HEAP32[$1+32>>2]|0)-(HEAP32[$block+16>>2]|0)|0;HEAP32[$block+12>>2]=$20+(Math_imul(HEAP32[$block+8>>2]|0,HEAP32[$1+28>>2]|0)|0);HEAP32[$block+16>>2]=(HEAP32[$1+32>>2]|0)+(-(HEAP32[$block+12>>2]|0)|0);HEAP32[$1+52>>2]=0;HEAP32[$1+32>>2]=0;HEAP32[$1+36>>2]=0;HEAP32[$1+24>>2]=0;label=11;break;case 3:if(($in_front_of|0)!=0){label=5;break}else{label=4;break};case 4:$block=HEAP32[$block>>2]|0;HEAP32[$block+12>>2]=(HEAP32[$1+32>>2]|0)-(HEAP32[$1+36>>2]|0);$71=HEAP32[(HEAP32[$block>>2]|0)+16>>2]|0;$81=$71+(Math_imul(HEAP32[(HEAP32[$block>>2]|0)+12>>2]|0,HEAP32[$1+28>>2]|0)|0)|0;HEAP32[$1+36>>2]=$81;HEAP32[$1+32>>2]=$81;label=10;break;case 5:$delta=HEAP32[$block+8>>2]|0;HEAP32[$block+12>>2]=Math_imul($delta,HEAP32[$1+28>>2]|0)|0;$101=$block+16|0;HEAP32[$101>>2]=(HEAP32[$101>>2]|0)+(-(HEAP32[$block+12>>2]|0)|0);label=6;break;case 6:$108=$block+8|0;HEAP32[$108>>2]=(HEAP32[$108>>2]|0)-$delta;$block=HEAP32[$block+4>>2]|0;if(($block|0)==(HEAP32[$1+52>>2]|0)){label=7;break}else{label=8;break};case 7:label=9;break;case 8:label=6;break;case 9:HEAP32[$1+52>>2]=HEAP32[$block+4>>2];label=10;break;case 10:HEAP32[(HEAP32[$block>>2]|0)+4>>2]=HEAP32[$block+4>>2];HEAP32[HEAP32[$block+4>>2]>>2]=HEAP32[$block>>2];label=11;break;case 11:HEAP32[$block+4>>2]=HEAP32[$1+48>>2];HEAP32[$1+48>>2]=$block;label=12;break;case 12:return}}function _cvGetSeqReaderPos($reader){$reader=$reader|0;var $1=0,$elem_size=0,$index=0,$23=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$reader;$index=-1;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1+12>>2]|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,6648,28392,15152,1189);label=9;break;case 4:$elem_size=HEAP32[(HEAP32[$1+4>>2]|0)+28>>2]|0;if(($elem_size|0)<=32){label=5;break}else{label=7;break};case 5:$23=HEAP8[21032+($elem_size-1)|0]|0;$index=$23;if(($23|0)>=0){label=6;break}else{label=7;break};case 6:$index=(HEAP32[$1+12>>2]|0)-(HEAP32[$1+16>>2]|0)>>$index;label=8;break;case 7:$index=((HEAP32[$1+12>>2]|0)-(HEAP32[$1+16>>2]|0)|0)/($elem_size|0)|0;label=8;break;case 8:$index=$index+((HEAP32[(HEAP32[$1+8>>2]|0)+8>>2]|0)-(HEAP32[$1+24>>2]|0))|0;label=9;break;case 9:return $index|0}return 0}function _cvSeqPush($seq,$element){$seq=$seq|0;$element=$element|0;var $1=0,$2=0,$ptr=0,$elem_size=0,$_icv_memcpy_i_=0,$_icv_memcpy_len_=0,$_icv_memcpy_dst_=0,$_icv_memcpy_src_=0,$80=0,$84=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$2=$element;$ptr=0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6608,28392,15152,1317);label=21;break;case 3:$elem_size=HEAP32[$1+28>>2]|0;$ptr=HEAP32[$1+36>>2]|0;if($ptr>>>0>=(HEAP32[$1+32>>2]|0)>>>0){label=4;break}else{label=7;break};case 4:__ZL10icvGrowSeqP5CvSeqi($1,0);if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6608,11992,15152,1324);label=21;break;case 6:$ptr=HEAP32[$1+36>>2]|0;label=7;break;case 7:if(($2|0)!=0){label=8;break}else{label=20;break};case 8:$_icv_memcpy_len_=$elem_size;$_icv_memcpy_dst_=$ptr;$_icv_memcpy_src_=$2;if(($_icv_memcpy_len_&3|0)==0){label=9;break}else{label=14;break};case 9:$_icv_memcpy_i_=0;label=10;break;case 10:if($_icv_memcpy_i_>>>0<$_icv_memcpy_len_>>>0){label=11;break}else{label=13;break};case 11:HEAP32[$_icv_memcpy_dst_+$_icv_memcpy_i_>>2]=HEAP32[$_icv_memcpy_src_+$_icv_memcpy_i_>>2];label=12;break;case 12:$_icv_memcpy_i_=$_icv_memcpy_i_+4|0;label=10;break;case 13:label=19;break;case 14:$_icv_memcpy_i_=0;label=15;break;case 15:if($_icv_memcpy_i_>>>0<$_icv_memcpy_len_>>>0){label=16;break}else{label=18;break};case 16:HEAP8[$_icv_memcpy_dst_+$_icv_memcpy_i_|0]=HEAP8[$_icv_memcpy_src_+$_icv_memcpy_i_|0]|0;label=17;break;case 17:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=15;break;case 18:label=19;break;case 19:label=20;break;case 20:$80=(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12|0;HEAP32[$80>>2]=(HEAP32[$80>>2]|0)+1;$84=$1+24|0;HEAP32[$84>>2]=(HEAP32[$84>>2]|0)+1;HEAP32[$1+36>>2]=$ptr+$elem_size;label=21;break;case 21:return $ptr|0}return 0}function _cvSeqPushMulti($seq,$_elements,$count,$front){$seq=$seq|0;$_elements=$_elements|0;$count=$count|0;$front=$front|0;var $1=0,$3=0,$elements=0,$elem_size=0,$delta=0,$block=0,$delta1=0,$50=0,$55=0,$78=0,$129=0,$135=0,$140=0,$145=0,$153=0,$162=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$3=$count;$elements=$_elements;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6464,10848,15152,1676);label=33;break;case 3:if(($3|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-201,6464,10776,15152,1678);label=33;break;case 5:$elem_size=HEAP32[$1+28>>2]|0;if(($front|0)!=0){label=18;break}else{label=6;break};case 6:label=7;break;case 7:if(($3|0)>0){label=8;break}else{label=17;break};case 8:$delta=((HEAP32[$1+32>>2]|0)-(HEAP32[$1+36>>2]|0)|0)/($elem_size|0)|0;$delta=($delta|0)>($3|0)?$3:$delta;if(($delta|0)>0){label=9;break}else{label=12;break};case 9:$50=(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12|0;HEAP32[$50>>2]=(HEAP32[$50>>2]|0)+$delta;$55=$1+24|0;HEAP32[$55>>2]=(HEAP32[$55>>2]|0)+$delta;$3=$3-$delta|0;$delta=Math_imul($delta,$elem_size)|0;if(($elements|0)!=0){label=10;break}else{label=11;break};case 10:_memcpy(HEAP32[$1+36>>2]|0,$elements|0,$delta)|0;$elements=$elements+$delta|0;label=11;break;case 11:$78=$1+36|0;HEAP32[$78>>2]=(HEAP32[$78>>2]|0)+$delta;label=12;break;case 12:if(($3|0)>0){label=13;break}else{label=16;break};case 13:__ZL10icvGrowSeqP5CvSeqi($1,0);if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,6464,11992,15152,1704);label=33;break;case 15:label=16;break;case 16:label=7;break;case 17:label=32;break;case 18:$block=HEAP32[$1+52>>2]|0;label=19;break;case 19:if(($3|0)>0){label=20;break}else{label=31;break};case 20:if(($block|0)!=0){label=21;break}else{label=22;break};case 21:if((HEAP32[$block+8>>2]|0)==0){label=22;break}else{label=25;break};case 22:__ZL10icvGrowSeqP5CvSeqi($1,1);if((_cvGetErrStatus()|0)<0){label=23;break}else{label=24;break};case 23:_cvError(-1,6464,11992,15152,1717);label=33;break;case 24:$block=HEAP32[$1+52>>2]|0;label=25;break;case 25:if((HEAP32[$block+8>>2]|0)>($3|0)){label=26;break}else{label=27;break};case 26:$129=$3;label=28;break;case 27:$129=HEAP32[$block+8>>2]|0;label=28;break;case 28:$delta1=$129;$3=$3-$delta1|0;$135=$block+8|0;HEAP32[$135>>2]=(HEAP32[$135>>2]|0)-$delta1;$140=$block+12|0;HEAP32[$140>>2]=(HEAP32[$140>>2]|0)+$delta1;$145=$1+24|0;HEAP32[$145>>2]=(HEAP32[$145>>2]|0)+$delta1;$delta1=Math_imul($delta1,$elem_size)|0;$153=$block+16|0;HEAP32[$153>>2]=(HEAP32[$153>>2]|0)+(-$delta1|0);if(($elements|0)!=0){label=29;break}else{label=30;break};case 29:$162=HEAP32[$block+16>>2]|0;_memcpy($162|0,$elements+(Math_imul($3,$elem_size)|0)|0,$delta1)|0;label=30;break;case 30:label=19;break;case 31:label=32;break;case 32:label=33;break;case 33:return}}function _cvSeqPopMulti($seq,$_elements,$count,$front){$seq=$seq|0;$_elements=$_elements|0;$count=$count|0;$front=$front|0;var $1=0,$3=0,$elements=0,$delta=0,$delta1=0,$26=0,$64=0,$69=0,$82=0,$131=0,$136=0,$146=0,$172=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;$3=$count;$elements=$_elements;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6384,10848,15152,1751);label=28;break;case 3:if(($3|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-201,6384,10776,15152,1753);label=28;break;case 5:if(($3|0)>(HEAP32[$1+24>>2]|0)){label=6;break}else{label=7;break};case 6:$26=HEAP32[$1+24>>2]|0;label=8;break;case 7:$26=$3;label=8;break;case 8:$3=$26;if(($front|0)!=0){label=19;break}else{label=9;break};case 9:if(($elements|0)!=0){label=10;break}else{label=11;break};case 10:$elements=$elements+(Math_imul($3,HEAP32[$1+28>>2]|0)|0)|0;label=11;break;case 11:label=12;break;case 12:if(($3|0)>0){label=13;break}else{label=18;break};case 13:$delta=HEAP32[(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12>>2]|0;$delta=($delta|0)>($3|0)?$3:$delta;$64=(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12|0;HEAP32[$64>>2]=(HEAP32[$64>>2]|0)-$delta;$69=$1+24|0;HEAP32[$69>>2]=(HEAP32[$69>>2]|0)-$delta;$3=$3-$delta|0;$delta=Math_imul($delta,HEAP32[$1+28>>2]|0)|0;$82=$1+36|0;HEAP32[$82>>2]=(HEAP32[$82>>2]|0)+(-$delta|0);if(($elements|0)!=0){label=14;break}else{label=15;break};case 14:$elements=$elements+(-$delta|0)|0;_memcpy($elements|0,HEAP32[$1+36>>2]|0,$delta)|0;label=15;break;case 15:if((HEAP32[(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12>>2]|0)==0){label=16;break}else{label=17;break};case 16:__ZL15icvFreeSeqBlockP5CvSeqi($1,0);label=17;break;case 17:label=12;break;case 18:label=27;break;case 19:label=20;break;case 20:if(($3|0)>0){label=21;break}else{label=26;break};case 21:$delta1=HEAP32[(HEAP32[$1+52>>2]|0)+12>>2]|0;$delta1=($delta1|0)>($3|0)?$3:$delta1;$131=(HEAP32[$1+52>>2]|0)+12|0;HEAP32[$131>>2]=(HEAP32[$131>>2]|0)-$delta1;$136=$1+24|0;HEAP32[$136>>2]=(HEAP32[$136>>2]|0)-$delta1;$3=$3-$delta1|0;$146=(HEAP32[$1+52>>2]|0)+8|0;HEAP32[$146>>2]=(HEAP32[$146>>2]|0)+$delta1;$delta1=Math_imul($delta1,HEAP32[$1+28>>2]|0)|0;if(($elements|0)!=0){label=22;break}else{label=23;break};case 22:_memcpy($elements|0,HEAP32[(HEAP32[$1+52>>2]|0)+16>>2]|0,$delta1)|0;$elements=$elements+$delta1|0;label=23;break;case 23:$172=(HEAP32[$1+52>>2]|0)+16|0;HEAP32[$172>>2]=(HEAP32[$172>>2]|0)+$delta1;if((HEAP32[(HEAP32[$1+52>>2]|0)+12>>2]|0)==0){label=24;break}else{label=25;break};case 24:__ZL15icvFreeSeqBlockP5CvSeqi($1,1);label=25;break;case 25:label=20;break;case 26:label=27;break;case 27:label=28;break;case 28:return}}function _cvClearSeq($seq){$seq=$seq|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$seq;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6368,28392,15152,1825);label=4;break;case 3:_cvSeqPopMulti($1,0,HEAP32[$1+24>>2]|0,0);label=4;break;case 4:return}}function _cvSeqSlice($seq,$slice,$storage,$copy_data){$seq=$seq|0;$slice=$slice|0;$storage=$storage|0;$copy_data=$copy_data|0;var $1=0,$2=0,$subseq=0,$elem_size=0,$count=0,$length=0,$reader=0,$block=0,$first_block=0,$last_block=0,$4=0,$bl=0,$29=0,$30=0,$40=0,$54=0,$120=0,$136=0,$161=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+40|0;tempParam=$slice;$slice=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$slice>>2]=HEAP32[tempParam>>2];HEAP32[$slice+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$reader=sp|0;$4=sp+32|0;$1=$seq;$2=$storage;$subseq=0;$first_block=0;$last_block=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1117323264){label=4;break}else{label=3;break};case 3:_cvError(-5,6312,10400,15152,1846);label=31;break;case 4:if(($2|0)!=0){label=8;break}else{label=5;break};case 5:$2=HEAP32[$1+44>>2]|0;if(($2|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-27,6312,7584,15152,1852);label=31;break;case 7:label=8;break;case 8:$elem_size=HEAP32[$1+28>>2]|0;$29=$4;$30=$slice;HEAP32[$29>>2]=HEAP32[$30>>2];HEAP32[$29+4>>2]=HEAP32[$30+4>>2];$length=_cvSliceLength($4,$1)|0;if((HEAP32[$slice>>2]|0)<0){label=9;break}else{label=10;break};case 9:$40=$slice|0;HEAP32[$40>>2]=(HEAP32[$40>>2]|0)+(HEAP32[$1+24>>2]|0);label=13;break;case 10:if((HEAP32[$slice>>2]|0)>=(HEAP32[$1+24>>2]|0)){label=11;break}else{label=12;break};case 11:$54=$slice|0;HEAP32[$54>>2]=(HEAP32[$54>>2]|0)-(HEAP32[$1+24>>2]|0);label=12;break;case 12:label=13;break;case 13:if($length>>>0>(HEAP32[$1+24>>2]|0)>>>0){label=16;break}else{label=14;break};case 14:if((HEAP32[$slice>>2]|0)>>>0>=(HEAP32[$1+24>>2]|0)>>>0){label=15;break}else{label=17;break};case 15:if(($length|0)!=0){label=16;break}else{label=17;break};case 16:_cvError(-211,6312,10232,15152,1863);label=31;break;case 17:$subseq=_cvCreateSeq(HEAP32[$1>>2]|0,HEAP32[$1+4>>2]|0,$elem_size,$2)|0;if((_cvGetErrStatus()|0)<0){label=18;break}else{label=19;break};case 18:_cvError(-1,6312,11992,15152,1865);label=31;break;case 19:if(($length|0)>0){label=20;break}else{label=30;break};case 20:_cvStartReadSeq($1,$reader,0);_cvSetSeqReaderPos($reader,HEAP32[$slice>>2]|0,0);$count=((HEAP32[$reader+20>>2]|0)-(HEAP32[$reader+12>>2]|0)|0)/($elem_size|0)|0;label=21;break;case 21:$bl=($count|0)>($length|0)?$length:$count;if(($copy_data|0)!=0){label=26;break}else{label=22;break};case 22:$block=_cvMemStorageAlloc($2,20)|0;if(($first_block|0)!=0){label=24;break}else{label=23;break};case 23:$120=$block;HEAP32[$block+4>>2]=$120;HEAP32[$block>>2]=$120;HEAP32[$subseq+52>>2]=$120;$first_block=$120;HEAP32[$block+8>>2]=0;label=25;break;case 24:HEAP32[$block>>2]=$last_block;HEAP32[$block+4>>2]=$first_block;$136=$block;HEAP32[$first_block>>2]=$136;HEAP32[$last_block+4>>2]=$136;HEAP32[$block+8>>2]=(HEAP32[$last_block+8>>2]|0)+(HEAP32[$last_block+12>>2]|0);label=25;break;case 25:$last_block=$block;HEAP32[$block+16>>2]=HEAP32[$reader+12>>2];HEAP32[$block+12>>2]=$bl;$161=$subseq+24|0;HEAP32[$161>>2]=(HEAP32[$161>>2]|0)+$bl;label=27;break;case 26:_cvSeqPushMulti($subseq,HEAP32[$reader+12>>2]|0,$bl,0);label=27;break;case 27:$length=$length-$bl|0;HEAP32[$reader+8>>2]=HEAP32[(HEAP32[$reader+8>>2]|0)+4>>2];HEAP32[$reader+12>>2]=HEAP32[(HEAP32[$reader+8>>2]|0)+16>>2];$count=HEAP32[(HEAP32[$reader+8>>2]|0)+12>>2]|0;label=28;break;case 28:if(($length|0)>0){label=21;break}else{label=29;break};case 29:label=30;break;case 30:label=31;break;case 31:STACKTOP=sp;return $subseq|0}return 0}function _cvSeqSort($seq,$cmp_func,$aux){$seq=$seq|0;$cmp_func=$cmp_func|0;$aux=$aux|0;var $1=0,$2=0,$3=0,$elem_size=0,$isort_thresh=0,$left=0,$right=0,$sp=0,$stack=0,$i=0,$n=0,$m=0,$ptr=0,$ptr2=0,$cur=0,$k=0,$t0=0,$left0=0,$left1=0,$right0=0,$right1=0,$tmp0=0,$tmp1=0,$m1=0,$m2=0,$m3=0,$pivot=0,$swap_cnt=0,$l=0,$l0=0,$l1=0,$r=0,$r0=0,$r1=0,$d=0,$p1=0,$p2=0,$p3=0,$k1=0,$t02=0,$k4=0,$t05=0,$k7=0,$t08=0,$k10=0,$t011=0,$k13=0,$t014=0,$k16=0,$t017=0,$k19=0,$t020=0,$58=0,$61=0,$177=0,$179=0,$187=0,$189=0,$232=0,$235=0,$280=0,$282=0,$421=0,$423=0,$445=0,$448=0,$490=0,$492=0,$501=0,$503=0,$523=0,$526=0,$568=0,$571=0,$580=0,$583=0,$643=0,$645=0,$657=0,$659=0,$668=0,$671=0,$710=0,$712=0,$726=0,$729=0,$782=0,$827=0,$829=0,$837=0,$839=0,$870=0,$915=0,$917=0,$925=0,$927=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1856|0;label=1;while(1)switch(label|0){case 1:$left=sp|0;$right=sp+32|0;$stack=sp+64|0;$ptr=sp+1600|0;$ptr2=sp+1632|0;$left0=sp+1664|0;$left1=sp+1696|0;$right0=sp+1728|0;$right1=sp+1760|0;$tmp0=sp+1792|0;$tmp1=sp+1824|0;$1=$seq;$2=$cmp_func;$3=$aux;$isort_thresh=7;$sp=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1117323264){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0^1?-27:-5,6184,9480,15152,2173);label=173;break;case 4:if(($2|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-27,6184,9408,15152,2176);label=173;break;case 6:if((HEAP32[$1+24>>2]|0)<=1){label=7;break}else{label=8;break};case 7:label=173;break;case 8:$elem_size=HEAP32[$1+28>>2]|0;$isort_thresh=Math_imul($isort_thresh,$elem_size)|0;_cvStartReadSeq($1,$left,0);_memcpy($right|0,$left|0,32)|0;HEAP32[$stack>>2]=HEAP32[$left+8>>2];HEAP32[$stack+4>>2]=HEAP32[$left+12>>2];HEAP32[$stack+8>>2]=HEAP32[$left+16>>2];HEAP32[$stack+12>>2]=HEAP32[$left+20>>2];$58=$right+12|0;$61=(HEAP32[$58>>2]|0)+(-$elem_size|0)|0;HEAP32[$58>>2]=$61;if($61>>>0<(HEAP32[$right+16>>2]|0)>>>0){label=9;break}else{label=10;break};case 9:_cvChangeSeqBlock($right,-1);label=10;break;case 10:HEAP32[$stack+16>>2]=HEAP32[$right+8>>2];HEAP32[$stack+20>>2]=HEAP32[$right+12>>2];HEAP32[$stack+24>>2]=HEAP32[$right+16>>2];HEAP32[$stack+28>>2]=HEAP32[$right+20>>2];label=11;break;case 11:if(($sp|0)>=0){label=12;break}else{label=172;break};case 12:HEAP32[$left+8>>2]=HEAP32[$stack+($sp<<5)>>2];HEAP32[$left+12>>2]=HEAP32[$stack+($sp<<5)+4>>2];HEAP32[$left+16>>2]=HEAP32[$stack+($sp<<5)+8>>2];HEAP32[$left+20>>2]=HEAP32[$stack+($sp<<5)+12>>2];HEAP32[$right+8>>2]=HEAP32[$stack+($sp<<5)+16>>2];HEAP32[$right+12>>2]=HEAP32[$stack+($sp<<5)+20>>2];HEAP32[$right+16>>2]=HEAP32[$stack+($sp<<5)+24>>2];HEAP32[$right+20>>2]=HEAP32[$stack+($sp<<5)+28>>2];$sp=$sp-1|0;label=13;break;case 13:if((HEAP32[$left+8>>2]|0)==(HEAP32[$right+8>>2]|0)){label=14;break}else{label=15;break};case 14:$n=(HEAP32[$right+12>>2]|0)-(HEAP32[$left+12>>2]|0)+$elem_size|0;label=16;break;case 15:$n=_cvGetSeqReaderPos($right)|0;$n=Math_imul($n-(_cvGetSeqReaderPos($left)|0)+1|0,$elem_size)|0;label=16;break;case 16:if(($n|0)<=($isort_thresh|0)){label=17;break}else{label=41;break};case 17:label=18;break;case 18:_memcpy($ptr2|0,$left|0,32)|0;_memcpy($ptr|0,$ptr2|0,32)|0;$177=$ptr+12|0;$179=(HEAP32[$177>>2]|0)+$elem_size|0;HEAP32[$177>>2]=$179;if($179>>>0>=(HEAP32[$ptr+20>>2]|0)>>>0){label=19;break}else{label=20;break};case 19:_cvChangeSeqBlock($ptr,1);label=20;break;case 20:$187=$right+12|0;$189=(HEAP32[$187>>2]|0)+$elem_size|0;HEAP32[$187>>2]=$189;if($189>>>0>=(HEAP32[$right+20>>2]|0)>>>0){label=21;break}else{label=22;break};case 21:_cvChangeSeqBlock($right,1);label=22;break;case 22:label=23;break;case 23:if((HEAP32[$ptr+12>>2]|0)!=(HEAP32[$right+12>>2]|0)){label=24;break}else{label=40;break};case 24:HEAP32[$ptr2+12>>2]=HEAP32[$ptr+12>>2];if((HEAP32[$ptr2+8>>2]|0)!=(HEAP32[$ptr+8>>2]|0)){label=25;break}else{label=26;break};case 25:HEAP32[$ptr2+8>>2]=HEAP32[$ptr+8>>2];HEAP32[$ptr2+16>>2]=HEAP32[$ptr+16>>2];HEAP32[$ptr2+20>>2]=HEAP32[$ptr+20>>2];label=26;break;case 26:label=27;break;case 27:if((HEAP32[$ptr2+12>>2]|0)!=(HEAP32[$left+12>>2]|0)){label=28;break}else{label=37;break};case 28:$cur=HEAP32[$ptr2+12>>2]|0;$232=$ptr2+12|0;$235=(HEAP32[$232>>2]|0)+(-$elem_size|0)|0;HEAP32[$232>>2]=$235;if($235>>>0<(HEAP32[$ptr2+16>>2]|0)>>>0){label=29;break}else{label=30;break};case 29:_cvChangeSeqBlock($ptr2,-1);label=30;break;case 30:if((FUNCTION_TABLE_iiii[$2&1023](HEAP32[$ptr2+12>>2]|0,$cur,$3)|0)<=0){label=31;break}else{label=32;break};case 31:label=37;break;case 32:$k=0;label=33;break;case 33:if(($k|0)<($elem_size|0)){label=34;break}else{label=36;break};case 34:$t0=HEAP8[(HEAP32[$ptr2+12>>2]|0)+$k|0]|0;HEAP8[(HEAP32[$ptr2+12>>2]|0)+$k|0]=HEAP8[$cur+$k|0]|0;HEAP8[$cur+$k|0]=$t0;label=35;break;case 35:$k=$k+1|0;label=33;break;case 36:label=27;break;case 37:$280=$ptr+12|0;$282=(HEAP32[$280>>2]|0)+$elem_size|0;HEAP32[$280>>2]=$282;if($282>>>0>=(HEAP32[$ptr+20>>2]|0)>>>0){label=38;break}else{label=39;break};case 38:_cvChangeSeqBlock($ptr,1);label=39;break;case 39:label=23;break;case 40:label=171;break;case 41:$swap_cnt=0;_memcpy($tmp0|0,$left|0,32)|0;_memcpy($left0|0,$tmp0|0,32)|0;_memcpy($right1|0,$right|0,32)|0;_memcpy($right0|0,$right1|0,32)|0;$n=($n|0)/($elem_size|0)|0;if(($n|0)>40){label=42;break}else{label=43;break};case 42:$d=($n|0)/8|0;$p1=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p2=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p3=HEAP32[$tmp0+12>>2]|0;$m1=__Z7icvMed3PcS_S_PFiPKvS1_PvES2_($p1,$p2,$p3,$2,$3)|0;_cvSetSeqReaderPos($tmp0,(($n|0)/2|0)-($d*3|0)|0,1);$p1=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p2=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p3=HEAP32[$tmp0+12>>2]|0;$m2=__Z7icvMed3PcS_S_PFiPKvS1_PvES2_($p1,$p2,$p3,$2,$3)|0;_cvSetSeqReaderPos($tmp0,$n-1-($d*3|0)-(($n|0)/2|0)|0,1);$p1=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p2=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$d,1);$p3=HEAP32[$tmp0+12>>2]|0;$m3=__Z7icvMed3PcS_S_PFiPKvS1_PvES2_($p1,$p2,$p3,$2,$3)|0;label=44;break;case 43:$m1=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,($n|0)/2|0,1);$m2=HEAP32[$tmp0+12>>2]|0;_cvSetSeqReaderPos($tmp0,$n-1-(($n|0)/2|0)|0,1);$m3=HEAP32[$tmp0+12>>2]|0;label=44;break;case 44:$pivot=__Z7icvMed3PcS_S_PFiPKvS1_PvES2_($m1,$m2,$m3,$2,$3)|0;_memcpy($left|0,$left0|0,32)|0;if(($pivot|0)!=(HEAP32[$left+12>>2]|0)){label=45;break}else{label=50;break};case 45:$k1=0;label=46;break;case 46:if(($k1|0)<($elem_size|0)){label=47;break}else{label=49;break};case 47:$t02=HEAP8[$pivot+$k1|0]|0;HEAP8[$pivot+$k1|0]=HEAP8[(HEAP32[$left+12>>2]|0)+$k1|0]|0;HEAP8[(HEAP32[$left+12>>2]|0)+$k1|0]=$t02;label=48;break;case 48:$k1=$k1+1|0;label=46;break;case 49:$pivot=HEAP32[$left+12>>2]|0;label=50;break;case 50:$421=$left+12|0;$423=(HEAP32[$421>>2]|0)+$elem_size|0;HEAP32[$421>>2]=$423;if($423>>>0>=(HEAP32[$left+20>>2]|0)>>>0){label=51;break}else{label=52;break};case 51:_cvChangeSeqBlock($left,1);label=52;break;case 52:_memcpy($left1|0,$left|0,32)|0;label=53;break;case 53:label=54;break;case 54:if((HEAP32[$left+12>>2]|0)!=(HEAP32[$right+12>>2]|0)){label=55;break}else{$448=0;label=56;break};case 55:$445=FUNCTION_TABLE_iiii[$2&1023](HEAP32[$left+12>>2]|0,$pivot,$3)|0;$r=$445;$448=($445|0)<=0;label=56;break;case 56:if($448){label=57;break}else{label=70;break};case 57:if(($r|0)==0){label=58;break}else{label=67;break};case 58:if((HEAP32[$left1+12>>2]|0)!=(HEAP32[$left+12>>2]|0)){label=59;break}else{label=64;break};case 59:$k4=0;label=60;break;case 60:if(($k4|0)<($elem_size|0)){label=61;break}else{label=63;break};case 61:$t05=HEAP8[(HEAP32[$left1+12>>2]|0)+$k4|0]|0;HEAP8[(HEAP32[$left1+12>>2]|0)+$k4|0]=HEAP8[(HEAP32[$left+12>>2]|0)+$k4|0]|0;HEAP8[(HEAP32[$left+12>>2]|0)+$k4|0]=$t05;label=62;break;case 62:$k4=$k4+1|0;label=60;break;case 63:label=64;break;case 64:$swap_cnt=1;$490=$left1+12|0;$492=(HEAP32[$490>>2]|0)+$elem_size|0;HEAP32[$490>>2]=$492;if($492>>>0>=(HEAP32[$left1+20>>2]|0)>>>0){label=65;break}else{label=66;break};case 65:_cvChangeSeqBlock($left1,1);label=66;break;case 66:label=67;break;case 67:$501=$left+12|0;$503=(HEAP32[$501>>2]|0)+$elem_size|0;HEAP32[$501>>2]=$503;if($503>>>0>=(HEAP32[$left+20>>2]|0)>>>0){label=68;break}else{label=69;break};case 68:_cvChangeSeqBlock($left,1);label=69;break;case 69:label=54;break;case 70:label=71;break;case 71:if((HEAP32[$left+12>>2]|0)!=(HEAP32[$right+12>>2]|0)){label=72;break}else{$526=0;label=73;break};case 72:$523=FUNCTION_TABLE_iiii[$2&1023](HEAP32[$right+12>>2]|0,$pivot,$3)|0;$r=$523;$526=($523|0)>=0;label=73;break;case 73:if($526){label=74;break}else{label=87;break};case 74:if(($r|0)==0){label=75;break}else{label=84;break};case 75:if((HEAP32[$right1+12>>2]|0)!=(HEAP32[$right+12>>2]|0)){label=76;break}else{label=81;break};case 76:$k7=0;label=77;break;case 77:if(($k7|0)<($elem_size|0)){label=78;break}else{label=80;break};case 78:$t08=HEAP8[(HEAP32[$right1+12>>2]|0)+$k7|0]|0;HEAP8[(HEAP32[$right1+12>>2]|0)+$k7|0]=HEAP8[(HEAP32[$right+12>>2]|0)+$k7|0]|0;HEAP8[(HEAP32[$right+12>>2]|0)+$k7|0]=$t08;label=79;break;case 79:$k7=$k7+1|0;label=77;break;case 80:label=81;break;case 81:$swap_cnt=1;$568=$right1+12|0;$571=(HEAP32[$568>>2]|0)+(-$elem_size|0)|0;HEAP32[$568>>2]=$571;if($571>>>0<(HEAP32[$right1+16>>2]|0)>>>0){label=82;break}else{label=83;break};case 82:_cvChangeSeqBlock($right1,-1);label=83;break;case 83:label=84;break;case 84:$580=$right+12|0;$583=(HEAP32[$580>>2]|0)+(-$elem_size|0)|0;HEAP32[$580>>2]=$583;if($583>>>0<(HEAP32[$right+16>>2]|0)>>>0){label=85;break}else{label=86;break};case 85:_cvChangeSeqBlock($right,-1);label=86;break;case 86:label=71;break;case 87:if((HEAP32[$left+12>>2]|0)==(HEAP32[$right+12>>2]|0)){label=88;break}else{label=106;break};case 88:$r=FUNCTION_TABLE_iiii[$2&1023](HEAP32[$left+12>>2]|0,$pivot,$3)|0;if(($r|0)==0){label=89;break}else{label=98;break};case 89:if((HEAP32[$left1+12>>2]|0)!=(HEAP32[$left+12>>2]|0)){label=90;break}else{label=95;break};case 90:$k10=0;label=91;break;case 91:if(($k10|0)<($elem_size|0)){label=92;break}else{label=94;break};case 92:$t011=HEAP8[(HEAP32[$left1+12>>2]|0)+$k10|0]|0;HEAP8[(HEAP32[$left1+12>>2]|0)+$k10|0]=HEAP8[(HEAP32[$left+12>>2]|0)+$k10|0]|0;HEAP8[(HEAP32[$left+12>>2]|0)+$k10|0]=$t011;label=93;break;case 93:$k10=$k10+1|0;label=91;break;case 94:label=95;break;case 95:$swap_cnt=1;$643=$left1+12|0;$645=(HEAP32[$643>>2]|0)+$elem_size|0;HEAP32[$643>>2]=$645;if($645>>>0>=(HEAP32[$left1+20>>2]|0)>>>0){label=96;break}else{label=97;break};case 96:_cvChangeSeqBlock($left1,1);label=97;break;case 97:label=98;break;case 98:if(($r|0)<=0){label=99;break}else{label=102;break};case 99:$657=$left+12|0;$659=(HEAP32[$657>>2]|0)+$elem_size|0;HEAP32[$657>>2]=$659;if($659>>>0>=(HEAP32[$left+20>>2]|0)>>>0){label=100;break}else{label=101;break};case 100:_cvChangeSeqBlock($left,1);label=101;break;case 101:label=105;break;case 102:$668=$right+12|0;$671=(HEAP32[$668>>2]|0)+(-$elem_size|0)|0;HEAP32[$668>>2]=$671;if($671>>>0<(HEAP32[$right+16>>2]|0)>>>0){label=103;break}else{label=104;break};case 103:_cvChangeSeqBlock($right,-1);label=104;break;case 104:label=105;break;case 105:label=117;break;case 106:$k13=0;label=107;break;case 107:if(($k13|0)<($elem_size|0)){label=108;break}else{label=110;break};case 108:$t014=HEAP8[(HEAP32[$left+12>>2]|0)+$k13|0]|0;HEAP8[(HEAP32[$left+12>>2]|0)+$k13|0]=HEAP8[(HEAP32[$right+12>>2]|0)+$k13|0]|0;HEAP8[(HEAP32[$right+12>>2]|0)+$k13|0]=$t014;label=109;break;case 109:$k13=$k13+1|0;label=107;break;case 110:$710=$left+12|0;$712=(HEAP32[$710>>2]|0)+$elem_size|0;HEAP32[$710>>2]=$712;if($712>>>0>=(HEAP32[$left+20>>2]|0)>>>0){label=111;break}else{label=112;break};case 111:_cvChangeSeqBlock($left,1);label=112;break;case 112:$r=(HEAP32[$left+12>>2]|0)==(HEAP32[$right+12>>2]|0)|0;$726=$right+12|0;$729=(HEAP32[$726>>2]|0)+(-$elem_size|0)|0;HEAP32[$726>>2]=$729;if($729>>>0<(HEAP32[$right+16>>2]|0)>>>0){label=113;break}else{label=114;break};case 113:_cvChangeSeqBlock($right,-1);label=114;break;case 114:$swap_cnt=1;if(($r|0)!=0){label=115;break}else{label=116;break};case 115:label=117;break;case 116:label=53;break;case 117:if(($swap_cnt|0)==0){label=118;break}else{label=119;break};case 118:_memcpy($left|0,$left0|0,32)|0;_memcpy($right|0,$right0|0,32)|0;label=18;break;case 119:$l=_cvGetSeqReaderPos($left)|0;if(($l|0)==0){label=120;break}else{label=121;break};case 120:$l=HEAP32[$1+24>>2]|0;label=121;break;case 121:$l0=_cvGetSeqReaderPos($left0)|0;$l1=_cvGetSeqReaderPos($left1)|0;if(($l1|0)==0){label=122;break}else{label=123;break};case 122:$l1=HEAP32[$1+24>>2]|0;label=123;break;case 123:if(($l-$l1|0)>($l1-$l0|0)){label=124;break}else{label=125;break};case 124:$782=$l1-$l0|0;label=126;break;case 125:$782=$l-$l1|0;label=126;break;case 126:$n=$782;if(($n|0)>0){label=127;break}else{label=140;break};case 127:_memcpy($tmp0|0,$left0|0,32)|0;_memcpy($tmp1|0,$left|0,32)|0;_cvSetSeqReaderPos($tmp1,-$n|0,1);$i=0;label=128;break;case 128:if(($i|0)<($n|0)){label=129;break}else{label=139;break};case 129:$k16=0;label=130;break;case 130:if(($k16|0)<($elem_size|0)){label=131;break}else{label=133;break};case 131:$t017=HEAP8[(HEAP32[$tmp0+12>>2]|0)+$k16|0]|0;HEAP8[(HEAP32[$tmp0+12>>2]|0)+$k16|0]=HEAP8[(HEAP32[$tmp1+12>>2]|0)+$k16|0]|0;HEAP8[(HEAP32[$tmp1+12>>2]|0)+$k16|0]=$t017;label=132;break;case 132:$k16=$k16+1|0;label=130;break;case 133:$827=$tmp0+12|0;$829=(HEAP32[$827>>2]|0)+$elem_size|0;HEAP32[$827>>2]=$829;if($829>>>0>=(HEAP32[$tmp0+20>>2]|0)>>>0){label=134;break}else{label=135;break};case 134:_cvChangeSeqBlock($tmp0,1);label=135;break;case 135:$837=$tmp1+12|0;$839=(HEAP32[$837>>2]|0)+$elem_size|0;HEAP32[$837>>2]=$839;if($839>>>0>=(HEAP32[$tmp1+20>>2]|0)>>>0){label=136;break}else{label=137;break};case 136:_cvChangeSeqBlock($tmp1,1);label=137;break;case 137:label=138;break;case 138:$i=$i+1|0;label=128;break;case 139:label=140;break;case 140:$r=_cvGetSeqReaderPos($right)|0;$r0=_cvGetSeqReaderPos($right0)|0;$r1=_cvGetSeqReaderPos($right1)|0;if(($r0-$r1|0)>($r1-$r|0)){label=141;break}else{label=142;break};case 141:$870=$r1-$r|0;label=143;break;case 142:$870=$r0-$r1|0;label=143;break;case 143:$m=$870;if(($m|0)>0){label=144;break}else{label=157;break};case 144:_memcpy($tmp0|0,$left|0,32)|0;_memcpy($tmp1|0,$right0|0,32)|0;_cvSetSeqReaderPos($tmp1,1-$m|0,1);$i=0;label=145;break;case 145:if(($i|0)<($m|0)){label=146;break}else{label=156;break};case 146:$k19=0;label=147;break;case 147:if(($k19|0)<($elem_size|0)){label=148;break}else{label=150;break};case 148:$t020=HEAP8[(HEAP32[$tmp0+12>>2]|0)+$k19|0]|0;HEAP8[(HEAP32[$tmp0+12>>2]|0)+$k19|0]=HEAP8[(HEAP32[$tmp1+12>>2]|0)+$k19|0]|0;HEAP8[(HEAP32[$tmp1+12>>2]|0)+$k19|0]=$t020;label=149;break;case 149:$k19=$k19+1|0;label=147;break;case 150:$915=$tmp0+12|0;$917=(HEAP32[$915>>2]|0)+$elem_size|0;HEAP32[$915>>2]=$917;if($917>>>0>=(HEAP32[$tmp0+20>>2]|0)>>>0){label=151;break}else{label=152;break};case 151:_cvChangeSeqBlock($tmp0,1);label=152;break;case 152:$925=$tmp1+12|0;$927=(HEAP32[$925>>2]|0)+$elem_size|0;HEAP32[$925>>2]=$927;if($927>>>0>=(HEAP32[$tmp1+20>>2]|0)>>>0){label=153;break}else{label=154;break};case 153:_cvChangeSeqBlock($tmp1,1);label=154;break;case 154:label=155;break;case 155:$i=$i+1|0;label=145;break;case 156:label=157;break;case 157:$n=$l-$l1|0;$m=$r1-$r|0;if(($n|0)>1){label=158;break}else{label=165;break};case 158:if(($m|0)>1){label=159;break}else{label=163;break};case 159:if(($n|0)>($m|0)){label=160;break}else{label=161;break};case 160:$sp=$sp+1|0;HEAP32[$stack+($sp<<5)>>2]=HEAP32[$left0+8>>2];HEAP32[$stack+($sp<<5)+4>>2]=HEAP32[$left0+12>>2];HEAP32[$stack+($sp<<5)+8>>2]=HEAP32[$left0+16>>2];HEAP32[$stack+($sp<<5)+12>>2]=HEAP32[$left0+20>>2];_cvSetSeqReaderPos($left0,$n-1|0,1);HEAP32[$stack+($sp<<5)+16>>2]=HEAP32[$left0+8>>2];HEAP32[$stack+($sp<<5)+20>>2]=HEAP32[$left0+12>>2];HEAP32[$stack+($sp<<5)+24>>2]=HEAP32[$left0+16>>2];HEAP32[$stack+($sp<<5)+28>>2]=HEAP32[$left0+20>>2];_memcpy($right|0,$right0|0,32)|0;_memcpy($left|0,$right|0,32)|0;_cvSetSeqReaderPos($left,1-$m|0,1);label=162;break;case 161:$sp=$sp+1|0;HEAP32[$stack+($sp<<5)+16>>2]=HEAP32[$right0+8>>2];HEAP32[$stack+($sp<<5)+20>>2]=HEAP32[$right0+12>>2];HEAP32[$stack+($sp<<5)+24>>2]=HEAP32[$right0+16>>2];HEAP32[$stack+($sp<<5)+28>>2]=HEAP32[$right0+20>>2];_cvSetSeqReaderPos($right0,1-$m|0,1);HEAP32[$stack+($sp<<5)>>2]=HEAP32[$right0+8>>2];HEAP32[$stack+($sp<<5)+4>>2]=HEAP32[$right0+12>>2];HEAP32[$stack+($sp<<5)+8>>2]=HEAP32[$right0+16>>2];HEAP32[$stack+($sp<<5)+12>>2]=HEAP32[$right0+20>>2];_memcpy($right|0,$left0|0,32)|0;_memcpy($left|0,$right|0,32)|0;_cvSetSeqReaderPos($right,$n-1|0,1);label=162;break;case 162:label=164;break;case 163:_memcpy($right|0,$left0|0,32)|0;_memcpy($left|0,$right|0,32)|0;_cvSetSeqReaderPos($right,$n-1|0,1);label=164;break;case 164:label=169;break;case 165:if(($m|0)>1){label=166;break}else{label=167;break};case 166:_memcpy($right|0,$right0|0,32)|0;_memcpy($left|0,$right|0,32)|0;_cvSetSeqReaderPos($left,1-$m|0,1);label=168;break;case 167:label=171;break;case 168:label=169;break;case 169:label=170;break;case 170:label=13;break;case 171:label=11;break;case 172:label=173;break;case 173:STACKTOP=sp;return}}function __Z7icvMed3PcS_S_PFiPKvS1_PvES2_($a,$b,$c,$cmp_func,$aux){$a=$a|0;$b=$b|0;$c=$c|0;$cmp_func=$cmp_func|0;$aux=$aux|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$32=0,$53=0,$55=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$a;$2=$b;$3=$c;$4=$cmp_func;$5=$aux;if((FUNCTION_TABLE_iiii[$4&1023]($1,$2,$5)|0)<0){label=2;break}else{label=6;break};case 2:if((FUNCTION_TABLE_iiii[$4&1023]($2,$3,$5)|0)<0){label=3;break}else{label=4;break};case 3:$32=$2;label=5;break;case 4:$32=(FUNCTION_TABLE_iiii[$4&1023]($1,$3,$5)|0)<0?$3:$1;label=5;break;case 5:$55=$32;label=10;break;case 6:if((FUNCTION_TABLE_iiii[$4&1023]($2,$3,$5)|0)>0){label=7;break}else{label=8;break};case 7:$53=$2;label=9;break;case 8:$53=(FUNCTION_TABLE_iiii[$4&1023]($1,$3,$5)|0)<0?$1:$3;label=9;break;case 9:$55=$53;label=10;break;case 10:return $55|0}return 0}function _cvCreateSet($set_flags,$header_size,$elem_size,$storage){$set_flags=$set_flags|0;$header_size=$header_size|0;$elem_size=$elem_size|0;$storage=$storage|0;var $2=0,$3=0,$4=0,$set=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$header_size;$3=$elem_size;$4=$storage;$set=0;if(($4|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6144,28392,15152,2760);label=8;break;case 3:if(($2|0)<64){label=6;break}else{label=4;break};case 4:if(($3|0)<8){label=6;break}else{label=5;break};case 5:if(($3&3|0)!=0){label=6;break}else{label=7;break};case 6:_cvError(-201,6144,28392,15152,2764);label=8;break;case 7:$set=_cvCreateSeq($set_flags,$2,$3,$4)|0;HEAP32[$set>>2]=HEAP32[$set>>2]&65535|1117257728;label=8;break;case 8:return $set|0}return 0}function _cvSetAdd($set,$element,$inserted_element){$set=$set|0;$element=$element|0;$inserted_element=$inserted_element|0;var $1=0,$2=0,$3=0,$id=0,$free_elem=0,$count=0,$elem_size=0,$ptr=0,$_icv_memcpy_i_=0,$27=0,$75=0,$131=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$set;$2=$element;$3=$inserted_element;$id=-1;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6120,28392,15152,2788);label=20;break;case 3:if((HEAP32[$1+56>>2]|0)!=0){label=11;break}else{label=4;break};case 4:$count=HEAP32[$1+24>>2]|0;$elem_size=HEAP32[$1+28>>2]|0;__ZL10icvGrowSeqP5CvSeqi($1,0);if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6120,11992,15152,2795);label=20;break;case 6:$27=HEAP32[$1+36>>2]|0;$ptr=$27;HEAP32[$1+56>>2]=$27;label=7;break;case 7:if(($ptr+$elem_size|0)>>>0<=(HEAP32[$1+32>>2]|0)>>>0){label=8;break}else{label=10;break};case 8:HEAP32[$ptr>>2]=$count|-2147483648;HEAP32[$ptr+4>>2]=$ptr+$elem_size;label=9;break;case 9:$ptr=$ptr+$elem_size|0;$count=$count+1|0;label=7;break;case 10:HEAP32[$ptr+(-$elem_size|0)+4>>2]=0;$75=(HEAP32[HEAP32[$1+52>>2]>>2]|0)+12|0;HEAP32[$75>>2]=(HEAP32[$75>>2]|0)+($count-(HEAP32[$1+24>>2]|0));HEAP32[$1+24>>2]=$count;HEAP32[$1+36>>2]=HEAP32[$1+32>>2];label=11;break;case 11:$free_elem=HEAP32[$1+56>>2]|0;HEAP32[$1+56>>2]=HEAP32[$free_elem+4>>2];$id=HEAP32[$free_elem>>2]&67108863;if(($2|0)!=0){label=12;break}else{label=17;break};case 12:$_icv_memcpy_i_=0;label=13;break;case 13:if($_icv_memcpy_i_>>>0<(((HEAP32[$1+28>>2]|0)>>>0)/4|0)>>>0){label=14;break}else{label=16;break};case 14:HEAP32[$free_elem+($_icv_memcpy_i_<<2)>>2]=HEAP32[$2+($_icv_memcpy_i_<<2)>>2];label=15;break;case 15:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=13;break;case 16:label=17;break;case 17:HEAP32[$free_elem>>2]=$id;$131=$1+60|0;HEAP32[$131>>2]=(HEAP32[$131>>2]|0)+1;if(($3|0)!=0){label=18;break}else{label=19;break};case 18:HEAP32[$3>>2]=$free_elem;label=19;break;case 19:label=20;break;case 20:return $id|0}return 0}function _cvClearSet($set){$set=$set|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$set;_cvClearSeq($1);if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,6080,11992,15152,2855);label=4;break;case 3:HEAP32[$1+56>>2]=0;HEAP32[$1+60>>2]=0;label=4;break;case 4:return}}function _cvCreateGraph($graph_type,$header_size,$vtx_size,$edge_size,$storage){$graph_type=$graph_type|0;$header_size=$header_size|0;$vtx_size=$vtx_size|0;$edge_size=$edge_size|0;$storage=$storage|0;var $2=0,$3=0,$4=0,$5=0,$graph=0,$edges=0,$vertices=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$header_size;$3=$vtx_size;$4=$edge_size;$5=$storage;$graph=0;$edges=0;$vertices=0;if(($2|0)<68){label=4;break}else{label=2;break};case 2:if(($4|0)<24){label=4;break}else{label=3;break};case 3:if(($3|0)<8){label=4;break}else{label=5;break};case 4:_cvError(-201,6040,28392,15152,2884);label=10;break;case 5:$vertices=_cvCreateSet($graph_type,$2,$3,$5)|0;if((_cvGetErrStatus()|0)<0){label=6;break}else{label=7;break};case 6:_cvError(-1,6040,11992,15152,2886);label=10;break;case 7:$edges=_cvCreateSet(0,64,$4,$5)|0;if((_cvGetErrStatus()|0)<0){label=8;break}else{label=9;break};case 8:_cvError(-1,6040,11992,15152,2888);label=10;break;case 9:$graph=$vertices;HEAP32[$graph+64>>2]=$edges;label=10;break;case 10:return $graph|0}return 0}function _cvGraphAddVtx($graph,$_vertex,$_inserted_vertex){$graph=$graph|0;$_vertex=$_vertex|0;$_inserted_vertex=$_inserted_vertex|0;var $1=0,$2=0,$3=0,$vertex=0,$index=0,$_icv_memcpy_i_=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$graph;$2=$_vertex;$3=$_inserted_vertex;$vertex=0;$index=-1;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,6016,28392,15152,2929);label=14;break;case 3:$vertex=_cvSetNew($1)|0;if(($vertex|0)!=0){label=4;break}else{label=11;break};case 4:if(($2|0)!=0){label=5;break}else{label=10;break};case 5:$_icv_memcpy_i_=0;label=6;break;case 6:if($_icv_memcpy_i_>>>0<((((HEAP32[$1+28>>2]|0)-8|0)>>>0)/4|0)>>>0){label=7;break}else{label=9;break};case 7:HEAP32[$vertex+8+($_icv_memcpy_i_<<2)>>2]=HEAP32[$2+8+($_icv_memcpy_i_<<2)>>2];label=8;break;case 8:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=6;break;case 9:label=10;break;case 10:HEAP32[$vertex+4>>2]=0;$index=HEAP32[$vertex>>2]|0;label=11;break;case 11:if(($3|0)!=0){label=12;break}else{label=13;break};case 12:HEAP32[$3>>2]=$vertex;label=13;break;case 13:label=14;break;case 14:return $index|0}return 0}function _cvFindGraphEdgeByPtr($graph,$start_vtx,$end_vtx){$graph=$graph|0;$start_vtx=$start_vtx|0;$end_vtx=$end_vtx|0;var $1=0,$2=0,$3=0,$edge=0,$ofs=0,$t=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$graph;$2=$start_vtx;$3=$end_vtx;$edge=0;$ofs=0;if(($1|0)!=0){label=2;break}else{label=4;break};case 2:if(($2|0)!=0){label=3;break}else{label=4;break};case 3:if(($3|0)!=0){label=5;break}else{label=4;break};case 4:_cvError(-27,5952,28392,15152,3034);label=17;break;case 5:if(($2|0)==($3|0)){label=6;break}else{label=7;break};case 6:label=17;break;case 7:if((HEAP32[$1>>2]&4096|0)!=0){label=10;break}else{label=8;break};case 8:if((HEAP32[$2>>2]&67108863|0)>(HEAP32[$3>>2]&67108863|0)){label=9;break}else{label=10;break};case 9:$t=$2;$2=$3;$3=$t;label=10;break;case 10:$edge=HEAP32[$2+4>>2]|0;label=11;break;case 11:if(($edge|0)!=0){label=12;break}else{label=16;break};case 12:$ofs=($2|0)==(HEAP32[$edge+20>>2]|0)|0;if((HEAP32[$edge+20>>2]|0)==($3|0)){label=13;break}else{label=14;break};case 13:label=16;break;case 14:label=15;break;case 15:$edge=HEAP32[$edge+8+($ofs<<2)>>2]|0;label=11;break;case 16:label=17;break;case 17:return $edge|0}return 0}function _cvGraphAddEdgeByPtr($graph,$start_vtx,$end_vtx,$_edge,$_inserted_edge){$graph=$graph|0;$start_vtx=$start_vtx|0;$end_vtx=$end_vtx|0;$_edge=$_edge|0;$_inserted_edge=$_inserted_edge|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$edge=0,$result=0,$delta=0,$t=0,$_icv_memcpy_i_=0,$_icv_memcpy_i_1=0,$79=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$graph;$2=$start_vtx;$3=$end_vtx;$4=$_edge;$5=$_inserted_edge;$edge=0;$result=-1;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,5872,8448,15152,3105);label=30;break;case 3:if((HEAP32[$1>>2]&4096|0)!=0){label=6;break}else{label=4;break};case 4:if((HEAP32[$2>>2]&67108863|0)>(HEAP32[$3>>2]&67108863|0)){label=5;break}else{label=6;break};case 5:$t=$2;$2=$3;$3=$t;label=6;break;case 6:$edge=_cvFindGraphEdgeByPtr($1,$2,$3)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,5872,11992,15152,3114);label=30;break;case 8:if(($edge|0)!=0){label=9;break}else{label=10;break};case 9:$result=0;label=30;break;case 10:if(($2|0)==($3|0)){label=11;break}else{label=12;break};case 11:_cvError(($2|0)!=0?-5:-27,5872,8264,15152,3123);label=30;break;case 12:$edge=_cvSetNew(HEAP32[$1+64>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=13;break}else{label=14;break};case 13:_cvError(-1,5872,11992,15152,3125);label=30;break;case 14:HEAP32[$edge+16>>2]=$2;HEAP32[$edge+20>>2]=$3;HEAP32[$edge+8>>2]=HEAP32[$2+4>>2];HEAP32[$edge+12>>2]=HEAP32[$3+4>>2];$79=$edge;HEAP32[$3+4>>2]=$79;HEAP32[$2+4>>2]=$79;$delta=(((HEAP32[(HEAP32[$1+64>>2]|0)+28>>2]|0)-24|0)>>>0)/4|0;if(($4|0)!=0){label=15;break}else{label=22;break};case 15:if(($delta|0)>0){label=16;break}else{label=21;break};case 16:$_icv_memcpy_i_=0;label=17;break;case 17:if($_icv_memcpy_i_>>>0<$delta>>>0){label=18;break}else{label=20;break};case 18:HEAP32[$edge+24+($_icv_memcpy_i_<<2)>>2]=HEAP32[$4+24+($_icv_memcpy_i_<<2)>>2];label=19;break;case 19:$_icv_memcpy_i_=$_icv_memcpy_i_+1|0;label=17;break;case 20:label=21;break;case 21:HEAPF32[$edge+4>>2]=+HEAPF32[$4+4>>2];label=29;break;case 22:if(($delta|0)>0){label=23;break}else{label=28;break};case 23:$_icv_memcpy_i_1=0;label=24;break;case 24:if($_icv_memcpy_i_1>>>0<$delta>>>0){label=25;break}else{label=27;break};case 25:HEAP32[$edge+24+($_icv_memcpy_i_1<<2)>>2]=0;label=26;break;case 26:$_icv_memcpy_i_1=$_icv_memcpy_i_1+1|0;label=24;break;case 27:label=28;break;case 28:HEAPF32[$edge+4>>2]=1.0;label=29;break;case 29:$result=1;label=30;break;case 30:if(($5|0)!=0){label=31;break}else{label=32;break};case 31:HEAP32[$5>>2]=$edge;label=32;break;case 32:return $result|0}return 0}function _cvCloneGraph($graph,$storage){$graph=$graph|0;$storage=$storage|0;var $1=0,$2=0,$flag_buffer=0,$ptr_buffer=0,$result=0,$i=0,$k=0,$vtx_size=0,$edge_size=0,$reader=0,$vtx=0,$dstvtx=0,$edge=0,$dstedge=0,$112=0,$122=0,$128=0,$130=0,$198=0,$200=0,$232=0,$241=0,$243=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$dstvtx=sp+32|0;$dstedge=sp+40|0;$1=$graph;$2=$storage;$flag_buffer=0;$ptr_buffer=0;$result=0;if(($1|0)!=0){label=2;break}else{label=4;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1117257728){label=3;break}else{label=4;break};case 3:if((HEAP32[$1>>2]&3584|0)==1536){label=5;break}else{label=4;break};case 4:_cvError(-5,5808,7872,15152,3680);label=44;break;case 5:if(($2|0)!=0){label=7;break}else{label=6;break};case 6:$2=HEAP32[$1+44>>2]|0;label=7;break;case 7:if(($2|0)!=0){label=9;break}else{label=8;break};case 8:_cvError(-27,5808,7584,15152,3686);label=44;break;case 9:$vtx_size=HEAP32[$1+28>>2]|0;$edge_size=HEAP32[(HEAP32[$1+64>>2]|0)+28>>2]|0;$flag_buffer=_cvAlloc(HEAP32[$1+24>>2]<<2)|0;if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,5808,11992,15152,3691);label=44;break;case 11:$ptr_buffer=_cvAlloc(HEAP32[$1+24>>2]<<2)|0;if((_cvGetErrStatus()|0)<0){label=12;break}else{label=13;break};case 12:_cvError(-1,5808,11992,15152,3692);label=44;break;case 13:$result=_cvCreateGraph(HEAP32[$1>>2]|0,HEAP32[$1+4>>2]|0,$vtx_size,$edge_size,$2)|0;if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,5808,11992,15152,3694);label=44;break;case 15:_memcpy($result+4624|0,$1+4624|0,(HEAP32[$1+4>>2]|0)-68|0)|0;_cvStartReadSeq($1,$reader,0);$i=0;$k=0;label=16;break;case 16:if(($i|0)<(HEAP32[$1+24>>2]|0)){label=17;break}else{label=25;break};case 17:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=18;break}else{label=21;break};case 18:$vtx=HEAP32[$reader+12>>2]|0;HEAP32[$dstvtx>>2]=0;_cvGraphAddVtx($result,$vtx,$dstvtx)|0;if((_cvGetErrStatus()|0)<0){label=19;break}else{label=20;break};case 19:_cvError(-1,5808,11992,15152,3706);label=44;break;case 20:$112=HEAP32[$vtx>>2]|0;HEAP32[HEAP32[$dstvtx>>2]>>2]=$112;HEAP32[$flag_buffer+($k<<2)>>2]=$112;HEAP32[$vtx>>2]=$k;$122=$k;$k=$122+1|0;HEAP32[$ptr_buffer+($122<<2)>>2]=HEAP32[$dstvtx>>2];label=21;break;case 21:$128=$reader+12|0;$130=(HEAP32[$128>>2]|0)+$vtx_size|0;HEAP32[$128>>2]=$130;if($130>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=22;break}else{label=23;break};case 22:_cvChangeSeqBlock($reader,1);label=23;break;case 23:label=24;break;case 24:$i=$i+1|0;label=16;break;case 25:_cvStartReadSeq(HEAP32[$1+64>>2]|0,$reader,0);$i=0;label=26;break;case 26:if(($i|0)<(HEAP32[(HEAP32[$1+64>>2]|0)+24>>2]|0)){label=27;break}else{label=35;break};case 27:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=28;break}else{label=31;break};case 28:$edge=HEAP32[$reader+12>>2]|0;HEAP32[$dstedge>>2]=0;_cvGraphAddEdgeByPtr($result,HEAP32[$ptr_buffer+(HEAP32[HEAP32[$edge+16>>2]>>2]<<2)>>2]|0,HEAP32[$ptr_buffer+(HEAP32[HEAP32[$edge+20>>2]>>2]<<2)>>2]|0,$edge,$dstedge)|0;if((_cvGetErrStatus()|0)<0){label=29;break}else{label=30;break};case 29:_cvError(-1,5808,11992,15152,3724);label=44;break;case 30:HEAP32[HEAP32[$dstedge>>2]>>2]=HEAP32[$edge>>2];label=31;break;case 31:$198=$reader+12|0;$200=(HEAP32[$198>>2]|0)+$edge_size|0;HEAP32[$198>>2]=$200;if($200>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=32;break}else{label=33;break};case 32:_cvChangeSeqBlock($reader,1);label=33;break;case 33:label=34;break;case 34:$i=$i+1|0;label=26;break;case 35:_cvStartReadSeq($1,$reader,0);$i=0;$k=0;label=36;break;case 36:if(($i|0)<(HEAP32[(HEAP32[$1+64>>2]|0)+24>>2]|0)){label=37;break}else{label=43;break};case 37:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=38;break}else{label=39;break};case 38:$232=$k;$k=$232+1|0;HEAP32[HEAP32[$reader+12>>2]>>2]=HEAP32[$flag_buffer+($232<<2)>>2];label=39;break;case 39:$241=$reader+12|0;$243=(HEAP32[$241>>2]|0)+$vtx_size|0;HEAP32[$241>>2]=$243;if($243>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=40;break}else{label=41;break};case 40:_cvChangeSeqBlock($reader,1);label=41;break;case 41:label=42;break;case 42:$i=$i+1|0;label=36;break;case 43:label=44;break;case 44:_cvFree_($flag_buffer);$flag_buffer=0;_cvFree_($ptr_buffer);$ptr_buffer=0;if((_cvGetErrStatus()|0)<0){label=45;break}else{label=46;break};case 45:$result=0;label=46;break;case 46:STACKTOP=sp;return $result|0}return 0}function _cvInitTreeNodeIterator($treeIterator,$first,$max_level){$treeIterator=$treeIterator|0;$first=$first|0;$max_level=$max_level|0;var $1=0,$2=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$treeIterator;$2=$first;$3=$max_level;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if(($2|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,5776,28392,15152,3884);label=7;break;case 4:if(($3|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-211,5776,28392,15152,3887);label=7;break;case 6:HEAP32[$1>>2]=$2;HEAP32[$1+4>>2]=0;HEAP32[$1+8>>2]=$3;label=7;break;case 7:return}}function _cvNextTreeNode($treeIterator){$treeIterator=$treeIterator|0;var $1=0,$prevNode=0,$node=0,$level=0,$9=0,$44=0,$62=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$treeIterator;$prevNode=0;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,5760,7520,15152,3910);label=19;break;case 3:$9=HEAP32[$1>>2]|0;$node=$9;$prevNode=$9;$level=HEAP32[$1+4>>2]|0;if(($node|0)!=0){label=4;break}else{label=18;break};case 4:if((HEAP32[$node+20>>2]|0)!=0){label=5;break}else{label=7;break};case 5:if(($level+1|0)<(HEAP32[$1+8>>2]|0)){label=6;break}else{label=7;break};case 6:$node=HEAP32[$node+20>>2]|0;$level=$level+1|0;label=17;break;case 7:label=8;break;case 8:if((HEAP32[$node+12>>2]|0)==0){label=9;break}else{label=12;break};case 9:$node=HEAP32[$node+16>>2]|0;$44=$level-1|0;$level=$44;if(($44|0)<0){label=10;break}else{label=11;break};case 10:$node=0;label=12;break;case 11:label=8;break;case 12:if(($node|0)!=0){label=13;break}else{label=15;break};case 13:if((HEAP32[$1+8>>2]|0)!=0){label=14;break}else{label=15;break};case 14:$62=HEAP32[$node+12>>2]|0;label=16;break;case 15:$62=0;label=16;break;case 16:$node=$62;label=17;break;case 17:label=18;break;case 18:HEAP32[$1>>2]=$node;HEAP32[$1+4>>2]=$level;label=19;break;case 19:return $prevNode|0}return 0}function _cvStdErrReport($code,$func_name,$err_msg,$file,$line,$0){$code=$code|0;$func_name=$func_name|0;$err_msg=$err_msg|0;$file=$file|0;$line=$line|0;$0=$0|0;var $2=0,$3=0,$4=0,$5=0,$6=0,$18=0,$20=0,$27=0,$37=0,$44=0,label=0,sp=0;sp=STACKTOP;label=1;while(1)switch(label|0){case 1:$3=$code;$4=$func_name;$5=$err_msg;$6=$file;if(($3|0)==-1){label=3;break}else{label=2;break};case 2:if(($3|0)==-8){label=3;break}else{label=4;break};case 3:_fprintf(HEAP32[_stderr>>2]|0,11256,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,HEAP32[tempInt>>2]=0,tempInt)|0)|0;label=8;break;case 4:$18=HEAP32[_stderr>>2]|0;$20=_cvErrorStr($3)|0;if(($5|0)!=0){label=5;break}else{label=6;break};case 5:$27=$5;label=7;break;case 6:$27=12224;label=7;break;case 7:_fprintf($18|0,15024,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=$20,HEAP32[tempInt+8>>2]=$27,tempInt)|0)|0;label=8;break;case 8:if(($4|0)!=0){label=9;break}else{label=10;break};case 9:$37=$4;label=11;break;case 10:$37=10384;label=11;break;case 11:if(($6|0)!=0){label=12;break}else{label=13;break};case 12:$44=$6;label=14;break;case 13:$44=28376;label=14;break;case 14:_fprintf(HEAP32[_stderr>>2]|0,11168,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,HEAP32[tempInt>>2]=$37,HEAP32[tempInt+8>>2]=$44,HEAP32[tempInt+16>>2]=$line,tempInt)|0)|0;if((_cvGetErrMode()|0)==0){label=15;break}else{label=16;break};case 15:_fprintf(HEAP32[_stderr>>2]|0,8968,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,HEAP32[tempInt>>2]=0,tempInt)|0)|0;$2=1;label=17;break;case 16:$2=0;label=17;break;case 17:STACKTOP=sp;return $2|0}return 0}function _cvErrorStr($status){$status=$status|0;var $1=0,$2=0,$3=0,label=0,sp=0;sp=STACKTOP;label=1;while(1)switch(label|0){case 1:$2=$status;$3=$2;if(($3|0)==0){label=2;break}else if(($3|0)==(-1|0)){label=3;break}else if(($3|0)==(-2|0)){label=4;break}else if(($3|0)==(-3|0)){label=5;break}else if(($3|0)==(-4|0)){label=6;break}else if(($3|0)==(-5|0)){label=7;break}else if(($3|0)==(-7|0)){label=8;break}else if(($3|0)==(-8|0)){label=9;break}else if(($3|0)==(-201|0)){label=10;break}else if(($3|0)==(-27|0)){label=11;break}else if(($3|0)==(-202|0)){label=12;break}else if(($3|0)==(-13|0)){label=13;break}else if(($3|0)==(-203|0)){label=14;break}else if(($3|0)==(-204|0)){label=15;break}else if(($3|0)==(-17|0)){label=16;break}else if(($3|0)==(-205|0)){label=17;break}else if(($3|0)==(-209|0)){label=18;break}else if(($3|0)==(-211|0)){label=19;break}else if(($3|0)==(-210|0)){label=20;break}else if(($3|0)==(-24|0)){label=21;break}else if(($3|0)==(-15|0)){label=22;break}else if(($3|0)==(-206|0)){label=23;break}else if(($3|0)==(-207|0)){label=24;break}else if(($3|0)==(-208|0)){label=25;break}else if(($3|0)==(-212|0)){label=26;break}else if(($3|0)==(-213|0)){label=27;break}else if(($3|0)==(-214|0)){label=28;break}else{label=29;break};case 2:$1=8312;label=30;break;case 3:$1=8120;label=30;break;case 4:$1=7552;label=30;break;case 5:$1=15912;label=30;break;case 6:$1=15696;label=30;break;case 7:$1=15232;label=30;break;case 8:$1=14968;label=30;break;case 9:$1=14264;label=30;break;case 10:$1=13760;label=30;break;case 11:$1=13368;label=30;break;case 12:$1=12800;label=30;break;case 13:$1=12544;label=30;break;case 14:$1=12480;label=30;break;case 15:$1=12440;label=30;break;case 16:$1=12392;label=30;break;case 17:$1=12312;label=30;break;case 18:$1=12184;label=30;break;case 19:$1=12120;label=30;break;case 20:$1=12016;label=30;break;case 21:$1=11912;label=30;break;case 22:$1=11848;label=30;break;case 23:$1=11736;label=30;break;case 24:$1=11656;label=30;break;case 25:$1=11568;label=30;break;case 26:$1=11496;label=30;break;case 27:$1=11304;label=30;break;case 28:$1=11136;label=30;break;case 29:_sprintf(28096,11064,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=($2|0)>=0?11056:10944,HEAP32[tempInt+8>>2]=$2,tempInt)|0)|0;$1=28096;label=30;break;case 30:STACKTOP=sp;return $1|0}return 0}function _cvGetErrMode(){return HEAP32[(__ZL13icvGetContextv()|0)+4>>2]|0}function __ZL13icvGetContextv(){var label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[7226]|0)!=0){label=3;break}else{label=2;break};case 2:HEAP32[7226]=__ZL16icvCreateContextv()|0;label=3;break;case 3:return HEAP32[7226]|0}return 0}function _cvGetErrStatus(){return HEAP32[(__ZL13icvGetContextv()|0)>>2]|0}function _cvSetErrStatus($code){$code=$code|0;HEAP32[(__ZL13icvGetContextv()|0)>>2]=$code;return}function _cvError($code,$func_name,$err_msg,$file_name,$line){$code=$code|0;$func_name=$func_name|0;$err_msg=$err_msg|0;$file_name=$file_name|0;$line=$line|0;var $1=0,$3=0,$4=0,$5=0,$context=0,$terminate=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$code;$3=$err_msg;$4=$file_name;$5=$line;if(($1|0)==0){label=2;break}else{label=3;break};case 2:_cvSetErrStatus($1);label=11;break;case 3:$context=__ZL13icvGetContextv()|0;if(($1|0)!=-1){label=4;break}else{label=6;break};case 4:if(($1|0)!=-8){label=5;break}else{label=6;break};case 5:HEAP32[$context>>2]=$1;_strcpy($context+16|0,$3|0)|0;HEAP32[$context+4112>>2]=$4;HEAP32[$context+4116>>2]=$5;label=6;break;case 6:if((HEAP32[$context+4>>2]|0)!=2){label=7;break}else{label=10;break};case 7:$terminate=FUNCTION_TABLE_iiiiiii[HEAP32[$context+8>>2]&1023]($1,$func_name,$3,$4,$5,HEAP32[$context+12>>2]|0)|0;if(($terminate|0)!=0){label=8;break}else{label=9;break};case 8:_exit(-(Math_abs($terminate|0)|0)|0);case 9:label=10;break;case 10:label=11;break;case 11:return}}function _cvErrorFromIppStatus($status){$status=$status|0;var $1=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$status;if(($3|0)==(-1|0)){label=2;break}else if(($3|0)==(-113|0)){label=3;break}else if(($3|0)==(-2|0)){label=4;break}else if(($3|0)==(-11|0)){label=5;break}else if(($3|0)==(-29|0)){label=6;break}else if(($3|0)==(-3|0)){label=7;break}else if(($3|0)==(-49|0)){label=8;break}else if(($3|0)==(-48|0)){label=9;break}else if(($3|0)==(-112|0)){label=10;break}else if(($3|0)==(-110|0)){label=11;break}else if(($3|0)==(-109|0)){label=12;break}else if(($3|0)==(-107|0)){label=13;break}else if(($3|0)==(-104|0)){label=14;break}else if(($3|0)==(-103|0)){label=15;break}else if(($3|0)==(-102|0)){label=16;break}else if(($3|0)==(-12|0)){label=17;break}else if(($3|0)==(-44|0)){label=18;break}else if(($3|0)==(-10|0)){label=19;break}else if(($3|0)==(-7|0)){label=20;break}else if(($3|0)==(-6|0)){label=21;break}else{label=22;break};case 2:$1=-201;label=23;break;case 3:$1=-214;label=23;break;case 4:$1=-27;label=23;break;case 5:$1=-202;label=23;break;case 6:$1=-13;label=23;break;case 7:$1=-4;label=23;break;case 8:$1=-5;label=23;break;case 9:$1=-2;label=23;break;case 10:$1=-203;label=23;break;case 11:$1=-204;label=23;break;case 12:$1=-7;label=23;break;case 13:$1=-17;label=23;break;case 14:$1=-205;label=23;break;case 15:$1=-24;label=23;break;case 16:$1=-15;label=23;break;case 17:$1=-206;label=23;break;case 18:$1=-5;label=23;break;case 19:$1=-5;label=23;break;case 20:$1=-5;label=23;break;case 21:$1=-207;label=23;break;case 22:$1=-2;label=23;break;case 23:return $1|0}return 0}function _cvSetImageIOFunctions($_load_image,$_load_image_m,$_save_image,$_show_image){$_load_image=$_load_image|0;$_load_image_m=$_load_image_m|0;$_save_image=$_save_image|0;$_show_image=$_show_image|0;HEAP32[7608]=$_load_image;HEAP32[7602]=$_load_image_m;HEAP32[7606]=$_save_image;HEAP32[7604]=$_show_image;return 1}function _cvCbrt($value){$value=+$value;var $1=0.0,$fr=0.0,$v=0,$m=0,$ix=0,$s=0,$ex=0,$shx=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;$v=sp|0;$m=sp+8|0;$1=$value;HEAPF32[$v>>2]=$1;$ix=HEAP32[$v>>2]&2147483647;$s=HEAP32[$v>>2]&-2147483648;$ex=($ix>>23)-127|0;$shx=($ex|0)%3|0;$shx=$shx-(($shx|0)>=0?3:0)|0;$ex=($ex-$shx|0)/3|0;HEAP32[$v>>2]=$ix&8388607|$shx+127<<23;$fr=+HEAPF32[$v>>2];$fr=(((($fr*45.2548339756803+192.2798368355061)*$fr+119.16548242855816)*$fr+13.432501390862399)*$fr+.16361612265857542)/(((($fr*14.808840932191346+151.97140510444356)*$fr+168.52544141015682)*$fr+33.99059413502156)*$fr+1.0);HEAPF32[$m>>2]=$1;HEAPF32[$v>>2]=$fr;HEAP32[$v>>2]=(HEAP32[$v>>2]|0)+($ex<<23)+$s&((HEAP32[$m>>2]<<1|0)!=0?-1:0);STACKTOP=sp;return+(+HEAPF32[$v>>2])}function __Z10cvAttrListPPKcP10CvAttrList($agg_result,$attr,$next){$agg_result=$agg_result|0;$attr=$attr|0;$next=$next|0;HEAP32[$agg_result>>2]=$attr;HEAP32[$agg_result+4>>2]=$next;return}function __Z25icvLUT_Transform8u_8u_C1RPKhiPhi6CvSizeS0_($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $1=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$6=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;$4=$dststep;$5=$lut;$6=$size|0;HEAP32[$6>>2]=HEAP32[$6>>2];$4=$4>>>0|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=13;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP8[$5+(HEAPU8[$1+$i|0]|0)|0]|0;$t1=HEAP8[$5+(HEAPU8[$1+($i+1)|0]|0)|0]|0;HEAP8[$3+$i|0]=$t0;HEAP8[$3+($i+1)|0]=$t1;$t0=HEAP8[$5+(HEAPU8[$1+($i+2)|0]|0)|0]|0;$t1=HEAP8[$5+(HEAPU8[$1+($i+3)|0]|0)|0]|0;HEAP8[$3+($i+2)|0]=$t0;HEAP8[$3+($i+3)|0]=$t1;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP8[$3+$i|0]=HEAP8[$5+(HEAPU8[$1+$i|0]|0)|0]|0;label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:label=12;break;case 12:$1=$1+$srcstep|0;$3=$3+$4|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z26icvLUT_Transform8u_16u_C1RPKhiPti6CvSizePKt($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $1=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$6=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;$4=$dststep;$5=$lut;$6=$size|0;HEAP32[$6>>2]=HEAP32[$6>>2];$4=($4>>>0)/2|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=13;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP16[$5+((HEAPU8[$1+$i|0]|0)<<1)>>1]|0;$t1=HEAP16[$5+((HEAPU8[$1+($i+1)|0]|0)<<1)>>1]|0;HEAP16[$3+($i<<1)>>1]=$t0;HEAP16[$3+($i+1<<1)>>1]=$t1;$t0=HEAP16[$5+((HEAPU8[$1+($i+2)|0]|0)<<1)>>1]|0;$t1=HEAP16[$5+((HEAPU8[$1+($i+3)|0]|0)<<1)>>1]|0;HEAP16[$3+($i+2<<1)>>1]=$t0;HEAP16[$3+($i+3<<1)>>1]=$t1;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP16[$3+($i<<1)>>1]=HEAP16[$5+((HEAPU8[$1+$i|0]|0)<<1)>>1]|0;label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:label=12;break;case 12:$1=$1+$srcstep|0;$3=$3+($4<<1)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z26icvLUT_Transform8u_32s_C1RPKhiPii6CvSizePKi($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $1=0,$3=0,$4=0,$5=0,$i=0,$t0=0,$t1=0,$6=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;$4=$dststep;$5=$lut;$6=$size|0;HEAP32[$6>>2]=HEAP32[$6>>2];$4=($4>>>0)/4|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=13;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=HEAP32[$5+((HEAPU8[$1+$i|0]|0)<<2)>>2]|0;$t1=HEAP32[$5+((HEAPU8[$1+($i+1)|0]|0)<<2)>>2]|0;HEAP32[$3+($i<<2)>>2]=$t0;HEAP32[$3+($i+1<<2)>>2]=$t1;$t0=HEAP32[$5+((HEAPU8[$1+($i+2)|0]|0)<<2)>>2]|0;$t1=HEAP32[$5+((HEAPU8[$1+($i+3)|0]|0)<<2)>>2]|0;HEAP32[$3+($i+2<<2)>>2]=$t0;HEAP32[$3+($i+3<<2)>>2]=$t1;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAP32[$3+($i<<2)>>2]=HEAP32[$5+((HEAPU8[$1+$i|0]|0)<<2)>>2];label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:label=12;break;case 12:$1=$1+$srcstep|0;$3=$3+($4<<2)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z26icvLUT_Transform8u_64f_C1RPKhiPdi6CvSizePKd($src,$srcstep,$dst,$dststep,$size,$lut){$src=$src|0;$srcstep=$srcstep|0;$dst=$dst|0;$dststep=$dststep|0;$size=$size|0;$lut=$lut|0;var $1=0,$3=0,$4=0,$5=0,$i=0,$t0=0.0,$t1=0.0,$6=0,$12=0,$13=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$size;$size=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$size>>2]=HEAP32[tempParam>>2];HEAP32[$size+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$src;$3=$dst;$4=$dststep;$5=$lut;$6=$size|0;HEAP32[$6>>2]=HEAP32[$6>>2];$4=($4>>>0)/8|0;label=2;break;case 2:$12=$size+4|0;$13=HEAP32[$12>>2]|0;HEAP32[$12>>2]=$13-1;if(($13|0)!=0){label=3;break}else{label=13;break};case 3:$i=0;label=4;break;case 4:if(($i|0)<=((HEAP32[$size>>2]|0)-4|0)){label=5;break}else{label=7;break};case 5:$t0=+HEAPF64[$5+((HEAPU8[$1+$i|0]|0)<<3)>>3];$t1=+HEAPF64[$5+((HEAPU8[$1+($i+1)|0]|0)<<3)>>3];HEAPF64[$3+($i<<3)>>3]=$t0;HEAPF64[$3+($i+1<<3)>>3]=$t1;$t0=+HEAPF64[$5+((HEAPU8[$1+($i+2)|0]|0)<<3)>>3];$t1=+HEAPF64[$5+((HEAPU8[$1+($i+3)|0]|0)<<3)>>3];HEAPF64[$3+($i+2<<3)>>3]=$t0;HEAPF64[$3+($i+3<<3)>>3]=$t1;label=6;break;case 6:$i=$i+4|0;label=4;break;case 7:label=8;break;case 8:if(($i|0)<(HEAP32[$size>>2]|0)){label=9;break}else{label=11;break};case 9:HEAPF64[$3+($i<<3)>>3]=+HEAPF64[$5+((HEAPU8[$1+$i|0]|0)<<3)>>3];label=10;break;case 10:$i=$i+1|0;label=8;break;case 11:label=12;break;case 12:$1=$1+$srcstep|0;$3=$3+($4<<3)|0;label=2;break;case 13:STACKTOP=sp;return 0}return 0}function __Z20icvPthreadDestructorPv($key_val){$key_val=$key_val|0;__ZL17icvDestroyContextP9CvContext($key_val);return}function __ZL17icvDestroyContextP9CvContext($context){$context=$context|0;_free($context);return}function ___cxx_global_var_init364(){HEAP32[6434]=_pthread_key_create(30440,92)|0;return}function __ZL16icvCreateContextv(){var $context=0;$context=_malloc(4120)|0;HEAP32[$context+4>>2]=0;HEAP32[$context>>2]=0;HEAP32[$context+8>>2]=616;HEAP32[$context+12>>2]=0;return $context|0}function __GLOBAL__I_a367(){___cxx_global_var_init364();return}function _cvAttrValue($attr,$attr_name){$attr=$attr|0;$attr_name=$attr_name|0;var $1=0,$2=0,$i=0,$13=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$attr;label=2;break;case 2:if(($2|0)!=0){label=3;break}else{$13=0;label=4;break};case 3:$13=(HEAP32[$2>>2]|0)!=0;label=4;break;case 4:if($13){label=5;break}else{label=12;break};case 5:$i=0;label=6;break;case 6:if((HEAP32[(HEAP32[$2>>2]|0)+($i<<1<<2)>>2]|0)!=0){label=7;break}else{label=11;break};case 7:if((_strcmp($attr_name|0,HEAP32[(HEAP32[$2>>2]|0)+($i<<1<<2)>>2]|0)|0)==0){label=8;break}else{label=9;break};case 8:$1=HEAP32[(HEAP32[$2>>2]|0)+(($i<<1)+1<<2)>>2]|0;label=13;break;case 9:label=10;break;case 10:$i=$i+1|0;label=6;break;case 11:$2=HEAP32[$2+4>>2]|0;label=2;break;case 12:$1=0;label=13;break;case 13:return $1|0}return 0}function _cvEndWriteStruct($fs){$fs=$fs|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6560,8912,14448,2877);label=9;break;case 4:if((HEAP32[$1+8>>2]|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,6560,11456,14448,2877);label=9;break;case 6:FUNCTION_TABLE_vi[HEAP32[$1+228>>2]&1023]($1);if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6560,10256,14448,2878);label=9;break;case 8:label=9;break;case 9:return}}function __ZL10icvFSFlushP13CvFileStorage($fs){$fs=$fs|0;var $1=0,$ptr=0,$indent=0,$70=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$ptr=HEAP32[$1+68>>2]|0;if($ptr>>>0>((HEAP32[$1+72>>2]|0)+(HEAP32[$1+56>>2]|0)|0)>>>0){label=2;break}else{label=3;break};case 2:HEAP8[$ptr|0]=10;HEAP8[$ptr+1|0]=0;_fputs(HEAP32[$1+72>>2]|0,HEAP32[$1+64>>2]|0)|0;HEAP32[$1+68>>2]=HEAP32[$1+72>>2];label=3;break;case 3:$indent=HEAP32[$1+40>>2]|0;if((HEAP32[$1+56>>2]|0)!=($indent|0)){label=4;break}else{label=7;break};case 4:if((HEAP32[$1+56>>2]|0)<($indent|0)){label=5;break}else{label=6;break};case 5:_memset((HEAP32[$1+72>>2]|0)+(HEAP32[$1+56>>2]|0)|0,32,$indent-(HEAP32[$1+56>>2]|0)|0);label=6;break;case 6:HEAP32[$1+56>>2]=$indent;label=7;break;case 7:$70=(HEAP32[$1+72>>2]|0)+(HEAP32[$1+56>>2]|0)|0;HEAP32[$1+68>>2]=$70;$ptr=$70;return $ptr|0}return 0}function _cvGetFileNodeByName($fs,$_map_node,$str){$fs=$fs|0;$_map_node=$_map_node|0;$str=$str|0;var $1=0,$2=0,$3=0,$value=0,$i=0,$len=0,$tab_size=0,$hashval=0,$k=0,$attempts=0,$map=0,$map_node=0,$another=0,$key=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$_map_node;$3=$str;$value=0;$hashval=0;$k=0;$attempts=1;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:label=40;break;case 3:if(($1|0)!=0){label=4;break}else{label=5;break};case 4:if((HEAP32[$1>>2]|0)==1280131417){label=6;break}else{label=5;break};case 5:_cvError(($1|0)!=0?-5:-27,7128,8912,14448,572);label=40;break;case 6:if(($3|0)!=0){label=8;break}else{label=7;break};case 7:_cvError(-27,7128,15664,14448,575);label=40;break;case 8:$i=0;label=9;break;case 9:if((HEAP8[$3+$i|0]|0)!=0){label=10;break}else{label=12;break};case 10:$hashval=($hashval*33|0)+(HEAPU8[$3+$i|0]|0)|0;label=11;break;case 11:$i=$i+1|0;label=9;break;case 12:$hashval=$hashval&2147483647;$len=$i;if(($2|0)!=0){label=16;break}else{label=13;break};case 13:if((HEAP32[$1+32>>2]|0)!=0){label=15;break}else{label=14;break};case 14:label=40;break;case 15:$attempts=HEAP32[(HEAP32[$1+32>>2]|0)+24>>2]|0;label=16;break;case 16:$k=0;label=17;break;case 17:if(($k|0)<($attempts|0)){label=18;break}else{label=39;break};case 18:$map_node=$2;if(($map_node|0)!=0){label=20;break}else{label=19;break};case 19:$map_node=_cvGetSeqElem(HEAP32[$1+32>>2]|0,$k)|0;label=20;break;case 20:if((HEAP32[$map_node>>2]&7|0)==6){label=26;break}else{label=21;break};case 21:if((HEAP32[$map_node>>2]&7|0)==5){label=22;break}else{label=23;break};case 22:if((HEAP32[(HEAP32[$map_node+8>>2]|0)+24>>2]|0)!=0){label=23;break}else{label=25;break};case 23:if((HEAP32[$map_node>>2]&7|0)!=0){label=24;break}else{label=25;break};case 24:_cvError(-2,7128,8064,14448,602);label=40;break;case 25:label=40;break;case 26:$map=HEAP32[$map_node+8>>2]|0;$tab_size=HEAP32[$map+64>>2]|0;if(($tab_size&$tab_size-1|0)==0){label=27;break}else{label=28;break};case 27:$i=$hashval&$tab_size-1;label=29;break;case 28:$i=($hashval>>>0)%($tab_size>>>0)|0;label=29;break;case 29:$another=HEAP32[(HEAP32[$map+68>>2]|0)+($i<<2)>>2]|0;label=30;break;case 30:if(($another|0)!=0){label=31;break}else{label=37;break};case 31:$key=HEAP32[$another+16>>2]|0;if((HEAP32[$key>>2]|0)==($hashval|0)){label=32;break}else{label=35;break};case 32:if((HEAP32[$key+4>>2]|0)==($len|0)){label=33;break}else{label=35;break};case 33:if((_memcmp(HEAP32[$key+8>>2]|0,$3|0,$len|0)|0)==0){label=34;break}else{label=35;break};case 34:$value=$another|0;label=40;break;case 35:label=36;break;case 36:$another=HEAP32[$another+20>>2]|0;label=30;break;case 37:label=38;break;case 38:$k=$k+1|0;label=17;break;case 39:label=40;break;case 40:return $value|0}return 0}function _cvStartWriteStruct($fs,$key,$struct_flags,$type_name,$0){$fs=$fs|0;$key=$key|0;$struct_flags=$struct_flags|0;$type_name=$type_name|0;$0=$0|0;var $2=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$0;$0=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$0>>2]=HEAP32[tempParam>>2];HEAP32[$0+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$2=$fs;if(($2|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$2>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($2|0)!=0?-5:-27,6584,8912,14448,2863);label=9;break;case 4:if((HEAP32[$2+8>>2]|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,6584,11456,14448,2863);label=9;break;case 6:FUNCTION_TABLE_viiii[HEAP32[$2+224>>2]&1023]($2,$key,$struct_flags,$type_name);if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6584,10256,14448,2864);label=9;break;case 8:label=9;break;case 9:STACKTOP=sp;return}}function _cvWriteInt($fs,$key,$value){$fs=$fs|0;$key=$key|0;$value=$value|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6544,8912,14448,2891);label=9;break;case 4:if((HEAP32[$1+8>>2]|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,6544,11456,14448,2891);label=9;break;case 6:FUNCTION_TABLE_viii[HEAP32[$1+232>>2]&1023]($1,$key,$value);if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6544,10256,14448,2892);label=9;break;case 8:label=9;break;case 9:return}}function _cvWriteString($fs,$key,$value,$quote){$fs=$fs|0;$key=$key|0;$value=$value|0;$quote=$quote|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6504,8912,14448,2919);label=9;break;case 4:if((HEAP32[$1+8>>2]|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,6504,11456,14448,2919);label=9;break;case 6:FUNCTION_TABLE_viiii[HEAP32[$1+240>>2]&1023]($1,$key,$value,$quote);if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,6504,10256,14448,2920);label=9;break;case 8:label=9;break;case 9:return}}function _cvWriteRawData($fs,$_data,$len,$dt){$fs=$fs|0;$_data=$_data|0;$len=$len|0;$dt=$dt|0;var $1=0,$3=0,$data0=0,$offset=0,$fmt_pairs=0,$k=0,$fmt_pair_count=0,$buf=0,$i=0,$count=0,$elem_type=0,$data=0,$ptr=0,$48=0,$53=0,$92=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1280|0;label=1;while(1)switch(label|0){case 1:$fmt_pairs=sp|0;$buf=sp+1024|0;$1=$fs;$3=$len;$data0=$_data;$offset=0;_memset($buf|0,0,256);if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6424,8912,14448,3095);label=45;break;case 4:if((HEAP32[$1+8>>2]|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,6424,11456,14448,3095);label=45;break;case 6:if(($data0|0)!=0){label=8;break}else{label=7;break};case 7:_cvError(-27,6424,10752,14448,3098);label=45;break;case 8:if(($3|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-211,6424,10672,14448,3101);label=45;break;case 10:$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-1,6424,10256,14448,3103);label=45;break;case 12:if(($3|0)!=0){label=14;break}else{label=13;break};case 13:label=45;break;case 14:if(($fmt_pair_count|0)==1){label=15;break}else{label=16;break};case 15:$48=$fmt_pairs|0;HEAP32[$48>>2]=Math_imul(HEAP32[$48>>2]|0,$3)|0;$3=1;label=16;break;case 16:label=17;break;case 17:$53=$3;$3=$53-1|0;if(($53|0)!=0){label=18;break}else{label=44;break};case 18:$k=0;label=19;break;case 19:if(($k|0)<($fmt_pair_count|0)){label=20;break}else{label=43;break};case 20:$count=HEAP32[$fmt_pairs+($k<<1<<2)>>2]|0;$elem_type=HEAP32[$fmt_pairs+(($k<<1)+1<<2)>>2]|0;$offset=__Z7cvAlignii($offset,(($elem_type&504)>>3)+1<<(47696>>>(($elem_type&7)<<1>>>0)&3))|0;$data=$data0+$offset|0;$i=0;label=21;break;case 21:if(($i|0)<($count|0)){label=22;break}else{label=41;break};case 22:$92=$elem_type;if(($92|0)==0){label=23;break}else if(($92|0)==1){label=24;break}else if(($92|0)==2){label=25;break}else if(($92|0)==3){label=26;break}else if(($92|0)==4){label=27;break}else if(($92|0)==5){label=28;break}else if(($92|0)==6){label=29;break}else if(($92|0)==7){label=30;break}else{label=31;break};case 23:$ptr=__ZL8icv_itoaiPci(HEAPU8[$data]|0,$buf|0,10)|0;$data=$data+1|0;label=32;break;case 24:$ptr=__ZL8icv_itoaiPci(HEAP8[$data]|0,$buf|0,10)|0;$data=$data+1|0;label=32;break;case 25:$ptr=__ZL8icv_itoaiPci(HEAPU16[$data>>1]|0,$buf|0,10)|0;$data=$data+2|0;label=32;break;case 26:$ptr=__ZL8icv_itoaiPci(HEAP16[$data>>1]|0,$buf|0,10)|0;$data=$data+2|0;label=32;break;case 27:$ptr=__ZL8icv_itoaiPci(HEAP32[$data>>2]|0,$buf|0,10)|0;$data=$data+4|0;label=32;break;case 28:$ptr=__ZL16icvFloatToStringPcf($buf|0,+HEAPF32[$data>>2])|0;$data=$data+4|0;label=32;break;case 29:$ptr=__ZL17icvDoubleToStringPcd($buf|0,+HEAPF64[$data>>3])|0;$data=$data+8|0;label=32;break;case 30:$ptr=__ZL8icv_itoaiPci(HEAP32[$data>>2]|0,$buf|0,10)|0;$data=$data+4|0;label=32;break;case 31:label=45;break;case 32:if((HEAP32[$1+4>>2]|0)!=0){label=33;break}else{label=36;break};case 33:__ZL17icvXMLWriteScalarP13CvFileStoragePKcS2_i($1,0,$ptr,_strlen($ptr|0)|0);if((_cvGetErrStatus()|0)<0){label=34;break}else{label=35;break};case 34:_cvError(-1,6424,10256,14448,3170);label=45;break;case 35:label=39;break;case 36:__ZL11icvYMLWriteP13CvFileStoragePKcS2_S2_($1,0,$ptr,6424);if((_cvGetErrStatus()|0)<0){label=37;break}else{label=38;break};case 37:_cvError(-1,6424,10256,14448,3173);label=45;break;case 38:label=39;break;case 39:label=40;break;case 40:$i=$i+1|0;label=21;break;case 41:$offset=$data-$data0|0;label=42;break;case 42:$k=$k+1|0;label=19;break;case 43:label=17;break;case 44:label=45;break;case 45:STACKTOP=sp;return}}function __ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs,$max_len){$dt=$dt|0;$fmt_pairs=$fmt_pairs|0;$max_len=$max_len|0;var $1=0,$2=0,$3=0,$fmt_pair_count=0,$i=0,$k=0,$len=0,$c=0,$count=0,$endptr=0,$pos=0,$11=0,$115=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$endptr=sp|0;$1=$dt;$2=$fmt_pairs;$3=$max_len;$fmt_pair_count=0;$i=0;$k=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:$11=_strlen($1|0)|0;label=4;break;case 3:$11=0;label=4;break;case 4:$len=$11;if(($1|0)!=0){label=5;break}else{label=6;break};case 5:if(($len|0)!=0){label=7;break}else{label=6;break};case 6:label=29;break;case 7:HEAP32[$2>>2]=0;$3=$3<<1;label=8;break;case 8:if(($k|0)<($len|0)){label=9;break}else{label=28;break};case 9:$c=HEAP8[$1+$k|0]|0;if((_isdigit($c<<24>>24|0)|0)!=0){label=10;break}else{label=15;break};case 10:$count=($c<<24>>24)-48|0;if((_isdigit(HEAP8[$1+($k+1)|0]|0)|0)!=0){label=11;break}else{label=12;break};case 11:HEAP32[$endptr>>2]=0;$count=_strtol($1+$k|0,$endptr|0,10)|0;$k=(HEAP32[$endptr>>2]|0)-$1-1|0;label=12;break;case 12:if(($count|0)<=0){label=13;break}else{label=14;break};case 13:_cvError(-5,17992,12608,14448,2996);label=29;break;case 14:HEAP32[$2+($i<<2)>>2]=$count;label=26;break;case 15:$pos=_strchr(22984,$c<<24>>24|0)|0;if(($pos|0)!=0){label=17;break}else{label=16;break};case 16:_cvError(-5,17992,12608,14448,3004);label=29;break;case 17:if((HEAP32[$2+($i<<2)>>2]|0)==0){label=18;break}else{label=19;break};case 18:HEAP32[$2+($i<<2)>>2]=1;label=19;break;case 19:HEAP32[$2+($i+1<<2)>>2]=$pos-22984;if(($i|0)>0){label=20;break}else{label=22;break};case 20:if((HEAP32[$2+($i+1<<2)>>2]|0)==(HEAP32[$2+($i-1<<2)>>2]|0)){label=21;break}else{label=22;break};case 21:$115=$2+($i-2<<2)|0;HEAP32[$115>>2]=(HEAP32[$115>>2]|0)+(HEAP32[$2+($i<<2)>>2]|0);label=25;break;case 22:$i=$i+2|0;if(($i|0)>=($3|0)){label=23;break}else{label=24;break};case 23:_cvError(-5,17992,12568,14448,3014);label=29;break;case 24:label=25;break;case 25:HEAP32[$2+($i<<2)>>2]=0;label=26;break;case 26:label=27;break;case 27:$k=$k+1|0;label=8;break;case 28:$fmt_pair_count=($i|0)/2|0;label=29;break;case 29:STACKTOP=sp;return $fmt_pair_count|0}return 0}function __ZL8icv_itoaiPci($_val,$buffer,$0){$_val=$_val|0;$buffer=$buffer|0;$0=$0|0;var $2=0,$ptr=0,$val=0,$r=0,$20=0,$30=0,label=0;label=1;while(1)switch(label|0){case 1:$2=$_val;$ptr=$buffer+23|0;$val=Math_abs($2|0)|0;HEAP8[$ptr]=0;label=2;break;case 2:$r=($val>>>0)/10|0;$20=$ptr-1|0;$ptr=$20;HEAP8[$20]=$val-($r*10|0)+48&255;$val=$r;label=3;break;case 3:if(($val|0)!=0){label=2;break}else{label=4;break};case 4:if(($2|0)<0){label=5;break}else{label=6;break};case 5:$30=$ptr-1|0;$ptr=$30;HEAP8[$30]=45;label=6;break;case 6:return $ptr|0}return 0}function __ZL16icvFloatToStringPcf($buf,$value){$buf=$buf|0;$value=+$value;var $1=0,$2=0.0,$val=0,$ieee754=0,$ivalue=0,$avalue=0.0,$ptr=0,$34=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$val=sp|0;$1=$buf;$2=$value;HEAPF32[$val>>2]=$2;$ieee754=HEAP32[$val>>2]|0;if(($ieee754&2139095040|0)!=2139095040){label=2;break}else{label=17;break};case 2:$ivalue=__Z7cvRoundd($2)|0;if(+($ivalue|0)==$2){label=3;break}else{label=4;break};case 3:_sprintf($1|0,12792,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$ivalue,tempInt)|0)|0;label=16;break;case 4:$avalue=+Math_abs(+$2);$ptr=$1;if(.01<=$avalue){label=5;break}else{$34=0;label=6;break};case 5:$34=$avalue<1.0e3;label=6;break;case 6:_sprintf($1|0,HEAP32[17952+(($34&1)<<2)>>2]|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAPF64[tempInt>>3]=$2,tempInt)|0)|0;if((HEAP8[$ptr]|0)==43){label=8;break}else{label=7;break};case 7:if((HEAP8[$ptr]|0)==45){label=8;break}else{label=9;break};case 8:$ptr=$ptr+1|0;label=9;break;case 9:label=10;break;case 10:if((_isdigit(HEAP8[$ptr]|0)|0)!=0){label=11;break}else{label=13;break};case 11:label=12;break;case 12:$ptr=$ptr+1|0;label=10;break;case 13:if((HEAP8[$ptr]|0)==44){label=14;break}else{label=15;break};case 14:HEAP8[$ptr]=46;label=15;break;case 15:label=16;break;case 16:label=21;break;case 17:if(($ieee754&2147483647|0)!=2139095040){label=18;break}else{label=19;break};case 18:_strcpy($1|0,12736)|0;label=20;break;case 19:_strcpy($1|0,(($ieee754|0)<0?12728:12720)|0)|0;label=20;break;case 20:label=21;break;case 21:STACKTOP=sp;return $1|0}return 0}function __ZL17icvDoubleToStringPcd($buf,$value){$buf=$buf|0;$value=+$value;var $1=0,$2=0.0,$val=0,$ieee754_hi=0,$ivalue=0,$avalue=0.0,$ptr=0,$34=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$val=sp|0;$1=$buf;$2=$value;HEAPF64[$val>>3]=$2;$ieee754_hi=HEAP32[$val+4>>2]|0;if(($ieee754_hi&2146435072|0)!=2146435072){label=2;break}else{label=17;break};case 2:$ivalue=__Z7cvRoundd($2)|0;if(+($ivalue|0)==$2){label=3;break}else{label=4;break};case 3:_sprintf($1|0,12792,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$ivalue,tempInt)|0)|0;label=16;break;case 4:$avalue=+Math_abs(+$2);$ptr=$1;if(.01<=$avalue){label=5;break}else{$34=0;label=6;break};case 5:$34=$avalue<1.0e3;label=6;break;case 6:_sprintf($1|0,HEAP32[17888+(($34&1)<<2)>>2]|0,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAPF64[tempInt>>3]=$2,tempInt)|0)|0;if((HEAP8[$ptr]|0)==43){label=8;break}else{label=7;break};case 7:if((HEAP8[$ptr]|0)==45){label=8;break}else{label=9;break};case 8:$ptr=$ptr+1|0;label=9;break;case 9:label=10;break;case 10:if((_isdigit(HEAP8[$ptr]|0)|0)!=0){label=11;break}else{label=13;break};case 11:label=12;break;case 12:$ptr=$ptr+1|0;label=10;break;case 13:if((HEAP8[$ptr]|0)==44){label=14;break}else{label=15;break};case 14:HEAP8[$ptr]=46;label=15;break;case 15:label=16;break;case 16:label=21;break;case 17:if((($ieee754_hi&2147483647)+((HEAP32[$val>>2]|0)!=0)|0)>>>0>2146435072){label=18;break}else{label=19;break};case 18:_strcpy($1|0,12736)|0;label=20;break;case 19:_strcpy($1|0,(($ieee754_hi|0)<0?12728:12720)|0)|0;label=20;break;case 20:label=21;break;case 21:STACKTOP=sp;return $1|0}return 0}function __ZL17icvXMLWriteScalarP13CvFileStoragePKcS2_i($fs,$key,$data,$len){$fs=$fs|0;$key=$key|0;$data=$data|0;$len=$len|0;var $1=0,$2=0,$3=0,$4=0,$5=0,$ptr=0,$6=0,$ptr1=0,$new_offset=0,$109=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+16|0;label=1;while(1)switch(label|0){case 1:$5=sp|0;$6=sp+8|0;$1=$fs;$2=$key;$3=$data;$4=$len;if((HEAP32[$1+44>>2]&7|0)==6){label=4;break}else{label=2;break};case 2:if((HEAP32[$1+44>>2]&7|0)>=5){label=5;break}else{label=3;break};case 3:if(($2|0)!=0){label=4;break}else{label=5;break};case 4:__Z10cvAttrListPPKcP10CvAttrList($5,0,0);__ZL14icvXMLWriteTagP13CvFileStoragePKci10CvAttrList($1,$2,1,$5);$ptr=__Z22icvFSResizeWriteBufferP13CvFileStoragePci($1,HEAP32[$1+68>>2]|0,$4)|0;_memcpy($ptr|0,$3|0,$4)|0;HEAP32[$1+68>>2]=$ptr+$4;__Z10cvAttrListPPKcP10CvAttrList($6,0,0);__ZL14icvXMLWriteTagP13CvFileStoragePKci10CvAttrList($1,$2,2,$6);label=18;break;case 5:$ptr1=HEAP32[$1+68>>2]|0;$new_offset=$ptr1-(HEAP32[$1+72>>2]|0)+$4|0;if(($2|0)!=0){label=6;break}else{label=7;break};case 6:_cvError(-5,17792,13048,14448,2456);label=19;break;case 7:HEAP32[$1+44>>2]=5;if(($new_offset|0)>(HEAP32[$1+80>>2]|0)){label=8;break}else{label=9;break};case 8:if(($new_offset-(HEAP32[$1+40>>2]|0)|0)>10){label=12;break}else{label=9;break};case 9:if($ptr1>>>0>(HEAP32[$1+72>>2]|0)>>>0){label=10;break}else{label=13;break};case 10:if((HEAP8[$ptr1-1|0]|0)==62){label=11;break}else{label=13;break};case 11:if((HEAP32[$1+44>>2]&32|0)!=0){label=13;break}else{label=12;break};case 12:$ptr1=__ZL10icvFSFlushP13CvFileStorage($1)|0;label=17;break;case 13:if($ptr1>>>0>((HEAP32[$1+72>>2]|0)+(HEAP32[$1+40>>2]|0)|0)>>>0){label=14;break}else{label=16;break};case 14:if((HEAP8[$ptr1-1|0]|0)!=62){label=15;break}else{label=16;break};case 15:$109=$ptr1;$ptr1=$109+1|0;HEAP8[$109]=32;label=16;break;case 16:label=17;break;case 17:_memcpy($ptr1|0,$3|0,$4)|0;HEAP32[$1+68>>2]=$ptr1+$4;label=18;break;case 18:label=19;break;case 19:STACKTOP=sp;return}}function __ZL11icvYMLWriteP13CvFileStoragePKcS2_S2_($fs,$key,$data,$cvFuncName){$fs=$fs|0;$key=$key|0;$data=$data|0;$cvFuncName=$cvFuncName|0;var $1=0,$2=0,$3=0,$4=0,$i=0,$keylen=0,$datalen=0,$struct_flags=0,$ptr=0,$new_offset=0,$c=0,$75=0,$108=0,$118=0,$123=0,$187=0,$196=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$key;$3=$data;$4=$cvFuncName;$keylen=0;$datalen=0;$struct_flags=HEAP32[$1+44>>2]|0;if(($2|0)!=0){label=2;break}else{label=4;break};case 2:if((HEAP8[$2|0]|0)==0){label=3;break}else{label=4;break};case 3:$2=0;label=4;break;case 4:if(($struct_flags&7|0)>=5){label=5;break}else{label=8;break};case 5:if((($struct_flags&7|0)==6^($2|0)!=0|0)!=0){label=6;break}else{label=7;break};case 6:_cvError(-5,$4,13280,14448,1340);label=50;break;case 7:label=9;break;case 8:HEAP32[$1+12>>2]=0;$struct_flags=32|(($2|0)!=0?6:5);label=9;break;case 9:if(($2|0)!=0){label=10;break}else{label=15;break};case 10:$keylen=_strlen($2|0)|0;if(($keylen|0)==0){label=11;break}else{label=12;break};case 11:_cvError(-5,$4,13208,14448,1352);label=50;break;case 12:if(($keylen|0)>4096){label=13;break}else{label=14;break};case 13:_cvError(-5,$4,13184,14448,1355);label=50;break;case 14:label=15;break;case 15:if(($3|0)!=0){label=16;break}else{label=17;break};case 16:$datalen=_strlen($3|0)|0;label=17;break;case 17:if(($struct_flags&8|0)!=0){label=18;break}else{label=25;break};case 18:$ptr=HEAP32[$1+68>>2]|0;if(($struct_flags&32|0)!=0){label=20;break}else{label=19;break};case 19:$75=$ptr;$ptr=$75+1|0;HEAP8[$75]=44;label=20;break;case 20:$new_offset=$ptr-(HEAP32[$1+72>>2]|0)+$keylen+$datalen|0;if(($new_offset|0)>(HEAP32[$1+80>>2]|0)){label=21;break}else{label=23;break};case 21:if(($new_offset-(HEAP32[$1+40>>2]|0)|0)>10){label=22;break}else{label=23;break};case 22:HEAP32[$1+68>>2]=$ptr;$ptr=__ZL10icvFSFlushP13CvFileStorage($1)|0;label=24;break;case 23:$108=$ptr;$ptr=$108+1|0;HEAP8[$108]=32;label=24;break;case 24:label=30;break;case 25:$ptr=__ZL10icvFSFlushP13CvFileStorage($1)|0;if(($struct_flags&7|0)==6){label=29;break}else{label=26;break};case 26:$118=$ptr;$ptr=$118+1|0;HEAP8[$118]=45;if(($3|0)!=0){label=27;break}else{label=28;break};case 27:$123=$ptr;$ptr=$123+1|0;HEAP8[$123]=32;label=28;break;case 28:label=29;break;case 29:label=30;break;case 30:if(($2|0)!=0){label=31;break}else{label=47;break};case 31:if((_isalpha(HEAP8[$2|0]|0)|0)!=0){label=34;break}else{label=32;break};case 32:if((HEAP8[$2|0]|0)!=95){label=33;break}else{label=34;break};case 33:_cvError(-5,$4,13144,14448,1390);label=50;break;case 34:$ptr=__Z22icvFSResizeWriteBufferP13CvFileStoragePci($1,$ptr,$keylen)|0;$i=0;label=35;break;case 35:if(($i|0)<($keylen|0)){label=36;break}else{label=43;break};case 36:$c=HEAP8[$2+$i|0]|0;HEAP8[$ptr+$i|0]=$c&255;if((_isalnum($c|0)|0)!=0){label=41;break}else{label=37;break};case 37:if(($c|0)!=45){label=38;break}else{label=41;break};case 38:if(($c|0)!=95){label=39;break}else{label=41;break};case 39:if(($c|0)!=32){label=40;break}else{label=41;break};case 40:_cvError(-5,$4,13104,14448,1400);label=50;break;case 41:label=42;break;case 42:$i=$i+1|0;label=35;break;case 43:$ptr=$ptr+$keylen|0;$187=$ptr;$ptr=$187+1|0;HEAP8[$187]=58;if(($struct_flags&8|0)!=0){label=46;break}else{label=44;break};case 44:if(($3|0)!=0){label=45;break}else{label=46;break};case 45:$196=$ptr;$ptr=$196+1|0;HEAP8[$196]=32;label=46;break;case 46:label=47;break;case 47:if(($3|0)!=0){label=48;break}else{label=49;break};case 48:$ptr=__Z22icvFSResizeWriteBufferP13CvFileStoragePci($1,$ptr,$datalen)|0;_memcpy($ptr|0,$3|0,$datalen)|0;$ptr=$ptr+$datalen|0;label=49;break;case 49:HEAP32[$1+68>>2]=$ptr;HEAP32[$1+44>>2]=$struct_flags&-33;label=50;break;case 50:return}}function _cvStartReadRawData($fs,$src,$reader){$fs=$fs|0;$src=$src|0;$reader=$reader|0;var $1=0,$2=0,$3=0,$node_type=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$src;$3=$reader;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6344,8912,14448,3192);label=20;break;case 4:if(($2|0)!=0){label=5;break}else{label=6;break};case 5:if(($3|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-27,6344,10600,14448,3195);label=20;break;case 7:$node_type=HEAP32[$2>>2]&7;if(($node_type|0)==1){label=9;break}else{label=8;break};case 8:if(($node_type|0)==2){label=9;break}else{label=10;break};case 9:HEAP32[$3+12>>2]=$2;HEAP32[$3+20>>2]=(HEAP32[$3+12>>2]|0)+32;HEAP32[$3+16>>2]=HEAP32[$3+12>>2];HEAP32[$3+4>>2]=0;label=19;break;case 10:if(($node_type|0)==5){label=11;break}else{label=14;break};case 11:_cvStartReadSeq(HEAP32[$2+8>>2]|0,$3,0);if((_cvGetErrStatus()|0)<0){label=12;break}else{label=13;break};case 12:_cvError(-1,6344,10256,14448,3208);label=20;break;case 13:label=18;break;case 14:if(($node_type|0)==0){label=15;break}else{label=16;break};case 15:_memset($3|0,0,32);label=17;break;case 16:_cvError(-5,6344,10320,14448,3215);label=20;break;case 17:label=18;break;case 18:label=19;break;case 19:label=20;break;case 20:return}}function _cvReadRawDataSlice($fs,$reader,$len,$_data,$dt){$fs=$fs|0;$reader=$reader|0;$len=$len|0;$_data=$_data|0;$dt=$dt|0;var $1=0,$2=0,$3=0,$data0=0,$fmt_pairs=0,$k=0,$fmt_pair_count=0,$i=0,$offset=0,$count=0,$elem_type=0,$data=0,$node=0,$ival=0,$fval=0.0,$ival1=0,$92=0,$104=0,$121=0,$135=0,$153=0,$198=0,$212=0,$231=0,$247=0,$267=0,$308=0,$310=0,$320=0,$355=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+1024|0;label=1;while(1)switch(label|0){case 1:$fmt_pairs=sp|0;$1=$fs;$2=$reader;$3=$len;$data0=$_data;$k=0;$i=0;$offset=0;$count=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,6264,8912,14448,3233);label=82;break;case 4:if(($2|0)!=0){label=5;break}else{label=6;break};case 5:if(($data0|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-27,6264,10184,14448,3236);label=82;break;case 7:if((HEAP32[$2+4>>2]|0)!=0){label=10;break}else{label=8;break};case 8:if(($3|0)!=1){label=9;break}else{label=10;break};case 9:_cvError(-201,6264,10112,14448,3239);label=82;break;case 10:$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-1,6264,10256,14448,3241);label=82;break;case 12:label=13;break;case 13:$k=0;label=14;break;case 14:if(($k|0)<($fmt_pair_count|0)){label=15;break}else{label=75;break};case 15:$elem_type=HEAP32[$fmt_pairs+(($k<<1)+1<<2)>>2]|0;$count=HEAP32[$fmt_pairs+($k<<1<<2)>>2]|0;$offset=__Z7cvAlignii($offset,(($elem_type&504)>>3)+1<<(47696>>>(($elem_type&7)<<1>>>0)&3))|0;$data=$data0+$offset|0;$i=0;label=16;break;case 16:if(($i|0)<($count|0)){label=17;break}else{label=73;break};case 17:$node=HEAP32[$2+12>>2]|0;if((HEAP32[$node>>2]&7|0)==1){label=18;break}else{label=41;break};case 18:$ival=HEAP32[$node+8>>2]|0;$92=$elem_type;if(($92|0)==0){label=19;break}else if(($92|0)==1){label=23;break}else if(($92|0)==2){label=27;break}else if(($92|0)==3){label=31;break}else if(($92|0)==4){label=35;break}else if(($92|0)==5){label=36;break}else if(($92|0)==6){label=37;break}else if(($92|0)==7){label=38;break}else{label=39;break};case 19:if(($ival&-256|0)!=0){label=21;break}else{label=20;break};case 20:$104=$ival;label=22;break;case 21:$104=($ival|0)>0?255:0;label=22;break;case 22:HEAP8[$data]=$104&255;$data=$data+1|0;label=40;break;case 23:if(($ival+128&-256|0)!=0){label=25;break}else{label=24;break};case 24:$121=$ival;label=26;break;case 25:$121=($ival|0)>0?127:-128;label=26;break;case 26:HEAP8[$data]=$121&255;label=40;break;case 27:if(($ival&-65536|0)!=0){label=29;break}else{label=28;break};case 28:$135=$ival;label=30;break;case 29:$135=($ival|0)>0?65535:0;label=30;break;case 30:HEAP16[$data>>1]=$135&65535;$data=$data+2|0;label=40;break;case 31:if(($ival+32768&-65536|0)!=0){label=33;break}else{label=32;break};case 32:$153=$ival;label=34;break;case 33:$153=($ival|0)>0?32767:-32768;label=34;break;case 34:HEAP16[$data>>1]=$153&65535;$data=$data+2|0;label=40;break;case 35:HEAP32[$data>>2]=$ival;$data=$data+4|0;label=40;break;case 36:HEAPF32[$data>>2]=+($ival|0);$data=$data+4|0;label=40;break;case 37:HEAPF64[$data>>3]=+($ival|0);$data=$data+8|0;label=40;break;case 38:HEAP32[$data>>2]=$ival;$data=$data+4|0;label=40;break;case 39:label=82;break;case 40:label=67;break;case 41:if((HEAP32[$node>>2]&7|0)==2){label=42;break}else{label=65;break};case 42:$fval=+HEAPF64[$node+8>>3];$198=$elem_type;if(($198|0)==0){label=43;break}else if(($198|0)==1){label=47;break}else if(($198|0)==2){label=51;break}else if(($198|0)==3){label=55;break}else if(($198|0)==4){label=59;break}else if(($198|0)==5){label=60;break}else if(($198|0)==6){label=61;break}else if(($198|0)==7){label=62;break}else{label=63;break};case 43:$ival1=__Z7cvRoundd($fval)|0;if(($ival1&-256|0)!=0){label=45;break}else{label=44;break};case 44:$212=$ival1;label=46;break;case 45:$212=($ival1|0)>0?255:0;label=46;break;case 46:HEAP8[$data]=$212&255;$data=$data+1|0;label=64;break;case 47:$ival1=__Z7cvRoundd($fval)|0;if(($ival1+128&-256|0)!=0){label=49;break}else{label=48;break};case 48:$231=$ival1;label=50;break;case 49:$231=($ival1|0)>0?127:-128;label=50;break;case 50:HEAP8[$data]=$231&255;label=64;break;case 51:$ival1=__Z7cvRoundd($fval)|0;if(($ival1&-65536|0)!=0){label=53;break}else{label=52;break};case 52:$247=$ival1;label=54;break;case 53:$247=($ival1|0)>0?65535:0;label=54;break;case 54:HEAP16[$data>>1]=$247&65535;$data=$data+2|0;label=64;break;case 55:$ival1=__Z7cvRoundd($fval)|0;if(($ival1+32768&-65536|0)!=0){label=57;break}else{label=56;break};case 56:$267=$ival1;label=58;break;case 57:$267=($ival1|0)>0?32767:-32768;label=58;break;case 58:HEAP16[$data>>1]=$267&65535;$data=$data+2|0;label=64;break;case 59:$ival1=__Z7cvRoundd($fval)|0;HEAP32[$data>>2]=$ival1;$data=$data+4|0;label=64;break;case 60:HEAPF32[$data>>2]=$fval;$data=$data+4|0;label=64;break;case 61:HEAPF64[$data>>3]=$fval;$data=$data+8|0;label=64;break;case 62:$ival1=__Z7cvRoundd($fval)|0;HEAP32[$data>>2]=$ival1;$data=$data+4|0;label=64;break;case 63:label=82;break;case 64:label=66;break;case 65:_cvError(-2,6264,10064,14448,3351);label=82;break;case 66:label=67;break;case 67:$308=$2+12|0;$310=(HEAP32[$308>>2]|0)+16|0;HEAP32[$308>>2]=$310;if($310>>>0>=(HEAP32[$2+20>>2]|0)>>>0){label=68;break}else{label=69;break};case 68:_cvChangeSeqBlock($2,1);label=69;break;case 69:$320=$3-1|0;$3=$320;if(($320|0)!=0){label=71;break}else{label=70;break};case 70:label=76;break;case 71:label=72;break;case 72:$i=$i+1|0;label=16;break;case 73:$offset=$data-$data0|0;label=74;break;case 74:$k=$k+1|0;label=14;break;case 75:label=13;break;case 76:if(($i|0)!=($count-1|0)){label=78;break}else{label=77;break};case 77:if(($k|0)!=($fmt_pair_count-1|0)){label=78;break}else{label=79;break};case 78:_cvError(-201,6264,1e4,14448,3365);label=82;break;case 79:if((HEAP32[$2+4>>2]|0)!=0){label=81;break}else{label=80;break};case 80:$355=$2+12|0;HEAP32[$355>>2]=(HEAP32[$355>>2]|0)-16;label=81;break;case 81:label=82;break;case 82:STACKTOP=sp;return}}function _cvReadRawData($fs,$src,$data,$dt){$fs=$fs|0;$src=$src|0;$data=$data|0;$dt=$dt|0;var $1=0,$2=0,$3=0,$reader=0,$33=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$1=$fs;$2=$src;$3=$data;if(($2|0)!=0){label=2;break}else{label=3;break};case 2:if(($3|0)!=0){label=4;break}else{label=3;break};case 3:_cvError(-27,6232,9736,14448,3385);label=10;break;case 4:_cvStartReadRawData($1,$2,$reader);if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,6232,10256,14448,3387);label=10;break;case 6:if((HEAP32[$2>>2]&7|0)==5){label=7;break}else{label=8;break};case 7:$33=HEAP32[(HEAP32[$2+8>>2]|0)+24>>2]|0;label=9;break;case 8:$33=1;label=9;break;case 9:_cvReadRawDataSlice($1,$reader,$33,$3,$dt);label=10;break;case 10:STACKTOP=sp;return}}function __ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E($this,$type_name,$is_instance,$release,$read,$write,$clone){$this=$this|0;$type_name=$type_name|0;$is_instance=$is_instance|0;$release=$release|0;$read=$read|0;$write=$write|0;$clone=$clone|0;var $_info=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+40|0;$_info=sp|0;HEAP32[$_info>>2]=0;HEAP32[$_info+4>>2]=40;HEAP32[$_info+16>>2]=$type_name;HEAP32[$_info+12>>2]=0;HEAP32[$_info+8>>2]=0;HEAP32[$_info+20>>2]=$is_instance;HEAP32[$_info+24>>2]=$release;HEAP32[$_info+36>>2]=$clone;HEAP32[$_info+28>>2]=$read;HEAP32[$_info+32>>2]=$write;_cvRegisterType($_info);HEAP32[$this>>2]=HEAP32[7264];STACKTOP=sp;return}function _cvRegisterType($_info){$_info=$_info|0;var $1=0,$info=0,$i=0,$len=0,$c=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$_info;$info=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1+4>>2]|0)!=40){label=3;break}else{label=4;break};case 3:_cvError(-201,6e3,8792,14448,4883);label=26;break;case 4:if((HEAP32[$1+20>>2]|0)!=0){label=5;break}else{label=8;break};case 5:if((HEAP32[$1+24>>2]|0)!=0){label=6;break}else{label=8;break};case 6:if((HEAP32[$1+28>>2]|0)!=0){label=7;break}else{label=8;break};case 7:if((HEAP32[$1+32>>2]|0)!=0){label=9;break}else{label=8;break};case 8:_cvError(-27,6e3,8704,14448,4889);label=26;break;case 9:$c=HEAP8[HEAP32[$1+16>>2]|0]|0;if((_isalpha($c<<24>>24|0)|0)!=0){label=12;break}else{label=10;break};case 10:if(($c<<24>>24|0)!=95){label=11;break}else{label=12;break};case 11:_cvError(-5,6e3,8656,14448,4893);label=26;break;case 12:$len=_strlen(HEAP32[$1+16>>2]|0)|0;$i=0;label=13;break;case 13:if(($i|0)<($len|0)){label=14;break}else{label=20;break};case 14:$c=HEAP8[(HEAP32[$1+16>>2]|0)+$i|0]|0;if((_isalnum($c<<24>>24|0)|0)!=0){label=18;break}else{label=15;break};case 15:if(($c<<24>>24|0)!=45){label=16;break}else{label=18;break};case 16:if(($c<<24>>24|0)!=95){label=17;break}else{label=18;break};case 17:_cvError(-5,6e3,8576,14448,4902);label=26;break;case 18:label=19;break;case 19:$i=$i+1|0;label=13;break;case 20:$info=_cvAlloc($len+41|0)|0;if((_cvGetErrStatus()|0)<0){label=21;break}else{label=22;break};case 21:_cvError(-1,6e3,10256,14448,4905);label=26;break;case 22:_memcpy($info|0,$1|0,40)|0;HEAP32[$info+16>>2]=$info+40;_memcpy(HEAP32[$info+16>>2]|0,HEAP32[$1+16>>2]|0,$len+1|0)|0;HEAP32[$info>>2]=0;HEAP32[$info+12>>2]=HEAP32[7264];HEAP32[$info+8>>2]=0;if((HEAP32[7264]|0)!=0){label=23;break}else{label=24;break};case 23:HEAP32[(HEAP32[7264]|0)+8>>2]=$info;label=25;break;case 24:HEAP32[7266]=$info;label=25;break;case 25:HEAP32[7264]=$info;label=26;break;case 26:return}}function __ZN6CvTypeD2Ev($this){$this=$this|0;_cvUnregisterType(HEAP32[(HEAP32[$this>>2]|0)+16>>2]|0);return}function __ZL8icvIsSeqPKv($ptr){$ptr=$ptr|0;var $1=0,$12=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$12=0;label=3;break};case 2:$12=(HEAP32[$1>>2]&-65536|0)==1117323264;label=3;break;case 3:return $12&1|0}return 0}function _cvUnregisterType($type_name){$type_name=$type_name|0;var $info=0,label=0;label=1;while(1)switch(label|0){case 1:$info=_cvFindType($type_name)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,5928,10256,14448,4933);label=15;break;case 3:if(($info|0)!=0){label=4;break}else{label=14;break};case 4:if((HEAP32[$info+8>>2]|0)!=0){label=5;break}else{label=6;break};case 5:HEAP32[(HEAP32[$info+8>>2]|0)+12>>2]=HEAP32[$info+12>>2];label=7;break;case 6:HEAP32[7264]=HEAP32[$info+12>>2];label=7;break;case 7:if((HEAP32[$info+12>>2]|0)!=0){label=8;break}else{label=9;break};case 8:HEAP32[(HEAP32[$info+12>>2]|0)+8>>2]=HEAP32[$info+8>>2];label=10;break;case 9:HEAP32[7266]=HEAP32[$info+8>>2];label=10;break;case 10:if((HEAP32[7264]|0)!=0){label=11;break}else{label=12;break};case 11:if((HEAP32[7266]|0)!=0){label=13;break}else{label=12;break};case 12:HEAP32[7266]=0;HEAP32[7264]=0;label=13;break;case 13:_cvFree_($info);$info=0;label=14;break;case 14:label=15;break;case 15:return}}function ___cxx_global_var_init548(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(23632,9560,368,274,766,16,56);_atexit(318,23632,___dso_handle|0)|0;return}function __ZL13icvReleaseSeqPPv($ptr){$ptr=$ptr|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,18104,8352,14448,4059);label=4;break;case 3:HEAP32[$1>>2]=0;label=4;break;case 4:return}}function __ZL10icvReadSeqP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$seq=0,$block=0,$data=0,$header_node=0,$rect_node=0,$origin_node=0,$reader=0,$total=0,$flags=0,$elem_size=0,$header_size=0,$fmt_pairs=0,$i=0,$fmt_pair_count=0,$items_per_elem=0,$flags_str=0,$header_dt=0,$dt=0,$endptr=0,$point_seq=0,$chain=0,$213=0,$235=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+552|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$fmt_pairs=sp+32|0;$endptr=sp+544|0;$1=$fs;$2=$node;$ptr=0;$header_size=56;$items_per_elem=0;HEAP32[$endptr>>2]=0;$flags_str=_cvReadStringByName($1,$2,15224,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18280,10256,14448,4300);label=55;break;case 3:$total=_cvReadIntByName($1,$2,13680,-1)|0;$dt=_cvReadStringByName($1,$2,7544,0)|0;if(($flags_str|0)!=0){label=4;break}else{label=6;break};case 4:if(($total|0)==-1){label=6;break}else{label=5;break};case 5:if(($dt|0)!=0){label=7;break}else{label=6;break};case 6:_cvError(-2,18280,14512,14448,4305);label=55;break;case 7:$flags=_strtol($flags_str|0,$endptr|0,16)|0;if((HEAP32[$endptr>>2]|0)==($flags_str|0)){label=9;break}else{label=8;break};case 8:if(($flags&-65536|0)!=1117323264){label=9;break}else{label=10;break};case 9:_cvError(-2,18280,13600,14448,4309);label=55;break;case 10:$header_dt=_cvReadStringByName($1,$2,15064,0)|0;$header_node=_cvGetFileNodeByName($1,$2,14736)|0;if((($header_dt|0)!=0^($header_node|0)!=0|0)!=0){label=11;break}else{label=12;break};case 11:_cvError(-2,18280,14184,14448,4316);label=55;break;case 12:$rect_node=_cvGetFileNodeByName($1,$2,14880)|0;$origin_node=_cvGetFileNodeByName($1,$2,15824)|0;if(((($header_node|0)!=0)+(($rect_node|0)!=0)+(($origin_node|0)!=0)|0)>1){label=13;break}else{label=14;break};case 13:_cvError(-2,18280,13528,14448,4322);label=55;break;case 14:if(($header_dt|0)!=0){label=15;break}else{label=18;break};case 15:$header_size=__ZL15icvCalcElemSizePKci($header_dt,$header_size)|0;if((_cvGetErrStatus()|0)<0){label=16;break}else{label=17;break};case 16:_cvError(-1,18280,10256,14448,4326);label=55;break;case 17:label=24;break;case 18:if(($rect_node|0)!=0){label=19;break}else{label=20;break};case 19:$header_size=88;label=23;break;case 20:if(($origin_node|0)!=0){label=21;break}else{label=22;break};case 21:$header_size=64;label=22;break;case 22:label=23;break;case 23:label=24;break;case 24:$elem_size=__ZL15icvCalcElemSizePKci($dt,0)|0;if((_cvGetErrStatus()|0)<0){label=25;break}else{label=26;break};case 25:_cvError(-1,18280,10256,14448,4333);label=55;break;case 26:$seq=_cvCreateSeq($flags,$header_size,$elem_size,HEAP32[$1+20>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=27;break}else{label=28;break};case 27:_cvError(-1,18280,10256,14448,4334);label=55;break;case 28:if(($header_node|0)!=0){label=29;break}else{label=32;break};case 29:_cvReadRawData($1,$header_node,$seq+56|0,$header_dt);if((_cvGetErrStatus()|0)<0){label=30;break}else{label=31;break};case 30:_cvError(-1,18280,10256,14448,4338);label=55;break;case 31:label=38;break;case 32:if(($rect_node|0)!=0){label=33;break}else{label=34;break};case 33:$point_seq=$seq;HEAP32[$point_seq+56>>2]=_cvReadIntByName($1,$rect_node,15656,0)|0;HEAP32[$point_seq+60>>2]=_cvReadIntByName($1,$rect_node,15648,0)|0;HEAP32[$point_seq+64>>2]=_cvReadIntByName($1,$rect_node,15840,0)|0;HEAP32[$point_seq+68>>2]=_cvReadIntByName($1,$rect_node,15832,0)|0;HEAP32[$point_seq+72>>2]=_cvReadIntByName($1,$2,14872,0)|0;label=37;break;case 34:if(($origin_node|0)!=0){label=35;break}else{label=36;break};case 35:$chain=$seq;HEAP32[$chain+56>>2]=_cvReadIntByName($1,$origin_node,15656,0)|0;HEAP32[$chain+60>>2]=_cvReadIntByName($1,$origin_node,15648,0)|0;label=36;break;case 36:label=37;break;case 37:label=38;break;case 38:_cvSeqPushMulti($seq,0,$total,0);$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=39;break}else{label=40;break};case 39:_cvError(-1,18280,10256,14448,4357);label=55;break;case 40:$fmt_pair_count=$fmt_pair_count<<1;$i=0;label=41;break;case 41:if(($i|0)<($fmt_pair_count|0)){label=42;break}else{label=44;break};case 42:$items_per_elem=$items_per_elem+(HEAP32[$fmt_pairs+($i<<2)>>2]|0)|0;label=43;break;case 43:$i=$i+2|0;label=41;break;case 44:$data=_cvGetFileNodeByName($1,$2,7512)|0;if(($data|0)!=0){label=46;break}else{label=45;break};case 45:_cvError(-2,18280,15464,14448,4364);label=55;break;case 46:$213=__ZL17icvFileNodeSeqLenP10CvFileNode($data)|0;if(($213|0)!=(Math_imul($total,$items_per_elem)|0)){label=47;break}else{label=48;break};case 47:_cvError(-2,18280,13448,14448,4367);label=55;break;case 48:_cvStartReadRawData($1,$data,$reader);$block=HEAP32[$seq+52>>2]|0;label=49;break;case 49:if(($block|0)!=0){label=50;break}else{label=54;break};case 50:$235=Math_imul(HEAP32[$block+12>>2]|0,$items_per_elem)|0;_cvReadRawDataSlice($1,$reader,$235,HEAP32[$block+16>>2]|0,$dt);if(($block|0)==(HEAP32[HEAP32[$seq+52>>2]>>2]|0)){label=51;break}else{label=52;break};case 51:label=54;break;case 52:label=53;break;case 53:$block=HEAP32[$block+4>>2]|0;label=49;break;case 54:$ptr=$seq;label=55;break;case 55:STACKTOP=sp;return $ptr|0}return 0}function __ZL15icvWriteSeqTreeP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$attr){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$attr=$attr|0;var $1=0,$2=0,$seq=0,$recursive_value=0,$4=0,$tree_iterator=0,$5=0,$6=0,$7=0,$34=0,$36=0,$38=0,$48=0,$49=0,$76=0,$77=0,$78=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$attr;$attr=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$attr>>2]=HEAP32[tempParam>>2];HEAP32[$attr+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$4=sp|0;$tree_iterator=sp+8|0;$5=sp+24|0;$6=sp+32|0;$7=sp+40|0;$1=$fs;$2=$name;$seq=$struct_ptr;$recursive_value=_cvAttrValue($attr,13744)|0;if(($recursive_value|0)!=0){label=2;break}else{$38=1;label=9;break};case 2:if((_strcmp($recursive_value|0,13736)|0)==0){$38=1;label=9;break}else{label=3;break};case 3:if((_strlen($recursive_value|0)|0)==5){label=4;break}else{$36=0;label=8;break};case 4:if((_strcmp($recursive_value|0,13720)|0)==0){$34=1;label=7;break}else{label=5;break};case 5:if((_strcmp($recursive_value|0,13696)|0)==0){$34=1;label=7;break}else{label=6;break};case 6:$34=(_strcmp($recursive_value|0,13688)|0)==0;label=7;break;case 7:$36=$34;label=8;break;case 8:$38=$36;label=9;break;case 9:if((($38^1)&1|0)!=0){label=13;break}else{label=10;break};case 10:$48=$4;$49=$attr;HEAP32[$48>>2]=HEAP32[$49>>2];HEAP32[$48+4>>2]=HEAP32[$49+4>>2];__ZL11icvWriteSeqP13CvFileStoragePKcPKv10CvAttrListi($1,$2,$seq,$4,-1);if((_cvGetErrStatus()|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-1,17960,10256,14448,4253);label=25;break;case 12:label=24;break;case 13:__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($1,$2,6,9368,$5);if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,17960,10256,14448,4259);label=25;break;case 15:__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($1,13984,5,0,$6);if((_cvGetErrStatus()|0)<0){label=16;break}else{label=17;break};case 16:_cvError(-1,17960,10256,14448,4260);label=25;break;case 17:_cvInitTreeNodeIterator($tree_iterator,$seq,2147483647);label=18;break;case 18:if((HEAP32[$tree_iterator>>2]|0)!=0){label=20;break}else{label=19;break};case 19:label=23;break;case 20:$76=HEAP32[$tree_iterator>>2]|0;$77=$7;$78=$attr;HEAP32[$77>>2]=HEAP32[$78>>2];HEAP32[$77+4>>2]=HEAP32[$78+4>>2];__ZL11icvWriteSeqP13CvFileStoragePKcPKv10CvAttrListi($1,0,$76,$7,HEAP32[$tree_iterator+4>>2]|0);if((_cvGetErrStatus()|0)<0){label=21;break}else{label=22;break};case 21:_cvError(-1,17960,10256,14448,4267);label=25;break;case 22:_cvNextTreeNode($tree_iterator)|0;label=18;break;case 23:_cvEndWriteStruct($1);_cvEndWriteStruct($1);label=24;break;case 24:label=25;break;case 25:STACKTOP=sp;return}}function __ZL11icvCloneSeqPKv($ptr){$ptr=$ptr|0;var $2=0,$6=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;$2=sp|0;__Z7cvSliceii($2,0,1073741823);$6=_cvSeqSlice($ptr,$2,0,1)|0;STACKTOP=sp;return $6|0}function ___cxx_global_var_init53(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(23640,9368,368,274,576,16,56);_atexit(318,23640,___dso_handle|0)|0;return}function __ZL10icvIsGraphPKv($ptr){$ptr=$ptr|0;var $1=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$19=0;label=4;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1117257728){label=3;break}else{$19=0;label=4;break};case 3:$19=(HEAP32[$1>>2]&3584|0)==1536;label=4;break;case 4:return $19&1|0}return 0}function __ZL14icvReadSeqTreeP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$ptr=0,$sequences_node=0,$sequences=0,$root=0,$parent=0,$prev_seq=0,$reader=0,$i=0,$total=0,$prev_level=0,$elem=0,$seq=0,$level=0,$108=0,$110=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$1=$fs;$ptr=0;$sequences_node=_cvGetFileNodeByName($1,$node,13984)|0;$root=0;$parent=0;$prev_seq=0;$prev_level=0;if(($sequences_node|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$sequences_node>>2]&7|0)==5){label=4;break}else{label=3;break};case 3:_cvError(-212,18040,13888,14448,4405);label=32;break;case 4:$sequences=HEAP32[$sequences_node+8>>2]|0;$total=HEAP32[$sequences+24>>2]|0;_cvStartReadSeq($sequences,$reader,0);$i=0;label=5;break;case 5:if(($i|0)<($total|0)){label=6;break}else{label=31;break};case 6:$elem=HEAP32[$reader+12>>2]|0;$seq=_cvRead($1,$elem,0)|0;if((_cvGetErrStatus()|0)<0){label=7;break}else{label=8;break};case 7:_cvError(-1,18040,10256,14448,4416);label=32;break;case 8:$level=_cvReadIntByName($1,$elem,13856,-1)|0;if((_cvGetErrStatus()|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-1,18040,10256,14448,4417);label=32;break;case 10:if(($level|0)<0){label=11;break}else{label=12;break};case 11:_cvError(-212,18040,13792,14448,4419);label=32;break;case 12:if(($root|0)!=0){label=14;break}else{label=13;break};case 13:$root=$seq;label=14;break;case 14:if(($level|0)>($prev_level|0)){label=15;break}else{label=18;break};case 15:$parent=$prev_seq;$prev_seq=0;if(($parent|0)!=0){label=16;break}else{label=17;break};case 16:HEAP32[$parent+20>>2]=$seq;label=17;break;case 17:label=25;break;case 18:if(($level|0)<($prev_level|0)){label=19;break}else{label=24;break};case 19:label=20;break;case 20:if(($prev_level|0)>($level|0)){label=21;break}else{label=23;break};case 21:$prev_seq=HEAP32[$prev_seq+16>>2]|0;label=22;break;case 22:$prev_level=$prev_level-1|0;label=20;break;case 23:$parent=HEAP32[$prev_seq+16>>2]|0;label=24;break;case 24:label=25;break;case 25:HEAP32[$seq+8>>2]=$prev_seq;if(($prev_seq|0)!=0){label=26;break}else{label=27;break};case 26:HEAP32[$prev_seq+12>>2]=$seq;label=27;break;case 27:HEAP32[$seq+16>>2]=$parent;$prev_seq=$seq;$prev_level=$level;$108=$reader+12|0;$110=(HEAP32[$108>>2]|0)+(HEAP32[$sequences+28>>2]|0)|0;HEAP32[$108>>2]=$110;if($110>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=28;break}else{label=29;break};case 28:_cvChangeSeqBlock($reader,1);label=29;break;case 29:label=30;break;case 30:$i=$i+1|0;label=5;break;case 31:$ptr=$root;label=32;break;case 32:STACKTOP=sp;return $ptr|0}return 0}function ___cxx_global_var_init55(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(23648,9280,58,652,580,582,412);_atexit(318,23648,___dso_handle|0)|0;return}function __ZL15icvReleaseGraphPPv($ptr){$ptr=$ptr|0;var $1=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:_cvError(-27,17976,8352,14448,4469);label=4;break;case 3:HEAP32[$1>>2]=0;label=4;break;case 4:return}}function __ZL12icvReadGraphP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$read_buf=0,$vtx_buf=0,$graph=0,$header_node=0,$vtx_node=0,$edge_node=0,$flags=0,$vtx_count=0,$edge_count=0,$vtx_size=0,$edge_size=0,$header_size=0,$src_vtx_size=0,$src_edge_size=0,$fmt_pairs=0,$fmt_pair_count=0,$vtx_items_per_elem=0,$edge_items_per_elem=0,$edge_user_align=0,$read_buf_size=0,$i=0,$k=0,$flags_str=0,$header_dt=0,$vtx_dt=0,$edge_dt=0,$endptr=0,$dst_edge_dt_buf=0,$dst_edge_dt=0,$dt=0,$elem_size=0,$src_elem_size=0,$elem_count=0,$dst_ptr=0,$read_max=0,$read_count=0,$reader=0,$count=0,$vtx=0,$edge=0,$vtx1=0,$vtx2=0,$result=0,$dst_ptr2=0,$206=0,$207=0,$257=0,$268=0,$337=0,$368=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+696|0;label=1;while(1)switch(label|0){case 1:$fmt_pairs=sp|0;$endptr=sp+512|0;$dst_edge_dt_buf=sp+520|0;$reader=sp+648|0;$vtx=sp+680|0;$edge=sp+688|0;$1=$fs;$2=$node;$ptr=0;$read_buf=0;$vtx_buf=0;$vtx_size=8;$header_size=68;$src_vtx_size=0;$vtx_items_per_elem=0;$edge_items_per_elem=0;$edge_user_align=4;HEAP32[$endptr>>2]=0;$flags_str=_cvReadStringByName($1,$2,15224,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18184,10256,14448,4654);label=106;break;case 3:$vtx_dt=_cvReadStringByName($1,$2,15176,0)|0;$edge_dt=_cvReadStringByName($1,$2,15128,0)|0;$vtx_count=_cvReadIntByName($1,$2,15208,-1)|0;$edge_count=_cvReadIntByName($1,$2,15136,-1)|0;if(($flags_str|0)!=0){label=4;break}else{label=7;break};case 4:if(($vtx_count|0)==-1){label=7;break}else{label=5;break};case 5:if(($edge_count|0)==-1){label=7;break}else{label=6;break};case 6:if(($edge_dt|0)!=0){label=8;break}else{label=7;break};case 7:_cvError(-2,18184,14512,14448,4661);label=106;break;case 8:$flags=_strtol($flags_str|0,$endptr|0,16)|0;if((HEAP32[$endptr>>2]|0)==($flags_str|0)){label=10;break}else{label=9;break};case 9:if(($flags&-61952|0)!=1117259264){label=10;break}else{label=11;break};case 10:_cvError(-2,18184,14424,14448,4666);label=106;break;case 11:$header_dt=_cvReadStringByName($1,$2,15064,0)|0;$header_node=_cvGetFileNodeByName($1,$2,14736)|0;if((($header_dt|0)!=0^($header_node|0)!=0|0)!=0){label=12;break}else{label=13;break};case 12:_cvError(-2,18184,14184,14448,4673);label=106;break;case 13:if(($header_dt|0)!=0){label=14;break}else{label=17;break};case 14:$header_size=__ZL15icvCalcElemSizePKci($header_dt,$header_size)|0;if((_cvGetErrStatus()|0)<0){label=15;break}else{label=16;break};case 15:_cvError(-1,18184,10256,14448,4676);label=106;break;case 16:label=17;break;case 17:if($vtx_dt>>>0>0){label=18;break}else{label=29;break};case 18:$src_vtx_size=__ZL15icvCalcElemSizePKci($vtx_dt,0)|0;if((_cvGetErrStatus()|0)<0){label=19;break}else{label=20;break};case 19:_cvError(-1,18184,10256,14448,4680);label=106;break;case 20:$vtx_size=__ZL15icvCalcElemSizePKci($vtx_dt,$vtx_size)|0;if((_cvGetErrStatus()|0)<0){label=21;break}else{label=22;break};case 21:_cvError(-1,18184,10256,14448,4681);label=106;break;case 22:$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($edge_dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=23;break}else{label=24;break};case 23:_cvError(-1,18184,10256,14448,4683);label=106;break;case 24:$fmt_pair_count=$fmt_pair_count<<1;$i=0;label=25;break;case 25:if(($i|0)<($fmt_pair_count|0)){label=26;break}else{label=28;break};case 26:$vtx_items_per_elem=$vtx_items_per_elem+(HEAP32[$fmt_pairs+($i<<2)>>2]|0)|0;label=27;break;case 27:$i=$i+2|0;label=25;break;case 28:label=29;break;case 29:$dst_edge_dt=0;$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($edge_dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=30;break}else{label=31;break};case 30:_cvError(-1,18184,10256,14448,4694);label=106;break;case 31:if(($fmt_pair_count|0)<2){label=36;break}else{label=32;break};case 32:if((HEAP32[$fmt_pairs>>2]|0)!=2){label=36;break}else{label=33;break};case 33:if((HEAP32[$fmt_pairs+4>>2]|0)!=4){label=36;break}else{label=34;break};case 34:if((HEAP32[$fmt_pairs+8>>2]|0)<1){label=36;break}else{label=35;break};case 35:if((HEAP32[$fmt_pairs+12>>2]|0)!=5){label=36;break}else{label=37;break};case 36:_cvError(-5,18184,14128,14448,4699);label=106;break;case 37:if(($fmt_pair_count|0)>2){label=38;break}else{label=40;break};case 38:if((((HEAP32[$fmt_pairs+20>>2]&504)>>3)+1<<(47696>>>((HEAP32[$fmt_pairs+20>>2]&7)<<1>>>0)&3)|0)>=8){label=39;break}else{label=40;break};case 39:$edge_user_align=8;label=40;break;case 40:$fmt_pair_count=$fmt_pair_count<<1;$i=0;label=41;break;case 41:if(($i|0)<($fmt_pair_count|0)){label=42;break}else{label=44;break};case 42:$edge_items_per_elem=$edge_items_per_elem+(HEAP32[$fmt_pairs+($i<<2)>>2]|0)|0;label=43;break;case 43:$i=$i+2|0;label=41;break;case 44:if((HEAP8[$edge_dt+2|0]|0)==102){label=47;break}else{label=45;break};case 45:if((HEAP8[$edge_dt+2|0]|0)==49){label=46;break}else{label=48;break};case 46:if((HEAP8[$edge_dt+3|0]|0)==102){label=47;break}else{label=48;break};case 47:$dst_edge_dt=$edge_dt+3+(_isdigit(HEAP8[$edge_dt+2|0]|0)|0)|0;label=49;break;case 48:$206=(_strtol($edge_dt+2|0,$endptr|0,10)|0)-1|0;$207=HEAP32[$endptr>>2]|0;_sprintf($dst_edge_dt_buf|0,14120,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=$206,HEAP32[tempInt+8>>2]=$207,tempInt)|0)|0;$dst_edge_dt=$dst_edge_dt_buf|0;label=49;break;case 49:$edge_size=__ZL15icvCalcElemSizePKci($dst_edge_dt,24)|0;if((_cvGetErrStatus()|0)<0){label=50;break}else{label=51;break};case 50:_cvError(-1,18184,10256,14448,4718);label=106;break;case 51:$src_edge_size=__ZL15icvCalcElemSizePKci($edge_dt,0)|0;if((_cvGetErrStatus()|0)<0){label=52;break}else{label=53;break};case 52:_cvError(-1,18184,10256,14448,4719);label=106;break;case 53:$graph=_cvCreateGraph($flags,$header_size,$vtx_size,$edge_size,HEAP32[$1+20>>2]|0)|0;if((_cvGetErrStatus()|0)<0){label=54;break}else{label=55;break};case 54:_cvError(-1,18184,10256,14448,4722);label=106;break;case 55:if(($header_node|0)!=0){label=56;break}else{label=59;break};case 56:_cvReadRawData($1,$header_node,$graph+68|0,$header_dt);if((_cvGetErrStatus()|0)<0){label=57;break}else{label=58;break};case 57:_cvError(-1,18184,10256,14448,4725);label=106;break;case 58:label=59;break;case 59:if(($src_vtx_size*3|0|0)<65536){label=60;break}else{label=61;break};case 60:$257=65536;label=62;break;case 61:$257=$src_vtx_size*3|0;label=62;break;case 62:$read_buf_size=$257;if(($src_edge_size*3|0|0)<($read_buf_size|0)){label=63;break}else{label=64;break};case 63:$268=$read_buf_size;label=65;break;case 64:$268=$src_edge_size*3|0;label=65;break;case 65:$read_buf_size=$268;$read_buf=_cvAlloc($read_buf_size)|0;if((_cvGetErrStatus()|0)<0){label=66;break}else{label=67;break};case 66:_cvError(-1,18184,10256,14448,4729);label=106;break;case 67:$vtx_buf=_cvAlloc($vtx_count<<2)|0;if((_cvGetErrStatus()|0)<0){label=68;break}else{label=69;break};case 68:_cvError(-1,18184,10256,14448,4730);label=106;break;case 69:$vtx_node=_cvGetFileNodeByName($1,$2,15088)|0;$edge_node=_cvGetFileNodeByName($1,$2,15080)|0;if(($edge_node|0)!=0){label=71;break}else{label=70;break};case 70:_cvError(-5,18184,14104,14448,4735);label=106;break;case 71:if(($vtx_dt|0)!=0){label=72;break}else{label=74;break};case 72:if(($vtx_node|0)!=0){label=74;break}else{label=73;break};case 73:_cvError(-5,18184,14080,14448,4737);label=106;break;case 74:$k=0;label=75;break;case 75:if(($k|0)<2){label=76;break}else{label=105;break};case 76:$dt=($k|0)==0?$vtx_dt:$edge_dt;$elem_size=($k|0)==0?$vtx_size:$edge_size;$src_elem_size=($k|0)==0?$src_vtx_size:$src_edge_size;$elem_count=($k|0)==0?$vtx_count:$edge_count;$dst_ptr=$read_buf;if(($src_elem_size|0)<1){label=77;break}else{label=78;break};case 77:$337=1;label=79;break;case 78:$337=$src_elem_size;label=79;break;case 79:$read_max=($read_buf_size|0)/($337|0)|0;$read_count=0;_cvStartReadRawData($1,($k|0)==0?$vtx_node:$edge_node,$reader);$i=0;label=80;break;case 80:if(($i|0)<($elem_count|0)){label=81;break}else{label=103;break};case 81:if(($read_count|0)==0){label=82;break}else{label=87;break};case 82:if(($dt|0)!=0){label=83;break}else{label=87;break};case 83:if(($elem_count-$i|0)>($read_max|0)){label=84;break}else{label=85;break};case 84:$368=$read_max;label=86;break;case 85:$368=$elem_count-$i|0;label=86;break;case 86:$count=Math_imul($368,($k|0)==0?$vtx_items_per_elem:$edge_items_per_elem)|0;_cvReadRawDataSlice($1,$reader,$count,$read_buf,$dt);$read_count=$count;$dst_ptr=$read_buf;label=87;break;case 87:if(($k|0)==0){label=88;break}else{label=91;break};case 88:_cvGraphAddVtx($graph,0,$vtx)|0;HEAP32[$vtx_buf+($i<<2)>>2]=HEAP32[$vtx>>2];if(($dt|0)!=0){label=89;break}else{label=90;break};case 89:_memcpy((HEAP32[$vtx>>2]|0)+8|0,$dst_ptr|0,$src_elem_size)|0;label=90;break;case 90:label=101;break;case 91:HEAP32[$edge>>2]=0;$vtx1=HEAP32[$dst_ptr>>2]|0;$vtx2=HEAP32[$dst_ptr+4>>2]|0;if($vtx1>>>0>=$vtx_count>>>0){label=93;break}else{label=92;break};case 92:if($vtx2>>>0>=$vtx_count>>>0){label=93;break}else{label=94;break};case 93:_cvError(-211,18184,14032,14448,4781);label=106;break;case 94:$result=_cvGraphAddEdgeByPtr($graph,HEAP32[$vtx_buf+($vtx1<<2)>>2]|0,HEAP32[$vtx_buf+($vtx2<<2)>>2]|0,0,$edge)|0;if((_cvGetErrStatus()|0)<0){label=95;break}else{label=96;break};case 95:_cvError(-1,18184,10256,14448,4784);label=106;break;case 96:if(($result|0)==0){label=97;break}else{label=98;break};case 97:_cvError(-5,18184,14e3,14448,4787);label=106;break;case 98:HEAPF32[(HEAP32[$edge>>2]|0)+4>>2]=+HEAPF32[$dst_ptr+8>>2];if(($elem_size|0)>24){label=99;break}else{label=100;break};case 99:$dst_ptr2=__Z10cvAlignPtrPKvi($dst_ptr+12|0,$edge_user_align)|0;_memcpy((HEAP32[$edge>>2]|0)+24|0,$dst_ptr2|0,$elem_size-24|0)|0;label=100;break;case 100:label=101;break;case 101:$dst_ptr=$dst_ptr+$src_elem_size|0;$read_count=$read_count-1|0;label=102;break;case 102:$i=$i+1|0;label=80;break;case 103:label=104;break;case 104:$k=$k+1|0;label=75;break;case 105:$ptr=$graph;label=106;break;case 106:_cvFree_($read_buf);$read_buf=0;_cvFree_($vtx_buf);$vtx_buf=0;STACKTOP=sp;return $ptr|0}return 0}function __ZL14icvIsSparseMatPKv($ptr){$ptr=$ptr|0;var $1=0,$12=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$12=0;label=3;break};case 2:$12=(HEAP32[$1>>2]&-65536|0)==1111752704;label=3;break;case 3:return $12&1|0}return 0}function __ZL13icvWriteGraphP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$attr){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$attr=$attr|0;var $1=0,$flag_buf=0,$write_buf=0,$graph=0,$reader=0,$buf=0,$i=0,$k=0,$vtx_count=0,$edge_count=0,$vtx_dt=0,$edge_dt_buf=0,$edge_dt=0,$write_buf_size=0,$vtx=0,$4=0,$dt=0,$data=0,$elem_size=0,$write_elem_size=0,$src_ptr=0,$write_count=0,$edge_user_align=0,$fmt_pairs=0,$5=0,$edge=0,$49=0,$57=0,$59=0,$118=0,$142=0,$161=0,$190=0,$303=0,$317=0,$319=0,$361=0,$374=0,$376=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+944|0;tempParam=$attr;$attr=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$attr>>2]=HEAP32[tempParam>>2];HEAP32[$attr+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$reader=sp|0;$buf=sp+32|0;$edge_dt_buf=sp+288|0;$4=sp+416|0;$fmt_pairs=sp+424|0;$5=sp+936|0;$1=$fs;$flag_buf=0;$write_buf=0;$graph=$struct_ptr;$vtx_count=HEAP32[$graph+60>>2]|0;$edge_count=HEAP32[(HEAP32[$graph+64>>2]|0)+60>>2]|0;$flag_buf=_cvAlloc($vtx_count<<2)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18088,10256,14448,4505);label=72;break;case 3:_cvStartReadSeq($graph,$reader,0);$i=0;$k=0;label=4;break;case 4:if(($i|0)<(HEAP32[$graph+24>>2]|0)){label=5;break}else{label=11;break};case 5:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=6;break}else{label=7;break};case 6:$vtx=HEAP32[$reader+12>>2]|0;HEAP32[$flag_buf+($k<<2)>>2]=HEAP32[$vtx>>2];$49=$k;$k=$49+1|0;HEAP32[$vtx>>2]=$49;label=7;break;case 7:$57=$reader+12|0;$59=(HEAP32[$57>>2]|0)+(HEAP32[$graph+28>>2]|0)|0;HEAP32[$57>>2]=$59;if($59>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=8;break}else{label=9;break};case 8:_cvChangeSeqBlock($reader,1);label=9;break;case 9:label=10;break;case 10:$i=$i+1|0;label=4;break;case 11:__Z10cvAttrListPPKcP10CvAttrList($4,0,0);_cvStartWriteStruct($1,$name,6,9280,$4);if((_cvGetErrStatus()|0)<0){label=12;break}else{label=13;break};case 12:_cvError(-1,18088,10256,14448,4521);label=72;break;case 13:_sprintf($buf|0,15264,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=HEAP32[$graph>>2],tempInt)|0)|0;_cvWriteString($1,15224,$buf|0,1);_cvWriteInt($1,15208,$vtx_count);$vtx_dt=__ZL12icvGetFormatPK5CvSeqPKcP10CvAttrListiPc($graph,15176,$attr,8,sp+160|0)|0;if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,18088,10256,14448,4528);label=72;break;case 15:if(($vtx_dt|0)!=0){label=16;break}else{label=17;break};case 16:_cvWriteString($1,15176,$vtx_dt,0);label=17;break;case 17:_cvWriteInt($1,15136,$edge_count);$edge_dt=__ZL12icvGetFormatPK5CvSeqPKcP10CvAttrListiPc(HEAP32[$graph+64>>2]|0,15128,$attr,24,$buf|0)|0;if((_cvGetErrStatus()|0)<0){label=18;break}else{label=19;break};case 18:_cvError(-1,18088,10256,14448,4534);label=72;break;case 19:if(($edge_dt|0)!=0){label=20;break}else{label=21;break};case 20:$118=$edge_dt;label=22;break;case 21:$118=28424;label=22;break;case 22:_sprintf($edge_dt_buf|0,15120,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$118,tempInt)|0)|0;$edge_dt=$edge_dt_buf|0;_cvWriteString($1,15128,$edge_dt,0);__ZL18icvWriteHeaderDataP13CvFileStoragePK5CvSeqP10CvAttrListi($1,$graph,$attr,68);if((_cvGetErrStatus()|0)<0){label=23;break}else{label=24;break};case 23:_cvError(-1,18088,10256,14448,4539);label=72;break;case 24:if(((HEAP32[$graph+28>>2]|0)*3|0|0)<65536){label=25;break}else{label=26;break};case 25:$142=65536;label=27;break;case 26:$142=(HEAP32[$graph+28>>2]|0)*3|0;label=27;break;case 27:$write_buf_size=$142;if(((HEAP32[(HEAP32[$graph+64>>2]|0)+28>>2]|0)*3|0|0)<($write_buf_size|0)){label=28;break}else{label=29;break};case 28:$161=$write_buf_size;label=30;break;case 29:$161=(HEAP32[(HEAP32[$graph+64>>2]|0)+28>>2]|0)*3|0;label=30;break;case 30:$write_buf_size=$161;$write_buf=_cvAlloc($write_buf_size)|0;if((_cvGetErrStatus()|0)<0){label=31;break}else{label=32;break};case 31:_cvError(-1,18088,10256,14448,4543);label=72;break;case 32:$k=0;label=33;break;case 33:if(($k|0)<2){label=34;break}else{label=63;break};case 34:$dt=($k|0)==0?$vtx_dt:$edge_dt;if(($dt|0)!=0){label=35;break}else{label=61;break};case 35:if(($k|0)==0){label=36;break}else{label=37;break};case 36:$190=$graph;label=38;break;case 37:$190=HEAP32[$graph+64>>2]|0;label=38;break;case 38:$data=$190;$elem_size=HEAP32[$data+28>>2]|0;$write_elem_size=__ZL15icvCalcElemSizePKci($dt,0)|0;$src_ptr=$write_buf;$write_count=0;$edge_user_align=4;if(($k|0)==1){label=39;break}else{label=43;break};case 39:if((__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0)>2){label=41;break}else{label=40;break};case 40:if((((HEAP32[$fmt_pairs+20>>2]&504)>>3)+1<<(47696>>>((HEAP32[$fmt_pairs+20>>2]&7)<<1>>>0)&3)|0)>=8){label=41;break}else{label=42;break};case 41:$edge_user_align=8;label=42;break;case 42:label=43;break;case 43:__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($1,($k|0)==0?15088:15080,13,0,$5);_cvStartReadSeq($data,$reader,0);$i=0;label=44;break;case 44:if(($i|0)<(HEAP32[$data+24>>2]|0)){label=45;break}else{label=58;break};case 45:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=46;break}else{label=54;break};case 46:if(($k|0)==0){label=47;break}else{label=48;break};case 47:_memcpy($src_ptr|0,(HEAP32[$reader+12>>2]|0)+8|0,$write_elem_size)|0;label=51;break;case 48:$edge=HEAP32[$reader+12>>2]|0;$src_ptr=__Z10cvAlignPtrPKvi($src_ptr,4)|0;HEAP32[$src_ptr>>2]=HEAP32[HEAP32[$edge+16>>2]>>2];HEAP32[$src_ptr+4>>2]=HEAP32[HEAP32[$edge+20>>2]>>2];HEAPF32[$src_ptr+8>>2]=+HEAPF32[$edge+4>>2];if(($elem_size|0)>24){label=49;break}else{label=50;break};case 49:_memcpy(__Z10cvAlignPtrPKvi($src_ptr+12|0,$edge_user_align)|0,$edge+24|0,$elem_size-24|0)|0;label=50;break;case 50:label=51;break;case 51:$src_ptr=$src_ptr+$write_elem_size|0;$303=$write_count+1|0;$write_count=$303;if(($303|0)>=(($write_buf_size|0)/($write_elem_size|0)|0|0)){label=52;break}else{label=53;break};case 52:_cvWriteRawData($1,$write_buf,$write_count,$dt);$write_count=0;$src_ptr=$write_buf;label=53;break;case 53:label=54;break;case 54:$317=$reader+12|0;$319=(HEAP32[$317>>2]|0)+(HEAP32[$data+28>>2]|0)|0;HEAP32[$317>>2]=$319;if($319>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=55;break}else{label=56;break};case 55:_cvChangeSeqBlock($reader,1);label=56;break;case 56:label=57;break;case 57:$i=$i+1|0;label=44;break;case 58:if(($write_count|0)>0){label=59;break}else{label=60;break};case 59:_cvWriteRawData($1,$write_buf,$write_count,$dt);label=60;break;case 60:_cvEndWriteStruct($1);label=61;break;case 61:label=62;break;case 62:$k=$k+1|0;label=33;break;case 63:_cvEndWriteStruct($1);_cvStartReadSeq($graph,$reader,0);$vtx_count=0;$i=0;label=64;break;case 64:if(($i|0)<(HEAP32[$graph+24>>2]|0)){label=65;break}else{label=71;break};case 65:if((HEAP32[HEAP32[$reader+12>>2]>>2]|0)>=0){label=66;break}else{label=67;break};case 66:$361=$vtx_count;$vtx_count=$361+1|0;HEAP32[HEAP32[$reader+12>>2]>>2]=HEAP32[$flag_buf+($361<<2)>>2];label=67;break;case 67:$374=$reader+12|0;$376=(HEAP32[$374>>2]|0)+(HEAP32[$graph+28>>2]|0)|0;HEAP32[$374>>2]=$376;if($376>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=68;break}else{label=69;break};case 68:_cvChangeSeqBlock($reader,1);label=69;break;case 69:label=70;break;case 70:$i=$i+1|0;label=64;break;case 71:label=72;break;case 72:_cvFree_($write_buf);$write_buf=0;_cvFree_($flag_buf);$flag_buf=0;STACKTOP=sp;return}}function __ZL13icvCloneGraphPKv($ptr){$ptr=$ptr|0;return _cvCloneGraph($ptr,0)|0}function ___cxx_global_var_init57(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(23624,9256,742,234,310,126,226);_atexit(318,23624,___dso_handle|0)|0;return}function __ZL10icvIsImagePKv($ptr){$ptr=$ptr|0;var $1=0,$11=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$11=0;label=3;break};case 2:$11=(HEAP32[$1>>2]|0)==112;label=3;break;case 3:return $11&1|0}return 0}function __ZL16icvReadSparseMatP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$mat=0,$dt=0,$data=0,$sizes_node=0,$reader=0,$elements=0,$idx=0,$sizes=0,$dims=0,$elem_type=0,$cn=0,$i=0,$elem=0,$val=0,$k=0,$40=0,$50=0,$93=0,$154=0,$156=0,$196=0,$198=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+32|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$1=$fs;$2=$node;$ptr=0;$sizes=0;$sizes_node=_cvGetFileNodeByName($1,$2,7608)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,17896,10256,14448,3831);label=49;break;case 3:$dt=_cvReadStringByName($1,$2,7544,0)|0;if(($sizes_node|0)!=0){label=4;break}else{label=5;break};case 4:if(($dt|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,17896,7416,14448,3835);label=49;break;case 6:if((HEAP32[$sizes_node>>2]&7|0)==5){label=7;break}else{label=8;break};case 7:$40=HEAP32[(HEAP32[$sizes_node+8>>2]|0)+24>>2]|0;label=9;break;case 8:$40=(HEAP32[$sizes_node>>2]&7|0)==1?1:-1;label=9;break;case 9:$dims=$40;if(($dims|0)<=0){label=11;break}else{label=10;break};case 10:if(($dims|0)>65536){label=11;break}else{label=12;break};case 11:_cvError(-212,17896,15392,14448,3841);label=49;break;case 12:$50=STACKTOP;STACKTOP=STACKTOP+($dims<<2)|0;STACKTOP=STACKTOP+7>>3<<3;$sizes=$50;_cvReadRawData($1,$sizes_node,$sizes,7576);if((_cvGetErrStatus()|0)<0){label=13;break}else{label=14;break};case 13:_cvError(-1,17896,10256,14448,3844);label=49;break;case 14:$elem_type=__ZL21icvDecodeSimpleFormatPKc($dt)|0;if((_cvGetErrStatus()|0)<0){label=15;break}else{label=16;break};case 15:_cvError(-1,17896,10256,14448,3845);label=49;break;case 16:$data=_cvGetFileNodeByName($1,$2,7512)|0;if(($data|0)!=0){label=17;break}else{label=18;break};case 17:if((HEAP32[$data>>2]&7|0)==5){label=19;break}else{label=18;break};case 18:_cvError(-2,17896,7320,14448,3849);label=49;break;case 19:$mat=_cvCreateSparseMat($dims,$sizes,$elem_type)|0;if((_cvGetErrStatus()|0)<0){label=20;break}else{label=21;break};case 20:_cvError(-1,17896,10256,14448,3851);label=49;break;case 21:$cn=(($elem_type&504)>>3)+1|0;$93=STACKTOP;STACKTOP=STACKTOP+($dims<<2)|0;STACKTOP=STACKTOP+7>>3<<3;$idx=$93;$elements=HEAP32[$data+8>>2]|0;_cvStartReadRawData($1,$data,$reader);$i=0;label=22;break;case 22:if(($i|0)<(HEAP32[$elements+24>>2]|0)){label=23;break}else{label=48;break};case 23:$elem=HEAP32[$reader+12>>2]|0;if((HEAP32[$elem>>2]&7|0)==1){label=25;break}else{label=24;break};case 24:_cvError(-212,17896,15336,14448,3864);label=49;break;case 25:$k=HEAP32[$elem+8>>2]|0;if(($i|0)>0){label=26;break}else{label=28;break};case 26:if(($k|0)>=0){label=27;break}else{label=28;break};case 27:HEAP32[$idx+($dims-1<<2)>>2]=$k;label=41;break;case 28:if(($i|0)>0){label=29;break}else{label=30;break};case 29:$k=$dims+$k-1|0;label=31;break;case 30:HEAP32[$idx>>2]=$k;$k=1;label=31;break;case 31:label=32;break;case 32:if(($k|0)<($dims|0)){label=33;break}else{label=40;break};case 33:$154=$reader+12|0;$156=(HEAP32[$154>>2]|0)+(HEAP32[$elements+28>>2]|0)|0;HEAP32[$154>>2]=$156;if($156>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=34;break}else{label=35;break};case 34:_cvChangeSeqBlock($reader,1);label=35;break;case 35:$i=$i+1|0;$elem=HEAP32[$reader+12>>2]|0;if((HEAP32[$elem>>2]&7|0)==1){label=36;break}else{label=37;break};case 36:if((HEAP32[$elem+8>>2]|0)<0){label=37;break}else{label=38;break};case 37:_cvError(-212,17896,15336,14448,3880);label=49;break;case 38:HEAP32[$idx+($k<<2)>>2]=HEAP32[$elem+8>>2];label=39;break;case 39:$k=$k+1|0;label=32;break;case 40:label=41;break;case 41:$196=$reader+12|0;$198=(HEAP32[$196>>2]|0)+(HEAP32[$elements+28>>2]|0)|0;HEAP32[$196>>2]=$198;if($198>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=42;break}else{label=43;break};case 42:_cvChangeSeqBlock($reader,1);label=43;break;case 43:$i=$i+1|0;$val=_cvPtrND($mat,$idx,0,1,0)|0;if((_cvGetErrStatus()|0)<0){label=44;break}else{label=45;break};case 44:_cvError(-1,17896,10256,14448,3886);label=49;break;case 45:_cvReadRawDataSlice($1,$reader,$cn,$val,$dt);if((_cvGetErrStatus()|0)<0){label=46;break}else{label=47;break};case 46:_cvError(-1,17896,10256,14448,3887);label=49;break;case 47:$i=$i+$cn|0;label=22;break;case 48:$ptr=$mat;label=49;break;case 49:STACKTOP=sp;return $ptr|0}return 0}function __ZL17icvWriteSparseMatP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$0){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$0=$0|0;var $2=0,$memstorage=0,$mat=0,$iterator=0,$node=0,$elements=0,$reader=0,$i=0,$dims=0,$prev_idx=0,$dt=0,$5=0,$6=0,$7=0,$idx=0,$idx1=0,$k=0,$70=0,$72=0,$73=0,$75=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+120|0;tempParam=$0;$0=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$0>>2]=HEAP32[tempParam>>2];HEAP32[$0+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$memstorage=sp|0;$iterator=sp+8|0;$reader=sp+24|0;$dims=sp+56|0;$dt=sp+64|0;$5=sp+80|0;$6=sp+88|0;$7=sp+96|0;$idx=sp+104|0;$idx1=sp+112|0;$2=$fs;HEAP32[$memstorage>>2]=0;$mat=$struct_ptr;$prev_idx=0;HEAP32[$memstorage>>2]=_cvCreateMemStorage(0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,17816,10256,14448,3756);label=27;break;case 3:__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($2,$name,6,9256,$5);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,17816,10256,14448,3758);label=27;break;case 5:HEAP32[$dims>>2]=_cvGetDims($mat,0)|0;__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($2,7608,13,0,$6);_cvWriteRawData($2,$mat+36|0,HEAP32[$dims>>2]|0,7576);_cvEndWriteStruct($2);_cvWriteString($2,7544,__ZL15icvEncodeFormatiPc(HEAP32[$mat>>2]&511,$dt|0)|0,0);__Z10cvAttrListPPKcP10CvAttrList($7,0,0);_cvStartWriteStruct($2,7512,13,0,$7);$elements=_cvCreateSeq(7,56,4,HEAP32[$memstorage>>2]|0)|0;$node=_cvInitSparseMatIterator($mat,$iterator)|0;label=6;break;case 6:if(($node|0)!=0){label=7;break}else{label=8;break};case 7:HEAP32[$idx>>2]=$node+(HEAP32[$mat+32>>2]|0);_cvSeqPush($elements,$idx)|0;$node=_cvGetNextSparseNode($iterator)|0;label=6;break;case 8:_cvSeqSort($elements,522,$dims);_cvStartReadSeq($elements,$reader,0);$i=0;label=9;break;case 9:if(($i|0)<(HEAP32[$elements+24>>2]|0)){label=10;break}else{label=26;break};case 10:$k=0;$70=$idx1;$72=HEAP32[$reader+12>>2]|0;HEAP8[$70]=HEAP8[$72]|0;HEAP8[$70+1|0]=HEAP8[$72+1|0]|0;HEAP8[$70+2|0]=HEAP8[$72+2|0]|0;HEAP8[$70+3|0]=HEAP8[$72+3|0]|0;$73=$reader+12|0;$75=(HEAP32[$73>>2]|0)+4|0;HEAP32[$73>>2]=$75;if($75>>>0>=(HEAP32[$reader+20>>2]|0)>>>0){label=11;break}else{label=12;break};case 11:_cvChangeSeqBlock($reader,1);label=12;break;case 12:if(($i|0)>0){label=13;break}else{label=20;break};case 13:label=14;break;case 14:if((HEAP32[(HEAP32[$idx1>>2]|0)+($k<<2)>>2]|0)==(HEAP32[$prev_idx+($k<<2)>>2]|0)){label=15;break}else{label=17;break};case 15:label=16;break;case 16:$k=$k+1|0;label=14;break;case 17:if(($k|0)<((HEAP32[$dims>>2]|0)-1|0)){label=18;break}else{label=19;break};case 18:FUNCTION_TABLE_viii[HEAP32[$2+232>>2]&1023]($2,0,$k-(HEAP32[$dims>>2]|0)+1|0);label=19;break;case 19:label=20;break;case 20:label=21;break;case 21:if(($k|0)<(HEAP32[$dims>>2]|0)){label=22;break}else{label=24;break};case 22:FUNCTION_TABLE_viii[HEAP32[$2+232>>2]&1023]($2,0,HEAP32[(HEAP32[$idx1>>2]|0)+($k<<2)>>2]|0);label=23;break;case 23:$k=$k+1|0;label=21;break;case 24:$prev_idx=HEAP32[$idx1>>2]|0;$node=(HEAP32[$idx1>>2]|0)+(-(HEAP32[$mat+32>>2]|0)|0)|0;_cvWriteRawData($2,$node+(HEAP32[$mat+28>>2]|0)|0,1,$dt|0);label=25;break;case 25:$i=$i+1|0;label=9;break;case 26:_cvEndWriteStruct($2);_cvEndWriteStruct($2);label=27;break;case 27:_cvReleaseMemStorage($memstorage);STACKTOP=sp;return}}function ___cxx_global_var_init59(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(27896,9120,520,434,638,680,452);_atexit(318,27896,___dso_handle|0)|0;return}function __ZL12icvReadImageP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$image=0,$dt=0,$data=0,$roi_node=0,$reader=0,$roi=0,$y=0,$width=0,$height=0,$elem_type=0,$coi=0,$depth=0,$origin=0,$3=0,$4=0,$56=0,$108=0,$109=0,$124=0,$151=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+72|0;label=1;while(1)switch(label|0){case 1:$reader=sp|0;$roi=sp+32|0;$3=sp+48|0;$4=sp+56|0;$1=$fs;$2=$node;$ptr=0;$width=_cvReadIntByName($1,$2,15840,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18168,10256,14448,3983);label=29;break;case 3:$height=_cvReadIntByName($1,$2,15832,0)|0;$dt=_cvReadStringByName($1,$2,7544,0)|0;$origin=_cvReadStringByName($1,$2,15824,0)|0;if(($width|0)==0){label=7;break}else{label=4;break};case 4:if(($height|0)==0){label=7;break}else{label=5;break};case 5:if(($dt|0)==0){label=7;break}else{label=6;break};case 6:if(($origin|0)==0){label=7;break}else{label=8;break};case 7:_cvError(-2,18168,15592,14448,3989);label=29;break;case 8:$elem_type=__ZL21icvDecodeSimpleFormatPKc($dt)|0;if((_cvGetErrStatus()|0)<0){label=9;break}else{label=10;break};case 9:_cvError(-1,18168,10256,14448,3991);label=29;break;case 10:if((_strcmp(_cvReadStringByName($1,$2,15784,15760)|0,15760)|0)!=0){label=11;break}else{label=12;break};case 11:_cvError(-2,18168,15552,14448,3994);label=29;break;case 12:$data=_cvGetFileNodeByName($1,$2,7512)|0;if(($data|0)!=0){label=14;break}else{label=13;break};case 13:_cvError(-2,18168,15464,14448,3998);label=29;break;case 14:$56=__ZL17icvFileNodeSeqLenP10CvFileNode($data)|0;if(($56|0)!=(Math_imul(Math_imul($width,$height)|0,(($elem_type&504)>>3)+1|0)|0)){label=15;break}else{label=16;break};case 15:_cvError(-209,18168,16016,14448,4002);label=29;break;case 16:$depth=__Z14cvCvToIplDepthi($elem_type)|0;__Z6cvSizeii($3,$width,$height);$image=_cvCreateImage($3,$depth,(($elem_type&504)>>3)+1|0)|0;if((_cvGetErrStatus()|0)<0){label=17;break}else{label=18;break};case 17:_cvError(-1,18168,10256,14448,4005);label=29;break;case 18:$roi_node=_cvGetFileNodeByName($1,$2,15688)|0;if(($roi_node|0)!=0){label=19;break}else{label=20;break};case 19:HEAP32[$roi>>2]=_cvReadIntByName($1,$roi_node,15656,0)|0;HEAP32[$roi+4>>2]=_cvReadIntByName($1,$roi_node,15648,0)|0;HEAP32[$roi+8>>2]=_cvReadIntByName($1,$roi_node,15840,0)|0;HEAP32[$roi+12>>2]=_cvReadIntByName($1,$roi_node,15832,0)|0;$coi=_cvReadIntByName($1,$roi_node,15640,0)|0;$108=$4;$109=$roi;HEAP32[$108>>2]=HEAP32[$109>>2];HEAP32[$108+4>>2]=HEAP32[$109+4>>2];HEAP32[$108+8>>2]=HEAP32[$109+8>>2];HEAP32[$108+12>>2]=HEAP32[$109+12>>2];_cvSetImageROI($image,$4);_cvSetImageCOI($image,$coi);label=20;break;case 20:$124=Math_imul($width,(($elem_type&504)>>3)+1<<(47696>>>(($elem_type&7)<<1>>>0)&3))|0;if(($124|0)==(HEAP32[$image+72>>2]|0)){label=21;break}else{label=22;break};case 21:$width=Math_imul($width,$height)|0;$height=1;label=22;break;case 22:$width=Math_imul($width,(($elem_type&504)>>3)+1|0)|0;_cvStartReadRawData($1,$data,$reader);$y=0;label=23;break;case 23:if(($y|0)<($height|0)){label=24;break}else{label=28;break};case 24:$151=HEAP32[$image+68>>2]|0;_cvReadRawDataSlice($1,$reader,$width,$151+(Math_imul($y,HEAP32[$image+72>>2]|0)|0)|0,$dt);if((_cvGetErrStatus()|0)<0){label=25;break}else{label=26;break};case 25:_cvError(-1,18168,10256,14448,4031);label=29;break;case 26:label=27;break;case 27:$y=$y+1|0;label=23;break;case 28:$ptr=$image;label=29;break;case 29:STACKTOP=sp;return $ptr|0}return 0}function __ZL8icvIsMatPKv($ptr){$ptr=$ptr|0;var $1=0,$26=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$26=0;label=5;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111621632){label=3;break}else{$26=0;label=5;break};case 3:if((HEAP32[$1+24>>2]|0)>0){label=4;break}else{$26=0;label=5;break};case 4:$26=(HEAP32[$1+20>>2]|0)>0;label=5;break;case 5:return $26&1|0}return 0}function __ZL10icvIsMatNDPKv($ptr){$ptr=$ptr|0;var $1=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{$19=0;label=4;break};case 2:if((HEAP32[$1>>2]&-65536|0)==1111687168){label=3;break}else{$19=0;label=4;break};case 3:$19=(HEAP32[$1+16>>2]|0)!=0;label=4;break;case 4:return $19&1|0}return 0}function __ZL13icvWriteImageP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$0){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$0=$0|0;var $2=0,$image=0,$dt_buf=0,$dt=0,$size=0,$y=0,$depth=0,$5=0,$6=0,$7=0,$8=0,$102=0,$115=0,$126=0,$127=0,$144=0,$152=0,$167=0,$173=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+56|0;tempParam=$0;$0=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$0>>2]=HEAP32[tempParam>>2];HEAP32[$0+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$dt_buf=sp|0;$size=sp+16|0;$5=sp+24|0;$6=sp+32|0;$7=sp+40|0;$8=sp+48|0;$2=$fs;$image=$struct_ptr;if((HEAP32[$image+28>>2]|0)==1){label=2;break}else{label=3;break};case 2:_cvError(-210,18072,15848,14448,3924);label=16;break;case 3:__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($2,$name,6,9120,$5);if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,18072,10256,14448,3926);label=16;break;case 5:_cvWriteInt($2,15840,HEAP32[$image+40>>2]|0);_cvWriteInt($2,15832,HEAP32[$image+44>>2]|0);_cvWriteString($2,15824,(HEAP32[$image+32>>2]|0)==0?15808:15792,0);_cvWriteString($2,15784,(HEAP32[$image+28>>2]|0)==1?15776:15760,0);if((HEAP32[$image+48>>2]|0)!=0){label=6;break}else{label=7;break};case 6:__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($2,15688,14,0,$6);_cvWriteInt($2,15656,HEAP32[(HEAP32[$image+48>>2]|0)+4>>2]|0);_cvWriteInt($2,15648,HEAP32[(HEAP32[$image+48>>2]|0)+8>>2]|0);_cvWriteInt($2,15840,HEAP32[(HEAP32[$image+48>>2]|0)+12>>2]|0);_cvWriteInt($2,15832,HEAP32[(HEAP32[$image+48>>2]|0)+16>>2]|0);_cvWriteInt($2,15640,HEAP32[HEAP32[$image+48>>2]>>2]|0);_cvEndWriteStruct($2);label=7;break;case 7:$depth=HEAP8[784+(((HEAP32[$image+16>>2]&255)>>2)+((HEAP32[$image+16>>2]|0)<0))|0]|0;$102=HEAP8[22984+$depth|0]|0;_sprintf($dt_buf|0,7504,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=HEAP32[$image+8>>2],HEAP32[tempInt+8>>2]=$102,tempInt)|0)|0;if((HEAP8[$dt_buf+2|0]|0)==0){label=8;break}else{$115=0;label=9;break};case 8:$115=(HEAP8[$dt_buf|0]|0)==49;label=9;break;case 9:$dt=$dt_buf+($115&1)|0;_cvWriteString($2,7544,$dt,0);__Z6cvSizeii($7,HEAP32[$image+40>>2]|0,HEAP32[$image+44>>2]|0);$126=$size;$127=$7;HEAP32[$126>>2]=HEAP32[$127>>2];HEAP32[$126+4>>2]=HEAP32[$127+4>>2];$144=Math_imul(Math_imul(HEAP32[$size>>2]|0,HEAP32[$image+8>>2]|0)|0,(($depth&504)>>3)+1<<(47696>>>(($depth&7)<<1>>>0)&3))|0;if(($144|0)==(HEAP32[$image+72>>2]|0)){label=10;break}else{label=11;break};case 10:$152=$size|0;HEAP32[$152>>2]=Math_imul(HEAP32[$152>>2]|0,HEAP32[$size+4>>2]|0)|0;HEAP32[$size+4>>2]=1;label=11;break;case 11:__Z10cvAttrListPPKcP10CvAttrList($8,0,0);_cvStartWriteStruct($2,7512,13,0,$8);$y=0;label=12;break;case 12:if(($y|0)<(HEAP32[$size+4>>2]|0)){label=13;break}else{label=15;break};case 13:$167=HEAP32[$image+68>>2]|0;$173=$167+(Math_imul($y,HEAP32[$image+72>>2]|0)|0)|0;_cvWriteRawData($2,$173,HEAP32[$size>>2]|0,$dt);label=14;break;case 14:$y=$y+1|0;label=12;break;case 15:_cvEndWriteStruct($2);_cvEndWriteStruct($2);label=16;break;case 16:STACKTOP=sp;return}}function ___cxx_global_var_init61(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(27856,9032,50,376,780,546,168);_atexit(318,27856,___dso_handle|0)|0;return}function __ZL10icvReadMatP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$mat=0,$dt=0,$data=0,$rows=0,$cols=0,$elem_type=0,$40=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$node;$ptr=0;$rows=_cvReadIntByName($1,$2,15968,0)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18296,10256,14448,3583);label=18;break;case 3:$cols=_cvReadIntByName($1,$2,15904,0)|0;$dt=_cvReadStringByName($1,$2,7544,0)|0;if(($rows|0)==0){label=6;break}else{label=4;break};case 4:if(($cols|0)==0){label=6;break}else{label=5;break};case 5:if(($dt|0)==0){label=6;break}else{label=7;break};case 6:_cvError(-2,18296,7416,14448,3588);label=18;break;case 7:$elem_type=__ZL21icvDecodeSimpleFormatPKc($dt)|0;if((_cvGetErrStatus()|0)<0){label=8;break}else{label=9;break};case 8:_cvError(-1,18296,10256,14448,3590);label=18;break;case 9:$data=_cvGetFileNodeByName($1,$2,7512)|0;if(($data|0)!=0){label=11;break}else{label=10;break};case 10:_cvError(-2,18296,7320,14448,3594);label=18;break;case 11:$40=__ZL17icvFileNodeSeqLenP10CvFileNode($data)|0;if(($40|0)!=(Math_imul(Math_imul($rows,$cols)|0,(($elem_type&504)>>3)+1|0)|0)){label=12;break}else{label=13;break};case 12:_cvError(-209,18296,16016,14448,3598);label=18;break;case 13:$mat=_cvCreateMat($rows,$cols,$elem_type)|0;if((_cvGetErrStatus()|0)<0){label=14;break}else{label=15;break};case 14:_cvError(-1,18296,10256,14448,3600);label=18;break;case 15:_cvReadRawData($1,$data,HEAP32[$mat+16>>2]|0,$dt);if((_cvGetErrStatus()|0)<0){label=16;break}else{label=17;break};case 16:_cvError(-1,18296,10256,14448,3601);label=18;break;case 17:$ptr=$mat;label=18;break;case 18:return $ptr|0}return 0}function __ZL11icvWriteMatP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$0){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$0=$0|0;var $2=0,$mat=0,$dt=0,$size=0,$y=0,$5=0,$6=0,$7=0,$36=0,$37=0,$46=0,$61=0,$67=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+48|0;tempParam=$0;$0=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$0>>2]=HEAP32[tempParam>>2];HEAP32[$0+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$dt=sp|0;$size=sp+16|0;$5=sp+24|0;$6=sp+32|0;$7=sp+40|0;$2=$fs;$mat=$struct_ptr;__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($2,$name,6,9032,$5);if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18264,10256,14448,3540);label=10;break;case 3:_cvWriteInt($2,15968,HEAP32[$mat+20>>2]|0);_cvWriteInt($2,15904,HEAP32[$mat+24>>2]|0);_cvWriteString($2,7544,__ZL15icvEncodeFormatiPc(HEAP32[$mat>>2]&511,$dt|0)|0,0);__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($2,7512,13,0,$6);_cvGetSize($7,$mat);$36=$size;$37=$7;HEAP32[$36>>2]=HEAP32[$37>>2];HEAP32[$36+4>>2]=HEAP32[$37+4>>2];if((HEAP32[$mat>>2]&16384|0)!=0){label=4;break}else{label=5;break};case 4:$46=$size|0;HEAP32[$46>>2]=Math_imul(HEAP32[$46>>2]|0,HEAP32[$size+4>>2]|0)|0;HEAP32[$size+4>>2]=1;label=5;break;case 5:$y=0;label=6;break;case 6:if(($y|0)<(HEAP32[$size+4>>2]|0)){label=7;break}else{label=9;break};case 7:$61=HEAP32[$mat+16>>2]|0;$67=$61+(Math_imul($y,HEAP32[$mat+4>>2]|0)|0)|0;_cvWriteRawData($2,$67,HEAP32[$size>>2]|0,$dt|0);label=8;break;case 8:$y=$y+1|0;label=6;break;case 9:_cvEndWriteStruct($2);_cvEndWriteStruct($2);label=10;break;case 10:STACKTOP=sp;return}}function ___cxx_global_var_init63(){__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E(27848,8888,238,174,454,636,774);_atexit(318,27848,___dso_handle|0)|0;return}function __ZL12icvReadMatNDP13CvFileStorageP10CvFileNode($fs,$node){$fs=$fs|0;$node=$node|0;var $1=0,$2=0,$ptr=0,$mat=0,$dt=0,$data=0,$sizes_node=0,$sizes=0,$dims=0,$elem_type=0,$i=0,$total_size=0,$40=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+128|0;label=1;while(1)switch(label|0){case 1:$sizes=sp|0;$1=$fs;$2=$node;$ptr=0;$sizes_node=_cvGetFileNodeByName($1,$2,7608)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18152,10256,14448,3671);label=29;break;case 3:$dt=_cvReadStringByName($1,$2,7544,0)|0;if(($sizes_node|0)!=0){label=4;break}else{label=5;break};case 4:if(($dt|0)!=0){label=6;break}else{label=5;break};case 5:_cvError(-2,18152,7416,14448,3675);label=29;break;case 6:if((HEAP32[$sizes_node>>2]&7|0)==5){label=7;break}else{label=8;break};case 7:$40=HEAP32[(HEAP32[$sizes_node+8>>2]|0)+24>>2]|0;label=9;break;case 8:$40=(HEAP32[$sizes_node>>2]&7|0)==1?1:-1;label=9;break;case 9:$dims=$40;if(($dims|0)<=0){label=11;break}else{label=10;break};case 10:if(($dims|0)>32){label=11;break}else{label=12;break};case 11:_cvError(-212,18152,7368,14448,3681);label=29;break;case 12:_cvReadRawData($1,$sizes_node,$sizes|0,7576);if((_cvGetErrStatus()|0)<0){label=13;break}else{label=14;break};case 13:_cvError(-1,18152,10256,14448,3683);label=29;break;case 14:$elem_type=__ZL21icvDecodeSimpleFormatPKc($dt)|0;if((_cvGetErrStatus()|0)<0){label=15;break}else{label=16;break};case 15:_cvError(-1,18152,10256,14448,3684);label=29;break;case 16:$data=_cvGetFileNodeByName($1,$2,7512)|0;if(($data|0)!=0){label=18;break}else{label=17;break};case 17:_cvError(-2,18152,7320,14448,3688);label=29;break;case 18:$total_size=(($elem_type&504)>>3)+1|0;$i=0;label=19;break;case 19:if(($i|0)<($dims|0)){label=20;break}else{label=22;break};case 20:$total_size=Math_imul($total_size,HEAP32[$sizes+($i<<2)>>2]|0)|0;label=21;break;case 21:$i=$i+1|0;label=19;break;case 22:if((__ZL17icvFileNodeSeqLenP10CvFileNode($data)|0)!=($total_size|0)){label=23;break}else{label=24;break};case 23:_cvError(-209,18152,16016,14448,3695);label=29;break;case 24:$mat=_cvCreateMatND($dims,$sizes|0,$elem_type)|0;if((_cvGetErrStatus()|0)<0){label=25;break}else{label=26;break};case 25:_cvError(-1,18152,10256,14448,3697);label=29;break;case 26:_cvReadRawData($1,$data,HEAP32[$mat+16>>2]|0,$dt);if((_cvGetErrStatus()|0)<0){label=27;break}else{label=28;break};case 27:_cvError(-1,18152,10256,14448,3698);label=29;break;case 28:$ptr=$mat;label=29;break;case 29:STACKTOP=sp;return $ptr|0}return 0}function __ZL13icvWriteMatNDP13CvFileStoragePKcPKv10CvAttrList($fs,$name,$struct_ptr,$0){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$0=$0|0;var $2=0,$mat=0,$iterator=0,$dims=0,$sizes=0,$dt=0,$5=0,$6=0,$7=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+680|0;tempParam=$0;$0=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$0>>2]=HEAP32[tempParam>>2];HEAP32[$0+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$mat=sp|0;$iterator=sp+288|0;$sizes=sp+512|0;$dt=sp+640|0;$5=sp+656|0;$6=sp+664|0;$7=sp+672|0;$2=$fs;HEAP32[$mat>>2]=$struct_ptr;__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($2,$name,6,8888,$5);if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18056,10256,14448,3636);label=9;break;case 3:$dims=_cvGetDims(HEAP32[$mat>>2]|0,$sizes|0)|0;__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($2,7608,13,0,$6);_cvWriteRawData($2,$sizes|0,$dims,7576);_cvEndWriteStruct($2);_cvWriteString($2,7544,__ZL15icvEncodeFormatiPc(_cvGetElemType(HEAP32[$mat>>2]|0)|0,$dt|0)|0,0);__Z10cvAttrListPPKcP10CvAttrList($7,0,0);_cvStartWriteStruct($2,7512,13,0,$7);_cvInitNArrayIterator(1,$mat,0,sp+8|0,$iterator,0)|0;if((_cvGetErrStatus()|0)<0){label=4;break}else{label=5;break};case 4:_cvError(-1,18056,10256,14448,3644);label=9;break;case 5:label=6;break;case 6:_cvWriteRawData($2,HEAP32[$iterator+16>>2]|0,HEAP32[$iterator+8>>2]|0,$dt|0);label=7;break;case 7:if((_cvNextNArraySlice($iterator)|0)!=0){label=6;break}else{label=8;break};case 8:_cvEndWriteStruct($2);_cvEndWriteStruct($2);label=9;break;case 9:STACKTOP=sp;return}}function _cvFindType($type_name){$type_name=$type_name|0;var $info=0,label=0;label=1;while(1)switch(label|0){case 1:$info=0;$info=HEAP32[7264]|0;label=2;break;case 2:if(($info|0)!=0){label=3;break}else{label=7;break};case 3:if((_strcmp(HEAP32[$info+16>>2]|0,$type_name|0)|0)==0){label=4;break}else{label=5;break};case 4:label=7;break;case 5:label=6;break;case 6:$info=HEAP32[$info+12>>2]|0;label=2;break;case 7:return $info|0}return 0}function __ZL17icvFileNodeSeqLenP10CvFileNode($node){$node=$node|0;var $1=0,$22=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$node;if((HEAP32[$1>>2]&7|0)>=5){label=2;break}else{label=3;break};case 2:$22=HEAP32[(HEAP32[$1+8>>2]|0)+24>>2]|0;label=4;break;case 3:$22=(HEAP32[$1>>2]&7|0)!=0|0;label=4;break;case 4:return $22|0}return 0}function _cvReadString($node,$default_value){$node=$node|0;$default_value=$default_value|0;var $1=0,$21=0,$23=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$node;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:$23=$default_value;label=7;break;case 3:if((HEAP32[$1>>2]&7|0)==3){label=4;break}else{label=5;break};case 4:$21=HEAP32[$1+12>>2]|0;label=6;break;case 5:$21=0;label=6;break;case 6:$23=$21;label=7;break;case 7:return $23|0}return 0}function __ZL17icvSortIdxCmpFuncPKvS0_Pv($_a,$_b,$userdata){$_a=$_a|0;$_b=$_b|0;$userdata=$userdata|0;var $1=0,$i=0,$delta=0,label=0;label=1;while(1)switch(label|0){case 1:$i=0;label=2;break;case 2:if(($i|0)<(HEAP32[$userdata>>2]|0)){label=3;break}else{label=7;break};case 3:$delta=(HEAP32[(HEAP32[$_a>>2]|0)+($i<<2)>>2]|0)-(HEAP32[(HEAP32[$_b>>2]|0)+($i<<2)>>2]|0)|0;if(($delta|0)!=0){label=4;break}else{label=5;break};case 4:$1=$delta;label=8;break;case 5:label=6;break;case 6:$i=$i+1|0;label=2;break;case 7:$1=0;label=8;break;case 8:return $1|0}return 0}function __Z7cvSliceii($agg_result,$start,$end){$agg_result=$agg_result|0;$start=$start|0;$end=$end|0;HEAP32[$agg_result>>2]=$start;HEAP32[$agg_result+4>>2]=$end;return}function _cvRead($fs,$node,$list){$fs=$fs|0;$node=$node|0;$list=$list|0;var $1=0,$2=0,$3=0,$obj=0,$4=0,$50=0,$51=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+8|0;label=1;while(1)switch(label|0){case 1:$4=sp|0;$1=$fs;$2=$node;$3=$list;$obj=0;if(($1|0)!=0){label=2;break}else{label=3;break};case 2:if((HEAP32[$1>>2]|0)==1280131417){label=4;break}else{label=3;break};case 3:_cvError(($1|0)!=0?-5:-27,5864,8912,14448,5055);label=12;break;case 4:if(($2|0)!=0){label=6;break}else{label=5;break};case 5:label=12;break;case 6:if((HEAP32[$2>>2]&16|0)!=0){label=7;break}else{label=8;break};case 7:if((HEAP32[$2+4>>2]|0)!=0){label=9;break}else{label=8;break};case 8:_cvError(-2,5864,8200,14448,5061);label=12;break;case 9:$obj=FUNCTION_TABLE_iii[HEAP32[(HEAP32[$2+4>>2]|0)+28>>2]&1023]($1,$2)|0;if((_cvGetErrStatus()|0)<0){label=10;break}else{label=11;break};case 10:_cvError(-1,5864,10256,14448,5063);label=12;break;case 11:label=12;break;case 12:if(($3|0)!=0){label=13;break}else{label=14;break};case 13:__Z10cvAttrListPPKcP10CvAttrList($4,0,0);$50=$3;$51=$4;HEAP32[$50>>2]=HEAP32[$51>>2];HEAP32[$50+4>>2]=HEAP32[$51+4>>2];label=14;break;case 14:STACKTOP=sp;return $obj|0}return 0}function __ZL15icvEncodeFormatiPc($elem_type,$dt){$elem_type=$elem_type|0;$dt=$dt|0;var $1=0,$2=0,$12=0,$27=0,label=0,sp=0;sp=STACKTOP;label=1;while(1)switch(label|0){case 1:$1=$elem_type;$2=$dt;$12=HEAP8[22984+($1&7)|0]|0;_sprintf($2|0,7504,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,HEAP32[tempInt>>2]=(($1&504)>>3)+1,HEAP32[tempInt+8>>2]=$12,tempInt)|0)|0;if((HEAP8[$2+2|0]|0)==0){label=2;break}else{$27=0;label=3;break};case 2:$27=(HEAP8[$2|0]|0)==49;label=3;break;case 3:STACKTOP=sp;return $2+($27&1)|0}return 0}function _cvReadStringByName($fs,$map,$name,$default_value){$fs=$fs|0;$map=$map|0;$name=$name|0;$default_value=$default_value|0;return _cvReadString(_cvGetFileNodeByName($fs,$map,$name)|0,$default_value)|0}function __ZL21icvDecodeSimpleFormatPKc($dt){$dt=$dt|0;var $elem_type=0,$fmt_pairs=0,$fmt_pair_count=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+512|0;label=1;while(1)switch(label|0){case 1:$fmt_pairs=sp|0;$elem_type=-1;$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,16392,10256,14448,3070);label=7;break;case 3:if(($fmt_pair_count|0)!=1){label=5;break}else{label=4;break};case 4:if((HEAP32[$fmt_pairs>>2]|0)>4){label=5;break}else{label=6;break};case 5:_cvError(-2,16392,15976,14448,3072);label=7;break;case 6:$elem_type=(HEAP32[$fmt_pairs+4>>2]|0)+((HEAP32[$fmt_pairs>>2]|0)-1<<3)|0;label=7;break;case 7:STACKTOP=sp;return $elem_type|0}return 0}function _cvReadIntByName($fs,$map,$name,$default_value){$fs=$fs|0;$map=$map|0;$name=$name|0;$default_value=$default_value|0;return _cvReadInt(_cvGetFileNodeByName($fs,$map,$name)|0,$default_value)|0}function _cvReadInt($node,$default_value){$node=$node|0;$default_value=$default_value|0;var $1=0,$32=0,$34=0,$36=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$node;if(($1|0)!=0){label=3;break}else{label=2;break};case 2:$36=$default_value;label=10;break;case 3:if((HEAP32[$1>>2]&7|0)==1){label=4;break}else{label=5;break};case 4:$34=HEAP32[$1+8>>2]|0;label=9;break;case 5:if((HEAP32[$1>>2]&7|0)==2){label=6;break}else{label=7;break};case 6:$32=__Z7cvRoundd(+HEAPF64[$1+8>>3])|0;label=8;break;case 7:$32=2147483647;label=8;break;case 8:$34=$32;label=9;break;case 9:$36=$34;label=10;break;case 10:return $36|0}return 0}function __ZL12icvGetFormatPK5CvSeqPKcP10CvAttrListiPc($seq,$dt_key,$attr,$initial_elem_size,$dt_buf){$seq=$seq|0;$dt_key=$dt_key|0;$attr=$attr|0;$initial_elem_size=$initial_elem_size|0;$dt_buf=$dt_buf|0;var $1=0,$4=0,$5=0,$dt=0,$dt_elem_size=0,$full_elem_size=0,$extra_elem_size=0,label=0,sp=0;sp=STACKTOP;label=1;while(1)switch(label|0){case 1:$1=$seq;$4=$initial_elem_size;$5=$dt_buf;$dt=0;$dt=_cvAttrValue($attr,$dt_key)|0;if(($dt|0)!=0){label=2;break}else{label=7;break};case 2:$dt_elem_size=__ZL15icvCalcElemSizePKci($dt,$4)|0;if((_cvGetErrStatus()|0)<0){label=3;break}else{label=4;break};case 3:_cvError(-1,18216,10256,14448,4159);label=20;break;case 4:if(($dt_elem_size|0)!=(HEAP32[$1+28>>2]|0)){label=5;break}else{label=6;break};case 5:_cvError(-209,18216,14656,14448,4163);label=20;break;case 6:label=19;break;case 7:if((HEAP32[$1>>2]&511|0)!=0){label=9;break}else{label=8;break};case 8:if((HEAP32[$1+28>>2]|0)==1){label=9;break}else{label=12;break};case 9:$full_elem_size=__Z7cvAlignii((((HEAP32[$1>>2]&504)>>3)+1<<(47696>>>((HEAP32[$1>>2]&7)<<1>>>0)&3))+$4|0,(HEAP32[$1>>2]&7|0)==6?8:4)|0;if((HEAP32[$1+28>>2]|0)!=($full_elem_size|0)){label=10;break}else{label=11;break};case 10:_cvError(-209,18216,14576,14448,4171);label=20;break;case 11:$dt=__ZL15icvEncodeFormatiPc(HEAP32[$1>>2]&511,$5)|0;label=18;break;case 12:if((HEAP32[$1+28>>2]|0)>($4|0)){label=13;break}else{label=17;break};case 13:$extra_elem_size=(HEAP32[$1+28>>2]|0)-$4|0;if((($extra_elem_size>>>0)%4|0|0)==0){label=14;break}else{label=15;break};case 14:_sprintf($5|0,14864,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=($extra_elem_size>>>0)/4|0,tempInt)|0)|0;label=16;break;case 15:_sprintf($5|0,14760,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$extra_elem_size,tempInt)|0)|0;label=16;break;case 16:$dt=$5;label=17;break;case 17:label=18;break;case 18:label=19;break;case 19:label=20;break;case 20:STACKTOP=sp;return $dt|0}return 0}function __ZL18icvWriteHeaderDataP13CvFileStoragePK5CvSeqP10CvAttrListi($fs,$seq,$attr,$initial_header_size){$fs=$fs|0;$seq=$seq|0;$attr=$attr|0;$initial_header_size=$initial_header_size|0;var $1=0,$2=0,$4=0,$header_dt_buf=0,$header_dt=0,$dt_header_size=0,$point_seq=0,$5=0,$chain=0,$6=0,$extra_size=0,$7=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+152|0;label=1;while(1)switch(label|0){case 1:$header_dt_buf=sp|0;$5=sp+128|0;$6=sp+136|0;$7=sp+144|0;$1=$fs;$2=$seq;$4=$initial_header_size;$header_dt=_cvAttrValue($attr,15064)|0;if(($header_dt|0)!=0){label=2;break}else{label=7;break};case 2:$dt_header_size=__ZL15icvCalcElemSizePKci($header_dt,$4)|0;if((_cvGetErrStatus()|0)<0){label=3;break}else{label=4;break};case 3:_cvError(-1,17768,10256,14448,4089);label=31;break;case 4:if(($dt_header_size|0)>(HEAP32[$2+4>>2]|0)){label=5;break}else{label=6;break};case 5:_cvError(-209,17768,14888,14448,4092);label=31;break;case 6:label=28;break;case 7:if((HEAP32[$2+4>>2]|0)>($4|0)){label=8;break}else{label=27;break};case 8:if(($2|0)!=0){label=9;break}else{label=15;break};case 9:if((HEAP32[$2>>2]&-65536|0)==1117323264){label=10;break}else{label=15;break};case 10:if((HEAP32[$2>>2]&511|0)==12){label=12;break}else{label=11;break};case 11:if((HEAP32[$2>>2]&511|0)==13){label=12;break}else{label=15;break};case 12:if((HEAP32[$2+4>>2]|0)==88){label=13;break}else{label=15;break};case 13:if((HEAP32[$2+28>>2]|0)==8){label=14;break}else{label=15;break};case 14:$point_seq=$2;__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($1,14880,14,0,$5);_cvWriteInt($1,15656,HEAP32[$point_seq+56>>2]|0);_cvWriteInt($1,15648,HEAP32[$point_seq+60>>2]|0);_cvWriteInt($1,15840,HEAP32[$point_seq+64>>2]|0);_cvWriteInt($1,15832,HEAP32[$point_seq+68>>2]|0);_cvEndWriteStruct($1);_cvWriteInt($1,14872,HEAP32[$point_seq+72>>2]|0);label=26;break;case 15:if(($2|0)!=0){label=16;break}else{label=21;break};case 16:if((HEAP32[$2>>2]&-65536|0)==1117323264){label=17;break}else{label=21;break};case 17:if((HEAP32[$2>>2]&3584|0)==512){label=18;break}else{label=21;break};case 18:if((HEAP32[$2+28>>2]|0)==1){label=19;break}else{label=21;break};case 19:if((HEAP32[$2>>2]&511|0)==0){label=20;break}else{label=21;break};case 20:$chain=$2;__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($1,15824,14,0,$6);_cvWriteInt($1,15656,HEAP32[$chain+56>>2]|0);_cvWriteInt($1,15648,HEAP32[$chain+60>>2]|0);_cvEndWriteStruct($1);label=25;break;case 21:$extra_size=(HEAP32[$2+4>>2]|0)-$4|0;if((($extra_size>>>0)%4|0|0)==0){label=22;break}else{label=23;break};case 22:_sprintf($header_dt_buf|0,14864,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=($extra_size>>>0)/4|0,tempInt)|0)|0;label=24;break;case 23:_sprintf($header_dt_buf|0,14760,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=$extra_size,tempInt)|0)|0;label=24;break;case 24:$header_dt=$header_dt_buf|0;label=25;break;case 25:label=26;break;case 26:label=27;break;case 27:label=28;break;case 28:if(($header_dt|0)!=0){label=29;break}else{label=30;break};case 29:_cvWriteString($1,15064,$header_dt,0);__Z10cvAttrListPPKcP10CvAttrList($7,0,0);_cvStartWriteStruct($1,14736,13,0,$7);_cvWriteRawData($1,$2+56|0,1,$header_dt);_cvEndWriteStruct($1);label=30;break;case 30:label=31;break;case 31:STACKTOP=sp;return}}function __ZL15icvCalcElemSizePKci($dt,$initial_size){$dt=$dt|0;$initial_size=$initial_size|0;var $2=0,$size=0,$fmt_pairs=0,$i=0,$fmt_pair_count=0,$comp_size=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+512|0;label=1;while(1)switch(label|0){case 1:$fmt_pairs=sp|0;$2=$initial_size;$size=0;$fmt_pair_count=__ZL15icvDecodeFormatPKcPii($dt,$fmt_pairs|0,128)|0;if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18008,10256,14448,3039);label=10;break;case 3:$fmt_pair_count=$fmt_pair_count<<1;$i=0;$size=$2;label=4;break;case 4:if(($i|0)<($fmt_pair_count|0)){label=5;break}else{label=7;break};case 5:$comp_size=((HEAP32[$fmt_pairs+($i+1<<2)>>2]&504)>>3)+1<<(47696>>>((HEAP32[$fmt_pairs+($i+1<<2)>>2]&7)<<1>>>0)&3);$size=__Z7cvAlignii($size,$comp_size)|0;$size=$size+(Math_imul($comp_size,HEAP32[$fmt_pairs+($i<<2)>>2]|0)|0)|0;label=6;break;case 6:$i=$i+2|0;label=4;break;case 7:if(($2|0)==0){label=8;break}else{label=9;break};case 8:$comp_size=((HEAP32[$fmt_pairs+4>>2]&504)>>3)+1<<(47696>>>((HEAP32[$fmt_pairs+4>>2]&7)<<1>>>0)&3);$size=__Z7cvAlignii($size,$comp_size)|0;label=9;break;case 9:label=10;break;case 10:STACKTOP=sp;return $size|0}return 0}function __ZNSt9type_infoD2Ev($this){$this=$this|0;return}function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this){$this=$this|0;return}function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this){$this=$this|0;return}function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){$this=$this|0;$info=$info|0;$adjustedPtr=$adjustedPtr|0;$path_below=$path_below|0;var $5=0,$6=0,$14=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[$info+8>>2]|0)==($this|0)){label=2;break}else{label=8;break};case 2:$5=$info+16|0;$6=HEAP32[$5>>2]|0;if(($6|0)==0){label=3;break}else{label=4;break};case 3:HEAP32[$5>>2]=$adjustedPtr;HEAP32[$info+24>>2]=$path_below;HEAP32[$info+36>>2]=1;label=8;break;case 4:if(($6|0)==($adjustedPtr|0)){label=5;break}else{label=7;break};case 5:$14=$info+24|0;if((HEAP32[$14>>2]|0)==2){label=6;break}else{label=8;break};case 6:HEAP32[$14>>2]=$path_below;label=8;break;case 7:$19=$info+36|0;HEAP32[$19>>2]=(HEAP32[$19>>2]|0)+1;HEAP32[$info+24>>2]=2;HEAP8[$info+54|0]=1;label=8;break;case 8:return}}function __ZL11icvWriteSeqP13CvFileStoragePKcPKv10CvAttrListi($fs,$name,$struct_ptr,$attr,$level){$fs=$fs|0;$name=$name|0;$struct_ptr=$struct_ptr|0;$attr=$attr|0;$level=$level|0;var $1=0,$4=0,$seq=0,$block=0,$buf=0,$dt=0,$5=0,$6=0,label=0,tempParam=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+272|0;tempParam=$attr;$attr=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$attr>>2]=HEAP32[tempParam>>2];HEAP32[$attr+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$buf=sp|0;$5=sp+256|0;$6=sp+264|0;$1=$fs;$4=$level;$seq=$struct_ptr;__Z10cvAttrListPPKcP10CvAttrList($5,0,0);_cvStartWriteStruct($1,$name,6,9560,$5);if((_cvGetErrStatus()|0)<0){label=2;break}else{label=3;break};case 2:_cvError(-1,18248,10256,14448,4206);label=16;break;case 3:if(($4|0)>=0){label=4;break}else{label=5;break};case 4:_cvWriteInt($1,13856,$4);label=5;break;case 5:_sprintf($buf|0,15264,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,HEAP32[tempInt>>2]=HEAP32[$seq>>2],tempInt)|0)|0;_cvWriteString($1,15224,$buf|0,1);_cvWriteInt($1,13680,HEAP32[$seq+24>>2]|0);$dt=__ZL12icvGetFormatPK5CvSeqPKcP10CvAttrListiPc($seq,7544,$attr,0,sp+128|0)|0;if((_cvGetErrStatus()|0)<0){label=6;break}else{label=7;break};case 6:_cvError(-1,18248,10256,14448,4214);label=16;break;case 7:_cvWriteString($1,7544,$dt,0);__ZL18icvWriteHeaderDataP13CvFileStoragePK5CvSeqP10CvAttrListi($1,$seq,$attr,56);if((_cvGetErrStatus()|0)<0){label=8;break}else{label=9;break};case 8:_cvError(-1,18248,10256,14448,4217);label=16;break;case 9:__Z10cvAttrListPPKcP10CvAttrList($6,0,0);_cvStartWriteStruct($1,7512,13,0,$6);$block=HEAP32[$seq+52>>2]|0;label=10;break;case 10:if(($block|0)!=0){label=11;break}else{label=15;break};case 11:_cvWriteRawData($1,HEAP32[$block+16>>2]|0,HEAP32[$block+12>>2]|0,$dt);if(($block|0)==(HEAP32[HEAP32[$seq+52>>2]>>2]|0)){label=12;break}else{label=13;break};case 12:label=15;break;case 13:label=14;break;case 14:$block=HEAP32[$block+4>>2]|0;label=10;break;case 15:_cvEndWriteStruct($1);_cvEndWriteStruct($1);label=16;break;case 16:STACKTOP=sp;return}}function __Z22icvFSResizeWriteBufferP13CvFileStoragePci($fs,$ptr,$len){$fs=$fs|0;$ptr=$ptr|0;$len=$len|0;var $1=0,$2=0,$3=0,$19=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$ptr;$3=$len;if(($2+$3|0)>>>0<(HEAP32[$1+76>>2]|0)>>>0){label=2;break}else{label=3;break};case 2:$19=$2;label=4;break;case 3:$19=__ZL13icvFSDoResizeP13CvFileStoragePci($1,$2,$3)|0;label=4;break;case 4:return $19|0}return 0}function __ZL13icvFSDoResizeP13CvFileStoragePci($fs,$ptr,$len){$fs=$fs|0;$ptr=$ptr|0;$len=$len|0;var $1=0,$3=0,$new_ptr=0,$written_len=0,$new_size=0,$34=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$fs;$3=$len;$new_ptr=0;$written_len=$ptr-(HEAP32[$1+72>>2]|0)|0;$new_size=(((HEAP32[$1+76>>2]|0)-(HEAP32[$1+72>>2]|0)|0)*3|0|0)/2|0;if(($written_len+$3|0)<($new_size|0)){label=2;break}else{label=3;break};case 2:$34=$new_size;label=4;break;case 3:$34=$written_len+$3|0;label=4;break;case 4:$new_size=$34;$new_ptr=_cvAlloc($new_size+256|0)|0;if((_cvGetErrStatus()|0)<0){label=5;break}else{label=6;break};case 5:_cvError(-1,18136,10256,14448,321);label=9;break;case 6:HEAP32[$1+68>>2]=$new_ptr+((HEAP32[$1+68>>2]|0)-(HEAP32[$1+72>>2]|0));if(($written_len|0)>0){label=7;break}else{label=8;break};case 7:_memcpy($new_ptr|0,HEAP32[$1+72>>2]|0,$written_len)|0;label=8;break;case 8:HEAP32[$1+72>>2]=$new_ptr;HEAP32[$1+76>>2]=(HEAP32[$1+72>>2]|0)+$new_size;$new_ptr=$new_ptr+$written_len|0;label=9;break;case 9:return $new_ptr|0}return 0}function __ZL14icvXMLWriteTagP13CvFileStoragePKci10CvAttrList($fs,$key,$tag_type,$list){$fs=$fs|0;$key=$key|0;$tag_type=$tag_type|0;$list=$list|0;var $1=0,$2=0,$3=0,$ptr=0,$i=0,$len=0,$struct_flags=0,$c=0,$attr=0,$len0=0,$len1=0,$77=0,$87=0,$154=0,$171=0,$181=0,$183=0,$193=0,$206=0,$207=0,$212=0,$215=0,label=0,tempParam=0,sp=0;sp=STACKTOP;tempParam=$list;$list=STACKTOP;STACKTOP=STACKTOP+8|0;HEAP32[$list>>2]=HEAP32[tempParam>>2];HEAP32[$list+4>>2]=HEAP32[tempParam+4>>2];label=1;while(1)switch(label|0){case 1:$1=$fs;$2=$key;$3=$tag_type;$ptr=HEAP32[$1+68>>2]|0;$len=0;$struct_flags=HEAP32[$1+44>>2]|0;if(($2|0)!=0){label=2;break}else{label=4;break};case 2:if((HEAP8[$2|0]|0)==0){label=3;break}else{label=4;break};case 3:$2=0;label=4;break;case 4:if(($3|0)==1){label=6;break}else{label=5;break};case 5:if(($3|0)==3){label=6;break}else{label=14;break};case 6:if(($struct_flags&7|0)>=5){label=7;break}else{label=10;break};case 7:if((($struct_flags&7|0)==6^($2|0)!=0|0)!=0){label=8;break}else{label=9;break};case 8:_cvError(-5,18024,13280,14448,2259);label=48;break;case 9:label=11;break;case 10:$struct_flags=(($2|0)!=0?6:5)+32|0;HEAP32[$1+12>>2]=0;label=11;break;case 11:if(($struct_flags&32|0)!=0){label=13;break}else{label=12;break};case 12:$ptr=__ZL10icvFSFlushP13CvFileStorage($1)|0;label=13;break;case 13:label=14;break;case 14:if(($2|0)!=0){label=16;break}else{label=15;break};case 15:$2=7864;label=20;break;case 16:if((HEAP8[$2|0]|0)==95){label=17;break}else{label=19;break};case 17:if((HEAP8[$2+1|0]|0)==0){label=18;break}else{label=19;break};case 18:_cvError(-5,18024,12960,14448,2274);label=48;break;case 19:label=20;break;case 20:$len=_strlen($2|0)|0;$77=$ptr;$ptr=$77+1|0;HEAP8[$77]=60;if(($3|0)==2){label=21;break}else{label=24;break};case 21:if((HEAP32[$list>>2]|0)!=0){label=22;break}else{label=23;break};case 22:_cvError(-5,18024,12904,14448,2281);label=48;break;case 23:$87=$ptr;$ptr=$87+1|0;HEAP8[$87]=47;label=24;break;case 24:if((_isalpha(HEAP8[$2|0]|0)|0)!=0){label=27;break}else{label=25;break};case 25:if((HEAP8[$2|0]|0)!=95){label=26;break}else{label=27;break};case 26:_cvError(-5,18024,12864,14448,2286);label=48;break;case 27:$ptr=__Z22icvFSResizeWriteBufferP13CvFileStoragePci($1,$ptr,$len)|0;$i=0;label=28;break;case 28:if(($i|0)<($len|0)){label=29;break}else{label=35;break};case 29:$c=HEAP8[$2+$i|0]|0;if((_isalnum($c<<24>>24|0)|0)!=0){label=33;break}else{label=30;break};case 30:if(($c<<24>>24|0)!=95){label=31;break}else{label=33;break};case 31:if(($c<<24>>24|0)!=45){label=32;break}else{label=33;break};case 32:_cvError(-5,18024,12832,14448,2293);label=48;break;case 33:HEAP8[$ptr+$i|0]=$c;label=34;break;case 34:$i=$i+1|0;label=28;break;case 35:$ptr=$ptr+$len|0;label=36;break;case 36:$attr=HEAP32[$list>>2]|0;label=37;break;case 37:if(($attr|0)!=0){label=38;break}else{$154=0;label=39;break};case 38:$154=(HEAP32[$attr>>2]|0)!=0;label=39;break;case 39:if($154){label=40;break}else{label=42;break};case 40:$len0=_strlen(HEAP32[$attr>>2]|0)|0;$len1=_strlen(HEAP32[$attr+4>>2]|0)|0;$ptr=__Z22icvFSResizeWriteBufferP13CvFileStoragePci($1,$ptr,$len0+$len1+4|0)|0;$171=$ptr;$ptr=$171+1|0;HEAP8[$171]=32;_memcpy($ptr|0,HEAP32[$attr>>2]|0,$len0)|0;$ptr=$ptr+$len0|0;$181=$ptr;$ptr=$181+1|0;HEAP8[$181]=61;$183=$ptr;$ptr=$183+1|0;HEAP8[$183]=34;_memcpy($ptr|0,HEAP32[$attr+4>>2]|0,$len1)|0;$ptr=$ptr+$len1|0;$193=$ptr;$ptr=$193+1|0;HEAP8[$193]=34;label=41;break;case 41:$attr=$attr+8|0;label=37;break;case 42:if((HEAP32[$list+4>>2]|0)!=0){label=44;break}else{label=43;break};case 43:label=45;break;case 44:$206=$list;$207=HEAP32[$list+4>>2]|0;HEAP32[$206>>2]=HEAP32[$207>>2];HEAP32[$206+4>>2]=HEAP32[$207+4>>2];label=36;break;case 45:if(($3|0)==3){label=46;break}else{label=47;break};case 46:$212=$ptr;$ptr=$212+1|0;HEAP8[$212]=47;label=47;break;case 47:$215=$ptr;$ptr=$215+1|0;HEAP8[$215]=62;HEAP32[$1+68>>2]=$ptr;HEAP32[$1+44>>2]=$struct_flags&-33;label=48;break;case 48:STACKTOP=sp;return}}function __GLOBAL__I_a559(){___cxx_global_var_init548();___cxx_global_var_init53();___cxx_global_var_init55();___cxx_global_var_init57();___cxx_global_var_init59();___cxx_global_var_init61();___cxx_global_var_init63();return}function __ZL15icvDefaultAllocjPv($size,$0){$size=$size|0;$0=$0|0;var $2=0,$3=0,$ptr=0,$ptr0=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$size;$ptr0=_malloc($3+(($3>>>0>=4096)+1<<5)+4|0)|0;if(($ptr0|0)!=0){label=3;break}else{label=2;break};case 2:$2=0;label=4;break;case 3:$ptr=__Z10cvAlignPtrPKvi($ptr0+5|0,32)|0;HEAP32[$ptr-4>>2]=$ptr0;$2=$ptr;label=4;break;case 4:return $2|0}return 0}function __ZL14icvDefaultFreePvS_($ptr,$0){$ptr=$ptr|0;$0=$0|0;var $2=0,$3=0,label=0;label=1;while(1)switch(label|0){case 1:$3=$ptr;if(($3&31|0)!=0){label=2;break}else{label=3;break};case 2:$2=-49;label=4;break;case 3:_free(HEAP32[$3-4>>2]|0);$2=0;label=4;break;case 4:return $2|0}return 0}function _cvAlloc($size){$size=$size|0;var $1=0,$ptr=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$size;$ptr=0;if($1>>>0>1073741824){label=2;break}else{label=3;break};case 2:_cvError(-211,6728,11e3,13704,107);label=6;break;case 3:$ptr=FUNCTION_TABLE_iii[HEAP32[5228]&1023]($1,HEAP32[7598]|0)|0;if(($ptr|0)!=0){label=5;break}else{label=4;break};case 4:_cvError(-4,6728,10168,13704,111);label=6;break;case 5:label=6;break;case 6:return $ptr|0}return 0}function _cvFree_($ptr){$ptr=$ptr|0;var $1=0,$status=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$ptr;if(($1|0)!=0){label=2;break}else{label=5;break};case 2:$status=FUNCTION_TABLE_iii[HEAP32[5236]&1023]($1,HEAP32[7598]|0)|0;if(($status|0)<0){label=3;break}else{label=4;break};case 3:_cvError($status,6160,8864,13704,129);label=6;break;case 4:label=5;break;case 5:label=6;break;case 6:return}}function __ZN10__cxxabiv116__shim_type_infoD2Ev($this){$this=$this|0;__ZNSt9type_infoD2Ev($this|0);return}function __ZN10__cxxabiv117__class_type_infoD0Ev($this){$this=$this|0;__ZNSt9type_infoD2Ev($this|0);__ZdlPv($this);return}function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this){$this=$this|0;__ZNSt9type_infoD2Ev($this|0);__ZdlPv($this);return}function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this,$thrown_type,$adjustedPtr){$this=$this|0;$thrown_type=$thrown_type|0;$adjustedPtr=$adjustedPtr|0;var $info=0,$8=0,$9=0,$_0=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+56|0;label=1;while(1)switch(label|0){case 1:$info=sp|0;if(($this|0)==($thrown_type|0)){$_0=1;label=6;break}else{label=2;break};case 2:if(($thrown_type|0)==0){$_0=0;label=6;break}else{label=3;break};case 3:$8=___dynamic_cast($thrown_type,20464,20448,-1)|0;$9=$8;if(($8|0)==0){$_0=0;label=6;break}else{label=4;break};case 4:_memset($info|0,0,56);HEAP32[$info>>2]=$9;HEAP32[$info+8>>2]=$this;HEAP32[$info+12>>2]=-1;HEAP32[$info+48>>2]=1;FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8>>2]|0)+28>>2]&1023]($9,$info,HEAP32[$adjustedPtr>>2]|0,1);if((HEAP32[$info+24>>2]|0)==1){label=5;break}else{$_0=0;label=6;break};case 5:HEAP32[$adjustedPtr>>2]=HEAP32[$info+16>>2];$_0=1;label=6;break;case 6:STACKTOP=sp;return $_0|0}return 0}function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){$this=$this|0;$info=$info|0;$current_ptr=$current_ptr|0;$path_below=$path_below|0;$use_strcmp=$use_strcmp|0;var $9=0,$22=0,$31=0,label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[$info+8>>2]|0)==($this|0)){label=2;break}else{label=5;break};case 2:if((HEAP32[$info+4>>2]|0)==($current_ptr|0)){label=3;break}else{label=14;break};case 3:$9=$info+28|0;if((HEAP32[$9>>2]|0)==1){label=14;break}else{label=4;break};case 4:HEAP32[$9>>2]=$path_below;label=14;break;case 5:if((HEAP32[$info>>2]|0)==($this|0)){label=6;break}else{label=14;break};case 6:if((HEAP32[$info+16>>2]|0)==($current_ptr|0)){label=8;break}else{label=7;break};case 7:$22=$info+20|0;if((HEAP32[$22>>2]|0)==($current_ptr|0)){label=8;break}else{label=10;break};case 8:if(($path_below|0)==1){label=9;break}else{label=14;break};case 9:HEAP32[$info+32>>2]=1;label=14;break;case 10:HEAP32[$info+32>>2]=$path_below;HEAP32[$22>>2]=$current_ptr;$31=$info+40|0;HEAP32[$31>>2]=(HEAP32[$31>>2]|0)+1;if((HEAP32[$info+36>>2]|0)==1){label=11;break}else{label=13;break};case 11:if((HEAP32[$info+24>>2]|0)==2){label=12;break}else{label=13;break};case 12:HEAP8[$info+54|0]=1;label=13;break;case 13:HEAP32[$info+44>>2]=4;label=14;break;case 14:return}}function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){$this=$this|0;$info=$info|0;$dst_ptr=$dst_ptr|0;$current_ptr=$current_ptr|0;$path_below=$path_below|0;$use_strcmp=$use_strcmp|0;var $11=0,$12=0,$26=0,$27=0,$31=0,$39=0,label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[$info+8>>2]|0)==($this|0)){label=2;break}else{label=12;break};case 2:HEAP8[$info+53|0]=1;if((HEAP32[$info+4>>2]|0)==($current_ptr|0)){label=3;break}else{label=12;break};case 3:HEAP8[$info+52|0]=1;$11=$info+16|0;$12=HEAP32[$11>>2]|0;if(($12|0)==0){label=4;break}else{label=6;break};case 4:HEAP32[$11>>2]=$dst_ptr;HEAP32[$info+24>>2]=$path_below;HEAP32[$info+36>>2]=1;if((HEAP32[$info+48>>2]|0)==1&($path_below|0)==1){label=5;break}else{label=12;break};case 5:HEAP8[$info+54|0]=1;label=12;break;case 6:if(($12|0)==($dst_ptr|0)){label=7;break}else{label=11;break};case 7:$26=$info+24|0;$27=HEAP32[$26>>2]|0;if(($27|0)==2){label=8;break}else{$31=$27;label=9;break};case 8:HEAP32[$26>>2]=$path_below;$31=$path_below;label=9;break;case 9:if((HEAP32[$info+48>>2]|0)==1&($31|0)==1){label=10;break}else{label=12;break};case 10:HEAP8[$info+54|0]=1;label=12;break;case 11:$39=$info+36|0;HEAP32[$39>>2]=(HEAP32[$39>>2]|0)+1;HEAP8[$info+54|0]=1;label=12;break;case 12:return}}function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this,$info,$adjustedPtr,$path_below){$this=$this|0;$info=$info|0;$adjustedPtr=$adjustedPtr|0;$path_below=$path_below|0;var $7=0,$8=0,$16=0,$21=0,$28=0,label=0;label=1;while(1)switch(label|0){case 1:if(($this|0)==(HEAP32[$info+8>>2]|0)){label=2;break}else{label=8;break};case 2:$7=$info+16|0;$8=HEAP32[$7>>2]|0;if(($8|0)==0){label=3;break}else{label=4;break};case 3:HEAP32[$7>>2]=$adjustedPtr;HEAP32[$info+24>>2]=$path_below;HEAP32[$info+36>>2]=1;label=9;break;case 4:if(($8|0)==($adjustedPtr|0)){label=5;break}else{label=7;break};case 5:$16=$info+24|0;if((HEAP32[$16>>2]|0)==2){label=6;break}else{label=9;break};case 6:HEAP32[$16>>2]=$path_below;label=9;break;case 7:$21=$info+36|0;HEAP32[$21>>2]=(HEAP32[$21>>2]|0)+1;HEAP32[$info+24>>2]=2;HEAP8[$info+54|0]=1;label=9;break;case 8:$28=HEAP32[$this+8>>2]|0;FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$28>>2]|0)+28>>2]&1023]($28,$info,$adjustedPtr,$path_below);label=9;break;case 9:return}}function ___dynamic_cast($static_ptr,$static_type,$dst_type,$src2dst_offset){$static_ptr=$static_ptr|0;$static_type=$static_type|0;$dst_type=$dst_type|0;$src2dst_offset=$src2dst_offset|0;var $info=0,$2=0,$6=0,$8=0,$9=0,$14=0,$15=0,$16=0,$17=0,$18=0,$19=0,$38=0,$dst_ptr_0=0,label=0,sp=0;sp=STACKTOP;STACKTOP=STACKTOP+56|0;label=1;while(1)switch(label|0){case 1:$info=sp|0;$2=HEAP32[$static_ptr>>2]|0;$6=$static_ptr+(HEAP32[$2-8>>2]|0)|0;$8=HEAP32[$2-4>>2]|0;$9=$8;HEAP32[$info>>2]=$dst_type;HEAP32[$info+4>>2]=$static_ptr;HEAP32[$info+8>>2]=$static_type;HEAP32[$info+12>>2]=$src2dst_offset;$14=$info+16|0;$15=$info+20|0;$16=$info+24|0;$17=$info+28|0;$18=$info+32|0;$19=$info+40|0;_memset($14|0,0,39);if(($8|0)==($dst_type|0)){label=2;break}else{label=3;break};case 2:HEAP32[$info+48>>2]=1;FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8>>2]|0)+20>>2]&1023]($9,$info,$6,$6,1,0);STACKTOP=sp;return((HEAP32[$16>>2]|0)==1?$6:0)|0;case 3:FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8>>2]|0)+24>>2]&1023]($9,$info,$6,1,0);$38=HEAP32[$info+36>>2]|0;if(($38|0)==0){label=4;break}else if(($38|0)==1){label=7;break}else{$dst_ptr_0=0;label=12;break};case 4:if((HEAP32[$19>>2]|0)==1){label=5;break}else{$dst_ptr_0=0;label=12;break};case 5:if((HEAP32[$17>>2]|0)==1){label=6;break}else{$dst_ptr_0=0;label=12;break};case 6:$dst_ptr_0=(HEAP32[$18>>2]|0)==1?HEAP32[$15>>2]|0:0;label=12;break;case 7:if((HEAP32[$16>>2]|0)==1){label=11;break}else{label=8;break};case 8:if((HEAP32[$19>>2]|0)==0){label=9;break}else{$dst_ptr_0=0;label=12;break};case 9:if((HEAP32[$17>>2]|0)==1){label=10;break}else{$dst_ptr_0=0;label=12;break};case 10:if((HEAP32[$18>>2]|0)==1){label=11;break}else{$dst_ptr_0=0;label=12;break};case 11:$dst_ptr_0=HEAP32[$14>>2]|0;label=12;break;case 12:STACKTOP=sp;return $dst_ptr_0|0}return 0}function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this,$info,$current_ptr,$path_below,$use_strcmp){$this=$this|0;$info=$info|0;$current_ptr=$current_ptr|0;$path_below=$path_below|0;$use_strcmp=$use_strcmp|0;var $1=0,$11=0,$25=0,$34=0,$38=0,$39=0,$41=0,$is_dst_type_derived_from_static_type_0_off036=0,$52=0,$68=0,label=0;label=1;while(1)switch(label|0){case 1:$1=$this|0;if(($1|0)==(HEAP32[$info+8>>2]|0)){label=2;break}else{label=5;break};case 2:if((HEAP32[$info+4>>2]|0)==($current_ptr|0)){label=3;break}else{label=20;break};case 3:$11=$info+28|0;if((HEAP32[$11>>2]|0)==1){label=20;break}else{label=4;break};case 4:HEAP32[$11>>2]=$path_below;label=20;break;case 5:if(($1|0)==(HEAP32[$info>>2]|0)){label=6;break}else{label=19;break};case 6:if((HEAP32[$info+16>>2]|0)==($current_ptr|0)){label=8;break}else{label=7;break};case 7:$25=$info+20|0;if((HEAP32[$25>>2]|0)==($current_ptr|0)){label=8;break}else{label=10;break};case 8:if(($path_below|0)==1){label=9;break}else{label=20;break};case 9:HEAP32[$info+32>>2]=1;label=20;break;case 10:HEAP32[$info+32>>2]=$path_below;$34=$info+44|0;if((HEAP32[$34>>2]|0)==4){label=20;break}else{label=11;break};case 11:$38=$info+52|0;HEAP8[$38]=0;$39=$info+53|0;HEAP8[$39]=0;$41=HEAP32[$this+8>>2]|0;FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$41>>2]|0)+20>>2]&1023]($41,$info,$current_ptr,$current_ptr,1,$use_strcmp);if((HEAP8[$39]&1)==0){$is_dst_type_derived_from_static_type_0_off036=0;label=13;break}else{label=12;break};case 12:if((HEAP8[$38]&1)==0){$is_dst_type_derived_from_static_type_0_off036=1;label=13;break}else{label=17;break};case 13:HEAP32[$25>>2]=$current_ptr;$52=$info+40|0;HEAP32[$52>>2]=(HEAP32[$52>>2]|0)+1;if((HEAP32[$info+36>>2]|0)==1){label=14;break}else{label=16;break};case 14:if((HEAP32[$info+24>>2]|0)==2){label=15;break}else{label=16;break};case 15:HEAP8[$info+54|0]=1;if($is_dst_type_derived_from_static_type_0_off036){label=17;break}else{label=18;break};case 16:if($is_dst_type_derived_from_static_type_0_off036){label=17;break}else{label=18;break};case 17:HEAP32[$34>>2]=3;label=20;break;case 18:HEAP32[$34>>2]=4;label=20;break;case 19:$68=HEAP32[$this+8>>2]|0;FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$68>>2]|0)+24>>2]&1023]($68,$info,$current_ptr,$path_below,$use_strcmp);label=20;break;case 20:return}}function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp){$this=$this|0;$info=$info|0;$dst_ptr=$dst_ptr|0;$current_ptr=$current_ptr|0;$path_below=$path_below|0;$use_strcmp=$use_strcmp|0;var $13=0,$14=0,$28=0,$29=0,$33=0,$41=0,$47=0,label=0;label=1;while(1)switch(label|0){case 1:if(($this|0)==(HEAP32[$info+8>>2]|0)){label=2;break}else{label=12;break};case 2:HEAP8[$info+53|0]=1;if((HEAP32[$info+4>>2]|0)==($current_ptr|0)){label=3;break}else{label=13;break};case 3:HEAP8[$info+52|0]=1;$13=$info+16|0;$14=HEAP32[$13>>2]|0;if(($14|0)==0){label=4;break}else{label=6;break};case 4:HEAP32[$13>>2]=$dst_ptr;HEAP32[$info+24>>2]=$path_below;HEAP32[$info+36>>2]=1;if((HEAP32[$info+48>>2]|0)==1&($path_below|0)==1){label=5;break}else{label=13;break};case 5:HEAP8[$info+54|0]=1;label=13;break;case 6:if(($14|0)==($dst_ptr|0)){label=7;break}else{label=11;break};case 7:$28=$info+24|0;$29=HEAP32[$28>>2]|0;if(($29|0)==2){label=8;break}else{$33=$29;label=9;break};case 8:HEAP32[$28>>2]=$path_below;$33=$path_below;label=9;break;case 9:if((HEAP32[$info+48>>2]|0)==1&($33|0)==1){label=10;break}else{label=13;break};case 10:HEAP8[$info+54|0]=1;label=13;break;case 11:$41=$info+36|0;HEAP32[$41>>2]=(HEAP32[$41>>2]|0)+1;HEAP8[$info+54|0]=1;label=13;break;case 12:$47=HEAP32[$this+8>>2]|0;FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$47>>2]|0)+20>>2]&1023]($47,$info,$dst_ptr,$current_ptr,$path_below,$use_strcmp);label=13;break;case 13:return}}function _malloc($bytes){$bytes=$bytes|0;var $8=0,$9=0,$10=0,$11=0,$17=0,$18=0,$20=0,$21=0,$22=0,$23=0,$24=0,$35=0,$40=0,$45=0,$56=0,$59=0,$62=0,$64=0,$65=0,$67=0,$69=0,$71=0,$73=0,$75=0,$77=0,$79=0,$82=0,$83=0,$85=0,$86=0,$87=0,$88=0,$89=0,$100=0,$105=0,$106=0,$109=0,$117=0,$120=0,$121=0,$122=0,$124=0,$125=0,$126=0,$132=0,$133=0,$_pre_phi=0,$F4_0=0,$145=0,$150=0,$152=0,$153=0,$155=0,$157=0,$159=0,$161=0,$163=0,$165=0,$167=0,$172=0,$rsize_0_i=0,$v_0_i=0,$t_0_i=0,$179=0,$183=0,$185=0,$189=0,$190=0,$192=0,$193=0,$196=0,$201=0,$203=0,$207=0,$211=0,$215=0,$220=0,$221=0,$224=0,$225=0,$RP_0_i=0,$R_0_i=0,$227=0,$228=0,$231=0,$232=0,$R_1_i=0,$242=0,$244=0,$258=0,$274=0,$286=0,$300=0,$304=0,$315=0,$318=0,$319=0,$320=0,$322=0,$323=0,$324=0,$330=0,$331=0,$_pre_phi_i=0,$F1_0_i=0,$342=0,$348=0,$349=0,$350=0,$353=0,$354=0,$361=0,$362=0,$365=0,$367=0,$370=0,$375=0,$idx_0_i=0,$383=0,$391=0,$rst_0_i=0,$sizebits_0_i=0,$t_0_i116=0,$rsize_0_i117=0,$v_0_i118=0,$396=0,$397=0,$rsize_1_i=0,$v_1_i=0,$403=0,$406=0,$rst_1_i=0,$t_1_i=0,$rsize_2_i=0,$v_2_i=0,$414=0,$417=0,$422=0,$424=0,$425=0,$427=0,$429=0,$431=0,$433=0,$435=0,$437=0,$439=0,$t_2_ph_i=0,$v_330_i=0,$rsize_329_i=0,$t_228_i=0,$449=0,$450=0,$_rsize_3_i=0,$t_2_v_3_i=0,$452=0,$455=0,$v_3_lcssa_i=0,$rsize_3_lcssa_i=0,$463=0,$464=0,$467=0,$468=0,$472=0,$474=0,$478=0,$482=0,$486=0,$491=0,$492=0,$495=0,$496=0,$RP_0_i119=0,$R_0_i120=0,$498=0,$499=0,$502=0,$503=0,$R_1_i122=0,$513=0,$515=0,$529=0,$545=0,$557=0,$571=0,$575=0,$586=0,$589=0,$591=0,$592=0,$593=0,$599=0,$600=0,$_pre_phi_i128=0,$F5_0_i=0,$612=0,$613=0,$620=0,$621=0,$624=0,$626=0,$629=0,$634=0,$I7_0_i=0,$641=0,$648=0,$649=0,$668=0,$T_0_i=0,$K12_0_i=0,$677=0,$678=0,$694=0,$695=0,$697=0,$711=0,$nb_0=0,$714=0,$717=0,$718=0,$721=0,$736=0,$743=0,$746=0,$747=0,$748=0,$762=0,$772=0,$773=0,$774=0,$775=0,$776=0,$779=0,$782=0,$783=0,$791=0,$794=0,$sp_0_i_i=0,$796=0,$797=0,$800=0,$806=0,$809=0,$812=0,$813=0,$814=0,$ssize_0_i=0,$824=0,$825=0,$829=0,$835=0,$836=0,$840=0,$843=0,$847=0,$ssize_1_i=0,$br_0_i=0,$tsize_0_i=0,$tbase_0_i=0,$856=0,$860=0,$ssize_2_i=0,$tsize_0303639_i=0,$tsize_1_i=0,$876=0,$877=0,$881=0,$883=0,$_tbase_1_i=0,$tbase_245_i=0,$tsize_244_i=0,$886=0,$890=0,$893=0,$i_02_i_i=0,$899=0,$901=0,$904=0,$908=0,$914=0,$917=0,$sp_067_i=0,$925=0,$926=0,$927=0,$932=0,$939=0,$944=0,$946=0,$947=0,$949=0,$955=0,$958=0,$sp_160_i=0,$970=0,$975=0,$982=0,$986=0,$993=0,$996=0,$1003=0,$1004=0,$1005=0,$_sum_i21_i=0,$1009=0,$1010=0,$1011=0,$1019=0,$1028=0,$_sum2_i23_i=0,$1037=0,$1041=0,$1042=0,$1047=0,$1050=0,$1053=0,$1076=0,$_pre_phi57_i_i=0,$1081=0,$1084=0,$1087=0,$1092=0,$1097=0,$1101=0,$_sum67_i_i=0,$1107=0,$1108=0,$1112=0,$1113=0,$RP_0_i_i=0,$R_0_i_i=0,$1115=0,$1116=0,$1119=0,$1120=0,$R_1_i_i=0,$1132=0,$1134=0,$1148=0,$_sum3233_i_i=0,$1165=0,$1178=0,$qsize_0_i_i=0,$oldfirst_0_i_i=0,$1194=0,$1202=0,$1205=0,$1207=0,$1208=0,$1209=0,$1215=0,$1216=0,$_pre_phi_i25_i=0,$F4_0_i_i=0,$1228=0,$1229=0,$1236=0,$1237=0,$1240=0,$1242=0,$1245=0,$1250=0,$I7_0_i_i=0,$1257=0,$1264=0,$1265=0,$1284=0,$T_0_i27_i=0,$K8_0_i_i=0,$1293=0,$1294=0,$1310=0,$1311=0,$1313=0,$1327=0,$sp_0_i_i_i=0,$1330=0,$1334=0,$1335=0,$1341=0,$1348=0,$1349=0,$1353=0,$1354=0,$1358=0,$1364=0,$1367=0,$1377=0,$1380=0,$1381=0,$1389=0,$1392=0,$1398=0,$1401=0,$1403=0,$1404=0,$1405=0,$1411=0,$1412=0,$_pre_phi_i_i=0,$F_0_i_i=0,$1422=0,$1423=0,$1430=0,$1431=0,$1434=0,$1436=0,$1439=0,$1444=0,$I1_0_i_i=0,$1451=0,$1455=0,$1456=0,$1471=0,$T_0_i_i=0,$K2_0_i_i=0,$1480=0,$1481=0,$1494=0,$1495=0,$1497=0,$1507=0,$1510=0,$1511=0,$1512=0,$mem_0=0,label=0;label=1;while(1)switch(label|0){case 1:if($bytes>>>0<245){label=2;break}else{label=78;break};case 2:if($bytes>>>0<11){$8=16;label=4;break}else{label=3;break};case 3:$8=$bytes+11&-8;label=4;break;case 4:$9=$8>>>3;$10=HEAP32[7108]|0;$11=$10>>>($9>>>0);if(($11&3|0)==0){label=12;break}else{label=5;break};case 5:$17=($11&1^1)+$9|0;$18=$17<<1;$20=28472+($18<<2)|0;$21=28472+($18+2<<2)|0;$22=HEAP32[$21>>2]|0;$23=$22+8|0;$24=HEAP32[$23>>2]|0;if(($20|0)==($24|0)){label=6;break}else{label=7;break};case 6:HEAP32[7108]=$10&~(1<<$17);label=11;break;case 7:if($24>>>0<(HEAP32[7112]|0)>>>0){label=10;break}else{label=8;break};case 8:$35=$24+12|0;if((HEAP32[$35>>2]|0)==($22|0)){label=9;break}else{label=10;break};case 9:HEAP32[$35>>2]=$20;HEAP32[$21>>2]=$24;label=11;break;case 10:_abort();return 0;return 0;case 11:$40=$17<<3;HEAP32[$22+4>>2]=$40|3;$45=$22+($40|4)|0;HEAP32[$45>>2]=HEAP32[$45>>2]|1;$mem_0=$23;label=341;break;case 12:if($8>>>0>(HEAP32[7110]|0)>>>0){label=13;break}else{$nb_0=$8;label=160;break};case 13:if(($11|0)==0){label=27;break}else{label=14;break};case 14:$56=2<<$9;$59=$11<<$9&($56|-$56);$62=($59&-$59)-1|0;$64=$62>>>12&16;$65=$62>>>($64>>>0);$67=$65>>>5&8;$69=$65>>>($67>>>0);$71=$69>>>2&4;$73=$69>>>($71>>>0);$75=$73>>>1&2;$77=$73>>>($75>>>0);$79=$77>>>1&1;$82=($67|$64|$71|$75|$79)+($77>>>($79>>>0))|0;$83=$82<<1;$85=28472+($83<<2)|0;$86=28472+($83+2<<2)|0;$87=HEAP32[$86>>2]|0;$88=$87+8|0;$89=HEAP32[$88>>2]|0;if(($85|0)==($89|0)){label=15;break}else{label=16;break};case 15:HEAP32[7108]=$10&~(1<<$82);label=20;break;case 16:if($89>>>0<(HEAP32[7112]|0)>>>0){label=19;break}else{label=17;break};case 17:$100=$89+12|0;if((HEAP32[$100>>2]|0)==($87|0)){label=18;break}else{label=19;break};case 18:HEAP32[$100>>2]=$85;HEAP32[$86>>2]=$89;label=20;break;case 19:_abort();return 0;return 0;case 20:$105=$82<<3;$106=$105-$8|0;HEAP32[$87+4>>2]=$8|3;$109=$87;HEAP32[$109+($8|4)>>2]=$106|1;HEAP32[$109+$105>>2]=$106;$117=HEAP32[7110]|0;if(($117|0)==0){label=26;break}else{label=21;break};case 21:$120=HEAP32[7113]|0;$121=$117>>>3;$122=$121<<1;$124=28472+($122<<2)|0;$125=HEAP32[7108]|0;$126=1<<$121;if(($125&$126|0)==0){label=22;break}else{label=23;break};case 22:HEAP32[7108]=$125|$126;$F4_0=$124;$_pre_phi=28472+($122+2<<2)|0;label=25;break;case 23:$132=28472+($122+2<<2)|0;$133=HEAP32[$132>>2]|0;if($133>>>0<(HEAP32[7112]|0)>>>0){label=24;break}else{$F4_0=$133;$_pre_phi=$132;label=25;break};case 24:_abort();return 0;return 0;case 25:HEAP32[$_pre_phi>>2]=$120;HEAP32[$F4_0+12>>2]=$120;HEAP32[$120+8>>2]=$F4_0;HEAP32[$120+12>>2]=$124;label=26;break;case 26:HEAP32[7110]=$106;HEAP32[7113]=$109+$8;$mem_0=$88;label=341;break;case 27:$145=HEAP32[7109]|0;if(($145|0)==0){$nb_0=$8;label=160;break}else{label=28;break};case 28:$150=($145&-$145)-1|0;$152=$150>>>12&16;$153=$150>>>($152>>>0);$155=$153>>>5&8;$157=$153>>>($155>>>0);$159=$157>>>2&4;$161=$157>>>($159>>>0);$163=$161>>>1&2;$165=$161>>>($163>>>0);$167=$165>>>1&1;$172=HEAP32[28736+(($155|$152|$159|$163|$167)+($165>>>($167>>>0))<<2)>>2]|0;$t_0_i=$172;$v_0_i=$172;$rsize_0_i=(HEAP32[$172+4>>2]&-8)-$8|0;label=29;break;case 29:$179=HEAP32[$t_0_i+16>>2]|0;if(($179|0)==0){label=30;break}else{$185=$179;label=31;break};case 30:$183=HEAP32[$t_0_i+20>>2]|0;if(($183|0)==0){label=32;break}else{$185=$183;label=31;break};case 31:$189=(HEAP32[$185+4>>2]&-8)-$8|0;$190=$189>>>0<$rsize_0_i>>>0;$t_0_i=$185;$v_0_i=$190?$185:$v_0_i;$rsize_0_i=$190?$189:$rsize_0_i;label=29;break;case 32:$192=$v_0_i;$193=HEAP32[7112]|0;if($192>>>0<$193>>>0){label=76;break}else{label=33;break};case 33:$196=$192+$8|0;if($192>>>0<$196>>>0){label=34;break}else{label=76;break};case 34:$201=HEAP32[$v_0_i+24>>2]|0;$203=HEAP32[$v_0_i+12>>2]|0;if(($203|0)==($v_0_i|0)){label=40;break}else{label=35;break};case 35:$207=HEAP32[$v_0_i+8>>2]|0;if($207>>>0<$193>>>0){label=39;break}else{label=36;break};case 36:$211=$207+12|0;if((HEAP32[$211>>2]|0)==($v_0_i|0)){label=37;break}else{label=39;break};case 37:$215=$203+8|0;if((HEAP32[$215>>2]|0)==($v_0_i|0)){label=38;break}else{label=39;break};case 38:HEAP32[$211>>2]=$203;HEAP32[$215>>2]=$207;$R_1_i=$203;label=47;break;case 39:_abort();return 0;return 0;case 40:$220=$v_0_i+20|0;$221=HEAP32[$220>>2]|0;if(($221|0)==0){label=41;break}else{$R_0_i=$221;$RP_0_i=$220;label=42;break};case 41:$224=$v_0_i+16|0;$225=HEAP32[$224>>2]|0;if(($225|0)==0){$R_1_i=0;label=47;break}else{$R_0_i=$225;$RP_0_i=$224;label=42;break};case 42:$227=$R_0_i+20|0;$228=HEAP32[$227>>2]|0;if(($228|0)==0){label=43;break}else{$R_0_i=$228;$RP_0_i=$227;label=42;break};case 43:$231=$R_0_i+16|0;$232=HEAP32[$231>>2]|0;if(($232|0)==0){label=44;break}else{$R_0_i=$232;$RP_0_i=$231;label=42;break};case 44:if($RP_0_i>>>0<$193>>>0){label=46;break}else{label=45;break};case 45:HEAP32[$RP_0_i>>2]=0;$R_1_i=$R_0_i;label=47;break;case 46:_abort();return 0;return 0;case 47:if(($201|0)==0){label=67;break}else{label=48;break};case 48:$242=$v_0_i+28|0;$244=28736+(HEAP32[$242>>2]<<2)|0;if(($v_0_i|0)==(HEAP32[$244>>2]|0)){label=49;break}else{label=51;break};case 49:HEAP32[$244>>2]=$R_1_i;if(($R_1_i|0)==0){label=50;break}else{label=57;break};case 50:HEAP32[7109]=HEAP32[7109]&~(1<<HEAP32[$242>>2]);label=67;break;case 51:if($201>>>0<(HEAP32[7112]|0)>>>0){label=55;break}else{label=52;break};case 52:$258=$201+16|0;if((HEAP32[$258>>2]|0)==($v_0_i|0)){label=53;break}else{label=54;break};case 53:HEAP32[$258>>2]=$R_1_i;label=56;break;case 54:HEAP32[$201+20>>2]=$R_1_i;label=56;break;case 55:_abort();return 0;return 0;case 56:if(($R_1_i|0)==0){label=67;break}else{label=57;break};case 57:if($R_1_i>>>0<(HEAP32[7112]|0)>>>0){label=66;break}else{label=58;break};case 58:HEAP32[$R_1_i+24>>2]=$201;$274=HEAP32[$v_0_i+16>>2]|0;if(($274|0)==0){label=62;break}else{label=59;break};case 59:if($274>>>0<(HEAP32[7112]|0)>>>0){label=61;break}else{label=60;break};case 60:HEAP32[$R_1_i+16>>2]=$274;HEAP32[$274+24>>2]=$R_1_i;label=62;break;case 61:_abort();return 0;return 0;case 62:$286=HEAP32[$v_0_i+20>>2]|0;if(($286|0)==0){label=67;break}else{label=63;break};case 63:if($286>>>0<(HEAP32[7112]|0)>>>0){label=65;break}else{label=64;break};case 64:HEAP32[$R_1_i+20>>2]=$286;HEAP32[$286+24>>2]=$R_1_i;label=67;break;case 65:_abort();return 0;return 0;case 66:_abort();return 0;return 0;case 67:if($rsize_0_i>>>0<16){label=68;break}else{label=69;break};case 68:$300=$rsize_0_i+$8|0;HEAP32[$v_0_i+4>>2]=$300|3;$304=$192+($300+4)|0;HEAP32[$304>>2]=HEAP32[$304>>2]|1;label=77;break;case 69:HEAP32[$v_0_i+4>>2]=$8|3;HEAP32[$192+($8|4)>>2]=$rsize_0_i|1;HEAP32[$192+($rsize_0_i+$8)>>2]=$rsize_0_i;$315=HEAP32[7110]|0;if(($315|0)==0){label=75;break}else{label=70;break};case 70:$318=HEAP32[7113]|0;$319=$315>>>3;$320=$319<<1;$322=28472+($320<<2)|0;$323=HEAP32[7108]|0;$324=1<<$319;if(($323&$324|0)==0){label=71;break}else{label=72;break};case 71:HEAP32[7108]=$323|$324;$F1_0_i=$322;$_pre_phi_i=28472+($320+2<<2)|0;label=74;break;case 72:$330=28472+($320+2<<2)|0;$331=HEAP32[$330>>2]|0;if($331>>>0<(HEAP32[7112]|0)>>>0){label=73;break}else{$F1_0_i=$331;$_pre_phi_i=$330;label=74;break};case 73:_abort();return 0;return 0;case 74:HEAP32[$_pre_phi_i>>2]=$318;HEAP32[$F1_0_i+12>>2]=$318;HEAP32[$318+8>>2]=$F1_0_i;HEAP32[$318+12>>2]=$322;label=75;break;case 75:HEAP32[7110]=$rsize_0_i;HEAP32[7113]=$196;label=77;break;case 76:_abort();return 0;return 0;case 77:$342=$v_0_i+8|0;if(($342|0)==0){$nb_0=$8;label=160;break}else{$mem_0=$342;label=341;break};case 78:if($bytes>>>0>4294967231){$nb_0=-1;label=160;break}else{label=79;break};case 79:$348=$bytes+11|0;$349=$348&-8;$350=HEAP32[7109]|0;if(($350|0)==0){$nb_0=$349;label=160;break}else{label=80;break};case 80:$353=-$349|0;$354=$348>>>8;if(($354|0)==0){$idx_0_i=0;label=83;break}else{label=81;break};case 81:if($349>>>0>16777215){$idx_0_i=31;label=83;break}else{label=82;break};case 82:$361=($354+1048320|0)>>>16&8;$362=$354<<$361;$365=($362+520192|0)>>>16&4;$367=$362<<$365;$370=($367+245760|0)>>>16&2;$375=14-($365|$361|$370)+($367<<$370>>>15)|0;$idx_0_i=$349>>>(($375+7|0)>>>0)&1|$375<<1;label=83;break;case 83:$383=HEAP32[28736+($idx_0_i<<2)>>2]|0;if(($383|0)==0){$v_2_i=0;$rsize_2_i=$353;$t_1_i=0;label=90;break}else{label=84;break};case 84:if(($idx_0_i|0)==31){$391=0;label=86;break}else{label=85;break};case 85:$391=25-($idx_0_i>>>1)|0;label=86;break;case 86:$v_0_i118=0;$rsize_0_i117=$353;$t_0_i116=$383;$sizebits_0_i=$349<<$391;$rst_0_i=0;label=87;break;case 87:$396=HEAP32[$t_0_i116+4>>2]&-8;$397=$396-$349|0;if($397>>>0<$rsize_0_i117>>>0){label=88;break}else{$v_1_i=$v_0_i118;$rsize_1_i=$rsize_0_i117;label=89;break};case 88:if(($396|0)==($349|0)){$v_2_i=$t_0_i116;$rsize_2_i=$397;$t_1_i=$t_0_i116;label=90;break}else{$v_1_i=$t_0_i116;$rsize_1_i=$397;label=89;break};case 89:$403=HEAP32[$t_0_i116+20>>2]|0;$406=HEAP32[$t_0_i116+16+($sizebits_0_i>>>31<<2)>>2]|0;$rst_1_i=($403|0)==0|($403|0)==($406|0)?$rst_0_i:$403;if(($406|0)==0){$v_2_i=$v_1_i;$rsize_2_i=$rsize_1_i;$t_1_i=$rst_1_i;label=90;break}else{$v_0_i118=$v_1_i;$rsize_0_i117=$rsize_1_i;$t_0_i116=$406;$sizebits_0_i=$sizebits_0_i<<1;$rst_0_i=$rst_1_i;label=87;break};case 90:if(($t_1_i|0)==0&($v_2_i|0)==0){label=91;break}else{$t_2_ph_i=$t_1_i;label=93;break};case 91:$414=2<<$idx_0_i;$417=$350&($414|-$414);if(($417|0)==0){$nb_0=$349;label=160;break}else{label=92;break};case 92:$422=($417&-$417)-1|0;$424=$422>>>12&16;$425=$422>>>($424>>>0);$427=$425>>>5&8;$429=$425>>>($427>>>0);$431=$429>>>2&4;$433=$429>>>($431>>>0);$435=$433>>>1&2;$437=$433>>>($435>>>0);$439=$437>>>1&1;$t_2_ph_i=HEAP32[28736+(($427|$424|$431|$435|$439)+($437>>>($439>>>0))<<2)>>2]|0;label=93;break;case 93:if(($t_2_ph_i|0)==0){$rsize_3_lcssa_i=$rsize_2_i;$v_3_lcssa_i=$v_2_i;label=96;break}else{$t_228_i=$t_2_ph_i;$rsize_329_i=$rsize_2_i;$v_330_i=$v_2_i;label=94;break};case 94:$449=(HEAP32[$t_228_i+4>>2]&-8)-$349|0;$450=$449>>>0<$rsize_329_i>>>0;$_rsize_3_i=$450?$449:$rsize_329_i;$t_2_v_3_i=$450?$t_228_i:$v_330_i;$452=HEAP32[$t_228_i+16>>2]|0;if(($452|0)==0){label=95;break}else{$t_228_i=$452;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;label=94;break};case 95:$455=HEAP32[$t_228_i+20>>2]|0;if(($455|0)==0){$rsize_3_lcssa_i=$_rsize_3_i;$v_3_lcssa_i=$t_2_v_3_i;label=96;break}else{$t_228_i=$455;$rsize_329_i=$_rsize_3_i;$v_330_i=$t_2_v_3_i;label=94;break};case 96:if(($v_3_lcssa_i|0)==0){$nb_0=$349;label=160;break}else{label=97;break};case 97:if($rsize_3_lcssa_i>>>0<((HEAP32[7110]|0)-$349|0)>>>0){label=98;break}else{$nb_0=$349;label=160;break};case 98:$463=$v_3_lcssa_i;$464=HEAP32[7112]|0;if($463>>>0<$464>>>0){label=158;break}else{label=99;break};case 99:$467=$463+$349|0;$468=$467;if($463>>>0<$467>>>0){label=100;break}else{label=158;break};case 100:$472=HEAP32[$v_3_lcssa_i+24>>2]|0;$474=HEAP32[$v_3_lcssa_i+12>>2]|0;if(($474|0)==($v_3_lcssa_i|0)){label=106;break}else{label=101;break};case 101:$478=HEAP32[$v_3_lcssa_i+8>>2]|0;if($478>>>0<$464>>>0){label=105;break}else{label=102;break};case 102:$482=$478+12|0;if((HEAP32[$482>>2]|0)==($v_3_lcssa_i|0)){label=103;break}else{label=105;break};case 103:$486=$474+8|0;if((HEAP32[$486>>2]|0)==($v_3_lcssa_i|0)){label=104;break}else{label=105;break};case 104:HEAP32[$482>>2]=$474;HEAP32[$486>>2]=$478;$R_1_i122=$474;label=113;break;case 105:_abort();return 0;return 0;case 106:$491=$v_3_lcssa_i+20|0;$492=HEAP32[$491>>2]|0;if(($492|0)==0){label=107;break}else{$R_0_i120=$492;$RP_0_i119=$491;label=108;break};case 107:$495=$v_3_lcssa_i+16|0;$496=HEAP32[$495>>2]|0;if(($496|0)==0){$R_1_i122=0;label=113;break}else{$R_0_i120=$496;$RP_0_i119=$495;label=108;break};case 108:$498=$R_0_i120+20|0;$499=HEAP32[$498>>2]|0;if(($499|0)==0){label=109;break}else{$R_0_i120=$499;$RP_0_i119=$498;label=108;break};case 109:$502=$R_0_i120+16|0;$503=HEAP32[$502>>2]|0;if(($503|0)==0){label=110;break}else{$R_0_i120=$503;$RP_0_i119=$502;label=108;break};case 110:if($RP_0_i119>>>0<$464>>>0){label=112;break}else{label=111;break};case 111:HEAP32[$RP_0_i119>>2]=0;$R_1_i122=$R_0_i120;label=113;break;case 112:_abort();return 0;return 0;case 113:if(($472|0)==0){label=133;break}else{label=114;break};case 114:$513=$v_3_lcssa_i+28|0;$515=28736+(HEAP32[$513>>2]<<2)|0;if(($v_3_lcssa_i|0)==(HEAP32[$515>>2]|0)){label=115;break}else{label=117;break};case 115:HEAP32[$515>>2]=$R_1_i122;if(($R_1_i122|0)==0){label=116;break}else{label=123;break};case 116:HEAP32[7109]=HEAP32[7109]&~(1<<HEAP32[$513>>2]);label=133;break;case 117:if($472>>>0<(HEAP32[7112]|0)>>>0){label=121;break}else{label=118;break};case 118:$529=$472+16|0;if((HEAP32[$529>>2]|0)==($v_3_lcssa_i|0)){label=119;break}else{label=120;break};case 119:HEAP32[$529>>2]=$R_1_i122;label=122;break;case 120:HEAP32[$472+20>>2]=$R_1_i122;label=122;break;case 121:_abort();return 0;return 0;case 122:if(($R_1_i122|0)==0){label=133;break}else{label=123;break};case 123:if($R_1_i122>>>0<(HEAP32[7112]|0)>>>0){label=132;break}else{label=124;break};case 124:HEAP32[$R_1_i122+24>>2]=$472;$545=HEAP32[$v_3_lcssa_i+16>>2]|0;if(($545|0)==0){label=128;break}else{label=125;break};case 125:if($545>>>0<(HEAP32[7112]|0)>>>0){label=127;break}else{label=126;break};case 126:HEAP32[$R_1_i122+16>>2]=$545;HEAP32[$545+24>>2]=$R_1_i122;label=128;break;case 127:_abort();return 0;return 0;case 128:$557=HEAP32[$v_3_lcssa_i+20>>2]|0;if(($557|0)==0){label=133;break}else{label=129;break};case 129:if($557>>>0<(HEAP32[7112]|0)>>>0){label=131;break}else{label=130;break};case 130:HEAP32[$R_1_i122+20>>2]=$557;HEAP32[$557+24>>2]=$R_1_i122;label=133;break;case 131:_abort();return 0;return 0;case 132:_abort();return 0;return 0;case 133:if($rsize_3_lcssa_i>>>0<16){label=134;break}else{label=135;break};case 134:$571=$rsize_3_lcssa_i+$349|0;HEAP32[$v_3_lcssa_i+4>>2]=$571|3;$575=$463+($571+4)|0;HEAP32[$575>>2]=HEAP32[$575>>2]|1;label=159;break;case 135:HEAP32[$v_3_lcssa_i+4>>2]=$349|3;HEAP32[$463+($349|4)>>2]=$rsize_3_lcssa_i|1;HEAP32[$463+($rsize_3_lcssa_i+$349)>>2]=$rsize_3_lcssa_i;$586=$rsize_3_lcssa_i>>>3;if($rsize_3_lcssa_i>>>0<256){label=136;break}else{label=141;break};case 136:$589=$586<<1;$591=28472+($589<<2)|0;$592=HEAP32[7108]|0;$593=1<<$586;if(($592&$593|0)==0){label=137;break}else{label=138;break};case 137:HEAP32[7108]=$592|$593;$F5_0_i=$591;$_pre_phi_i128=28472+($589+2<<2)|0;label=140;break;case 138:$599=28472+($589+2<<2)|0;$600=HEAP32[$599>>2]|0;if($600>>>0<(HEAP32[7112]|0)>>>0){label=139;break}else{$F5_0_i=$600;$_pre_phi_i128=$599;label=140;break};case 139:_abort();return 0;return 0;case 140:HEAP32[$_pre_phi_i128>>2]=$468;HEAP32[$F5_0_i+12>>2]=$468;HEAP32[$463+($349+8)>>2]=$F5_0_i;HEAP32[$463+($349+12)>>2]=$591;label=159;break;case 141:$612=$467;$613=$rsize_3_lcssa_i>>>8;if(($613|0)==0){$I7_0_i=0;label=144;break}else{label=142;break};case 142:if($rsize_3_lcssa_i>>>0>16777215){$I7_0_i=31;label=144;break}else{label=143;break};case 143:$620=($613+1048320|0)>>>16&8;$621=$613<<$620;$624=($621+520192|0)>>>16&4;$626=$621<<$624;$629=($626+245760|0)>>>16&2;$634=14-($624|$620|$629)+($626<<$629>>>15)|0;$I7_0_i=$rsize_3_lcssa_i>>>(($634+7|0)>>>0)&1|$634<<1;label=144;break;case 144:$641=28736+($I7_0_i<<2)|0;HEAP32[$463+($349+28)>>2]=$I7_0_i;HEAP32[$463+($349+20)>>2]=0;HEAP32[$463+($349+16)>>2]=0;$648=HEAP32[7109]|0;$649=1<<$I7_0_i;if(($648&$649|0)==0){label=145;break}else{label=146;break};case 145:HEAP32[7109]=$648|$649;HEAP32[$641>>2]=$612;HEAP32[$463+($349+24)>>2]=$641;HEAP32[$463+($349+12)>>2]=$612;HEAP32[$463+($349+8)>>2]=$612;label=159;break;case 146:if(($I7_0_i|0)==31){$668=0;label=148;break}else{label=147;break};case 147:$668=25-($I7_0_i>>>1)|0;label=148;break;case 148:$K12_0_i=$rsize_3_lcssa_i<<$668;$T_0_i=HEAP32[$641>>2]|0;label=149;break;case 149:if((HEAP32[$T_0_i+4>>2]&-8|0)==($rsize_3_lcssa_i|0)){label=154;break}else{label=150;break};case 150:$677=$T_0_i+16+($K12_0_i>>>31<<2)|0;$678=HEAP32[$677>>2]|0;if(($678|0)==0){label=151;break}else{$K12_0_i=$K12_0_i<<1;$T_0_i=$678;label=149;break};case 151:if($677>>>0<(HEAP32[7112]|0)>>>0){label=153;break}else{label=152;break};case 152:HEAP32[$677>>2]=$612;HEAP32[$463+($349+24)>>2]=$T_0_i;HEAP32[$463+($349+12)>>2]=$612;HEAP32[$463+($349+8)>>2]=$612;label=159;break;case 153:_abort();return 0;return 0;case 154:$694=$T_0_i+8|0;$695=HEAP32[$694>>2]|0;$697=HEAP32[7112]|0;if($T_0_i>>>0<$697>>>0){label=157;break}else{label=155;break};case 155:if($695>>>0<$697>>>0){label=157;break}else{label=156;break};case 156:HEAP32[$695+12>>2]=$612;HEAP32[$694>>2]=$612;HEAP32[$463+($349+8)>>2]=$695;HEAP32[$463+($349+12)>>2]=$T_0_i;HEAP32[$463+($349+24)>>2]=0;label=159;break;case 157:_abort();return 0;return 0;case 158:_abort();return 0;return 0;case 159:$711=$v_3_lcssa_i+8|0;if(($711|0)==0){$nb_0=$349;label=160;break}else{$mem_0=$711;label=341;break};case 160:$714=HEAP32[7110]|0;if($nb_0>>>0>$714>>>0){label=165;break}else{label=161;break};case 161:$717=$714-$nb_0|0;$718=HEAP32[7113]|0;if($717>>>0>15){label=162;break}else{label=163;break};case 162:$721=$718;HEAP32[7113]=$721+$nb_0;HEAP32[7110]=$717;HEAP32[$721+($nb_0+4)>>2]=$717|1;HEAP32[$721+$714>>2]=$717;HEAP32[$718+4>>2]=$nb_0|3;label=164;break;case 163:HEAP32[7110]=0;HEAP32[7113]=0;HEAP32[$718+4>>2]=$714|3;$736=$718+($714+4)|0;HEAP32[$736>>2]=HEAP32[$736>>2]|1;label=164;break;case 164:$mem_0=$718+8|0;label=341;break;case 165:$743=HEAP32[7111]|0;if($nb_0>>>0<$743>>>0){label=166;break}else{label=167;break};case 166:$746=$743-$nb_0|0;HEAP32[7111]=$746;$747=HEAP32[7114]|0;$748=$747;HEAP32[7114]=$748+$nb_0;HEAP32[$748+($nb_0+4)>>2]=$746|1;HEAP32[$747+4>>2]=$nb_0|3;$mem_0=$747+8|0;label=341;break;case 167:if((HEAP32[6956]|0)==0){label=168;break}else{label=171;break};case 168:$762=_sysconf(8)|0;if(($762-1&$762|0)==0){label=170;break}else{label=169;break};case 169:_abort();return 0;return 0;case 170:HEAP32[6958]=$762;HEAP32[6957]=$762;HEAP32[6959]=-1;HEAP32[6960]=2097152;HEAP32[6961]=0;HEAP32[7219]=0;HEAP32[6956]=(_time(0)|0)&-16^1431655768;label=171;break;case 171:$772=HEAP32[6958]|0;$773=$nb_0+47|0;$774=$772+$773|0;$775=-$772|0;$776=$774&$775;if($776>>>0>$nb_0>>>0){label=172;break}else{$mem_0=0;label=341;break};case 172:$779=HEAP32[7218]|0;if(($779|0)==0){label=174;break}else{label=173;break};case 173:$782=HEAP32[7216]|0;$783=$782+$776|0;if($783>>>0<=$782>>>0|$783>>>0>$779>>>0){$mem_0=0;label=341;break}else{label=174;break};case 174:if((HEAP32[7219]&4|0)==0){label=175;break}else{$tsize_1_i=0;label=198;break};case 175:$791=HEAP32[7114]|0;if(($791|0)==0){label=181;break}else{label=176;break};case 176:$794=$791;$sp_0_i_i=28880;label=177;break;case 177:$796=$sp_0_i_i|0;$797=HEAP32[$796>>2]|0;if($797>>>0>$794>>>0){label=179;break}else{label=178;break};case 178:$800=$sp_0_i_i+4|0;if(($797+(HEAP32[$800>>2]|0)|0)>>>0>$794>>>0){label=180;break}else{label=179;break};case 179:$806=HEAP32[$sp_0_i_i+8>>2]|0;if(($806|0)==0){label=181;break}else{$sp_0_i_i=$806;label=177;break};case 180:if(($sp_0_i_i|0)==0){label=181;break}else{label=188;break};case 181:$809=_sbrk(0)|0;if(($809|0)==-1){$tsize_0303639_i=0;label=197;break}else{label=182;break};case 182:$812=$809;$813=HEAP32[6957]|0;$814=$813-1|0;if(($814&$812|0)==0){$ssize_0_i=$776;label=184;break}else{label=183;break};case 183:$ssize_0_i=$776-$812+($814+$812&-$813)|0;label=184;break;case 184:$824=HEAP32[7216]|0;$825=$824+$ssize_0_i|0;if($ssize_0_i>>>0>$nb_0>>>0&$ssize_0_i>>>0<2147483647){label=185;break}else{$tsize_0303639_i=0;label=197;break};case 185:$829=HEAP32[7218]|0;if(($829|0)==0){label=187;break}else{label=186;break};case 186:if($825>>>0<=$824>>>0|$825>>>0>$829>>>0){$tsize_0303639_i=0;label=197;break}else{label=187;break};case 187:$835=_sbrk($ssize_0_i|0)|0;$836=($835|0)==($809|0);$tbase_0_i=$836?$809:-1;$tsize_0_i=$836?$ssize_0_i:0;$br_0_i=$835;$ssize_1_i=$ssize_0_i;label=190;break;case 188:$840=$774-(HEAP32[7111]|0)&$775;if($840>>>0<2147483647){label=189;break}else{$tsize_0303639_i=0;label=197;break};case 189:$843=_sbrk($840|0)|0;$847=($843|0)==((HEAP32[$796>>2]|0)+(HEAP32[$800>>2]|0)|0);$tbase_0_i=$847?$843:-1;$tsize_0_i=$847?$840:0;$br_0_i=$843;$ssize_1_i=$840;label=190;break;case 190:if(($tbase_0_i|0)==-1){label=191;break}else{$tsize_244_i=$tsize_0_i;$tbase_245_i=$tbase_0_i;label=201;break};case 191:if(($br_0_i|0)!=-1&$ssize_1_i>>>0<2147483647&$ssize_1_i>>>0<($nb_0+48|0)>>>0){label=192;break}else{$ssize_2_i=$ssize_1_i;label=196;break};case 192:$856=HEAP32[6958]|0;$860=$773-$ssize_1_i+$856&-$856;if($860>>>0<2147483647){label=193;break}else{$ssize_2_i=$ssize_1_i;label=196;break};case 193:if((_sbrk($860|0)|0)==-1){label=195;break}else{label=194;break};case 194:$ssize_2_i=$860+$ssize_1_i|0;label=196;break;case 195:_sbrk(-$ssize_1_i|0)|0;$tsize_0303639_i=$tsize_0_i;label=197;break;case 196:if(($br_0_i|0)==-1){$tsize_0303639_i=$tsize_0_i;label=197;break}else{$tsize_244_i=$ssize_2_i;$tbase_245_i=$br_0_i;label=201;break};case 197:HEAP32[7219]=HEAP32[7219]|4;$tsize_1_i=$tsize_0303639_i;label=198;break;case 198:if($776>>>0<2147483647){label=199;break}else{label=340;break};case 199:$876=_sbrk($776|0)|0;$877=_sbrk(0)|0;if(($877|0)!=-1&($876|0)!=-1&$876>>>0<$877>>>0){label=200;break}else{label=340;break};case 200:$881=$877-$876|0;$883=$881>>>0>($nb_0+40|0)>>>0;$_tbase_1_i=$883?$876:-1;if(($_tbase_1_i|0)==-1){label=340;break}else{$tsize_244_i=$883?$881:$tsize_1_i;$tbase_245_i=$_tbase_1_i;label=201;break};case 201:$886=(HEAP32[7216]|0)+$tsize_244_i|0;HEAP32[7216]=$886;if($886>>>0>(HEAP32[7217]|0)>>>0){label=202;break}else{label=203;break};case 202:HEAP32[7217]=$886;label=203;break;case 203:$890=HEAP32[7114]|0;if(($890|0)==0){label=204;break}else{$sp_067_i=28880;label=211;break};case 204:$893=HEAP32[7112]|0;if(($893|0)==0|$tbase_245_i>>>0<$893>>>0){label=205;break}else{label=206;break};case 205:HEAP32[7112]=$tbase_245_i;label=206;break;case 206:HEAP32[7220]=$tbase_245_i;HEAP32[7221]=$tsize_244_i;HEAP32[7223]=0;HEAP32[7117]=HEAP32[6956];HEAP32[7116]=-1;$i_02_i_i=0;label=207;break;case 207:$899=$i_02_i_i<<1;$901=28472+($899<<2)|0;HEAP32[28472+($899+3<<2)>>2]=$901;HEAP32[28472+($899+2<<2)>>2]=$901;$904=$i_02_i_i+1|0;if($904>>>0<32){$i_02_i_i=$904;label=207;break}else{label=208;break};case 208:$908=$tbase_245_i+8|0;if(($908&7|0)==0){$914=0;label=210;break}else{label=209;break};case 209:$914=-$908&7;label=210;break;case 210:$917=$tsize_244_i-40-$914|0;HEAP32[7114]=$tbase_245_i+$914;HEAP32[7111]=$917;HEAP32[$tbase_245_i+($914+4)>>2]=$917|1;HEAP32[$tbase_245_i+($tsize_244_i-36)>>2]=40;HEAP32[7115]=HEAP32[6960];label=338;break;case 211:$925=HEAP32[$sp_067_i>>2]|0;$926=$sp_067_i+4|0;$927=HEAP32[$926>>2]|0;if(($tbase_245_i|0)==($925+$927|0)){label=213;break}else{label=212;break};case 212:$932=HEAP32[$sp_067_i+8>>2]|0;if(($932|0)==0){label=218;break}else{$sp_067_i=$932;label=211;break};case 213:if((HEAP32[$sp_067_i+12>>2]&8|0)==0){label=214;break}else{label=218;break};case 214:$939=$890;if($939>>>0>=$925>>>0&$939>>>0<$tbase_245_i>>>0){label=215;break}else{label=218;break};case 215:HEAP32[$926>>2]=$927+$tsize_244_i;$944=HEAP32[7114]|0;$946=(HEAP32[7111]|0)+$tsize_244_i|0;$947=$944;$949=$944+8|0;if(($949&7|0)==0){$955=0;label=217;break}else{label=216;break};case 216:$955=-$949&7;label=217;break;case 217:$958=$946-$955|0;HEAP32[7114]=$947+$955;HEAP32[7111]=$958;HEAP32[$947+($955+4)>>2]=$958|1;HEAP32[$947+($946+4)>>2]=40;HEAP32[7115]=HEAP32[6960];label=338;break;case 218:if($tbase_245_i>>>0<(HEAP32[7112]|0)>>>0){label=219;break}else{label=220;break};case 219:HEAP32[7112]=$tbase_245_i;label=220;break;case 220:$sp_160_i=28880;label=221;break;case 221:$970=$sp_160_i|0;if((HEAP32[$970>>2]|0)==($tbase_245_i+$tsize_244_i|0)){label=223;break}else{label=222;break};case 222:$975=HEAP32[$sp_160_i+8>>2]|0;if(($975|0)==0){label=304;break}else{$sp_160_i=$975;label=221;break};case 223:if((HEAP32[$sp_160_i+12>>2]&8|0)==0){label=224;break}else{label=304;break};case 224:HEAP32[$970>>2]=$tbase_245_i;$982=$sp_160_i+4|0;HEAP32[$982>>2]=(HEAP32[$982>>2]|0)+$tsize_244_i;$986=$tbase_245_i+8|0;if(($986&7|0)==0){$993=0;label=226;break}else{label=225;break};case 225:$993=-$986&7;label=226;break;case 226:$996=$tbase_245_i+($tsize_244_i+8)|0;if(($996&7|0)==0){$1003=0;label=228;break}else{label=227;break};case 227:$1003=-$996&7;label=228;break;case 228:$1004=$tbase_245_i+($1003+$tsize_244_i)|0;$1005=$1004;$_sum_i21_i=$993+$nb_0|0;$1009=$tbase_245_i+$_sum_i21_i|0;$1010=$1009;$1011=$1004-($tbase_245_i+$993)-$nb_0|0;HEAP32[$tbase_245_i+($993+4)>>2]=$nb_0|3;if(($1005|0)==(HEAP32[7114]|0)){label=229;break}else{label=230;break};case 229:$1019=(HEAP32[7111]|0)+$1011|0;HEAP32[7111]=$1019;HEAP32[7114]=$1010;HEAP32[$tbase_245_i+($_sum_i21_i+4)>>2]=$1019|1;label=303;break;case 230:if(($1005|0)==(HEAP32[7113]|0)){label=231;break}else{label=232;break};case 231:$1028=(HEAP32[7110]|0)+$1011|0;HEAP32[7110]=$1028;HEAP32[7113]=$1010;HEAP32[$tbase_245_i+($_sum_i21_i+4)>>2]=$1028|1;HEAP32[$tbase_245_i+($1028+$_sum_i21_i)>>2]=$1028;label=303;break;case 232:$_sum2_i23_i=$tsize_244_i+4|0;$1037=HEAP32[$tbase_245_i+($_sum2_i23_i+$1003)>>2]|0;if(($1037&3|0)==1){label=233;break}else{$oldfirst_0_i_i=$1005;$qsize_0_i_i=$1011;label=280;break};case 233:$1041=$1037&-8;$1042=$1037>>>3;if($1037>>>0<256){label=234;break}else{label=246;break};case 234:$1047=HEAP32[$tbase_245_i+(($1003|8)+$tsize_244_i)>>2]|0;$1050=HEAP32[$tbase_245_i+($tsize_244_i+12+$1003)>>2]|0;$1053=28472+($1042<<1<<2)|0;if(($1047|0)==($1053|0)){label=237;break}else{label=235;break};case 235:if($1047>>>0<(HEAP32[7112]|0)>>>0){label=245;break}else{label=236;break};case 236:if((HEAP32[$1047+12>>2]|0)==($1005|0)){label=237;break}else{label=245;break};case 237:if(($1050|0)==($1047|0)){label=238;break}else{label=239;break};case 238:HEAP32[7108]=HEAP32[7108]&~(1<<$1042);label=279;break;case 239:if(($1050|0)==($1053|0)){label=240;break}else{label=241;break};case 240:$_pre_phi57_i_i=$1050+8|0;label=243;break;case 241:if($1050>>>0<(HEAP32[7112]|0)>>>0){label=244;break}else{label=242;break};case 242:$1076=$1050+8|0;if((HEAP32[$1076>>2]|0)==($1005|0)){$_pre_phi57_i_i=$1076;label=243;break}else{label=244;break};case 243:HEAP32[$1047+12>>2]=$1050;HEAP32[$_pre_phi57_i_i>>2]=$1047;label=279;break;case 244:_abort();return 0;return 0;case 245:_abort();return 0;return 0;case 246:$1081=$1004;$1084=HEAP32[$tbase_245_i+(($1003|24)+$tsize_244_i)>>2]|0;$1087=HEAP32[$tbase_245_i+($tsize_244_i+12+$1003)>>2]|0;if(($1087|0)==($1081|0)){label=252;break}else{label=247;break};case 247:$1092=HEAP32[$tbase_245_i+(($1003|8)+$tsize_244_i)>>2]|0;if($1092>>>0<(HEAP32[7112]|0)>>>0){label=251;break}else{label=248;break};case 248:$1097=$1092+12|0;if((HEAP32[$1097>>2]|0)==($1081|0)){label=249;break}else{label=251;break};case 249:$1101=$1087+8|0;if((HEAP32[$1101>>2]|0)==($1081|0)){label=250;break}else{label=251;break};case 250:HEAP32[$1097>>2]=$1087;HEAP32[$1101>>2]=$1092;$R_1_i_i=$1087;label=259;break;case 251:_abort();return 0;return 0;case 252:$_sum67_i_i=$1003|16;$1107=$tbase_245_i+($_sum2_i23_i+$_sum67_i_i)|0;$1108=HEAP32[$1107>>2]|0;if(($1108|0)==0){label=253;break}else{$R_0_i_i=$1108;$RP_0_i_i=$1107;label=254;break};case 253:$1112=$tbase_245_i+($_sum67_i_i+$tsize_244_i)|0;$1113=HEAP32[$1112>>2]|0;if(($1113|0)==0){$R_1_i_i=0;label=259;break}else{$R_0_i_i=$1113;$RP_0_i_i=$1112;label=254;break};case 254:$1115=$R_0_i_i+20|0;$1116=HEAP32[$1115>>2]|0;if(($1116|0)==0){label=255;break}else{$R_0_i_i=$1116;$RP_0_i_i=$1115;label=254;break};case 255:$1119=$R_0_i_i+16|0;$1120=HEAP32[$1119>>2]|0;if(($1120|0)==0){label=256;break}else{$R_0_i_i=$1120;$RP_0_i_i=$1119;label=254;break};case 256:if($RP_0_i_i>>>0<(HEAP32[7112]|0)>>>0){label=258;break}else{label=257;break};case 257:HEAP32[$RP_0_i_i>>2]=0;$R_1_i_i=$R_0_i_i;label=259;break;case 258:_abort();return 0;return 0;case 259:if(($1084|0)==0){label=279;break}else{label=260;break};case 260:$1132=$tbase_245_i+($tsize_244_i+28+$1003)|0;$1134=28736+(HEAP32[$1132>>2]<<2)|0;if(($1081|0)==(HEAP32[$1134>>2]|0)){label=261;break}else{label=263;break};case 261:HEAP32[$1134>>2]=$R_1_i_i;if(($R_1_i_i|0)==0){label=262;break}else{label=269;break};case 262:HEAP32[7109]=HEAP32[7109]&~(1<<HEAP32[$1132>>2]);label=279;break;case 263:if($1084>>>0<(HEAP32[7112]|0)>>>0){label=267;break}else{label=264;break};case 264:$1148=$1084+16|0;if((HEAP32[$1148>>2]|0)==($1081|0)){label=265;break}else{label=266;break};case 265:HEAP32[$1148>>2]=$R_1_i_i;label=268;break;case 266:HEAP32[$1084+20>>2]=$R_1_i_i;label=268;break;case 267:_abort();return 0;return 0;case 268:if(($R_1_i_i|0)==0){label=279;break}else{label=269;break};case 269:if($R_1_i_i>>>0<(HEAP32[7112]|0)>>>0){label=278;break}else{label=270;break};case 270:HEAP32[$R_1_i_i+24>>2]=$1084;$_sum3233_i_i=$1003|16;$1165=HEAP32[$tbase_245_i+($_sum3233_i_i+$tsize_244_i)>>2]|0;if(($1165|0)==0){label=274;break}else{label=271;break};case 271:if($1165>>>0<(HEAP32[7112]|0)>>>0){label=273;break}else{label=272;break};case 272:HEAP32[$R_1_i_i+16>>2]=$1165;HEAP32[$1165+24>>2]=$R_1_i_i;label=274;break;case 273:_abort();return 0;return 0;case 274:$1178=HEAP32[$tbase_245_i+($_sum2_i23_i+$_sum3233_i_i)>>2]|0;if(($1178|0)==0){label=279;break}else{label=275;break};case 275:if($1178>>>0<(HEAP32[7112]|0)>>>0){label=277;break}else{label=276;break};case 276:HEAP32[$R_1_i_i+20>>2]=$1178;HEAP32[$1178+24>>2]=$R_1_i_i;label=279;break;case 277:_abort();return 0;return 0;case 278:_abort();return 0;return 0;case 279:$oldfirst_0_i_i=$tbase_245_i+(($1041|$1003)+$tsize_244_i)|0;$qsize_0_i_i=$1041+$1011|0;label=280;break;case 280:$1194=$oldfirst_0_i_i+4|0;HEAP32[$1194>>2]=HEAP32[$1194>>2]&-2;HEAP32[$tbase_245_i+($_sum_i21_i+4)>>2]=$qsize_0_i_i|1;HEAP32[$tbase_245_i+($qsize_0_i_i+$_sum_i21_i)>>2]=$qsize_0_i_i;$1202=$qsize_0_i_i>>>3;if($qsize_0_i_i>>>0<256){label=281;break}else{label=286;break};case 281:$1205=$1202<<1;$1207=28472+($1205<<2)|0;$1208=HEAP32[7108]|0;$1209=1<<$1202;if(($1208&$1209|0)==0){label=282;break}else{label=283;break};case 282:HEAP32[7108]=$1208|$1209;$F4_0_i_i=$1207;$_pre_phi_i25_i=28472+($1205+2<<2)|0;label=285;break;case 283:$1215=28472+($1205+2<<2)|0;$1216=HEAP32[$1215>>2]|0;if($1216>>>0<(HEAP32[7112]|0)>>>0){label=284;break}else{$F4_0_i_i=$1216;$_pre_phi_i25_i=$1215;label=285;break};case 284:_abort();return 0;return 0;case 285:HEAP32[$_pre_phi_i25_i>>2]=$1010;HEAP32[$F4_0_i_i+12>>2]=$1010;HEAP32[$tbase_245_i+($_sum_i21_i+8)>>2]=$F4_0_i_i;HEAP32[$tbase_245_i+($_sum_i21_i+12)>>2]=$1207;label=303;break;case 286:$1228=$1009;$1229=$qsize_0_i_i>>>8;if(($1229|0)==0){$I7_0_i_i=0;label=289;break}else{label=287;break};case 287:if($qsize_0_i_i>>>0>16777215){$I7_0_i_i=31;label=289;break}else{label=288;break};case 288:$1236=($1229+1048320|0)>>>16&8;$1237=$1229<<$1236;$1240=($1237+520192|0)>>>16&4;$1242=$1237<<$1240;$1245=($1242+245760|0)>>>16&2;$1250=14-($1240|$1236|$1245)+($1242<<$1245>>>15)|0;$I7_0_i_i=$qsize_0_i_i>>>(($1250+7|0)>>>0)&1|$1250<<1;label=289;break;case 289:$1257=28736+($I7_0_i_i<<2)|0;HEAP32[$tbase_245_i+($_sum_i21_i+28)>>2]=$I7_0_i_i;HEAP32[$tbase_245_i+($_sum_i21_i+20)>>2]=0;HEAP32[$tbase_245_i+($_sum_i21_i+16)>>2]=0;$1264=HEAP32[7109]|0;$1265=1<<$I7_0_i_i;if(($1264&$1265|0)==0){label=290;break}else{label=291;break};case 290:HEAP32[7109]=$1264|$1265;HEAP32[$1257>>2]=$1228;HEAP32[$tbase_245_i+($_sum_i21_i+24)>>2]=$1257;HEAP32[$tbase_245_i+($_sum_i21_i+12)>>2]=$1228;HEAP32[$tbase_245_i+($_sum_i21_i+8)>>2]=$1228;label=303;break;case 291:if(($I7_0_i_i|0)==31){$1284=0;label=293;break}else{label=292;break};case 292:$1284=25-($I7_0_i_i>>>1)|0;label=293;break;case 293:$K8_0_i_i=$qsize_0_i_i<<$1284;$T_0_i27_i=HEAP32[$1257>>2]|0;label=294;break;case 294:if((HEAP32[$T_0_i27_i+4>>2]&-8|0)==($qsize_0_i_i|0)){label=299;break}else{label=295;break};case 295:$1293=$T_0_i27_i+16+($K8_0_i_i>>>31<<2)|0;$1294=HEAP32[$1293>>2]|0;if(($1294|0)==0){label=296;break}else{$K8_0_i_i=$K8_0_i_i<<1;$T_0_i27_i=$1294;label=294;break};case 296:if($1293>>>0<(HEAP32[7112]|0)>>>0){label=298;break}else{label=297;break};case 297:HEAP32[$1293>>2]=$1228;HEAP32[$tbase_245_i+($_sum_i21_i+24)>>2]=$T_0_i27_i;HEAP32[$tbase_245_i+($_sum_i21_i+12)>>2]=$1228;HEAP32[$tbase_245_i+($_sum_i21_i+8)>>2]=$1228;label=303;break;case 298:_abort();return 0;return 0;case 299:$1310=$T_0_i27_i+8|0;$1311=HEAP32[$1310>>2]|0;$1313=HEAP32[7112]|0;if($T_0_i27_i>>>0<$1313>>>0){label=302;break}else{label=300;break};case 300:if($1311>>>0<$1313>>>0){label=302;break}else{label=301;break};case 301:HEAP32[$1311+12>>2]=$1228;HEAP32[$1310>>2]=$1228;HEAP32[$tbase_245_i+($_sum_i21_i+8)>>2]=$1311;HEAP32[$tbase_245_i+($_sum_i21_i+12)>>2]=$T_0_i27_i;HEAP32[$tbase_245_i+($_sum_i21_i+24)>>2]=0;label=303;break;case 302:_abort();return 0;return 0;case 303:$mem_0=$tbase_245_i+($993|8)|0;label=341;break;case 304:$1327=$890;$sp_0_i_i_i=28880;label=305;break;case 305:$1330=HEAP32[$sp_0_i_i_i>>2]|0;if($1330>>>0>$1327>>>0){label=307;break}else{label=306;break};case 306:$1334=HEAP32[$sp_0_i_i_i+4>>2]|0;$1335=$1330+$1334|0;if($1335>>>0>$1327>>>0){label=308;break}else{label=307;break};case 307:$sp_0_i_i_i=HEAP32[$sp_0_i_i_i+8>>2]|0;label=305;break;case 308:$1341=$1330+($1334-39)|0;if(($1341&7|0)==0){$1348=0;label=310;break}else{label=309;break};case 309:$1348=-$1341&7;label=310;break;case 310:$1349=$1330+($1334-47+$1348)|0;$1353=$1349>>>0<($890+16|0)>>>0?$1327:$1349;$1354=$1353+8|0;$1358=$tbase_245_i+8|0;if(($1358&7|0)==0){$1364=0;label=312;break}else{label=311;break};case 311:$1364=-$1358&7;label=312;break;case 312:$1367=$tsize_244_i-40-$1364|0;HEAP32[7114]=$tbase_245_i+$1364;HEAP32[7111]=$1367;HEAP32[$tbase_245_i+($1364+4)>>2]=$1367|1;HEAP32[$tbase_245_i+($tsize_244_i-36)>>2]=40;HEAP32[7115]=HEAP32[6960];HEAP32[$1353+4>>2]=27;HEAP32[$1354>>2]=HEAP32[7220];HEAP32[$1354+4>>2]=HEAP32[28884>>2];HEAP32[$1354+8>>2]=HEAP32[28888>>2];HEAP32[$1354+12>>2]=HEAP32[28892>>2];HEAP32[7220]=$tbase_245_i;HEAP32[7221]=$tsize_244_i;HEAP32[7223]=0;HEAP32[7222]=$1354;$1377=$1353+28|0;HEAP32[$1377>>2]=7;if(($1353+32|0)>>>0<$1335>>>0){$1380=$1377;label=313;break}else{label=314;break};case 313:$1381=$1380+4|0;HEAP32[$1381>>2]=7;if(($1380+8|0)>>>0<$1335>>>0){$1380=$1381;label=313;break}else{label=314;break};case 314:if(($1353|0)==($1327|0)){label=338;break}else{label=315;break};case 315:$1389=$1353-$890|0;$1392=$1327+($1389+4)|0;HEAP32[$1392>>2]=HEAP32[$1392>>2]&-2;HEAP32[$890+4>>2]=$1389|1;HEAP32[$1327+$1389>>2]=$1389;$1398=$1389>>>3;if($1389>>>0<256){label=316;break}else{label=321;break};case 316:$1401=$1398<<1;$1403=28472+($1401<<2)|0;$1404=HEAP32[7108]|0;$1405=1<<$1398;if(($1404&$1405|0)==0){label=317;break}else{label=318;break};case 317:HEAP32[7108]=$1404|$1405;$F_0_i_i=$1403;$_pre_phi_i_i=28472+($1401+2<<2)|0;label=320;break;case 318:$1411=28472+($1401+2<<2)|0;$1412=HEAP32[$1411>>2]|0;if($1412>>>0<(HEAP32[7112]|0)>>>0){label=319;break}else{$F_0_i_i=$1412;$_pre_phi_i_i=$1411;label=320;break};case 319:_abort();return 0;return 0;case 320:HEAP32[$_pre_phi_i_i>>2]=$890;HEAP32[$F_0_i_i+12>>2]=$890;HEAP32[$890+8>>2]=$F_0_i_i;HEAP32[$890+12>>2]=$1403;label=338;break;case 321:$1422=$890;$1423=$1389>>>8;if(($1423|0)==0){$I1_0_i_i=0;label=324;break}else{label=322;break};case 322:if($1389>>>0>16777215){$I1_0_i_i=31;label=324;break}else{label=323;break};case 323:$1430=($1423+1048320|0)>>>16&8;$1431=$1423<<$1430;$1434=($1431+520192|0)>>>16&4;$1436=$1431<<$1434;$1439=($1436+245760|0)>>>16&2;$1444=14-($1434|$1430|$1439)+($1436<<$1439>>>15)|0;$I1_0_i_i=$1389>>>(($1444+7|0)>>>0)&1|$1444<<1;label=324;break;case 324:$1451=28736+($I1_0_i_i<<2)|0;HEAP32[$890+28>>2]=$I1_0_i_i;HEAP32[$890+20>>2]=0;HEAP32[$890+16>>2]=0;$1455=HEAP32[7109]|0;$1456=1<<$I1_0_i_i;if(($1455&$1456|0)==0){label=325;break}else{label=326;break};case 325:HEAP32[7109]=$1455|$1456;HEAP32[$1451>>2]=$1422;HEAP32[$890+24>>2]=$1451;HEAP32[$890+12>>2]=$890;HEAP32[$890+8>>2]=$890;label=338;break;case 326:if(($I1_0_i_i|0)==31){$1471=0;label=328;break}else{label=327;break};case 327:$1471=25-($I1_0_i_i>>>1)|0;label=328;break;case 328:$K2_0_i_i=$1389<<$1471;$T_0_i_i=HEAP32[$1451>>2]|0;label=329;break;case 329:if((HEAP32[$T_0_i_i+4>>2]&-8|0)==($1389|0)){label=334;break}else{label=330;break};case 330:$1480=$T_0_i_i+16+($K2_0_i_i>>>31<<2)|0;$1481=HEAP32[$1480>>2]|0;if(($1481|0)==0){label=331;break}else{$K2_0_i_i=$K2_0_i_i<<1;$T_0_i_i=$1481;label=329;break};case 331:if($1480>>>0<(HEAP32[7112]|0)>>>0){label=333;break}else{label=332;break};case 332:HEAP32[$1480>>2]=$1422;HEAP32[$890+24>>2]=$T_0_i_i;HEAP32[$890+12>>2]=$890;HEAP32[$890+8>>2]=$890;label=338;break;case 333:_abort();return 0;return 0;case 334:$1494=$T_0_i_i+8|0;$1495=HEAP32[$1494>>2]|0;$1497=HEAP32[7112]|0;if($T_0_i_i>>>0<$1497>>>0){label=337;break}else{label=335;break};case 335:if($1495>>>0<$1497>>>0){label=337;break}else{label=336;break};case 336:HEAP32[$1495+12>>2]=$1422;HEAP32[$1494>>2]=$1422;HEAP32[$890+8>>2]=$1495;HEAP32[$890+12>>2]=$T_0_i_i;HEAP32[$890+24>>2]=0;label=338;break;case 337:_abort();return 0;return 0;case 338:$1507=HEAP32[7111]|0;if($1507>>>0>$nb_0>>>0){label=339;break}else{label=340;break};case 339:$1510=$1507-$nb_0|0;HEAP32[7111]=$1510;$1511=HEAP32[7114]|0;$1512=$1511;HEAP32[7114]=$1512+$nb_0;HEAP32[$1512+($nb_0+4)>>2]=$1510|1;HEAP32[$1511+4>>2]=$nb_0|3;$mem_0=$1511+8|0;label=341;break;case 340:HEAP32[(___errno_location()|0)>>2]=12;$mem_0=0;label=341;break;case 341:return $mem_0|0}return 0}function _free($mem){$mem=$mem|0;var $3=0,$5=0,$10=0,$11=0,$14=0,$15=0,$16=0,$21=0,$_sum233=0,$24=0,$25=0,$26=0,$32=0,$37=0,$40=0,$43=0,$64=0,$_pre_phi307=0,$69=0,$72=0,$75=0,$80=0,$84=0,$88=0,$94=0,$95=0,$99=0,$100=0,$RP_0=0,$R_0=0,$102=0,$103=0,$106=0,$107=0,$R_1=0,$118=0,$120=0,$134=0,$151=0,$164=0,$177=0,$psize_0=0,$p_0=0,$189=0,$193=0,$194=0,$204=0,$220=0,$227=0,$228=0,$233=0,$236=0,$239=0,$262=0,$_pre_phi305=0,$267=0,$270=0,$273=0,$278=0,$283=0,$287=0,$293=0,$294=0,$298=0,$299=0,$RP9_0=0,$R7_0=0,$301=0,$302=0,$305=0,$306=0,$R7_1=0,$318=0,$320=0,$334=0,$351=0,$364=0,$psize_1=0,$390=0,$393=0,$395=0,$396=0,$397=0,$403=0,$404=0,$_pre_phi=0,$F16_0=0,$414=0,$415=0,$422=0,$423=0,$426=0,$428=0,$431=0,$436=0,$I18_0=0,$443=0,$447=0,$448=0,$463=0,$T_0=0,$K19_0=0,$472=0,$473=0,$486=0,$487=0,$489=0,$501=0,$sp_0_in_i=0,$sp_0_i=0,label=0;label=1;while(1)switch(label|0){case 1:if(($mem|0)==0){label=142;break}else{label=2;break};case 2:$3=$mem-8|0;$5=HEAP32[7112]|0;if($3>>>0<$5>>>0){label=141;break}else{label=3;break};case 3:$10=HEAP32[$mem-4>>2]|0;$11=$10&3;if(($11|0)==1){label=141;break}else{label=4;break};case 4:$14=$10&-8;$15=$mem+($14-8)|0;$16=$15;if(($10&1|0)==0){label=5;break}else{$p_0=$3;$psize_0=$14;label=56;break};case 5:$21=HEAP32[$3>>2]|0;if(($11|0)==0){label=142;break}else{label=6;break};case 6:$_sum233=-8-$21|0;$24=$mem+$_sum233|0;$25=$24;$26=$21+$14|0;if($24>>>0<$5>>>0){label=141;break}else{label=7;break};case 7:if(($25|0)==(HEAP32[7113]|0)){label=54;break}else{label=8;break};case 8:$32=$21>>>3;if($21>>>0<256){label=9;break}else{label=21;break};case 9:$37=HEAP32[$mem+($_sum233+8)>>2]|0;$40=HEAP32[$mem+($_sum233+12)>>2]|0;$43=28472+($32<<1<<2)|0;if(($37|0)==($43|0)){label=12;break}else{label=10;break};case 10:if($37>>>0<$5>>>0){label=20;break}else{label=11;break};case 11:if((HEAP32[$37+12>>2]|0)==($25|0)){label=12;break}else{label=20;break};case 12:if(($40|0)==($37|0)){label=13;break}else{label=14;break};case 13:HEAP32[7108]=HEAP32[7108]&~(1<<$32);$p_0=$25;$psize_0=$26;label=56;break;case 14:if(($40|0)==($43|0)){label=15;break}else{label=16;break};case 15:$_pre_phi307=$40+8|0;label=18;break;case 16:if($40>>>0<$5>>>0){label=19;break}else{label=17;break};case 17:$64=$40+8|0;if((HEAP32[$64>>2]|0)==($25|0)){$_pre_phi307=$64;label=18;break}else{label=19;break};case 18:HEAP32[$37+12>>2]=$40;HEAP32[$_pre_phi307>>2]=$37;$p_0=$25;$psize_0=$26;label=56;break;case 19:_abort();case 20:_abort();case 21:$69=$24;$72=HEAP32[$mem+($_sum233+24)>>2]|0;$75=HEAP32[$mem+($_sum233+12)>>2]|0;if(($75|0)==($69|0)){label=27;break}else{label=22;break};case 22:$80=HEAP32[$mem+($_sum233+8)>>2]|0;if($80>>>0<$5>>>0){label=26;break}else{label=23;break};case 23:$84=$80+12|0;if((HEAP32[$84>>2]|0)==($69|0)){label=24;break}else{label=26;break};case 24:$88=$75+8|0;if((HEAP32[$88>>2]|0)==($69|0)){label=25;break}else{label=26;break};case 25:HEAP32[$84>>2]=$75;HEAP32[$88>>2]=$80;$R_1=$75;label=34;break;case 26:_abort();case 27:$94=$mem+($_sum233+20)|0;$95=HEAP32[$94>>2]|0;if(($95|0)==0){label=28;break}else{$R_0=$95;$RP_0=$94;label=29;break};case 28:$99=$mem+($_sum233+16)|0;$100=HEAP32[$99>>2]|0;if(($100|0)==0){$R_1=0;label=34;break}else{$R_0=$100;$RP_0=$99;label=29;break};case 29:$102=$R_0+20|0;$103=HEAP32[$102>>2]|0;if(($103|0)==0){label=30;break}else{$R_0=$103;$RP_0=$102;label=29;break};case 30:$106=$R_0+16|0;$107=HEAP32[$106>>2]|0;if(($107|0)==0){label=31;break}else{$R_0=$107;$RP_0=$106;label=29;break};case 31:if($RP_0>>>0<$5>>>0){label=33;break}else{label=32;break};case 32:HEAP32[$RP_0>>2]=0;$R_1=$R_0;label=34;break;case 33:_abort();case 34:if(($72|0)==0){$p_0=$25;$psize_0=$26;label=56;break}else{label=35;break};case 35:$118=$mem+($_sum233+28)|0;$120=28736+(HEAP32[$118>>2]<<2)|0;if(($69|0)==(HEAP32[$120>>2]|0)){label=36;break}else{label=38;break};case 36:HEAP32[$120>>2]=$R_1;if(($R_1|0)==0){label=37;break}else{label=44;break};case 37:HEAP32[7109]=HEAP32[7109]&~(1<<HEAP32[$118>>2]);$p_0=$25;$psize_0=$26;label=56;break;case 38:if($72>>>0<(HEAP32[7112]|0)>>>0){label=42;break}else{label=39;break};case 39:$134=$72+16|0;if((HEAP32[$134>>2]|0)==($69|0)){label=40;break}else{label=41;break};case 40:HEAP32[$134>>2]=$R_1;label=43;break;case 41:HEAP32[$72+20>>2]=$R_1;label=43;break;case 42:_abort();case 43:if(($R_1|0)==0){$p_0=$25;$psize_0=$26;label=56;break}else{label=44;break};case 44:if($R_1>>>0<(HEAP32[7112]|0)>>>0){label=53;break}else{label=45;break};case 45:HEAP32[$R_1+24>>2]=$72;$151=HEAP32[$mem+($_sum233+16)>>2]|0;if(($151|0)==0){label=49;break}else{label=46;break};case 46:if($151>>>0<(HEAP32[7112]|0)>>>0){label=48;break}else{label=47;break};case 47:HEAP32[$R_1+16>>2]=$151;HEAP32[$151+24>>2]=$R_1;label=49;break;case 48:_abort();case 49:$164=HEAP32[$mem+($_sum233+20)>>2]|0;if(($164|0)==0){$p_0=$25;$psize_0=$26;label=56;break}else{label=50;break};case 50:if($164>>>0<(HEAP32[7112]|0)>>>0){label=52;break}else{label=51;break};case 51:HEAP32[$R_1+20>>2]=$164;HEAP32[$164+24>>2]=$R_1;$p_0=$25;$psize_0=$26;label=56;break;case 52:_abort();case 53:_abort();case 54:$177=$mem+($14-4)|0;if((HEAP32[$177>>2]&3|0)==3){label=55;break}else{$p_0=$25;$psize_0=$26;label=56;break};case 55:HEAP32[7110]=$26;HEAP32[$177>>2]=HEAP32[$177>>2]&-2;HEAP32[$mem+($_sum233+4)>>2]=$26|1;HEAP32[$15>>2]=$26;label=142;break;case 56:$189=$p_0;if($189>>>0<$15>>>0){label=57;break}else{label=141;break};case 57:$193=$mem+($14-4)|0;$194=HEAP32[$193>>2]|0;if(($194&1|0)==0){label=141;break}else{label=58;break};case 58:if(($194&2|0)==0){label=59;break}else{label=114;break};case 59:if(($16|0)==(HEAP32[7114]|0)){label=60;break}else{label=64;break};case 60:$204=(HEAP32[7111]|0)+$psize_0|0;HEAP32[7111]=$204;HEAP32[7114]=$p_0;HEAP32[$p_0+4>>2]=$204|1;if(($p_0|0)==(HEAP32[7113]|0)){label=61;break}else{label=62;break};case 61:HEAP32[7113]=0;HEAP32[7110]=0;label=62;break;case 62:if($204>>>0>(HEAP32[7115]|0)>>>0){label=63;break}else{label=142;break};case 63:_sys_trim(0)|0;label=142;break;case 64:if(($16|0)==(HEAP32[7113]|0)){label=65;break}else{label=66;break};case 65:$220=(HEAP32[7110]|0)+$psize_0|0;HEAP32[7110]=$220;HEAP32[7113]=$p_0;HEAP32[$p_0+4>>2]=$220|1;HEAP32[$189+$220>>2]=$220;label=142;break;case 66:$227=($194&-8)+$psize_0|0;$228=$194>>>3;if($194>>>0<256){label=67;break}else{label=79;break};case 67:$233=HEAP32[$mem+$14>>2]|0;$236=HEAP32[$mem+($14|4)>>2]|0;$239=28472+($228<<1<<2)|0;if(($233|0)==($239|0)){label=70;break}else{label=68;break};case 68:if($233>>>0<(HEAP32[7112]|0)>>>0){label=78;break}else{label=69;break};case 69:if((HEAP32[$233+12>>2]|0)==($16|0)){label=70;break}else{label=78;break};case 70:if(($236|0)==($233|0)){label=71;break}else{label=72;break};case 71:HEAP32[7108]=HEAP32[7108]&~(1<<$228);label=112;break;case 72:if(($236|0)==($239|0)){label=73;break}else{label=74;break};case 73:$_pre_phi305=$236+8|0;label=76;break;case 74:if($236>>>0<(HEAP32[7112]|0)>>>0){label=77;break}else{label=75;break};case 75:$262=$236+8|0;if((HEAP32[$262>>2]|0)==($16|0)){$_pre_phi305=$262;label=76;break}else{label=77;break};case 76:HEAP32[$233+12>>2]=$236;HEAP32[$_pre_phi305>>2]=$233;label=112;break;case 77:_abort();case 78:_abort();case 79:$267=$15;$270=HEAP32[$mem+($14+16)>>2]|0;$273=HEAP32[$mem+($14|4)>>2]|0;if(($273|0)==($267|0)){label=85;break}else{label=80;break};case 80:$278=HEAP32[$mem+$14>>2]|0;if($278>>>0<(HEAP32[7112]|0)>>>0){label=84;break}else{label=81;break};case 81:$283=$278+12|0;if((HEAP32[$283>>2]|0)==($267|0)){label=82;break}else{label=84;break};case 82:$287=$273+8|0;if((HEAP32[$287>>2]|0)==($267|0)){label=83;break}else{label=84;break};case 83:HEAP32[$283>>2]=$273;HEAP32[$287>>2]=$278;$R7_1=$273;label=92;break;case 84:_abort();case 85:$293=$mem+($14+12)|0;$294=HEAP32[$293>>2]|0;if(($294|0)==0){label=86;break}else{$R7_0=$294;$RP9_0=$293;label=87;break};case 86:$298=$mem+($14+8)|0;$299=HEAP32[$298>>2]|0;if(($299|0)==0){$R7_1=0;label=92;break}else{$R7_0=$299;$RP9_0=$298;label=87;break};case 87:$301=$R7_0+20|0;$302=HEAP32[$301>>2]|0;if(($302|0)==0){label=88;break}else{$R7_0=$302;$RP9_0=$301;label=87;break};case 88:$305=$R7_0+16|0;$306=HEAP32[$305>>2]|0;if(($306|0)==0){label=89;break}else{$R7_0=$306;$RP9_0=$305;label=87;break};case 89:if($RP9_0>>>0<(HEAP32[7112]|0)>>>0){label=91;break}else{label=90;break};case 90:HEAP32[$RP9_0>>2]=0;$R7_1=$R7_0;label=92;break;case 91:_abort();case 92:if(($270|0)==0){label=112;break}else{label=93;break};case 93:$318=$mem+($14+20)|0;$320=28736+(HEAP32[$318>>2]<<2)|0;if(($267|0)==(HEAP32[$320>>2]|0)){label=94;break}else{label=96;break};case 94:HEAP32[$320>>2]=$R7_1;if(($R7_1|0)==0){label=95;break}else{label=102;break};case 95:HEAP32[7109]=HEAP32[7109]&~(1<<HEAP32[$318>>2]);label=112;break;case 96:if($270>>>0<(HEAP32[7112]|0)>>>0){label=100;break}else{label=97;break};case 97:$334=$270+16|0;if((HEAP32[$334>>2]|0)==($267|0)){label=98;break}else{label=99;break};case 98:HEAP32[$334>>2]=$R7_1;label=101;break;case 99:HEAP32[$270+20>>2]=$R7_1;label=101;break;case 100:_abort();case 101:if(($R7_1|0)==0){label=112;break}else{label=102;break};case 102:if($R7_1>>>0<(HEAP32[7112]|0)>>>0){label=111;break}else{label=103;break};case 103:HEAP32[$R7_1+24>>2]=$270;$351=HEAP32[$mem+($14+8)>>2]|0;if(($351|0)==0){label=107;break}else{label=104;break};case 104:if($351>>>0<(HEAP32[7112]|0)>>>0){label=106;break}else{label=105;break};case 105:HEAP32[$R7_1+16>>2]=$351;HEAP32[$351+24>>2]=$R7_1;label=107;break;case 106:_abort();case 107:$364=HEAP32[$mem+($14+12)>>2]|0;if(($364|0)==0){label=112;break}else{label=108;break};case 108:if($364>>>0<(HEAP32[7112]|0)>>>0){label=110;break}else{label=109;break};case 109:HEAP32[$R7_1+20>>2]=$364;HEAP32[$364+24>>2]=$R7_1;label=112;break;case 110:_abort();case 111:_abort();case 112:HEAP32[$p_0+4>>2]=$227|1;HEAP32[$189+$227>>2]=$227;if(($p_0|0)==(HEAP32[7113]|0)){label=113;break}else{$psize_1=$227;label=115;break};case 113:HEAP32[7110]=$227;label=142;break;case 114:HEAP32[$193>>2]=$194&-2;HEAP32[$p_0+4>>2]=$psize_0|1;HEAP32[$189+$psize_0>>2]=$psize_0;$psize_1=$psize_0;label=115;break;case 115:$390=$psize_1>>>3;if($psize_1>>>0<256){label=116;break}else{label=121;break};case 116:$393=$390<<1;$395=28472+($393<<2)|0;$396=HEAP32[7108]|0;$397=1<<$390;if(($396&$397|0)==0){label=117;break}else{label=118;break};case 117:HEAP32[7108]=$396|$397;$F16_0=$395;$_pre_phi=28472+($393+2<<2)|0;label=120;break;case 118:$403=28472+($393+2<<2)|0;$404=HEAP32[$403>>2]|0;if($404>>>0<(HEAP32[7112]|0)>>>0){label=119;break}else{$F16_0=$404;$_pre_phi=$403;label=120;break};case 119:_abort();case 120:HEAP32[$_pre_phi>>2]=$p_0;HEAP32[$F16_0+12>>2]=$p_0;HEAP32[$p_0+8>>2]=$F16_0;HEAP32[$p_0+12>>2]=$395;label=142;break;case 121:$414=$p_0;$415=$psize_1>>>8;if(($415|0)==0){$I18_0=0;label=124;break}else{label=122;break};case 122:if($psize_1>>>0>16777215){$I18_0=31;label=124;break}else{label=123;break};case 123:$422=($415+1048320|0)>>>16&8;$423=$415<<$422;$426=($423+520192|0)>>>16&4;$428=$423<<$426;$431=($428+245760|0)>>>16&2;$436=14-($426|$422|$431)+($428<<$431>>>15)|0;$I18_0=$psize_1>>>(($436+7|0)>>>0)&1|$436<<1;label=124;break;case 124:$443=28736+($I18_0<<2)|0;HEAP32[$p_0+28>>2]=$I18_0;HEAP32[$p_0+20>>2]=0;HEAP32[$p_0+16>>2]=0;$447=HEAP32[7109]|0;$448=1<<$I18_0;if(($447&$448|0)==0){label=125;break}else{label=126;break};case 125:HEAP32[7109]=$447|$448;HEAP32[$443>>2]=$414;HEAP32[$p_0+24>>2]=$443;HEAP32[$p_0+12>>2]=$p_0;HEAP32[$p_0+8>>2]=$p_0;label=138;break;case 126:if(($I18_0|0)==31){$463=0;label=128;break}else{label=127;break};case 127:$463=25-($I18_0>>>1)|0;label=128;break;case 128:$K19_0=$psize_1<<$463;$T_0=HEAP32[$443>>2]|0;label=129;break;case 129:if((HEAP32[$T_0+4>>2]&-8|0)==($psize_1|0)){label=134;break}else{label=130;break};case 130:$472=$T_0+16+($K19_0>>>31<<2)|0;$473=HEAP32[$472>>2]|0;if(($473|0)==0){label=131;break}else{$K19_0=$K19_0<<1;$T_0=$473;label=129;break};case 131:if($472>>>0<(HEAP32[7112]|0)>>>0){label=133;break}else{label=132;break};case 132:HEAP32[$472>>2]=$414;HEAP32[$p_0+24>>2]=$T_0;HEAP32[$p_0+12>>2]=$p_0;HEAP32[$p_0+8>>2]=$p_0;label=138;break;case 133:_abort();case 134:$486=$T_0+8|0;$487=HEAP32[$486>>2]|0;$489=HEAP32[7112]|0;if($T_0>>>0<$489>>>0){label=137;break}else{label=135;break};case 135:if($487>>>0<$489>>>0){label=137;break}else{label=136;break};case 136:HEAP32[$487+12>>2]=$414;HEAP32[$486>>2]=$414;HEAP32[$p_0+8>>2]=$487;HEAP32[$p_0+12>>2]=$T_0;HEAP32[$p_0+24>>2]=0;label=138;break;case 137:_abort();case 138:$501=(HEAP32[7116]|0)-1|0;HEAP32[7116]=$501;if(($501|0)==0){$sp_0_in_i=28888;label=139;break}else{label=142;break};case 139:$sp_0_i=HEAP32[$sp_0_in_i>>2]|0;if(($sp_0_i|0)==0){label=140;break}else{$sp_0_in_i=$sp_0_i+8|0;label=139;break};case 140:HEAP32[7116]=-1;label=142;break;case 141:_abort();case 142:return}}function __ZNSt9bad_allocD2Ev($this){$this=$this|0;return}function __ZNKSt9bad_alloc4whatEv($this){$this=$this|0;return 10984|0}function __ZdlPv($ptr){$ptr=$ptr|0;var label=0;label=1;while(1)switch(label|0){case 1:if(($ptr|0)==0){label=3;break}else{label=2;break};case 2:_free($ptr);label=3;break;case 3:return}}function __ZdaPv($ptr){$ptr=$ptr|0;__ZdlPv($ptr);return}function __ZNSt9bad_allocD0Ev($this){$this=$this|0;__ZdlPv($this);return}function _sys_trim($pad){$pad=$pad|0;var $4=0,$15=0,$19=0,$22=0,$28=0,$29=0,$sp_0_i=0,$32=0,$41=0,$_0_i=0,$48=0,$51=0,$59=0,$60=0,$66=0,$73=0,$75=0,$76=0,$78=0,$85=0,$88=0,$released_2=0,label=0;label=1;while(1)switch(label|0){case 1:if((HEAP32[6956]|0)==0){label=2;break}else{label=5;break};case 2:$4=_sysconf(8)|0;if(($4-1&$4|0)==0){label=4;break}else{label=3;break};case 3:_abort();return 0;return 0;case 4:HEAP32[6958]=$4;HEAP32[6957]=$4;HEAP32[6959]=-1;HEAP32[6960]=2097152;HEAP32[6961]=0;HEAP32[7219]=0;HEAP32[6956]=(_time(0)|0)&-16^1431655768;label=5;break;case 5:if($pad>>>0<4294967232){label=6;break}else{$released_2=0;label=21;break};case 6:$15=HEAP32[7114]|0;if(($15|0)==0){$released_2=0;label=21;break}else{label=7;break};case 7:$19=HEAP32[7111]|0;if($19>>>0>($pad+40|0)>>>0){label=8;break}else{label=19;break};case 8:$22=HEAP32[6958]|0;$28=Math_imul((((-40-$pad-1+$19+$22|0)>>>0)/($22>>>0)|0)-1|0,$22)|0;$29=$15;$sp_0_i=28880;label=9;break;case 9:$32=HEAP32[$sp_0_i>>2]|0;if($32>>>0>$29>>>0){label=11;break}else{label=10;break};case 10:if(($32+(HEAP32[$sp_0_i+4>>2]|0)|0)>>>0>$29>>>0){$_0_i=$sp_0_i;label=12;break}else{label=11;break};case 11:$41=HEAP32[$sp_0_i+8>>2]|0;if(($41|0)==0){$_0_i=0;label=12;break}else{$sp_0_i=$41;label=9;break};case 12:if((HEAP32[$_0_i+12>>2]&8|0)==0){label=13;break}else{label=19;break};case 13:$48=_sbrk(0)|0;$51=$_0_i+4|0;if(($48|0)==((HEAP32[$_0_i>>2]|0)+(HEAP32[$51>>2]|0)|0)){label=14;break}else{label=19;break};case 14:$59=_sbrk(-($28>>>0>2147483646?-2147483648-$22|0:$28)|0)|0;$60=_sbrk(0)|0;if(($59|0)!=-1&$60>>>0<$48>>>0){label=15;break}else{label=19;break};case 15:$66=$48-$60|0;if(($48|0)==($60|0)){label=19;break}else{label=16;break};case 16:HEAP32[$51>>2]=(HEAP32[$51>>2]|0)-$66;HEAP32[7216]=(HEAP32[7216]|0)-$66;$73=HEAP32[7114]|0;$75=(HEAP32[7111]|0)-$66|0;$76=$73;$78=$73+8|0;if(($78&7|0)==0){$85=0;label=18;break}else{label=17;break};case 17:$85=-$78&7;label=18;break;case 18:$88=$75-$85|0;HEAP32[7114]=$76+$85;HEAP32[7111]=$88;HEAP32[$76+($85+4)>>2]=$88|1;HEAP32[$76+($75+4)>>2]=40;HEAP32[7115]=HEAP32[6960];$released_2=($48|0)!=($60|0)|0;label=21;break;case 19:if((HEAP32[7111]|0)>>>0>(HEAP32[7115]|0)>>>0){label=20;break}else{$released_2=0;label=21;break};case 20:HEAP32[7115]=-1;$released_2=0;label=21;break;case 21:return $released_2|0}return 0}function __Znwj($size){$size=$size|0;var $3=0,$6=0,$lpad_phi$0=0,$lpad_phi$1=0,$16=0,label=0;label=1;while(1)switch(label|0){case 1:label=2;break;case 2:$3=_malloc(($size|0)==0?1:$size)|0;if(($3|0)==0){label=3;break}else{label=10;break};case 3:$6=(tempValue=HEAP32[7600]|0,HEAP32[7600]=tempValue+0,tempValue);if(($6|0)==0){label=9;break}else{label=4;break};case 4:FUNCTION_TABLE_v[$6&1023]();label=2;break;case 5:$lpad_phi$1=0;$lpad_phi$0=0;label=7;break;case 6:$lpad_phi$1=0;$lpad_phi$0=0;label=7;break;case 7:if(($lpad_phi$1|0)<0){label=8;break}else{label=11;break};case 8:___cxa_call_unexpected($lpad_phi$0|0);return 0;case 9:$16=___cxa_allocate_exception(4)|0;HEAP32[$16>>2]=18376;___cxa_throw($16|0,20416,64);label=12;break;case 10:return $3|0;case 11:abort();case 12:return 0}return 0}function __Znaj($size){$size=$size|0;var label=0;label=1;while(1)switch(label|0){case 1:label=2;break;case 2:return __Znwj($size)|0;case 3:if(0<0){label=4;break}else{label=5;break};case 4:___cxa_call_unexpected(0);return 0;case 5:abort()}return 0}function _strlen(ptr){ptr=ptr|0;var curr=0;curr=ptr;while(HEAP8[curr]|0){curr=curr+1|0}return curr-ptr|0}function _memset(ptr,value,num){ptr=ptr|0;value=value|0;num=num|0;var stop=0,value4=0,stop4=0,unaligned=0;stop=ptr+num|0;if((num|0)>=20){value=value&255;unaligned=ptr&3;value4=value|value<<8|value<<16|value<<24;stop4=stop&~3;if(unaligned){unaligned=ptr+4-unaligned|0;while((ptr|0)<(unaligned|0)){HEAP8[ptr]=value;ptr=ptr+1|0}}while((ptr|0)<(stop4|0)){HEAP32[ptr>>2]=value4;ptr=ptr+4|0}}while((ptr|0)<(stop|0)){HEAP8[ptr]=value;ptr=ptr+1|0}}function _memcpy(dest,src,num){dest=dest|0;src=src|0;num=num|0;var ret=0;ret=dest|0;if((dest&3)==(src&3)){while(dest&3){if((num|0)==0)return ret|0;HEAP8[dest]=HEAP8[src]|0;dest=dest+1|0;src=src+1|0;num=num-1|0}while((num|0)>=4){HEAP32[dest>>2]=HEAP32[src>>2];dest=dest+4|0;src=src+4|0;num=num-4|0}}while((num|0)>0){HEAP8[dest]=HEAP8[src]|0;dest=dest+1|0;src=src+1|0;num=num-1|0}return ret|0}function _strncpy(pdest,psrc,num){pdest=pdest|0;psrc=psrc|0;num=num|0;var padding=0,i=0;while((i|0)<(num|0)){HEAP8[pdest+i|0]=padding?0:HEAP8[psrc+i|0]|0;padding=padding?1:(HEAP8[psrc+i|0]|0)==0;i=i+1|0}return pdest|0}function _memcmp(p1,p2,num){p1=p1|0;p2=p2|0;num=num|0;var i=0,v1=0,v2=0;while((i|0)<(num|0)){v1=HEAPU8[p1+i|0]|0;v2=HEAPU8[p2+i|0]|0;if((v1|0)!=(v2|0))return((v1|0)>(v2|0)?1:-1)|0;i=i+1|0}return 0}function _tolower(chr){chr=chr|0;if((chr|0)<65)return chr|0;if((chr|0)>90)return chr|0;return chr-65+97|0}function _saveSetjmp(env,label,table){env=env|0;label=label|0;table=table|0;var i=0;setjmpId=setjmpId+1|0;HEAP32[env>>2]=setjmpId;while((i|0)<40){if((HEAP32[table+(i<<2)>>2]|0)==0){HEAP32[table+(i<<2)>>2]=setjmpId;HEAP32[table+((i<<2)+4)>>2]=label;HEAP32[table+((i<<2)+8)>>2]=0;return 0}i=i+2|0}_putchar(116);_putchar(111);_putchar(111);_putchar(32);_putchar(109);_putchar(97);_putchar(110);_putchar(121);_putchar(32);_putchar(115);_putchar(101);_putchar(116);_putchar(106);_putchar(109);_putchar(112);_putchar(115);_putchar(32);_putchar(105);_putchar(110);_putchar(32);_putchar(97);_putchar(32);_putchar(102);_putchar(117);_putchar(110);_putchar(99);_putchar(116);_putchar(105);_putchar(111);_putchar(110);_putchar(32);_putchar(99);_putchar(97);_putchar(108);_putchar(108);_putchar(44);_putchar(32);_putchar(98);_putchar(117);_putchar(105);_putchar(108);_putchar(100);_putchar(32);_putchar(119);_putchar(105);_putchar(116);_putchar(104);_putchar(32);_putchar(97);_putchar(32);_putchar(104);_putchar(105);_putchar(103);_putchar(104);_putchar(101);_putchar(114);_putchar(32);_putchar(118);_putchar(97);_putchar(108);_putchar(117);_putchar(101);_putchar(32);_putchar(102);_putchar(111);_putchar(114);_putchar(32);_putchar(77);_putchar(65);_putchar(88);_putchar(95);_putchar(83);_putchar(69);_putchar(84);_putchar(74);_putchar(77);_putchar(80);_putchar(83);_putchar(10);abort(0);return 0}function _testSetjmp(id,table){id=id|0;table=table|0;var i=0,curr=0;while((i|0)<20){curr=HEAP32[table+(i<<2)>>2]|0;if((curr|0)==0)break;if((curr|0)==(id|0)){return HEAP32[table+((i<<2)+4)>>2]|0}i=i+2|0}return 0}function _memmove(dest,src,num){dest=dest|0;src=src|0;num=num|0;if((src|0)<(dest|0)&(dest|0)<(src+num|0)){src=src+num|0;dest=dest+num|0;while((num|0)>0){dest=dest-1|0;src=src-1|0;num=num-1|0;HEAP8[dest]=HEAP8[src]|0}}else{_memcpy(dest,src,num)|0}}function _strcpy(pdest,psrc){pdest=pdest|0;psrc=psrc|0;var i=0;do{HEAP8[pdest+i|0]=HEAP8[psrc+i|0];i=i+1|0}while(HEAP8[psrc+(i-1)|0]|0);return pdest|0}function _i64Add(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var l=0;l=a+c>>>0;return(tempRet0=b+d+(l>>>0<a>>>0|0)>>>0,l|0)|0}function _i64Subtract(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var h=0;h=b-d>>>0;h=b-d-(c>>>0>a>>>0|0)>>>0;return(tempRet0=h,a-c>>>0|0)|0}function _bitshift64Shl(low,high,bits){low=low|0;high=high|0;bits=bits|0;if((bits|0)<32){tempRet0=high<<bits|(low&(1<<bits)-1<<32-bits)>>>32-bits;return low<<bits}tempRet0=low<<bits-32;return 0}function _bitshift64Lshr(low,high,bits){low=low|0;high=high|0;bits=bits|0;if((bits|0)<32){tempRet0=high>>>bits;return low>>>bits|(high&(1<<bits)-1)<<32-bits}tempRet0=0;return high>>>bits-32|0}function _bitshift64Ashr(low,high,bits){low=low|0;high=high|0;bits=bits|0;if((bits|0)<32){tempRet0=high>>bits;return low>>>bits|(high&(1<<bits)-1)<<32-bits}tempRet0=(high|0)<0?-1:0;return high>>bits-32|0}function _llvm_ctlz_i32(x){x=x|0;var ret=0;ret=HEAP8[ctlz_i8+(x>>>24)|0]|0;if((ret|0)<8)return ret|0;ret=HEAP8[ctlz_i8+(x>>16&255)|0]|0;if((ret|0)<8)return ret+8|0;ret=HEAP8[ctlz_i8+(x>>8&255)|0]|0;if((ret|0)<8)return ret+16|0;return(HEAP8[ctlz_i8+(x&255)|0]|0)+24|0}function _llvm_cttz_i32(x){x=x|0;var ret=0;ret=HEAP8[cttz_i8+(x&255)|0]|0;if((ret|0)<8)return ret|0;ret=HEAP8[cttz_i8+(x>>8&255)|0]|0;if((ret|0)<8)return ret+8|0;ret=HEAP8[cttz_i8+(x>>16&255)|0]|0;if((ret|0)<8)return ret+16|0;return(HEAP8[cttz_i8+(x>>>24)|0]|0)+24|0}function ___muldsi3($a,$b){$a=$a|0;$b=$b|0;var $1=0,$2=0,$3=0,$6=0,$8=0,$11=0,$12=0;$1=$a&65535;$2=$b&65535;$3=Math_imul($2,$1)|0;$6=$a>>>16;$8=($3>>>16)+(Math_imul($2,$6)|0)|0;$11=$b>>>16;$12=Math_imul($11,$1)|0;return(tempRet0=($8>>>16)+(Math_imul($11,$6)|0)+((($8&65535)+$12|0)>>>16)|0,$8+$12<<16|$3&65535|0)|0}function ___divdi3($a$0,$a$1,$b$0,$b$1){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;var $1$0=0,$1$1=0,$2$0=0,$2$1=0,$4$0=0,$4$1=0,$7$0=0,$7$1=0,$10$0=0;$1$0=$a$1>>31|(($a$1|0)<0?-1:0)<<1;$1$1=(($a$1|0)<0?-1:0)>>31|(($a$1|0)<0?-1:0)<<1;$2$0=$b$1>>31|(($b$1|0)<0?-1:0)<<1;$2$1=(($b$1|0)<0?-1:0)>>31|(($b$1|0)<0?-1:0)<<1;$4$0=_i64Subtract($1$0^$a$0,$1$1^$a$1,$1$0,$1$1)|0;$4$1=tempRet0;$7$0=$2$0^$1$0;$7$1=$2$1^$1$1;$10$0=_i64Subtract((___udivmoddi4($4$0,$4$1,_i64Subtract($2$0^$b$0,$2$1^$b$1,$2$0,$2$1)|0,tempRet0,0)|0)^$7$0,tempRet0^$7$1,$7$0,$7$1)|0;return(tempRet0=tempRet0,$10$0)|0}function ___remdi3($a$0,$a$1,$b$0,$b$1){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;var $rem=0,$1$0=0,$1$1=0,$2$0=0,$2$1=0,$4$0=0,$4$1=0,$6$0=0,$10$0=0,$10$1=0,__stackBase__=0;__stackBase__=STACKTOP;STACKTOP=STACKTOP+8|0;$rem=__stackBase__|0;$1$0=$a$1>>31|(($a$1|0)<0?-1:0)<<1;$1$1=(($a$1|0)<0?-1:0)>>31|(($a$1|0)<0?-1:0)<<1;$2$0=$b$1>>31|(($b$1|0)<0?-1:0)<<1;$2$1=(($b$1|0)<0?-1:0)>>31|(($b$1|0)<0?-1:0)<<1;$4$0=_i64Subtract($1$0^$a$0,$1$1^$a$1,$1$0,$1$1)|0;$4$1=tempRet0;$6$0=_i64Subtract($2$0^$b$0,$2$1^$b$1,$2$0,$2$1)|0;___udivmoddi4($4$0,$4$1,$6$0,tempRet0,$rem)|0;$10$0=_i64Subtract(HEAP32[$rem>>2]^$1$0,HEAP32[$rem+4>>2]^$1$1,$1$0,$1$1)|0;$10$1=tempRet0;STACKTOP=__stackBase__;return(tempRet0=$10$1,$10$0)|0}function ___muldi3($a$0,$a$1,$b$0,$b$1){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;var $x_sroa_0_0_extract_trunc=0,$y_sroa_0_0_extract_trunc=0,$1$0=0,$1$1=0;$x_sroa_0_0_extract_trunc=$a$0;$y_sroa_0_0_extract_trunc=$b$0;$1$0=___muldsi3($x_sroa_0_0_extract_trunc,$y_sroa_0_0_extract_trunc)|0;$1$1=tempRet0;return(tempRet0=(Math_imul($a$1,$y_sroa_0_0_extract_trunc)|0)+(Math_imul($b$1,$x_sroa_0_0_extract_trunc)|0)+$1$1|$1$1&0,$1$0|0|0)|0}function ___udivdi3($a$0,$a$1,$b$0,$b$1){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;var $1$0=0;$1$0=___udivmoddi4($a$0,$a$1,$b$0,$b$1,0)|0;return(tempRet0=tempRet0,$1$0)|0}function ___uremdi3($a$0,$a$1,$b$0,$b$1){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;var $rem=0,__stackBase__=0;__stackBase__=STACKTOP;STACKTOP=STACKTOP+8|0;$rem=__stackBase__|0;___udivmoddi4($a$0,$a$1,$b$0,$b$1,$rem)|0;STACKTOP=__stackBase__;return(tempRet0=HEAP32[$rem+4>>2]|0,HEAP32[$rem>>2]|0)|0}function ___udivmoddi4($a$0,$a$1,$b$0,$b$1,$rem){$a$0=$a$0|0;$a$1=$a$1|0;$b$0=$b$0|0;$b$1=$b$1|0;$rem=$rem|0;var $n_sroa_0_0_extract_trunc=0,$n_sroa_1_4_extract_shift$0=0,$n_sroa_1_4_extract_trunc=0,$d_sroa_0_0_extract_trunc=0,$d_sroa_1_4_extract_shift$0=0,$d_sroa_1_4_extract_trunc=0,$4=0,$17=0,$37=0,$51=0,$57=0,$58=0,$66=0,$78=0,$88=0,$89=0,$91=0,$92=0,$95=0,$105=0,$119=0,$125=0,$126=0,$130=0,$q_sroa_1_1_ph=0,$q_sroa_0_1_ph=0,$r_sroa_1_1_ph=0,$r_sroa_0_1_ph=0,$sr_1_ph=0,$d_sroa_0_0_insert_insert99$0=0,$d_sroa_0_0_insert_insert99$1=0,$137$0=0,$137$1=0,$carry_0203=0,$sr_1202=0,$r_sroa_0_1201=0,$r_sroa_1_1200=0,$q_sroa_0_1199=0,$q_sroa_1_1198=0,$147=0,$149=0,$r_sroa_0_0_insert_insert42$0=0,$r_sroa_0_0_insert_insert42$1=0,$150$1=0,$151$0=0,$152=0,$r_sroa_0_0_extract_trunc=0,$r_sroa_1_4_extract_trunc=0,$155=0,$carry_0_lcssa$0=0,$carry_0_lcssa$1=0,$r_sroa_0_1_lcssa=0,$r_sroa_1_1_lcssa=0,$q_sroa_0_1_lcssa=0,$q_sroa_1_1_lcssa=0,$q_sroa_0_0_insert_ext75$0=0,$q_sroa_0_0_insert_ext75$1=0,$_0$0=0,$_0$1=0;$n_sroa_0_0_extract_trunc=$a$0;$n_sroa_1_4_extract_shift$0=$a$1;$n_sroa_1_4_extract_trunc=$n_sroa_1_4_extract_shift$0;$d_sroa_0_0_extract_trunc=$b$0;$d_sroa_1_4_extract_shift$0=$b$1;$d_sroa_1_4_extract_trunc=$d_sroa_1_4_extract_shift$0;if(($n_sroa_1_4_extract_trunc|0)==0){$4=($rem|0)!=0;if(($d_sroa_1_4_extract_trunc|0)==0){if($4){HEAP32[$rem>>2]=($n_sroa_0_0_extract_trunc>>>0)%($d_sroa_0_0_extract_trunc>>>0);HEAP32[$rem+4>>2]=0}$_0$1=0;$_0$0=($n_sroa_0_0_extract_trunc>>>0)/($d_sroa_0_0_extract_trunc>>>0)>>>0;return(tempRet0=$_0$1,$_0$0)|0}else{if(!$4){$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}HEAP32[$rem>>2]=$a$0|0;HEAP32[$rem+4>>2]=$a$1&0;$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}}$17=($d_sroa_1_4_extract_trunc|0)==0;do{if(($d_sroa_0_0_extract_trunc|0)==0){if($17){if(($rem|0)!=0){HEAP32[$rem>>2]=($n_sroa_1_4_extract_trunc>>>0)%($d_sroa_0_0_extract_trunc>>>0);HEAP32[$rem+4>>2]=0}$_0$1=0;$_0$0=($n_sroa_1_4_extract_trunc>>>0)/($d_sroa_0_0_extract_trunc>>>0)>>>0;return(tempRet0=$_0$1,$_0$0)|0}if(($n_sroa_0_0_extract_trunc|0)==0){if(($rem|0)!=0){HEAP32[$rem>>2]=0;HEAP32[$rem+4>>2]=($n_sroa_1_4_extract_trunc>>>0)%($d_sroa_1_4_extract_trunc>>>0)}$_0$1=0;$_0$0=($n_sroa_1_4_extract_trunc>>>0)/($d_sroa_1_4_extract_trunc>>>0)>>>0;return(tempRet0=$_0$1,$_0$0)|0}$37=$d_sroa_1_4_extract_trunc-1|0;if(($37&$d_sroa_1_4_extract_trunc|0)==0){if(($rem|0)!=0){HEAP32[$rem>>2]=$a$0|0;HEAP32[$rem+4>>2]=$37&$n_sroa_1_4_extract_trunc|$a$1&0}$_0$1=0;$_0$0=$n_sroa_1_4_extract_trunc>>>((_llvm_cttz_i32($d_sroa_1_4_extract_trunc|0)|0)>>>0);return(tempRet0=$_0$1,$_0$0)|0}$51=(_llvm_ctlz_i32($d_sroa_1_4_extract_trunc|0)|0)-(_llvm_ctlz_i32($n_sroa_1_4_extract_trunc|0)|0)|0;if($51>>>0<=30){$57=$51+1|0;$58=31-$51|0;$sr_1_ph=$57;$r_sroa_0_1_ph=$n_sroa_1_4_extract_trunc<<$58|$n_sroa_0_0_extract_trunc>>>($57>>>0);$r_sroa_1_1_ph=$n_sroa_1_4_extract_trunc>>>($57>>>0);$q_sroa_0_1_ph=0;$q_sroa_1_1_ph=$n_sroa_0_0_extract_trunc<<$58;break}if(($rem|0)==0){$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}HEAP32[$rem>>2]=$a$0|0;HEAP32[$rem+4>>2]=$n_sroa_1_4_extract_shift$0|$a$1&0;$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}else{if(!$17){$119=(_llvm_ctlz_i32($d_sroa_1_4_extract_trunc|0)|0)-(_llvm_ctlz_i32($n_sroa_1_4_extract_trunc|0)|0)|0;if($119>>>0<=31){$125=$119+1|0;$126=31-$119|0;$130=$119-31>>31;$sr_1_ph=$125;$r_sroa_0_1_ph=$n_sroa_0_0_extract_trunc>>>($125>>>0)&$130|$n_sroa_1_4_extract_trunc<<$126;$r_sroa_1_1_ph=$n_sroa_1_4_extract_trunc>>>($125>>>0)&$130;$q_sroa_0_1_ph=0;$q_sroa_1_1_ph=$n_sroa_0_0_extract_trunc<<$126;break}if(($rem|0)==0){$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}HEAP32[$rem>>2]=$a$0|0;HEAP32[$rem+4>>2]=$n_sroa_1_4_extract_shift$0|$a$1&0;$_0$1=0;$_0$0=0;return(tempRet0=$_0$1,$_0$0)|0}$66=$d_sroa_0_0_extract_trunc-1|0;if(($66&$d_sroa_0_0_extract_trunc|0)!=0){$88=(_llvm_ctlz_i32($d_sroa_0_0_extract_trunc|0)|0)+33-(_llvm_ctlz_i32($n_sroa_1_4_extract_trunc|0)|0)|0;$89=64-$88|0;$91=32-$88|0;$92=$91>>31;$95=$88-32|0;$105=$95>>31;$sr_1_ph=$88;$r_sroa_0_1_ph=$91-1>>31&$n_sroa_1_4_extract_trunc>>>($95>>>0)|($n_sroa_1_4_extract_trunc<<$91|$n_sroa_0_0_extract_trunc>>>($88>>>0))&$105;$r_sroa_1_1_ph=$105&$n_sroa_1_4_extract_trunc>>>($88>>>0);$q_sroa_0_1_ph=$n_sroa_0_0_extract_trunc<<$89&$92;$q_sroa_1_1_ph=($n_sroa_1_4_extract_trunc<<$89|$n_sroa_0_0_extract_trunc>>>($95>>>0))&$92|$n_sroa_0_0_extract_trunc<<$91&$88-33>>31;break}if(($rem|0)!=0){HEAP32[$rem>>2]=$66&$n_sroa_0_0_extract_trunc;HEAP32[$rem+4>>2]=0}if(($d_sroa_0_0_extract_trunc|0)==1){$_0$1=$n_sroa_1_4_extract_shift$0|$a$1&0;$_0$0=$a$0|0|0;return(tempRet0=$_0$1,$_0$0)|0}else{$78=_llvm_cttz_i32($d_sroa_0_0_extract_trunc|0)|0;$_0$1=$n_sroa_1_4_extract_trunc>>>($78>>>0)|0;$_0$0=$n_sroa_1_4_extract_trunc<<32-$78|$n_sroa_0_0_extract_trunc>>>($78>>>0)|0;return(tempRet0=$_0$1,$_0$0)|0}}}while(0);if(($sr_1_ph|0)==0){$q_sroa_1_1_lcssa=$q_sroa_1_1_ph;$q_sroa_0_1_lcssa=$q_sroa_0_1_ph;$r_sroa_1_1_lcssa=$r_sroa_1_1_ph;$r_sroa_0_1_lcssa=$r_sroa_0_1_ph;$carry_0_lcssa$1=0;$carry_0_lcssa$0=0}else{$d_sroa_0_0_insert_insert99$0=$b$0|0|0;$d_sroa_0_0_insert_insert99$1=$d_sroa_1_4_extract_shift$0|$b$1&0;$137$0=_i64Add($d_sroa_0_0_insert_insert99$0,$d_sroa_0_0_insert_insert99$1,-1,-1)|0;$137$1=tempRet0;$q_sroa_1_1198=$q_sroa_1_1_ph;$q_sroa_0_1199=$q_sroa_0_1_ph;$r_sroa_1_1200=$r_sroa_1_1_ph;$r_sroa_0_1201=$r_sroa_0_1_ph;$sr_1202=$sr_1_ph;$carry_0203=0;while(1){$147=$q_sroa_0_1199>>>31|$q_sroa_1_1198<<1;$149=$carry_0203|$q_sroa_0_1199<<1;$r_sroa_0_0_insert_insert42$0=$r_sroa_0_1201<<1|$q_sroa_1_1198>>>31|0;$r_sroa_0_0_insert_insert42$1=$r_sroa_0_1201>>>31|$r_sroa_1_1200<<1|0;_i64Subtract($137$0,$137$1,$r_sroa_0_0_insert_insert42$0,$r_sroa_0_0_insert_insert42$1)|0;$150$1=tempRet0;$151$0=$150$1>>31|(($150$1|0)<0?-1:0)<<1;$152=$151$0&1;$r_sroa_0_0_extract_trunc=_i64Subtract($r_sroa_0_0_insert_insert42$0,$r_sroa_0_0_insert_insert42$1,$151$0&$d_sroa_0_0_insert_insert99$0,((($150$1|0)<0?-1:0)>>31|(($150$1|0)<0?-1:0)<<1)&$d_sroa_0_0_insert_insert99$1)|0;$r_sroa_1_4_extract_trunc=tempRet0;$155=$sr_1202-1|0;if(($155|0)==0){break}else{$q_sroa_1_1198=$147;$q_sroa_0_1199=$149;$r_sroa_1_1200=$r_sroa_1_4_extract_trunc;$r_sroa_0_1201=$r_sroa_0_0_extract_trunc;$sr_1202=$155;$carry_0203=$152}}$q_sroa_1_1_lcssa=$147;$q_sroa_0_1_lcssa=$149;$r_sroa_1_1_lcssa=$r_sroa_1_4_extract_trunc;$r_sroa_0_1_lcssa=$r_sroa_0_0_extract_trunc;$carry_0_lcssa$1=0;$carry_0_lcssa$0=$152}$q_sroa_0_0_insert_ext75$0=$q_sroa_0_1_lcssa;$q_sroa_0_0_insert_ext75$1=0;if(($rem|0)!=0){HEAP32[$rem>>2]=$r_sroa_0_1_lcssa;HEAP32[$rem+4>>2]=$r_sroa_1_1_lcssa}$_0$1=($q_sroa_0_0_insert_ext75$0|0)>>>31|($q_sroa_1_1_lcssa|$q_sroa_0_0_insert_ext75$1)<<1|($q_sroa_0_0_insert_ext75$1<<1|$q_sroa_0_0_insert_ext75$0>>>31)&0|$carry_0_lcssa$1;$_0$0=($q_sroa_0_0_insert_ext75$0<<1|0>>>31)&-2|$carry_0_lcssa$0;return(tempRet0=$_0$1,$_0$0)|0}function _longjmp__wrapper(a1,a2){a1=a1|0;a2=a2|0;_longjmp(a1|0,a2|0)}function ___cxa_pure_virtual__wrapper(){___cxa_pure_virtual()}function _strcmp__wrapper(a1,a2){a1=a1|0;a2=a2|0;return _strcmp(a1|0,a2|0)|0}function dynCall_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;a7=a7|0;return FUNCTION_TABLE_iiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)|0}function dynCall_viiiiiii(index,a1,a2,a3,a4,a5,a6,a7){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;a7=a7|0;FUNCTION_TABLE_viiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0)}function dynCall_viiiii(index,a1,a2,a3,a4,a5){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;FUNCTION_TABLE_viiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)}function dynCall_i(index){index=index|0;return FUNCTION_TABLE_i[index&1023]()|0}function dynCall_vi(index,a1){index=index|0;a1=a1|0;FUNCTION_TABLE_vi[index&1023](a1|0)}function dynCall_vii(index,a1,a2){index=index|0;a1=a1|0;a2=a2|0;FUNCTION_TABLE_vii[index&1023](a1|0,a2|0)}function dynCall_iiiiiii(index,a1,a2,a3,a4,a5,a6){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;return FUNCTION_TABLE_iiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)|0}function dynCall_iii(index,a1,a2){index=index|0;a1=a1|0;a2=a2|0;return FUNCTION_TABLE_iii[index&1023](a1|0,a2|0)|0}function dynCall_iiiiii(index,a1,a2,a3,a4,a5){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;return FUNCTION_TABLE_iiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0)|0}function dynCall_ii(index,a1){index=index|0;a1=a1|0;return FUNCTION_TABLE_ii[index&1023](a1|0)|0}function dynCall_iiii(index,a1,a2,a3){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;return FUNCTION_TABLE_iiii[index&1023](a1|0,a2|0,a3|0)|0}function dynCall_viii(index,a1,a2,a3){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;FUNCTION_TABLE_viii[index&1023](a1|0,a2|0,a3|0)}function dynCall_v(index){index=index|0;FUNCTION_TABLE_v[index&1023]()}function dynCall_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;a7=a7|0;a8=a8|0;return FUNCTION_TABLE_iiiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0)|0}function dynCall_iiiii(index,a1,a2,a3,a4){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;return FUNCTION_TABLE_iiiii[index&1023](a1|0,a2|0,a3|0,a4|0)|0}function dynCall_viiiiii(index,a1,a2,a3,a4,a5,a6){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;FUNCTION_TABLE_viiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0)}function dynCall_iiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=a6|0;a7=a7|0;a8=a8|0;a9=a9|0;a10=a10|0;a11=a11|0;a12=a12|0;a13=a13|0;a14=a14|0;return FUNCTION_TABLE_iiiiiiiiiiiiiii[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,a6|0,a7|0,a8|0,a9|0,a10|0,a11|0,a12|0,a13|0,a14|0)|0}function dynCall_iiiiiiffi(index,a1,a2,a3,a4,a5,a6,a7,a8){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;a5=a5|0;a6=+a6;a7=+a7;a8=a8|0;return FUNCTION_TABLE_iiiiiiffi[index&1023](a1|0,a2|0,a3|0,a4|0,a5|0,+a6,+a7,a8|0)|0}function dynCall_viiii(index,a1,a2,a3,a4){index=index|0;a1=a1|0;a2=a2|0;a3=a3|0;a4=a4|0;FUNCTION_TABLE_viiii[index&1023](a1|0,a2|0,a3|0,a4|0)}function b0(p0,p1,p2,p3,p4,p5,p6){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;abort(0);return 0}function b1(p0,p1,p2,p3,p4,p5,p6){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;abort(1)}function b2(p0,p1,p2,p3,p4){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;abort(2)}function b3(){abort(3);return 0}function b4(p0){p0=p0|0;abort(4)}function b5(p0,p1){p0=p0|0;p1=p1|0;abort(5)}function b6(p0,p1,p2,p3,p4,p5){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;abort(6);return 0}function b7(p0,p1){p0=p0|0;p1=p1|0;abort(7);return 0}function b8(p0,p1,p2,p3,p4){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;abort(8);return 0}function b9(p0){p0=p0|0;abort(9);return 0}function b10(p0,p1,p2){p0=p0|0;p1=p1|0;p2=p2|0;abort(10);return 0}function b11(p0,p1,p2){p0=p0|0;p1=p1|0;p2=p2|0;abort(11)}function b12(){abort(12)}function b13(p0,p1,p2,p3,p4,p5,p6,p7){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;p7=p7|0;abort(13);return 0}function b14(p0,p1,p2,p3){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;abort(14);return 0}function b15(p0,p1,p2,p3,p4,p5){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;abort(15)}function b16(p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=p5|0;p6=p6|0;p7=p7|0;p8=p8|0;p9=p9|0;p10=p10|0;p11=p11|0;p12=p12|0;p13=p13|0;abort(16);return 0}function b17(p0,p1,p2,p3,p4,p5,p6,p7){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;p4=p4|0;p5=+p5;p6=+p6;p7=p7|0;abort(17);return 0}function b18(p0,p1,p2,p3){p0=p0|0;p1=p1|0;p2=p2|0;p3=p3|0;abort(18)}
// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_iiiiiiii = [b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,__ZL20icvBGRx2XYZ_8u_CnC3RPKhiPhi6CvSizeii,b0,b0,b0,b0
  ,b0,b0,b0,__ZL20icvBGRx2BGR_8u_CnC3RPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,__ZL21icvBGRx2HLS_32f_CnC3RPKfiPfi6CvSizeii,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__ZL21icvXYZ2BGRx_16u_C3CnRPKtiPti6CvSizeii,b0,__ZL19icvCopy_8u_CnC1CR_fPKhiPhi6CvSizeii
  ,b0,__ZL21icvBGRx2Lab_32f_CnC3RPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL20icvBGRx2HSV_8u_CnC3RPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL18icvCopy_64s_C4MR_fPKxiPxi6CvSizePKhi,b0,b0,b0,__Z16icvCopy_32f_C4MRPKiiPii6CvSizePKhi,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL20icvCopy_16s_C1CnCR_fPKtiPti6CvSizeii
  ,b0,b0,b0,__ZL21icvLuv2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__ZL18icvCopy_32f_C3MR_fPKiiPii6CvSizePKhi,b0,__ZL17icvCopy_8u_C1MR_fPKhiPhi6CvSizeS0_i
  ,b0,b0,b0,b0,b0,__ZL23icvBGRx2YCrCb_16u_CnC3RPKtiPti6CvSizeii,b0,b0,b0,b0
  ,b0,b0,b0,__Z15icvCopy_8u_C3MRPKhiPhi6CvSizeS0_i,b0,__ZL18icvCopy_64s_C3MR_fPKxiPxi6CvSizePKhi,b0,b0,b0,__Z16icvCopy_16s_C1MRPKtiPti6CvSizePKhi
  ,b0,b0,b0,b0,b0,__ZL21icvXYZ2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,__ZL21icvBGRx2XYZ_16u_CnC3RPKtiPti6CvSizeii,b0,b0
  ,b0,__ZL23icvBGRx2YCrCb_32f_CnC3RPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL20icvCopy_64f_C1CnCR_fPKxiPxi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__ZN15GrFmtJpegWriter10WriteImageEPKhiiiii,b0,b0,b0,b0,b0,b0
  ,b0,__ZL20icvHLS2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__Z18icvCopy_32f_C1CnCRPKiiPii6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL18icvCopy_16s_C1MR_fPKtiPti6CvSizePKhi
  ,b0,b0,b0,b0,b0,__Z15icvCopy_8u_C1MRPKhiPhi6CvSizeS0_i,b0,__ZL20icvHSV2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL20icvLuv2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,__ZL21icvLab2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL21icvBGRx2HSV_32f_CnC3RPKfiPfi6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__ZL21icvHSV2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__Z16icvCopy_32f_C3MRPKiiPii6CvSizePKhi,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL17icvCopy_8u_C3MR_fPKhiPhi6CvSizeS0_i,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL20icvCopy_16s_CnC1CR_fPKtiPti6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL18icvCopy_16s_C3MR_fPKtiPti6CvSizePKhi
  ,b0,__Z18icvCopy_32f_CnC1CRPKiiPii6CvSizeii,b0,b0,b0,__Z16icvCopy_64s_C3MRPKxiPxi6CvSizePKhi,b0,__ZL21icvBGRx2XYZ_32f_CnC3RPKfiPfi6CvSizeii,b0,b0
  ,b0,__ZL20icvBGRx2Lab_8u_CnC3RPKhiPhi6CvSizeii,b0,__Z17icvCopy_8u_CnC1CRPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__ZL21icvBGRx2BGR_32f_CnC3RPKiiPii6CvSizeii,b0,b0
  ,b0,__ZL22icvBGRx2Gray_32f_CnC1RPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__ZL20icvCopy_32f_CnC1CR_fPKiiPii6CvSizeii,b0,__ZL22icvBGRx2Gray_16u_CnC1RPKtiPti6CvSizeii,b0,__ZL21icvHLS2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__Z18icvCopy_64f_CnC1CRPKxiPxi6CvSizeii,b0,b0,b0,b0,b0,__ZL20icvLab2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__Z18icvCopy_16s_C1CnCRPKtiPti6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,__ZL21icvBGRx2Gray_8u_CnC1RPKhiPhi6CvSizeii,b0,b0
  ,b0,b0,b0,__ZL18icvCopy_32f_C4MR_fPKiiPii6CvSizePKhi,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__Z16icvCopy_16s_C3MRPKtiPti6CvSizePKhi,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZL23icvYCrCb2BGRx_16u_C3CnRPKtiPti6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,__ZL23icvYCrCb2BGRx_32f_C3CnRPKfiPfi6CvSizeii,b0,__Z16icvCopy_16s_C4MRPKxiPxi6CvSizePKhi
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__ZL22icvBGRx2YCrCb_8u_CnC3RPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,__ZL20icvBGRx2Luv_8u_CnC3RPKhiPhi6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,__Z16icvCopy_64s_C4MRPKxiPxi6CvSizePKhi,b0,b0,b0,b0,b0,__Z18icvCopy_64f_C1CnCRPKxiPxi6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN20GrFmtSunRasterWriter10WriteImageEPKhiiiii
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__ZL21icvBGRx2BGR_16u_CnC3RPKtiPti6CvSizeii,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL20icvCopy_32f_C1CnCR_fPKiiPii6CvSizeii,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__Z17icvCopy_8u_C1CnCRPKhiPhi6CvSizeii,b0,__ZL17icvCopy_8u_C4MR_fPKiiPii6CvSizePKhi,b0,b0,b0,__ZL20icvBGRx2HLS_8u_CnC3RPKhiPhi6CvSizeii,b0,b0
  ,b0,__ZL21icvBGRx2Luv_32f_CnC3RPKfiPfi6CvSizeii,b0,b0,b0,b0,b0,__ZL18icvCopy_16s_C4MR_fPKxiPxi6CvSizePKhi,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,__ZL19icvCopy_8u_C1CnCR_fPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,__Z18icvCopy_16s_CnC1CRPKtiPti6CvSizeii,b0,__ZL20icvCopy_64f_CnC1CR_fPKxiPxi6CvSizeii
  ,b0,b0,b0,b0,b0,b0,b0,__ZL20icvXYZ2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,__Z15icvCopy_8u_C4MRPKiiPii6CvSizePKhi
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,__ZN14GrFmtBmpWriter10WriteImageEPKhiiiii,b0,__ZN15GrFmtTiffWriter10WriteImageEPKhiiiii
  ,b0,b0,b0,__ZL22icvYCrCb2BGRx_8u_C3CnRPKhiPhi6CvSizeii,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
  ,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,__ZN14GrFmtPxMWriter10WriteImageEPKhiiiii,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0];
  var FUNCTION_TABLE_viiiiiii = [b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1
  ,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,__ZN6CvTypeC2EPKcPFiPKvEPFvPPvEPFS6_P13CvFileStorageP10CvFileNodeEPFvSB_S1_S3_10CvAttrListEPFS6_S3_E,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1,b1];
  var FUNCTION_TABLE_viiiii = [b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,__Z26icvCvt_BGR5552BGR_8u_C2C3RPKhiPhi6CvSize,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,__Z21icvCvt_BGR2RGB_8u_C3RPKhiPhi6CvSize,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,__Z26icvCvt_BGR5652BGR_8u_C2C3RPKhiPhi6CvSize,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,__Z27icvCvt_BGR5652Gray_8u_C2C1RPKhiPhi6CvSize,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2
  ,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,__Z27icvCvt_BGR5552Gray_8u_C2C1RPKhiPhi6CvSize,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];
  var FUNCTION_TABLE_i = [b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
  ,b3,b3,b3,b3,b3,b3,b3,b3,b3,__Z13bsIsBigEndianv,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
  var FUNCTION_TABLE_vi = [b4,b4,b4,b4,b4,b4,__ZN20GrFmtSunRasterReaderD0Ev,b4,b4,b4,__ZN14GrFmtPxMReaderD2Ev
  ,b4,b4,b4,b4,b4,b4,b4,__ZN8GrFmtBmpC2Ev,b4,b4
  ,b4,b4,b4,b4,b4,__ZN11WBaseStreamD2Ev,b4,b4,b4,b4
  ,b4,b4,b4,__ZN9GrFmtJpegC2Ev,b4,b4,b4,__ZN9GrFmtJpegD2Ev,b4,__ZN11GrFmtReaderD0Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZN12WMByteStreamD0Ev,b4,b4,b4,b4,b4,b4,b4,__ZN14GrFmtPxMReader5CloseEv
  ,b4,__ZN11RBaseStreamD2Ev,b4,__ZNSt9bad_allocD2Ev,b4,b4,b4,b4,b4,b4
  ,b4,__ZN14WJpegBitStream5FlushEv,b4,__ZN9GrFmtTiffD2Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN11GrFmtReaderD2Ev,b4,b4
  ,b4,__Z20icvPthreadDestructorPv,b4,b4,b4,__ZN11WBaseStreamD2Ev,b4,b4,b4,b4
  ,b4,__ZN20GrFmtSunRasterReaderD2Ev,b4,b4,b4,__ZN18GrFmtFactoriesListD2Ev,b4,__ZN12RMByteStreamD0Ev,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN6CvTypeD2Ev,b4,__ZN11RLBitStreamD0Ev
  ,b4,b4,b4,b4,b4,b4,b4,__ZN15GrFmtJpegReaderD2Ev,b4,__ZN9GrFmtTiffD0Ev
  ,b4,b4,b4,__ZN14RJpegBitStream5CloseEv,b4,__ZN15GrFmtTiffWriterD2Ev,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN12RLByteStreamD0Ev,b4,__ZN11GrFmtWriterD1Ev
  ,b4,__ZN8GrFmtPxMD0Ev,b4,__ZN14WJpegBitStream5CloseEv,b4,__ZN11WMBitStreamD0Ev,b4,b4,b4,__ZN18GrFmtFactoriesListD0Ev
  ,b4,b4,b4,__ZN14WJpegBitStreamC2Ev,b4,b4,b4,b4,b4,__ZN14GrFmtBmpWriterD2Ev
  ,b4,b4,b4,_cvReleaseMatND,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZdaPv,b4,__ZN11WBaseStreamD2Ev
  ,b4,b4,b4,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,b4,b4,b4,__ZN11WBaseStreamD2Ev,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN15GrFmtTiffReaderD2Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZN14CvImageFiltersD2Ev,b4,_cvReleaseSparseMat,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,__ZN11RMBitStreamD0Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,__ZN9GrFmtTiffD2Ev,b4,b4,b4,__ZN14GrFmtBmpReader5CloseEv
  ,b4,b4,b4,__ZL13icvReleaseSeqPPv,b4,__ZN11RLBitStream9ReadBlockEv,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZN15GrFmtTiffReaderD0Ev,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,__ZN8GrFmtBmpD2Ev,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,__ZN14WJpegBitStreamD0Ev,b4,__ZN6CvTypeD2Ev,b4,b4
  ,b4,__ZN20GrFmtSunRasterWriterD2Ev,b4,b4,b4,__ZN14GrFmtPxMReaderD2Ev,b4,b4,b4,b4
  ,b4,__ZN14RJpegBitStreamD2Ev,b4,__ZN15GrFmtJpegWriterD0Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN14GrFmtPxMWriterD0Ev,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,_cvReleaseMat,b4,__ZN8GrFmtPxMC2Ev,b4,b4
  ,b4,__ZN11GrFmtReaderD2Ev,b4,__ZN14RJpegBitStreamD0Ev,b4,b4,b4,b4,b4,__ZN20GrFmtSunRasterWriterD0Ev
  ,b4,__ZN14GrFmtBmpReaderD0Ev,b4,b4,b4,b4,b4,__ZN20GrFmtSunRasterReaderD2Ev,b4,b4
  ,b4,b4,b4,b4,b4,__ZN11WBaseStream10WriteBlockEv,b4,__ZN14GrFmtSunRasterD2Ev,b4,__ZN15GrFmtTiffWriterD2Ev
  ,b4,b4,b4,__ZN14GrFmtSunRasterC2Ev,b4,__ZN11WBaseStream8AllocateEv,b4,__ZNSt9bad_allocD0Ev,b4,__ZN11WBaseStreamD2Ev
  ,b4,b4,b4,__ZN14CvImageFiltersC2Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,_cvReleaseImage,b4,b4,b4,__ZN14GrFmtBmpReaderD2Ev,b4,__ZN14GrFmtSunRasterD0Ev
  ,b4,b4,b4,b4,b4,__ZN11GrFmtWriterD0Ev,b4,__ZN10__cxxabiv120__si_class_type_infoD0Ev,b4,b4
  ,b4,b4,b4,b4,b4,__ZN9GrFmtJpegD2Ev,b4,__ZN15GrFmtJpegReaderD0Ev,b4,b4
  ,b4,b4,b4,__ZN20GrFmtSunRasterReader5CloseEv,b4,b4,b4,b4,b4,__ZN8GrFmtBmpD2Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZN14GrFmtBmpWriterD2Ev,b4,__ZN11WMBitStream5CloseEv,b4,__ZN11RBaseStream8AllocateEv,b4,b4,b4,__ZN11WBaseStream5CloseEv
  ,b4,b4,b4,b4,b4,b4,b4,__ZN14RJpegBitStreamD2Ev,b4,__ZN20GrFmtSunRasterWriterD2Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN11RBaseStreamD0Ev
  ,b4,b4,b4,__ZN14RJpegBitStream9ReadBlockEv,b4,b4,b4,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN9GrFmtTiffC2Ev,b4,__ZN18GrFmtFactoriesListC2Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4
  ,b4,b4,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4,b4,__ZN11WMBitStream5FlushEv
  ,b4,b4,b4,b4,b4,__ZN14GrFmtSunRasterD2Ev,b4,b4,b4,b4
  ,b4,__ZN15GrFmtTiffReaderD2Ev,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN14GrFmtPxMReaderD0Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZN15GrFmtJpegWriterD2Ev,b4,__ZN15GrFmtTiffReader5CloseEv,b4,b4,b4,b4,b4,b4
  ,b4,__ZN15GrFmtJpegReaderD2Ev,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN11WMBitStream10WriteBlockEv,b4,b4
  ,b4,__ZN8GrFmtPxMD2Ev,b4,__ZN18GrFmtFilterFactoryD0Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,__ZL15icvReleaseGraphPPv,b4,b4,b4,__ZN11WBaseStreamD2Ev,b4,__ZN12WLByteStreamD0Ev,b4,b4
  ,b4,__ZN15GrFmtJpegReader5CloseEv,b4,b4,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4
  ,b4,__ZN14GrFmtPxMWriterD2Ev,b4,__ZN18GrFmtFilterFactoryD1Ev,b4,b4,b4,__ZN11RMBitStream9ReadBlockEv,b4,b4
  ,b4,b4,b4,__ZN14GrFmtBmpReaderD2Ev,b4,b4,b4,b4,b4,b4
  ,b4,__ZN11RBaseStream9ReadBlockEv,b4,__ZN11WBaseStreamD0Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,__ZN14WJpegBitStreamD2Ev,b4,b4,b4,b4
  ,b4,__ZN11RBaseStream7ReleaseEv,b4,b4,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4
  ,b4,__ZN8GrFmtBmpD0Ev,b4,__ZN14GrFmtBmpWriterD0Ev,b4,b4,b4,__ZN14RJpegBitStreamC2Ev,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN18GrFmtFactoriesListD2Ev
  ,b4,b4,b4,__ZN11WBaseStreamD2Ev,b4,b4,b4,__ZN11RBaseStream5CloseEv,b4,__ZN15GrFmtTiffWriterD0Ev
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,__ZN14WJpegBitStream10WriteBlockEv
  ,b4,b4,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,__ZN9GrFmtJpegD0Ev,b4,b4
  ,b4,b4,b4,__ZN8GrFmtPxMD2Ev,b4,b4,b4,b4,b4,b4
  ,b4,__ZN11GrFmtReader5CloseEv,b4,__ZN11WBaseStreamD2Ev,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,b4,b4,b4,b4,__ZN14CvImageFiltersD2Ev,b4,b4
  ,b4,__ZN14GrFmtPxMWriterD2Ev,b4,b4,b4,__ZN10__cxxabiv117__class_type_infoD0Ev,b4,b4,b4,b4
  ,b4,__ZN10__cxxabiv116__shim_type_infoD2Ev,b4,b4,b4,__ZN11RBaseStreamD2Ev,b4,b4,b4,__ZN11WBaseStream7ReleaseEv
  ,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4
  ,b4,b4,b4,__ZN14WJpegBitStreamD2Ev,b4,__ZN11RBaseStreamD2Ev,b4,b4,b4,b4,b4,__ZN15GrFmtJpegWriterD2Ev,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
  var FUNCTION_TABLE_vii = [b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN14GrFmtBmpReaderC2EPKc
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,__ZN20GrFmtSunRasterReaderC2EPKc,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN15GrFmtTiffReaderC2EPKc
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,__ZN20GrFmtSunRasterWriterC2EPKc,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,__ZN14GrFmtPxMReaderC2EPKc,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,__ZN15GrFmtJpegReaderC2EPKc,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,__ZN15GrFmtTiffWriterC2EPKc,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,_cvShowImage,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,__ZN15GrFmtJpegWriterC2EPKc,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,__ZN11RBaseStream4SkipEi,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,_longjmp__wrapper,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN11RBaseStream6SetPosEi
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,__Z12bsBSwapBlockPhS_,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,__ZN14GrFmtPxMWriterC2EPKc,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
  ,b5,b5,b5,b5,b5,b5,b5,b5,b5,__ZN14GrFmtBmpWriterC2EPKc,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
  var FUNCTION_TABLE_iiiiiii = [b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,__ZL22icvGray2BGRx_16u_C1CnRPKtiPti6CvSizei,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZL21icvBGR2BGRx_16u_C3C4RPKtiPti6CvSizei
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,__ZN15GrFmtTiffReader9ReadTableEii13TiffFieldTypeRPiRi,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,__ZL15icvCvtTo_8u_C1RPKhiPhi6CvSizei,b6,b6,b6,__ZL23icvGray2BGR5x5_8u_C1C2RPKhiPhi6CvSizei,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,__ZL16icvCvtTo_16u_C1RPKhiPti6CvSizei,b6,b6
  ,b6,__ZL16icvCvtTo_64f_C1RPKhiPdi6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,__ZL21icvBGR2BGRx_32f_C3C4RPKiiPii6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,__ZL21icvBayer2BGR_8u_C1C3RPKhiPhi6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,__ZL22icvGray2BGRx_32f_C1CnRPKfiPfi6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZL21icvGray2BGRx_8u_C1CnRPKhiPhi6CvSizei
  ,b6,__ZL16icvCvtTo_32f_C1RPKhiPfi6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,__ZL16icvCvtTo_32s_C1RPKhiPii6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,__ZL20icvBGR2BGRx_8u_C3C4RPKhiPhi6CvSizei,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,_cvStdErrReport,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,__ZL16icvCvtTo_16s_C1RPKhiPsi6CvSizei,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,__ZL23icvBGR5x52Gray_8u_C2C1RPKhiPhi6CvSizei,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
  ,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,__ZL15icvCvtTo_8s_C1RPKhiPci6CvSizei,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6];
  var FUNCTION_TABLE_iii = [b7,b7,__ZN9GrFmtJpeg9NewWriterEPKc,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,__ZN14RJpegBitStream4OpenEPKc,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN14GrFmtSunRaster9NewReaderEPKc
  ,b7,b7,b7,__ZN18GrFmtFilterFactory14CheckExtensionEPKc,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZN18GrFmtFactoriesList10FindReaderEPKc,b7,__ZN8GrFmtPxM14CheckSignatureEPKc,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,__ZN11WBaseStream4OpenEPKc,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN14GrFmtSunRaster9NewWriterEPKc
  ,b7,b7,b7,b7,b7,__ZN14WJpegBitStream4OpenEPKc,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,__ZN11WMBitStream4OpenEPKc,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZN11RBaseStream4OpenEPKc,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN11GrFmtWriter17IsFormatSupportedEi
  ,b7,b7,b7,b7,b7,_cvLoadImageM,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZL16icvReadSparseMatP13CvFileStorageP10CvFileNode
  ,b7,_cvSaveImage,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZN8GrFmtPxM9NewReaderEPKc
  ,b7,b7,b7,__ZN9GrFmtJpeg9NewReaderEPKc,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,_strcmp__wrapper,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZL12icvReadMatNDP13CvFileStorageP10CvFileNode,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZN8GrFmtBmp9NewWriterEPKc,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZL14icvDefaultFreePvS_,b7,__ZN18GrFmtFilterFactory14CheckSignatureEPKc,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,__ZL14icvReadSeqTreeP13CvFileStorageP10CvFileNode,b7,b7,b7,__ZL12icvReadGraphP13CvFileStorageP10CvFileNode
  ,b7,b7,b7,__ZN18GrFmtFactoriesList10FindWriterEPKc,b7,b7,b7,__Z14IsColorPaletteP12PaletteEntryi,b7,b7
  ,b7,__ZN9GrFmtTiff9NewReaderEPKc,b7,b7,b7,__ZL15icvDefaultAllocjPv,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,__ZL12icvReadImageP13CvFileStorageP10CvFileNode,b7,b7
  ,b7,b7,b7,__ZN15GrFmtJpegReader15LoadQuantTablesEi,b7,b7,b7,b7,b7,__ZN15GrFmtJpegReader17LoadHuffmanTablesEi
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,_cvLoadImage,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,__ZL10ReadNumberR12RLByteStreami,b7,__ZL10icvReadSeqP13CvFileStorageP10CvFileNode,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,__ZL10icvReadMatP13CvFileStorageP10CvFileNode
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,__ZN8GrFmtPxM9NewWriterEPKc,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7
  ,b7,b7,b7,b7,b7,b7,b7,__ZN8GrFmtBmp9NewReaderEPKc,b7,b7,b7,__ZN9GrFmtTiff9NewWriterEPKc,b7,b7,b7,b7,b7,__ZN9GrFmtTiff14CheckSignatureEPKc,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7];
  var FUNCTION_TABLE_iiiiii = [b8,b8,b8,b8,__ZL19icvFlipHorz_16u_C3RPKtiPti6CvSize,b8,b8,b8,__ZL16icvCopy_8u_C1R_fPKhiPhi6CvSize,b8,b8
  ,b8,b8,b8,__ZL19icvCopy_16s_C3P3R_fPKtiPPti6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvCopy_32f_P3C3R_fPPKiiPii6CvSize,b8,b8,b8,b8,b8,b8,b8,__ZL18icvCopy_8u_C3P3R_fPKhiPPhi6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvCopy_32f_P2C2R_fPPKiiPii6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__Z17icvCopy_64f_C3P3RPKxiPPxi6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,__Z16icvCopy_8u_P4C4RPPKhiPhi6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,__ZL19icvCopy_32f_C2P2R_fPKiiPPii6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__ZL19icvCopy_64f_C3P3R_fPKxiPPxi6CvSize,b8,b8,b8,__Z17icvCopy_64f_C4P4RPKxiPPxi6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL19icvCopy_16s_C4P4R_fPKtiPPti6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,__Z17icvCopy_16s_P4C4RPPKtiPti6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__Z17icvCopy_32f_P3C3RPPKiiPii6CvSize,b8,b8,b8,b8,b8,__ZL19icvCopy_16s_P4C4R_fPPKtiPti6CvSize,b8,__Z16icvCopy_8u_C4P4RPKhiPPhi6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL20icvBGRA2RGBA_16u_C4RPKtiPti6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL19icvFlipHorz_32s_C2RPKxiPxi6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,__ZL19icvCopy_64f_P3C3R_fPPKxiPxi6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__Z16icvCopy_8u_P2C2RPPKhiPhi6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__Z17icvCopy_16s_C4P4RPKtiPPti6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,__ZL19icvFlipHorz_64s_C4RPKxiPxi6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,__ZL19icvCopy_16s_C2P2R_fPKtiPPti6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,__ZL18icvCopy_8u_C2P2R_fPKhiPPhi6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__Z17icvCopy_16s_C2P2RPKtiPPti6CvSize,b8,b8,b8,__Z17icvCopy_32f_C2P2RPKiiPPii6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL19icvCopy_64f_C4P4R_fPKxiPPxi6CvSize,b8,b8,b8,__Z17icvCopy_64f_P4C4RPPKxiPxi6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL19icvCopy_32f_C4P4R_fPKiiPPii6CvSize
  ,b8,b8,b8,b8,b8,__ZL18icvCopy_8u_P3C3R_fPPKhiPhi6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__Z17icvCopy_16s_P2C2RPPKtiPti6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL18icvCopy_8u_P4C4R_fPPKhiPhi6CvSize
  ,b8,__Z17icvCopy_64f_P3C3RPPKxiPxi6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__Z17icvCopy_32f_C3P3RPKiiPPii6CvSize,b8,__ZL18icvCopy_8u_C4P4R_fPKhiPPhi6CvSize,b8,b8
  ,b8,__ZL19icvCopy_64f_P2C2R_fPPKxiPxi6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL20icvBGRA2RGBA_32f_C4RPKiiPii6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvFlipHorz_64s_C3RPKxiPxi6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__Z17icvCopy_32f_P2C2RPPKiiPii6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__Z17icvCopy_16s_C3P3RPKtiPPti6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvBGRA2RGBA_8u_C4RPKhiPhi6CvSize,b8,__ZL18icvCopy_8u_P2C2R_fPPKhiPhi6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,__ZL18icvFlipHorz_8u_C2RPKtiPti6CvSize,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__ZL19icvCopy_16s_P2C2R_fPPKtiPti6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL18icvFlipHorz_8u_C1RPKhiPhi6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__Z17icvCopy_32f_C4P4RPKiiPPii6CvSize
  ,b8,__Z17icvCopy_32f_P4C4RPPKiiPii6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL19icvCopy_32f_P4C4R_fPPKiiPii6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,__ZL19icvCopy_64f_C2P2R_fPKxiPPxi6CvSize
  ,b8,__ZL19icvFlipHorz_32s_C3RPKiiPii6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__Z16icvCopy_8u_C2P2RPKhiPPhi6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL19icvFlipHorz_16u_C2RPKiiPii6CvSize,b8,__Z17icvCopy_64f_C2P2RPKxiPPxi6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvCopy_16s_P3C3R_fPPKtiPti6CvSize,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,__Z16icvCopy_8u_C3P3RPKhiPPhi6CvSize,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL19icvCopy_64f_P4C4R_fPPKxiPxi6CvSize,b8,b8,b8,b8,b8,__ZL19icvFlipHorz_64s_C2RPKiiPii6CvSize
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,__ZL18icvFlipHorz_8u_C3RPKhiPhi6CvSize,b8,b8,b8,b8,b8,b8
  ,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8
  ,b8,__ZL19icvCopy_32f_C3P3R_fPKiiPPii6CvSize,b8,__Z17icvCopy_16s_P3C3RPPKtiPti6CvSize,b8,__Z16icvCopy_8u_P3C3RPPKhiPhi6CvSize,b8,b8,b8,__Z17icvCopy_64f_P2C2RPPKxiPxi6CvSize,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
  var FUNCTION_TABLE_ii = [b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZL8icvIsMatPKv
  ,b9,b9,b9,b9,b9,__ZL11icvCloneSeqPKv,b9,__ZL10icvIsGraphPKv,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,__ZN11RBaseStream6GetPosEv,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,_cvCloneMat,b9,b9
  ,b9,__ZN14RJpegBitStream10FindMarkerEv,b9,b9,b9,__ZN15GrFmtTiffReader9GetWordExEv,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,__ZN11RBaseStream6JmpBufEv,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,_cvCloneSparseMat,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,__ZL10icvIsMatNDPKv,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,__ZN12RLByteStream8GetDWordEv,b9,__ZN12RMByteStream7GetWordEv
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,__ZL8icvIsSeqPKv,b9,__ZN11RBaseStream8IsOpenedEv
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,__ZL13icvCloneGraphPKv,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZN12RLByteStream7GetWordEv
  ,b9,b9,b9,b9,b9,__ZN20GrFmtSunRasterReader10ReadHeaderEv,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,_cvCloneImage,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,__ZL10icvIsImagePKv
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,__ZN15GrFmtTiffReader10GetDWordExEv,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,__ZN15GrFmtJpegReader10ReadHeaderEv,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,__ZNKSt9bad_alloc4whatEv,b9,b9,b9,__ZN14GrFmtBmpReader10ReadHeaderEv
  ,b9,b9,b9,b9,b9,b9,b9,__ZN12RMByteStream8GetDWordEv,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,__ZN12RLByteStream7GetByteEv,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,__ZL14icvIsSparseMatPKv,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,_cvCloneMatND,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9
  ,b9,b9,b9,__Znaj,b9,__ZN15GrFmtTiffReader10ReadHeaderEv,b9,b9,b9,__ZN14GrFmtPxMReader10ReadHeaderEv,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9,b9];
  var FUNCTION_TABLE_iiii = [b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10
  ,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,__ZL17icvSortIdxCmpFuncPKvS0_Pv,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10,b10];
  var FUNCTION_TABLE_viii = [b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,__Z6cvSizeii,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,__Z15FillGrayPaletteP12PaletteEntryib,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,_memmove,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
  ,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,__Z16CvtPaletteToGrayPK12PaletteEntryPhi,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11];
  var FUNCTION_TABLE_v = [b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12
  ,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,___cxa_pure_virtual__wrapper,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12,b12];
  var FUNCTION_TABLE_iiiiiiiii = [b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,__ZL23icvBGRx2BGR5x5_8u_CnC2RPKhiPhi6CvSizeiii,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,__ZL23icvBGR5x52BGRx_8u_C2CnRPKhiPhi6CvSizeiii,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,__Z11FillUniGrayPhRS_iiRiiih,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13
  ,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,__Z12FillUniColorPhRS_iiRiii12PaletteEntry,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13,b13];
  var FUNCTION_TABLE_iiiii = [b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,__ZN20GrFmtSunRasterReader8ReadDataEPhii,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,__Z12FillGrayRow8PhS_iS_
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,__Z13FillColorRow4PhS_iP12PaletteEntry,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,__Z13FillColorRow1PhS_iP12PaletteEntry,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,__ZN15GrFmtTiffReader8ReadDataEPhii,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,__Z12FillGrayRow1PhS_iS_,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,__Z12FillGrayRow4PhS_iS_
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN14GrFmtPxMReader8ReadDataEPhii
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,__ZN15GrFmtJpegReader8ReadDataEPhii,b14,__Z13FillColorRow8PhS_iP12PaletteEntry,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14
  ,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,__ZN14GrFmtBmpReader8ReadDataEPhii,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14,b14];
  var FUNCTION_TABLE_viiiiii = [b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,__Z25icvCvt_BGRA2Gray_8u_C4C1RPKhiPhi6CvSizei,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,__ZN15GrFmtJpegReader11ProcessScanEPiiPhii,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,__Z24icvCvt_BGR2Gray_8u_C3C1RPKhiPhi6CvSizei
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
  ,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,__Z24icvCvt_BGRA2BGR_8u_C4C3RPKhiPhi6CvSizei,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
  var FUNCTION_TABLE_iiiiiiiiiiiiiii = [b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16,b16];
  var FUNCTION_TABLE_iiiiiiffi = [b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,__ZL21icvCvtScaleTo_32s_C1RPKhiPii6CvSizeddi,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,__ZL20icvCvtScaleTo_8s_C1RPKhiPci6CvSizeddi,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZL21icvCvtScaleTo_64f_C1RPKhiPdi6CvSizeddi
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,__ZL21icvCvtScaleTo_16s_C1RPKhiPsi6CvSizeddi,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,__ZL21icvCvtScaleTo_32f_C1RPKhiPfi6CvSizeddi,b17,b17,b17,b17,b17,__ZL20icvCvtScaleTo_8u_C1RPKhiPhi6CvSizeddi
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17
  ,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,__ZL21icvCvtScaleTo_16u_C1RPKhiPti6CvSizeddi,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17,b17];
  var FUNCTION_TABLE_viiii = [b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,__ZL15icvWriteSeqTreeP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,__ZN12RLByteStream8GetBytesEPviPi,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,__ZL17icvWriteSparseMatP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,__ZL11icvWriteMatP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,__ZL13icvWriteGraphP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,__ZL13icvWriteMatNDP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18
  ,b18,b18,b18,b18,b18,b18,b18,b18,b18,__ZL13icvWriteImageP13CvFileStoragePKcPKv10CvAttrList,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18,b18];
  return { _testSetjmp: _testSetjmp, _saveSetjmp: _saveSetjmp, _tolower: _tolower, _free: _free, _main: _main, _memcmp: _memcmp, _strncpy: _strncpy, _memmove: _memmove, __GLOBAL__I_a: __GLOBAL__I_a, _strlen: _strlen, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, __GLOBAL__I_a559: __GLOBAL__I_a559, __GLOBAL__I_a367: __GLOBAL__I_a367, _strcpy: _strcpy, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_viiiiiii: dynCall_viiiiiii, dynCall_viiiii: dynCall_viiiii, dynCall_i: dynCall_i, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_ii: dynCall_ii, dynCall_iiii: dynCall_iiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iiiiiiiiiiiiiii: dynCall_iiiiiiiiiiiiiii, dynCall_iiiiiiffi: dynCall_iiiiiiffi, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_iiiiiiii": invoke_iiiiiiii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiii": invoke_viiiii, "invoke_i": invoke_i, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiiiiii": invoke_iiiiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_ii": invoke_ii, "invoke_iiii": invoke_iiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiiiiiii": invoke_iiiiiiiii, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iiiiiiiiiiiiiii": invoke_iiiiiiiiiiiiiii, "invoke_iiiiiiffi": invoke_iiiiiiffi, "invoke_viiii": invoke_viiii, "_strncmp": _strncmp, "_open": _open, "_abs": _abs, "_snprintf": _snprintf, "_lseek": _lseek, "___cxa_throw": ___cxa_throw, "_fclose": _fclose, "_atexit": _atexit, "_isdigit": _isdigit, "___cxa_pure_virtual": ___cxa_pure_virtual, "_fprintf": _fprintf, "_llvm_eh_exception": _llvm_eh_exception, "_printf": _printf, "_close": _close, "_pread": _pread, "_fflush": _fflush, "_fopen": _fopen, "__reallyNegative": __reallyNegative, "_strtol": _strtol, "_sysconf": _sysconf, "_fabs": _fabs, "_abort": _abort, "___setErrNo": ___setErrNo, "_fwrite": _fwrite, "_fseek": _fseek, "_send": _send, "_write": _write, "_fputs": _fputs, "_llvm_umul_with_overflow_i32": _llvm_umul_with_overflow_i32, "_exit": _exit, "_sprintf": _sprintf, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_allocate_exception": ___cxa_allocate_exception, "_isspace": _isspace, "_strchr": _strchr, "_fread": _fread, "_longjmp": _longjmp, "_isalpha": _isalpha, "_fputc": _fputc, "_read": _read, "___cxa_is_number_type": ___cxa_is_number_type, "_time": _time, "__formatString": __formatString, "___cxa_does_inherit": ___cxa_does_inherit, "__ZSt9terminatev": __ZSt9terminatev, "_atoi": _atoi, "_recv": _recv, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_pwrite": _pwrite, "_putchar": _putchar, "_isalnum": _isalnum, "_fsync": _fsync, "___errno_location": ___errno_location, "___gxx_personality_v0": ___gxx_personality_v0, "___cxa_call_unexpected": ___cxa_call_unexpected, "_sbrk": _sbrk, "__parseInt": __parseInt, "_pthread_key_create": _pthread_key_create, "__exit": __exit, "___resumeException": ___resumeException, "_strcmp": _strcmp, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "__ZTVN10__cxxabiv117__class_type_infoE": __ZTVN10__cxxabiv117__class_type_infoE, "__ZTVN10__cxxabiv120__si_class_type_infoE": __ZTVN10__cxxabiv120__si_class_type_infoE, "_stderr": _stderr, "___dso_handle": ___dso_handle }, buffer);
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strncpy = Module["_strncpy"] = asm["_strncpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var __GLOBAL__I_a = Module["__GLOBAL__I_a"] = asm["__GLOBAL__I_a"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var __GLOBAL__I_a559 = Module["__GLOBAL__I_a559"] = asm["__GLOBAL__I_a559"];
var __GLOBAL__I_a367 = Module["__GLOBAL__I_a367"] = asm["__GLOBAL__I_a367"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iiiiiiiiiiiiiii = Module["dynCall_iiiiiiiiiiiiiii"] = asm["dynCall_iiiiiiiiiiiiiii"];
var dynCall_iiiiiiffi = Module["dynCall_iiiiiiffi"] = asm["dynCall_iiiiiiffi"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
var initialStackTop;
var inMain;
Module['callMain'] = Module.callMain = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(__ATPRERUN__.length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  initialStackTop = STACKTOP;
  inMain = true;
  var ret;
  try {
    ret = Module['_main'](argc, argv, 0);
  }
  catch(e) {
    if (e && typeof e == 'object' && e.type == 'ExitStatus') {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      Module.print('Exit Status: ' + e.value);
      return e.value;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
    } else {
      throw e;
    }
  } finally {
    inMain = false;
  }
  // if we're not running an evented main loop, it's time to exit
  if (!Module['noExitRuntime']) {
    exit(ret);
  }
}
function run(args) {
  args = args || Module['arguments'];
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return;
  }
  preRun();
  if (runDependencies > 0) {
    // a preRun added a dependency, run will be called later
    return;
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    calledRun = true;
    if (Module['_main'] && shouldRunNow) {
      Module['callMain'](args);
    }
    postRun();
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;
function exit(status) {
  ABORT = true;
  STACKTOP = initialStackTop;
  // TODO call externally added 'exit' callbacks with the status code.
  // It'd be nice to provide the same interface for all Module events (e.g.
  // prerun, premain, postmain). Perhaps an EventEmitter so we can do:
  // Module.on('exit', function (status) {});
  // exit the runtime
  exitRuntime();
  if (inMain) {
    // if we're still inside the callMain's try/catch, we need to throw an
    // exception in order to immediately terminate execution.
    throw { type: 'ExitStatus', value: status };
  }
}
Module['exit'] = Module.exit = exit;
function abort(text) {
  if (text) {
    Module.print(text);
  }
  ABORT = true;
  throw 'abort() at ' + (new Error().stack);
}
Module['abort'] = Module.abort = abort;
// {{PRE_RUN_ADDITIONS}}
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = false;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
var buffer = 0, bufferSize = 0;
var inWorkerCall = false, workerResponded = false, workerCallbackId = -1;
onmessage = function(msg) {
  var func = Module['_' + msg.data['funcName']];
  if (!func) throw 'invalid worker function to call: ' + msg.data['funcName'];
  var data = msg.data['data'];
  if (data) {
    if (!data.byteLength) data = new Uint8Array(data);
    if (!buffer || bufferSize < data.length) {
      if (buffer) _free(buffer);
      bufferSize = data.length;
      buffer = _malloc(data.length);
    }
    HEAPU8.set(data, buffer);
  }
  inWorkerCall = true;
  workerResponded = false;
  workerCallbackId = msg.data['callbackId'];
  if (data) {
    func(buffer, data.length);
  } else {
    func(0, 0);
  }
  inWorkerCall = false;
}
// {{MODULE_ADDITIONS}}


//ARGUMENTS
Module['arguments'] = [];

if((data.input) && (data.input.argv)){	
	var argv = data.input.argv;
	argv.forEach(function(arg){
		Module['arguments'][arg.pos] = arg.arg;
	});
}


	

Module.callMain(Module['arguments']);



if((data.output) && (data.output.files)){
        var files = data.output.files;
	files.forEach(function(file) {
   
		var dirname = Module['dirname'](file.name);
	
		var basename = Module['basename'](file.name);
		var content = intArrayToString(FS.root.contents[basename].contents);
		content = ((file.compress) || (file.decompress)) ? Module['compress'](content) : content;

		Module['return']['output']['files'][dirname + basename] =  content;
    


	}); 

}



return Module['return'];
}
